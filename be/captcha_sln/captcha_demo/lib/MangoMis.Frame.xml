<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MangoMis.Frame</name>
    </assembly>
    <members>
        <member name="T:MangoMis.Frame.Cache.CacheGetErrorInfo">
            <summary>
            缓存取得数据异常的处理情况信息
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.CacheGetErrorInfo.ErrorStatus">
            <summary>
            错误情况
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.CacheGetErrorInfo.Operate">
            <summary>
            遇到错误后的操作方式
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.CacheGetErrorInfo.SaveType">
            <summary>
            保存数据的类型
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.CacheGetErrorOperate">
            <summary>
            当Cache取得数据遇到错误时的处理方式
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorOperate.None">
            <summary>
            无数据
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorOperate.继续获取">
            <summary>
            继续获取
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorOperate.重试1次失败停止">
            <summary>
            重试1次
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorOperate.重试3次失败停止">
            <summary>
            重试3次
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorOperate.重试5次失败停止">
            <summary>
            重试5次
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorOperate.重试1次失败继续">
            <summary>
            重试1次
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorOperate.重试3次失败继续">
            <summary>
            重试3次
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorOperate.重试5次失败继续">
            <summary>
            重试5次
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorOperate.停止继续获取">
            <summary>
            停止继续获取
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.CacheGetErrorSaveType">
            <summary>
            当Cache取得数据遇到错误时的存储缓存情况
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorSaveType.None">
            <summary>
            无数据
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorSaveType.全部失效">
            <summary>
            全部失效
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorSaveType.只存储全部完整数据">
            <summary>
            只存储全部完整数据
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorSaveType.部分完成的数据也存储">
            <summary>
            部分完成的数据也存储
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.CacheGetErrorStatusOfEntity">
            <summary>
            缓存从数据源取得数据时的异常情况
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorStatusOfEntity.主实体">
            <summary>
            主实体_首次运行_异常
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorStatusOfEntity.从实体">
            <summary>
            从实体_首次运行_0结果
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.CacheGetErrorStatusOfRunIdex">
            <summary>
            缓存从数据源取得数据时的异常情况
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorStatusOfRunIdex.首次运行">
            <summary>
            主实体_首次运行_异常
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorStatusOfRunIdex.非首次运行">
            <summary>
            从实体_首次运行_0结果
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.CacheGetErrorStatusOfErrorType">
            <summary>
            缓存从数据源取得数据时的异常情况
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorStatusOfErrorType.None">
            <summary>
            无数据
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorStatusOfErrorType.异常">
            <summary>
            主实体_首次运行_异常
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorStatusOfErrorType.结果集为0">
            <summary>
            从实体_首次运行_0结果
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorStatusOfErrorType.结果集不完整">
            <summary>
            从实体_首次运行_0结果
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.CacheGetErrorStatus">
            <summary>
            缓存从数据源取得数据时的异常情况
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorStatus.None">
            <summary>
            无数据
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorStatus.主实体_首次运行_异常">
            <summary>
            主实体_首次运行_异常
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorStatus.主实体_非首次运行_异常">
            <summary>
            主实体_非首次运行_异常
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorStatus.主实体_首次运行_0结果">
            <summary>
            主实体_首次运行_0结果
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorStatus.主实体_非首次运行_0结果">
            <summary>
            主实体_数据没取完_0结果
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorStatus.从实体_首次运行_0结果">
            <summary>
            从实体_首次运行_0结果
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorStatus.从实体_非首次运行_0结果">
            <summary>
            从实体_非首次运行_0结果
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorStatus.从实体_首次运行_异常">
            <summary>
            从实体_首次运行_异常
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorStatus.从实体_非首次运行_异常">
            <summary>
            从实体_非首次运行_异常
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorStatus.从实体_首次运行_结果集不完整">
            <summary>
            从实体_首次运行_结果集不完整
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheGetErrorStatus.从实体_非首次运行_结果集不完整">
            <summary>
            从实体_非首次运行_结果集不完整
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.CacheManagerHandler">
            <summary>
            CM管理类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheManagerHandler.UpdateStore(System.String,System.String)">
            <summary>
            从Store更新缓存
            </summary>
            <param name="cacheList">CacheKey列表</param>
            <param name="dataEntityId">主键列表</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheManagerHandler.UpdateCache(System.String,System.String)">
            <summary>
            从Store更新缓存
            </summary>
            <param name="cacheList">CacheKey列表</param>
            <param name="dataEntityId">主键列表</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheManagerHandler.WritePostCmLog(System.String[])">
            <summary>
            写入提交日志
            </summary>
            <param name="args">提交内容会以<Br/>分割</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheManagerHandler.PostSiteStart(System.String,System.String,System.String)">
            <summary>
            站点启动提交
            </summary>
            <param name="siteName">站点名</param>
            <param name="siteLocalIp">当前IP</param>
            <param name="sitePort">当前端口号</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheManagerHandler.PostCacheUsed(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            提交当前站点使用的Cache
            </summary>
            <param name="siteName">站点名</param>
            <param name="siteLocalIp">站点IP</param>
            <param name="sitePort">站点端口号</param>
            <param name="dataPrefix">数据前缀</param>
            <param name="dataKey">数据索引</param>
            <param name="fullType">完整类型</param>
            <param name="redisPath">RedisPath</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheManagerHandler.PostUpdateCache(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            提交当前站点更新的缓存
            </summary>
            <param name="siteName">站点名</param>
            <param name="siteLocalIp">站点IP</param>
            <param name="sitePort">站点端口号</param>
            <param name="dataPrefix">数据前缀</param>
            <param name="dataEntityName">完整类型</param>
            <param name="dataEntityId">更新主键</param>
        </member>
        <member name="T:MangoMis.Frame.Cache.CacheManagerHelper">
            <summary>
            CM帮助文档
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheManagerHelper.CheckIsUpdateStore">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheManagerHelper.CheckIsUpdateCache">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheManagerHelper.UpdateStore(System.String,System.String,System.String)">
            <summary>
            更新Store
            </summary>
            <param name="cacheKeyList"></param>
            <param name="dataEntityId"></param>
            <param name="uuId"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheManagerHelper.UpdateCache(System.String,System.String,System.String)">
            <summary>
            更新Cache
            </summary>
            <param name="cacheKeyList"></param>
            <param name="dataEntityId"></param>
            <param name="uuId"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheManagerHelper.CheckIsCmAction">
            <summary>
            检查是否是CM的调用
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheManagerHelper.PostSiteStart">
            <summary>
            提交站点启动
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheManagerHelper.PostSiteStart(System.String,System.String,System.String)">
            <summary>
            提交站点启动
            </summary>
            <param name="localIp">当前站点IP</param>
            <param name="localPort">当前站点端口</param>
            <param name="siteName">站点名</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheManagerHelper.PostCacheUsed(System.String,System.String,System.String,System.String)">
            <summary>
            提交缓存初始化
            </summary>
            <param name="cacheKey">缓存Key(不含前缀后缀)</param>
            <param name="localIp">当前站点IP</param>
            <param name="localPort">当前站点端口</param>
            <param name="siteName">站点名</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheManagerHelper.PostUpdateCacheById(System.Type,System.Object,System.String,System.String,System.String)">
            <summary>
            提交缓存更新
            </summary>
            <param name="entityType">当前WCF类型</param>
            <param name="entityId"></param>
            <param name="localIp">当前站点IP</param>
            <param name="localPort">当前站点端口</param>
            <param name="siteName">站点名</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheManagerHelper.PostCacheUsed(System.String)">
            <summary>
            提交缓存初始化
            </summary>
            <param name="cacheKey"></param>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheManagerHelper.PostUpdateCacheByEntity(System.Type,System.Object)">
            <summary>
            提交缓存更新
            </summary>
            <param name="entityType">当前WCF类型</param>
            <param name="entity">对象</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheManagerHelper.PostUpdateCacheByIdHaveResult(System.Type,System.Object)">
            <summary>
            提交缓存更新带返回值
            </summary>
            <param name="entityType">当前WCF类型</param>
            <param name="entityId"></param>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheManagerHelper.PostUpdateCacheById(System.Type,System.Object)">
            <summary>
            提交缓存更新
            </summary>
            <param name="entityType">当前WCF类型</param>
            <param name="entityId"></param>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheManagerHelper.InitTypeForStoreType(System.Type,System.Type)">
            <summary>
            初始化WCF类型与Store类型的映射(因为有的Store里面是多个WCF类型的集合体,所以需要一个映射)
            </summary>
            <param name="entityType"></param>
            <param name="storeType"></param>
        </member>
        <member name="T:MangoMis.Frame.Cache.CacheManagerParam">
            <summary>
            CM所使用的参数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.CacheManagerParam.LocalPathForUpdateStore">
            <summary>
            本地被更新路径-更新Store
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.CacheManagerParam.LocalPathForUpdateCache">
            <summary>
            本地被更新路径-更新本地缓存
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.CacheManagerParam.CmSitePath">
            <summary>
            CM站点路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.CacheManagerParam.IsOpenCacheManager">
            <summary>
            CM功能是否开启
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.CacheManagerParam.IsRecieveWriteLog">
            <summary>
            调用收到CM调用时时否记录日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.CacheManagerParam.LocalServerIp">
            <summary>
            当前站点的IP地址(局域网IP)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.CacheManagerParam.LocalServerPort">
            <summary>
            当前站点的端口号(一般在IIS池里面可以找到)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.CacheManagerParam.CmPathForPostUpdateCache">
            <summary>
            向CM提交的路径-更新缓存
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.CacheManagerParam.CmPathForPostCacheUsed">
            <summary>
            向CM提交的路径-缓存使用
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.CacheManagerParam.CmPathForPostSiteStart">
            <summary>
            向CM提交的路径-站点启动
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.CacheManagerResult">
            <summary>
            CM提交的返回值
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheManagerResult.#ctor">
            <summary>
            初始化一个返回值
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheManagerResult.#ctor(MangoMis.Frame.Cache.CacheManagerResultType)">
            <summary>
            初始化一个返回值
            </summary>
            <param name="flag">返回状态</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheManagerResult.#ctor(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            初始化一个返回值
            </summary>
            <param name="postUrl">提交Url</param>
            <param name="postResult">提交的结果</param>
            <param name="postParams">提交网页的Post参数</param>
            <param name="uuid">UUID</param>
            <param name="webStatus">网络状态</param>
        </member>
        <member name="P:MangoMis.Frame.Cache.CacheManagerResult.WebStatus">
            <summary>
            网络返回值
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.CacheManagerResult.PostParams">
            <summary>
            提交网页的Post参数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.CacheManagerResult.PostResult">
            <summary>
            提交网页后的返回值
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.CacheManagerResult.PostUrl">
            <summary>
            提交的地址
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.CacheManagerResult.UuId">
            <summary>
            提交中的UUID
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.CacheManagerResult.Flag">
            <summary>
            返回状态
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.CacheManagerResultType">
            <summary>
            CM提交返回值类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheManagerResultType.Success">
            <summary>
            运行成功
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheManagerResultType.NoCmPostHost">
            <summary>
            没有配置CM提交的域名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheManagerResultType.NoCacheKey">
            <summary>
            暂时没查找到站点中有此缓存
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheManagerResultType.CacheIsNotReist">
            <summary>
            缓存不是Redis的缓存,非Redis缓存还没有实现
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheManagerResultType.CatchErrorLog">
            <summary>
            发生异常,请查看CacheErrorLog
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheManagerResultType.NoEntityId">
            <summary>
            没有要更新的实体主键
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheManagerResultType.EntityIdIsZero">
            <summary>
            更新的主键为0
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheManagerResultType.UpdateEntityIsNoRedis">
            <summary>
            更新的实体没有Redis缓存前缀
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheManagerResultType.UpdateEntityIsNoFullType">
            <summary>
            更新的实体没有完整类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.CacheManagerResultType.CacheManagerIsClosed">
            <summary>
            CM功能已经关闭
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.StoreCache.HaveSourceStoreCacheBase`1">
            <summary>
            内存中的仓储缓存
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="T:MangoMis.Frame.Cache.StoreCache.MultiWCFStoreCacheBase`1">
            <summary>
            内存中的仓储缓存
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MultiWCFStoreCacheBase`1.#ctor(System.String,System.Collections.Generic.List{System.Type},System.Type)">
            <summary>
            初始化自定义索引名的缓存
            </summary>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="mulitiTypes">多个绑定的WCF对象类型</param>
            <param name="primaryType">主要对象类型[用于取得PKID]</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MultiWCFStoreCacheBase`1.#ctor(System.String,System.Collections.Generic.List{System.Type},System.Type,System.String)">
            <summary>
            初始化自定义索引名的缓存
            </summary>
            <param name="cacheKey">系统中StoreCache全局唯一命名</param>
            <param name="mulitiTypes">多个绑定的WCF对象类型</param>
            <param name="primaryType">主要对象类型[用于取得PKID]</param>
            <param name="pkId">当前实体唯一键(必要)</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MultiWCFStoreCacheBase`1.#ctor(System.String,System.Collections.Generic.List{System.Type},System.Type,System.String,System.String)">
            <summary>
            初始化自定义索引名,自定义标题的缓存
            </summary>
            <param name="cacheKey">系统中StoreCache全局唯一命名</param>
            <param name="mulitiTypes">多个绑定的WCF对象类型</param>
            <param name="primaryType">主要对象类型[用于取得PKID]</param>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="cacheTitle"></param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MultiWCFStoreCacheBase`1.#ctor(System.String,System.Collections.Generic.List{System.Type},System.Type,System.String,System.String,MangoMis.Frame.DB.Info.DbServerType)">
            <summary>
            初始化自定义索引名,自定义标题的缓存
            </summary>
            <param name="cacheKey">系统中StoreCache全局唯一命名</param>
            <param name="mulitiTypes">多个绑定的WCF对象类型</param>
            <param name="primaryType">主要对象类型[用于取得PKID]</param>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="cacheTitle">缓存标题</param>
            <param name="dbServerType">使用的存储数据源的类型</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MultiWCFStoreCacheBase`1.#ctor(System.String,System.Collections.Generic.List{System.Type},System.Type,System.String,System.String,MangoMis.Frame.DB.Info.DbServerType,System.String)">
            <summary>
            初始化自定义索引名,自定义标题的缓存
            </summary>
            <param name="cacheKey">系统中StoreCache全局唯一命名</param>
            <param name="mulitiTypes">多个绑定的WCF对象类型</param>
            <param name="primaryType">主要对象类型[用于取得PKID]</param>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="cacheTitle">缓存标题</param>
            <param name="dbServerType">使用的存储数据源的类型</param>
            <param name="dbInfoKey">使用的数据源Key(默认为默认数据源Key)</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.GetConnectionString">
            <summary>
            取得当前数据连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.HaveDbSource">
            <summary>
            是否有数据库作为数据源
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.GetTableName">
            <summary>
            取得当前操作的表名
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.All">
            <summary>
            取得所有列表
            </summary>
            <returns></returns>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.OnAfterRefreshCurrentFromStore">
            <summary>
            重新从仓储数据源重读取之后的事件
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.OnCheckCanInsert">
            <summary>
            检查是否可以进行插入仓储
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.OnCheckCanUpdate">
            <summary>
            检查是否可以进行更新仓储
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.OnCheckCanDelete">
            <summary>
            检查是否可以进行删除仓储
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.MangoMis#Frame#Cache#StoreCache#IStoreCache#OnAfterStoreEntityInit">
            <summary>
            仓储实体初始化之后运行
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.OnAfterGetEntityBySource">
            <summary>
            用于从数据源取得实例后事件
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.OnAfterGetListBySource">
            <summary>
            用于从数据源取得列表后事件
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.OnAfterStoreEntityInit">
            <summary>
            仓储实体初始化之后运行
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.CurrentStore">
            <summary>
            本类中使用的Store可以被实例化
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.CurrentType">
            <summary>
            当前缓存存储类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.CacheTitle">
            <summary>
            缓存名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.CacheKey">
            <summary>
            缓存索引
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.CachePkId">
            <summary>
            缓存主键
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.IsInitEnd">
            <summary>
            是否已经初始化读取结束
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.BeforeInit">
            <summary>
            这步还没设置类型.
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.AfterInitTableInfo">
            <summary>
            因为下一步是初始化数据.所以如果需要实例化取数据函数.需要在此步初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.AfterInitStoreData">
            <summary>
            这步是在初始化数据之后
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.Init(System.String,System.String,System.String,MangoMis.Frame.DB.Info.DbServerType,System.String)">
            <summary>
            必须调用.
            </summary>
            <param name="pkId"></param>
            <param name="cacheName"></param>
            <param name="cacheTitle"></param>
            <param name="dbServerType"></param>
            <param name="dbInfoKey"></param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.InitData">
            <summary>
            必须调用用于初始加载数据
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.OnAfterEntityInsert">
            <summary>
            插入缓存后操作
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.OnAfterEntityUpdate">
            <summary>
            更新缓存后操作
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.OnAfterEntityDelete">
            <summary>
            删除缓存后操作
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.FisrtOrDefault(System.Func{`0,System.Boolean})">
            <summary>
            查出第一个符合条件的对象.如果没有.返回Null
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.Get(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.Get(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.Get">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.Get(System.Func{`0,System.Boolean})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.Get(System.Int32,System.Int32,System.Func{`0,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[])">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.Get(System.Int32,System.Int32,System.Func{`0,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[],System.String[])">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.GetCount(System.Func{`0,System.Boolean})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.Find(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.Find(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.Query">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.Query(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.Query(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.QueryColumns(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.GroupBy(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.GroupBy(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="filters">条件</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.Count(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.GetListFromWcfAndPagination(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            注意Filter有可能会为NULL
            </summary>
            <param name="filters">注意Filter有可能会为NULL</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.GetListBySource(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            通过WCF取得列表
            </summary>
            <param name="filters"></param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.GetEntityByStoreSource(System.Object)">
            <summary>
            通过Store数据源取得单条数据
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.StoreSave">
            <summary>
            手动向Store保存之前的变更 
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.StoreRemove(System.Object)">
            <summary>
            从Store中移除对应的项目
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.StoreRemoveWithOutSave(System.Object)">
            <summary>
            从Store中移除对应的项目(不自动保存)
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.MangoMis#Frame#Cache#StoreCache#IStoreCache#StoreAppendWithOutSave(System.Object)">
            <summary>
            向Store中更新数据(不自动保存)
            </summary>
            <param name="entity">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.MangoMis#Frame#Cache#StoreCache#IStoreCache#StoreAppendWithOutSave(System.Collections.IList)">
            <summary>
            向Store中更新数据(不自动保存)
            </summary>
            <param name="entitys">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.Contains(System.Object)">
            <summary>
            判断当前仓储中是否包括指定主键的缓存
            </summary>
            <param name="entityKey">指定主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.StoreAppendWithOutSave(`0)">
            <summary>
            向Store中更新数据(不自动保存)
            </summary>
            <param name="entity">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.StoreAppendWithOutSave(System.Collections.Generic.List{`0})">
            <summary>
            向Store中更新数据(不自动保存)
            </summary>
            <param name="entitys">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.StoreRemoveAll">
            <summary>
            从Store中移除所有项目
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.StoreAppend(`0)">
            <summary>
            向Store中更新数据
            </summary>
            <param name="entity">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.StoreAppend(System.Collections.Generic.List{`0})">
            <summary>
            向Store中更新数据
            </summary>
            <param name="entitys">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.PkId(`0)">
            <summary>
            取得主键的值
            </summary>
            <param name="entity">实体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.GetEntityBySource(System.Object)">
            <summary>
            通过数据源取得单条数据
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.RefreshStoreFromSource(System.Collections.Generic.List{System.Object})">
            <summary>
            从数据源进行刷新多条数据并且保存数据
            </summary>
            <param name="pkIdList">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.GetEntityBySource(System.Collections.Generic.List{System.Object})">
            <summary>
            通过数据源取得多条数据
            </summary>
            <param name="pkIdList">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.RefreshCurrentFromStore(System.Collections.Generic.List{System.Object})">
            <summary>
            从仓储数据源[一般暂时是Redis]刷新数据到本地缓存
            </summary>
            <param name="pkIdList">主键列表</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.RefreshStoreFromSource">
            <summary>
            从数据源进行刷新数据并且保存数据
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.RefreshStoreFromSource(System.Object)">
            <summary>
            从数据源进行刷新数据并且保存数据
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.RefreshCurrentFromStore(System.Object)">
            <summary>
            从仓储数据源[一般暂时是Redis]刷新数据到本地缓存
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.RefreshStoreFromSource(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            按条件刷新数据源
            </summary>
            <param name="filters">刷新条件</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.RefreshStoreByUpdateTime(System.String)">
            <summary>
            通过最后更新时间刷新Store
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheBase`1.InitStoreData">
            <summary>
            初始化当前的缓存数据
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.StoreCache.Common">
            <summary>
            StoreCache通用操作
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.Common.ErrorInfos">
            <summary>
            当前错误信息
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.StoreCache.Common.ErrorStatusConfigName">
            <summary>
            错误配置 文件名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.Common.ErrorStatusConfigPath">
            <summary>
            配置路径
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.Common.SaveErrorStatusConfig">
            <summary>
            保存配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.Common.LoadErrorStatusConfig">
            <summary>
            加载配置文件
            </summary>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.Cache.StoreCache.Common.DefaultCacheGetErrorInfo">
            <summary>
            默认缓存获取失败的处理方式
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.Common.SetErrorOperateInfo(MangoMis.Frame.Cache.CacheGetErrorStatus,MangoMis.Frame.Cache.CacheGetErrorOperate,MangoMis.Frame.Cache.CacheGetErrorSaveType)">
            <summary>
            设置缓存获取失败的处理方式
            </summary>
            <param name="errorStatus">错误格式</param>
            <param name="operate">处理方式</param>
            <param name="saveType">保存方式</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.Common.GetErrorOperateInfo(MangoMis.Frame.Cache.CacheGetErrorStatus)">
            <summary>
            取得缓存获取失败的处理方式
            </summary>
            <param name="errorStatus"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.Common.Remove(System.String)">
            <summary>
            判断是否存在 
            </summary>
            <param name="cacheKey">缓存唯一主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.Common.Contains(System.String)">
            <summary>
            判断是否存在 
            </summary>
            <param name="cacheKey">缓存唯一主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.Common.Check``1(System.String,System.String)">
            <summary>
            检测Store是否正常,正常返回实例不正常移除后返回NULL
            </summary>
            <typeparam name="TEntity">Store类型</typeparam>
            <param name="cacheKey">Store的索引</param>
            <param name="storeType">Store的类型(用于记录日志)</param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.Cache.StoreCache.Common._isStoreSuccess">
            <summary>
            当前创建Store是否成功
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.Common.IsStoreSuccess">
            <summary>
            当前创建Store是否成功
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.Common.Get``1(System.String,System.String,MangoMis.Frame.Model.GetStoreEvent{``0})">
            <summary>
            添加一个StoreCache
            </summary>
            <param name="cacheKey">缓存唯一主键</param>
            <param name="storeType">此Store的类型.只用于记录日志</param>
            <param name="getNewStore">取得新的Store的函数</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.Common.Find(System.String)">
            <summary>
            取得当前所有缓存内容的列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.Common.List">
            <summary>
            取得当前所有缓存内容的列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.Common.GetAllStoreKeyBefore">
            <summary>
            取得所有的Store的名称前缀
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.Common.AllStoreKeyJson">
            <summary>
            所有的StoreKey的Json
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.StoreCache.CurrentSimple">
            <summary>
            当前站使用的Store.无对应的数据源
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentSimple.Cache``1(System.String,System.String,System.String)">
            <summary>
            取得简单缓存
            </summary>
            <param name="cacheKey">缓存唯一主键</param>
            <param name="pkIdColumn">缓存内容唯一键(必要)</param>
            <param name="cacheTitle">缓存标题.默认为类型名</param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1">
            <summary>
            无数据来源.只在内存中的缓存
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.GetConnectionString">
            <summary>
            取得当前数据连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.HaveDbSource">
            <summary>
            是否有数据库作为数据源
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.GetTableName">
            <summary>
            取得当前操作的表名
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.All">
            <summary>
            取得所有列表
            </summary>
            <returns></returns>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.OnAfterRefreshCurrentFromStore">
            <summary>
            重新从仓储数据源重读取之后的事件
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.OnCheckCanInsert">
            <summary>
            检查是否可以进行插入仓储
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.OnCheckCanUpdate">
            <summary>
            检查是否可以进行更新仓储
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.OnCheckCanDelete">
            <summary>
            检查是否可以进行删除仓储
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.MangoMis#Frame#Cache#StoreCache#IStoreCache#OnAfterStoreEntityInit">
            <summary>
            仓储实体初始化之后运行
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.OnAfterStoreEntityInit">
            <summary>
            仓储实体初始化之后运行
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.OnAfterGetEntityBySource">
            <summary>
            用于从数据源取得实例后事件
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.OnAfterGetListBySource">
            <summary>
            用于从数据源取得列表后事件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.CurrentType">
            <summary>
            当前缓存存储类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.CacheTitle">
            <summary>
            缓存名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.CacheKey">
            <summary>
            缓存索引
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.CachePkId">
            <summary>
            缓存主键
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.IsInitEnd">
            <summary>
            是否已经初始化读取结束
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.#ctor(System.String)">
            <summary>
            初始化自定义索引名的缓存
            </summary>
            <param name="pkId">当前实体唯一键(必要)</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.#ctor(System.String,System.String)">
            <summary>
            初始化自定义索引名的缓存
            </summary>
            <param name="cacheKey">系统中StoreCache全局唯一命名</param>
            <param name="pkId">当前实体唯一键(必要)</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.#ctor(System.String,System.String,System.String)">
            <summary>
            初始化自定义索引名,自定义标题的缓存
            </summary>
            <param name="cacheKey">系统中StoreCache全局唯一命名</param>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="cacheTitle"></param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.#ctor(System.String,System.String,System.String,MangoMis.Frame.DB.Info.DbServerType,System.String)">
            <summary>
            初始化自定义索引名,自定义标题的缓存
            </summary>
            <param name="cacheKey">系统中StoreCache全局唯一命名</param>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="cacheTitle">缓存标题</param>
            <param name="dbServerType">使用的存储数据源的类型</param>
            <param name="dbInfoKey">使用的数据源Key(默认为默认数据源Key)</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.#ctor(System.String,System.String,System.String,MangoMis.Frame.DB.Info.DbServerType)">
            <summary>
            初始化自定义索引名,自定义标题的缓存
            </summary>
            <param name="cacheKey">系统中StoreCache全局唯一命名</param>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="cacheTitle">缓存标题</param>
            <param name="dbServerType">使用的存储数据源的类型</param>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.OnAfterEntityInsert">
            <summary>
            插入缓存后操作
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.OnAfterEntityUpdate">
            <summary>
            更新缓存后操作
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.OnAfterEntityDelete">
            <summary>
            删除缓存后操作
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.FisrtOrDefault(System.Func{`0,System.Boolean})">
            <summary>
            查出第一个符合条件的对象.如果没有.返回Null
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.Get(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.Get(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.Get">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.Get(System.Func{`0,System.Boolean})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.Get(System.Int32,System.Int32,System.Func{`0,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[])">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.Get(System.Int32,System.Int32,System.Func{`0,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[],System.String[])">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.GetCount(System.Func{`0,System.Boolean})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.Find(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.Find(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.RefreshStoreFromSource(System.Collections.Generic.List{System.Object})">
            <summary>
            从数据源进行刷新多条数据并且保存数据
            </summary>
            <param name="pkIdList">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.GetEntityBySource(System.Collections.Generic.List{System.Object})">
            <summary>
            通过数据源取得多条数据
            </summary>
            <param name="pkIdList">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.Query">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.Query(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.Query(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.QueryColumns(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.GroupBy(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.GroupBy(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="filters">条件</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.Count(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.GetListBySource(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            无效方法
            </summary>
            <param name="filters"></param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.GetEntityByStoreSource(System.Object)">
            <summary>
            通过Store数据源取得单条数据
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.RefreshCurrentFromStore(System.Object)">
            <summary>
            从仓储数据源[一般暂时是Redis]刷新数据到本地缓存
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.RefreshStoreFromSource(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            按条件刷新缓存
            </summary>
            <param name="filters">刷新条件</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.StoreRemove(System.Object)">
            <summary>
            从Store中移除对应的项目
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.StoreRemoveWithOutSave(System.Object)">
            <summary>
            从Store中移除对应的项目(不自动保存)
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.MangoMis#Frame#Cache#StoreCache#IStoreCache#StoreAppendWithOutSave(System.Object)">
            <summary>
            向Store中更新数据(不自动保存)
            </summary>
            <param name="entity">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.MangoMis#Frame#Cache#StoreCache#IStoreCache#StoreAppendWithOutSave(System.Collections.IList)">
            <summary>
            向Store中更新数据(不自动保存)
            </summary>
            <param name="entitys">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.Contains(System.Object)">
            <summary>
            判断当前仓储中是否包括指定主键的缓存
            </summary>
            <param name="entityKey">指定主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.StoreAppendWithOutSave(`0)">
            <summary>
            向Store中更新数据(不自动保存)
            </summary>
            <param name="entity">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.StoreAppendWithOutSave(System.Collections.Generic.List{`0})">
            <summary>
            向Store中更新数据(不自动保存)
            </summary>
            <param name="entitys">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.StoreRemoveAll">
            <summary>
            从Store中移除所有项目
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.StoreSave">
            <summary>
            手动向Store保存之前的变更 
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.StoreAppend(`0)">
            <summary>
            向Store中更新数据
            </summary>
            <param name="entity">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.StoreAppend(System.Collections.Generic.List{`0})">
            <summary>
            向Store中更新数据
            </summary>
            <param name="entitys">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.PkId(`0)">
            <summary>
            取得主键的值
            </summary>
            <param name="entity">实体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.GetEntityBySource(System.Object)">
            <summary>
            通过WCF取得单条数据
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.RefreshStoreFromSource">
            <summary>
            从数据源进行刷新数据并且保存数据
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.RefreshStoreFromSource(System.Object)">
            <summary>
            从数据源进行刷新数据并且保存数据
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.RefreshStoreByUpdateTime">
            <summary>
            通过最后更新时间刷新Store
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.CurrentStoreCacheBase`1.InitStoreData">
            <summary>
            初始化当前的缓存数据
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.StoreCache.MappedSimple">
            <summary>
            简易映射缓存
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedSimple.Cache``2(System.String,System.String,System.Func{``0,``1},System.String)">
            <summary>
            取得简单缓存
            </summary>
            <param name="cacheKey">缓存唯一主键</param>
            <param name="pkIdColumn">缓存内容唯一键(必要)</param>
            <param name="cacheTitle">缓存标题.默认为类型名</param>
            <param name="getMappedData">缓存数据内容取得</param>
            <typeparam name="TEntity">WCF实体</typeparam>
            <typeparam name="TMapped">映射实体</typeparam>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2">
            <summary>
            用于绑定一个新类型的仓储缓存
            </summary>
            <typeparam name="TEntity">WCF的实体</typeparam>
            <typeparam name="TMapped">缓存的实体</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.GetEntityByStoreSource(System.Object)">
            <summary>
            通过Store数据源取得单条数据
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.GetConnectionString">
            <summary>
            取得当前数据连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.HaveDbSource">
            <summary>
            是否有数据库作为数据源
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.GetTableName">
            <summary>
            取得当前操作的表名
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.All">
            <summary>
            取得所有列表
            </summary>
            <returns></returns>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.OnAfterRefreshCurrentFromStore">
            <summary>
            重新从仓储数据源重读取之后的事件
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.MangoMis#Frame#Cache#StoreCache#IStoreCache#OnAfterStoreEntityInit">
            <summary>
            仓储实体初始化之后运行
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.OnCheckCanInsert">
            <summary>
            检查是否可以进行插入仓储
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.OnCheckCanUpdate">
            <summary>
            检查是否可以进行更新仓储
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.OnCheckCanDelete">
            <summary>
            检查是否可以进行删除仓储
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.OnAfterStoreEntityInit">
            <summary>
            仓储实体初始化之后运行
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.OnAfterGetEntityBySource">
            <summary>
            用于从数据源取得实例后事件
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.OnAfterGetListBySource">
            <summary>
            用于从数据源取得列表后事件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.GetMappedData">
            <summary>
            取得映射的对象实体
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.GetMappedDataCurrent(System.Object)">
            <summary>
            取得映射的对象实体
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.CurrentType">
            <summary>
            当前缓存存储类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.CacheTitle">
            <summary>
            缓存名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.CacheKey">
            <summary>
            缓存索引
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.CachePkId">
            <summary>
            缓存主键
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.IsInitEnd">
            <summary>
            是否已经初始化读取结束
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.#ctor(System.String,System.Func{`0,`1})">
            <summary>
            初始化自定义索引名的缓存
            </summary>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="getMappedData">通过原实体取得映射实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.#ctor(System.String,System.Int32,System.Func{`0,`1})">
            <summary>
            初始化自定义索引名的缓存
            </summary>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="conntype">连接类型</param>
            <param name="getMappedData">通过原实体取得映射实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.#ctor(System.String,System.String,System.Func{`0,`1})">
            <summary>
            初始化自定义索引名的缓存
            </summary>
            <param name="cacheKey">系统中StoreCache全局唯一命名</param>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="getMappedData">通过原实体取得映射实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.#ctor(System.String,System.String,System.Int32,System.Func{`0,`1})">
            <summary>
            初始化自定义索引名的缓存
            </summary>
            <param name="cacheKey">系统中StoreCache全局唯一命名</param>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="conntype">连接类型</param>
            <param name="getMappedData">通过原实体取得映射实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.#ctor(System.String,System.String,System.String,System.Func{`0,`1})">
            <summary>
            初始化自定义索引名,自定义标题的缓存
            </summary>
            <param name="cacheKey">系统中StoreCache全局唯一命名</param>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="cacheTitle"></param>
            <param name="getMappedData">通过原实体取得映射实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.#ctor(System.String,System.String,System.String,System.Int32,System.Func{`0,`1})">
            <summary>
            初始化自定义索引名,自定义标题的缓存
            </summary>
            <param name="cacheKey">系统中StoreCache全局唯一命名</param>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="cacheTitle"></param>
            <param name="conntype">连接类型</param>
            <param name="getMappedData">通过原实体取得映射实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.#ctor(System.String,System.String,System.String,System.Func{`0,`1},MangoMis.Frame.DB.Info.DbServerType,System.String)">
            <summary>
            初始化自定义索引名,自定义标题的缓存
            </summary>
            <param name="cacheKey">系统中StoreCache全局唯一命名</param>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="cacheTitle">缓存标题</param>
            <param name="getMappedData">通过原实体取得映射实体</param>
            <param name="dbServerType">使用的存储数据源的类型</param>
            <param name="dbInfoKey">使用的数据源Key(默认为默认数据源Key)</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.#ctor(System.String,System.String,System.String,System.Func{`0,`1},MangoMis.Frame.DB.Info.DbServerType)">
            <summary>
            初始化自定义索引名,自定义标题的缓存
            </summary>
            <param name="cacheKey">系统中StoreCache全局唯一命名</param>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="cacheTitle">缓存标题</param>
            <param name="getMappedData">通过原实体取得映射实体</param>
            <param name="dbServerType">使用的存储数据源的类型</param>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.OnAfterEntityInsert">
            <summary>
            插入缓存后操作
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.OnAfterEntityUpdate">
            <summary>
            更新缓存后操作
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.OnAfterEntityDelete">
            <summary>
            删除缓存后操作
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.FisrtOrDefault(System.Func{`1,System.Boolean})">
            <summary>
            查出第一个符合条件的对象.如果没有.返回Null
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.Get(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.Get(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.Get">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.Get(System.Func{`1,System.Boolean})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.Get(System.Int32,System.Int32,System.Func{`1,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[])">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.Get(System.Int32,System.Int32,System.Func{`1,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[],System.String[])">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.GetCount(System.Func{`1,System.Boolean})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.Find(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.Find(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.Query">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.Query(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.Query(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.QueryColumns(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.GroupBy(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.GroupBy(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="filters">条件</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.Count(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.RefreshStoreFromSource(System.Collections.Generic.List{System.Object})">
            <summary>
            从数据源进行刷新多条数据并且保存数据
            </summary>
            <param name="pkIdList">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.GetEntityBySource(System.Collections.Generic.List{System.Object})">
            <summary>
            通过数据源取得多条数据
            </summary>
            <param name="pkIdList">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.RefreshCurrentFromStore(System.Object)">
            <summary>
            从仓储数据源[一般暂时是Redis]刷新数据到本地缓存
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.RefreshCurrentFromStore(System.Collections.Generic.List{System.Object})">
            <summary>
            从仓储数据源[一般暂时是Redis]刷新数据到本地缓存
            </summary>
            <param name="pkIdList">主键列表</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.GetListBySource(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            通过WCF取得列表
            </summary>
            <param name="filters"></param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.StoreRemove(System.Object)">
            <summary>
            从Store中移除对应的项目
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.StoreRemoveWithOutSave(System.Object)">
            <summary>
            从Store中移除对应的项目(不自动保存)
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.MangoMis#Frame#Cache#StoreCache#IStoreCache#StoreAppendWithOutSave(System.Object)">
            <summary>
            向Store中更新数据(不自动保存)
            </summary>
            <param name="entity">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.MangoMis#Frame#Cache#StoreCache#IStoreCache#StoreAppendWithOutSave(System.Collections.IList)">
            <summary>
            向Store中更新数据(不自动保存)
            </summary>
            <param name="entitys">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.Contains(System.Object)">
            <summary>
            判断当前仓储中是否包括指定主键的缓存
            </summary>
            <param name="entityKey">指定主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.StoreAppendWithOutSave(`1)">
            <summary>
            向Store中更新数据(不自动保存)
            </summary>
            <param name="entity">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.StoreAppendWithOutSave(System.Collections.Generic.List{`1})">
            <summary>
            向Store中更新数据(不自动保存)
            </summary>
            <param name="entitys">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.StoreSave">
            <summary>
            手动向Store保存之前的变更 
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.StoreRemoveAll">
            <summary>
            从Store中移除所有项目
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.StoreAppend(`1)">
            <summary>
            向Store中更新数据
            </summary>
            <param name="entity">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.StoreAppend(System.Collections.Generic.List{`1})">
            <summary>
            向Store中更新数据
            </summary>
            <param name="entitys">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.PkId(`1)">
            <summary>
            取得主键的值
            </summary>
            <param name="entity">实体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.GetEntityBySource(System.Object)">
            <summary>
            通过WCF取得单条数据
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.RefreshStoreFromSource">
            <summary>
            从数据源进行刷新数据并且保存数据
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.RefreshStoreFromSource(System.Object)">
            <summary>
            从数据源进行刷新数据并且保存数据
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.RefreshStoreFromSource(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            按条件刷新数据源
            </summary>
            <param name="filters">刷新条件</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.RefreshStoreByUpdateTime">
            <summary>
            通过最后更新时间刷新Store
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MappedStoreCacheBase`2.InitStoreData">
            <summary>
            初始化当前的缓存数据
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.StoreCache.MemorySimple">
            <summary>
            简单缓存实体
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemorySimple.Cache``1(System.String,System.String,System.Func{System.Collections.Generic.List{``0}},System.String)">
            <summary>
            取得简单缓存
            </summary>
            <param name="cacheKey">缓存唯一主键</param>
            <param name="pkIdColumn">缓存内容唯一键(必要)</param>
            <param name="cacheTitle">缓存标题.默认为类型名</param>
            <param name="memoryDataGetter">缓存数据内容取得</param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1">
            <summary>
            内存中的仓储缓存
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.GetEntityByStoreSource(System.Object)">
            <summary>
            通过Store数据源取得单条数据
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.GetConnectionString">
            <summary>
            取得当前数据连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.HaveDbSource">
            <summary>
            是否有数据库作为数据源
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.GetTableName">
            <summary>
            取得当前操作的表名
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.All">
            <summary>
            取得所有列表
            </summary>
            <returns></returns>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.OnAfterRefreshCurrentFromStore">
            <summary>
            重新从仓储数据源重读取之后的事件
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.OnCheckCanInsert">
            <summary>
            检查是否可以进行插入仓储
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.OnCheckCanUpdate">
            <summary>
            检查是否可以进行更新仓储
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.OnCheckCanDelete">
            <summary>
            检查是否可以进行删除仓储
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.MangoMis#Frame#Cache#StoreCache#IStoreCache#OnAfterStoreEntityInit">
            <summary>
            仓储实体初始化之后运行
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.OnAfterStoreEntityInit">
            <summary>
            仓储实体初始化之后运行
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.OnAfterGetEntityBySource">
            <summary>
            用于从数据源取得实例后事件
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.OnAfterGetListBySource">
            <summary>
            用于从数据源取得列表后事件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.CurrentType">
            <summary>
            当前缓存存储类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.CacheTitle">
            <summary>
            缓存名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.CacheKey">
            <summary>
            缓存索引
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.CachePkId">
            <summary>
            缓存主键
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.IsInitEnd">
            <summary>
            是否已经初始化读取结束
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.MemoryDataGetter">
            <summary>
            缓存内容取得方法
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.#ctor(System.String,System.Func{System.Collections.Generic.List{`0}})">
            <summary>
            初始化自定义索引名的缓存
            </summary>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="memoryDataGetter">缓存数据内容取得</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.#ctor(System.String,System.String,System.Func{System.Collections.Generic.List{`0}})">
            <summary>
            初始化自定义索引名的缓存
            </summary>
            <param name="cacheKey">系统中StoreCache全局唯一命名</param>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="memoryDataGetter">缓存数据内容取得</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.#ctor(System.String,System.String,System.String,System.Func{System.Collections.Generic.List{`0}})">
            <summary>
            初始化自定义索引名,自定义标题的缓存
            </summary>
            <param name="cacheKey">系统中StoreCache全局唯一命名</param>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="cacheTitle"></param>
            <param name="memoryDataGetter">缓存数据内容取得</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.#ctor(System.String,System.String,System.String,System.Func{System.Collections.Generic.List{`0}},MangoMis.Frame.DB.Info.DbServerType)">
            <summary>
            初始化自定义索引名,自定义标题的缓存
            </summary>
            <param name="cacheKey">系统中StoreCache全局唯一命名</param>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="cacheTitle">缓存标题</param>
            <param name="memoryDataGetter">缓存数据内容取得</param>
            <param name="dbServerType">使用的存储数据源的类型</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.#ctor(System.String,System.String,System.String,System.Func{System.Collections.Generic.List{`0}},MangoMis.Frame.DB.Info.DbServerType,System.String)">
            <summary>
            初始化自定义索引名,自定义标题的缓存
            </summary>
            <param name="cacheKey">系统中StoreCache全局唯一命名</param>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="cacheTitle">缓存标题</param>
            <param name="memoryDataGetter">缓存数据内容取得</param>
            <param name="dbServerType">使用的存储数据源的类型</param>
            <param name="dbInfoKey">使用的数据源Key(默认为默认数据源Key)</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.Find(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.OnAfterEntityInsert">
            <summary>
            插入缓存后操作
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.OnAfterEntityUpdate">
            <summary>
            更新缓存后操作
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.OnAfterEntityDelete">
            <summary>
            删除缓存后操作
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.FisrtOrDefault(System.Func{`0,System.Boolean})">
            <summary>
            查出第一个符合条件的对象.如果没有.返回Null
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.Get(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.Get(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.Get">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.Get(System.Func{`0,System.Boolean})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.Get(System.Int32,System.Int32,System.Func{`0,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[])">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.Get(System.Int32,System.Int32,System.Func{`0,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[],System.String[])">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.GetCount(System.Func{`0,System.Boolean})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.Find(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.Query">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.Query(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.Query(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.QueryColumns(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.GroupBy(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.GroupBy(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="filters">条件</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.Count(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.GetListBySource(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            通过数据源取得列表
            </summary>
            <param name="filters"></param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.StoreRemove(System.Object)">
            <summary>
            从Store中移除对应的项目
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.StoreRemoveWithOutSave(System.Object)">
            <summary>
            从Store中移除对应的项目(不自动保存)
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.MangoMis#Frame#Cache#StoreCache#IStoreCache#StoreAppendWithOutSave(System.Object)">
            <summary>
            向Store中更新数据(不自动保存)
            </summary>
            <param name="entity">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.MangoMis#Frame#Cache#StoreCache#IStoreCache#StoreAppendWithOutSave(System.Collections.IList)">
            <summary>
            向Store中更新数据(不自动保存)
            </summary>
            <param name="entitys">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.Contains(System.Object)">
            <summary>
            判断当前仓储中是否包括指定主键的缓存
            </summary>
            <param name="entityKey">指定主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.StoreAppendWithOutSave(`0)">
            <summary>
            向Store中更新数据(不自动保存)
            </summary>
            <param name="entity">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.StoreAppendWithOutSave(System.Collections.Generic.List{`0})">
            <summary>
            向Store中更新数据(不自动保存)
            </summary>
            <param name="entitys">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.StoreRemoveAll">
            <summary>
            从Store中移除所有项目
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.StoreAppend(`0)">
            <summary>
            向Store中更新数据
            </summary>
            <param name="entity">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.StoreAppend(System.Collections.Generic.List{`0})">
            <summary>
            向Store中更新数据
            </summary>
            <param name="entitys">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.StoreSave">
            <summary>
            手动向Store保存之前的变更 
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.PkId(`0)">
            <summary>
            取得主键的值
            </summary>
            <param name="entity">实体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.GetEntityBySource(System.Object)">
            <summary>
            通过WCF取得单条数据
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.RefreshStoreFromSource(System.Collections.Generic.List{System.Object})">
            <summary>
            从数据源进行刷新多条数据并且保存数据
            </summary>
            <param name="pkIdList">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.GetEntityBySource(System.Collections.Generic.List{System.Object})">
            <summary>
            通过数据源取得多条数据
            </summary>
            <param name="pkIdList">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.RefreshCurrentFromStore(System.Object)">
            <summary>
            从仓储数据源[一般暂时是Redis]刷新数据到本地缓存
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.RefreshStoreFromSource">
            <summary>
            从数据源进行刷新数据并且保存数据
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.RefreshStoreFromSource(System.Object)">
            <summary>
            从数据源进行刷新数据并且保存数据
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.RefreshStoreFromSource(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            按条件刷新数据源
            </summary>
            <param name="filters">刷新条件</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.RefreshStoreByUpdateTime">
            <summary>
            通过最后更新时间刷新Store
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.MemoryStoreCacheBase`1.InitStoreData">
            <summary>
            初始化当前的缓存数据
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.StoreCache.WCFSimple">
            <summary>
            简单缓存实体
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.WCFSimple.CacheWithDbInfo``1(System.String,MangoMis.Frame.DB.Info.DBInfo,System.String,System.String)">
            <summary>
            取得简单缓存
            </summary>
            <param name="cacheKey">缓存唯一主键</param>
            <param name="wcfUseDbInfo">些Wcf数据源读取WCF时使用的数据源</param>
            <param name="pkIdColumn">缓存内容唯一键(必要)</param>
            <param name="cacheTitle">缓存标题.默认为类型名</param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.WCFSimple.Cache``1(System.String,System.String,System.String)">
            <summary>
            取得简单缓存
            </summary>
            <param name="cacheKey">缓存唯一主键</param>
            <param name="pkIdColumn">缓存内容唯一键(必要)</param>
            <param name="cacheTitle">缓存标题.默认为类型名</param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.WCFSimple.CacheForMuliti``1(System.String,System.Collections.Generic.List{System.Type},System.Type,System.String,System.String,MangoMis.Frame.DB.Info.DbServerType,System.String)">
            <summary>
            取得自定义数据源类型的缓存
            </summary>
            <param name="cacheKey">缓存唯一主键</param>
            <param name="pkIdColumn">缓存内容唯一键(必要)</param>
            <param name="cacheTitle">缓存标题.默认为类型名</param>
            <param name="mulitiTypes">多个绑定的WCF对象类型</param>
            <param name="primaryType">主要对象类型[用于取得PKID]</param>
            <param name="dbType">仓储持久化数据源类型</param>
            <param name="dbInfoKey">仓储持久数据源Key</param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.WCFSimple.CacheForMuliti``1(System.String,System.Collections.Generic.List{System.Type},System.Type,System.String,System.String)">
            <summary>
            取得简单缓存
            </summary>
            <param name="cacheKey">缓存唯一主键</param>
            <param name="pkIdColumn">缓存内容唯一键(必要)</param>
            <param name="cacheTitle">缓存标题.默认为类型名</param>
            <param name="mulitiTypes">多个绑定的WCF对象类型</param>
            <param name="primaryType">主要对象类型[用于取得PKID]</param>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Cache.StoreCache.StoreCacheConfigInfo">
            <summary>
            配置类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.StoreCacheConfigInfo.Key">
            <summary>
            更新的缓存键(唯一)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.StoreCacheConfigInfo.AutoRefreshBySourceSecondSpan">
            <summary>
            自动从数据源读取数据刷新时间间隔(默认值为60*60 1小时)(为0则从来不自动刷新)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.StoreCacheConfigInfo.DBServerKey">
            <summary>
            使用的缓存持久化数据源(默认值为[Redis_Default_ServerInfoKey])
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.StoreCacheConfigInfo.ListPageSize">
            <summary>
            取得列表每页取得数量(默认值200)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.StoreCacheConfigInfo.PkIdPageSize">
            <summary>
            取得主键列表每页取得数量(默认值2000)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.StoreCacheConfigInfo.DelayTimeForRefreshDataAfterReadStore">
            <summary>
            读取到持久化数据后刷新缓存的延时时间(秒为单位)(为0页从不刷新)(默认120秒 2分钟)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.StoreCacheConfigInfo.InitMillisecondsTotal">
            <summary>
            初始化总用毫秒数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.StoreCacheConfigInfo.InitTimes">
            <summary>
            初始化次数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.StoreCacheConfigInfo.RefreshFromSourceTimes">
            <summary>
            从数据源刷新次数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.StoreCacheConfigInfo.RefreshFromSourceMillisecondsTotal">
            <summary>
            从数据源刷新总用毫秒数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.StoreCacheConfigInfo.RefreshFromSourceTimeMax">
            <summary>
            从数据源刷新最长时间所在时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.StoreCacheConfigInfo.RefreshFromSourceMillisecondsMax">
            <summary>
            从数据源刷新最长时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.StoreCacheConfigInfo.RefreshFromSourceMessageMax">
            <summary>
            从数据源刷新最长时间说明
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.StoreCacheConfigInfo.RefreshFromSourceTime">
            <summary>
            上次从数据源刷新时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.StoreCache.StoreCacheConfig.StoreName">
            <summary>
            当前仓储名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheConfig.GetConfigInfo(System.String)">
            <summary>
            取得缓存更新信息
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheConfig.GetRefreshSecondSpan(System.String)">
            <summary>
            取得自动更新间隔
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheConfig.SetRefreshSecondSpan(System.String,System.Int32)">
            <summary>
            设置自动更新间隔
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
            <param name="secondSpan">自动更新间隔</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheConfig.GetListPageSize(System.String)">
            <summary>
            取得列表时每页数量
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheConfig.SetListPageSize(System.String,System.Int32)">
            <summary>
            设置列表时每页数量
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
            <param name="secondSpan">自动更新间隔</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheConfig.GetPkIdPageSize(System.String)">
            <summary>
            取得ID列表时每页数量
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheConfig.SetPkIdPageSize(System.String,System.Int32)">
            <summary>
            设置ID列表时每页数量
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
            <param name="secondSpan">自动更新间隔</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheConfig.GetDelayTimeForRefreshDataAfterReadStore(System.String)">
            <summary>
            读取到持久化数据后刷新缓存的延时时间(秒为单位)(为0页从不刷新)(默认120秒 2分钟)
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheConfig.SetDelayTimeForRefreshDataAfterReadStore(System.String,System.Int32)">
            <summary>
            读取到持久化数据后刷新缓存的延时时间(秒为单位)(为0页从不刷新)(默认120秒 2分钟)
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
            <param name="secondSpan">自动更新间隔</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheConfig.GetDBServerKey(System.String)">
            <summary>
            使用的缓存持久化数据源(默认值为[Redis_Default_ServerInfoKey])
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheConfig.SetDBServerKey(System.String,System.String)">
            <summary>
            使用的缓存持久化数据源(默认值为[Redis_Default_ServerInfoKey])
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
            <param name="serverKey">服务器唯一键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheConfig.GetInitTimes(System.String)">
            <summary>
            初始化次数
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheConfig.GetInitMillisecondsTotal(System.String)">
            <summary>
            初始化总用毫秒数
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheConfig.SetInit(System.String,System.Int32)">
            <summary>
            设置初始化
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
            <param name="useMilliseconds">初始化使用的毫秒数</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheConfig.GetRefreshFromSourceTimes(System.String)">
            <summary>
            从数据源刷新次数
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheConfig.GetRefreshFromSourceMillisecondsTotal(System.String)">
            <summary>
            从数据源刷新总用毫秒数
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheConfig.GetRefreshFromSourceTime(System.String)">
            <summary>
            上次从数据源刷新时间
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheConfig.SetMaxRefreshFromSource(System.String,System.Int32,System.Func{System.Object,System.String},System.Object)">
            <summary>
            设置数据源刷新
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
            <param name="useMilliseconds">使用的毫秒数</param>
            <param name="messageBuild"></param>
            <param name="messageBody"></param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheConfig.ClearMaxRefreshFromSource(System.String)">
            <summary>
            清空数据源刷新
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheConfig.SetRefreshFromSource(System.String,System.Int32,System.Nullable{System.DateTime})">
            <summary>
            设置数据源刷新
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
            <param name="useMilliseconds">使用的毫秒数</param>
            <param name="refreshTime">开始刷新的时间</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.StoreCacheConfig.Append(System.String)">
            <summary>
            添加一个Config
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
        </member>
        <member name="T:MangoMis.Frame.Cache.StoreCache.WCFStoreCacheBase`1">
            <summary>
            内存中的仓储缓存
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.WCFStoreCacheBase`1.#ctor(System.String)">
            <summary>
            初始化自定义索引名的缓存
            </summary>
            <param name="pkId">当前实体唯一键(必要)</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.WCFStoreCacheBase`1.#ctor(System.String,System.String)">
            <summary>
            初始化自定义索引名的缓存
            </summary>
            <param name="cacheKey">系统中StoreCache全局唯一命名</param>
            <param name="pkId">当前实体唯一键(必要)</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.WCFStoreCacheBase`1.#ctor(System.String,System.String,System.String)">
            <summary>
            初始化自定义索引名,自定义标题的缓存
            </summary>
            <param name="cacheKey">系统中StoreCache全局唯一命名</param>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="cacheTitle"></param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.WCFStoreCacheBase`1.#ctor(System.String,System.String,System.String,MangoMis.Frame.DB.Info.DBInfo)">
            <summary>
            初始化自定义索引名,自定义标题的缓存
            </summary>
            <param name="cacheKey">系统中StoreCache全局唯一命名</param>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="cacheTitle"></param>
            <param name="wcfUseDbInfo">20181220新增参数.可以传入WCF使用的数据连接</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.WCFStoreCacheBase`1.#ctor(System.String,System.String,System.String,MangoMis.Frame.DB.Info.DbServerType)">
            <summary>
            初始化自定义索引名,自定义标题的缓存
            </summary>
            <param name="cacheKey">系统中StoreCache全局唯一命名</param>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="cacheTitle">缓存标题</param>
            <param name="dbServerType">使用的存储数据源的类型</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.WCFStoreCacheBase`1.#ctor(System.String,System.String,System.String,MangoMis.Frame.DB.Info.DbServerType,System.String)">
            <summary>
            初始化自定义索引名,自定义标题的缓存
            </summary>
            <param name="cacheKey">系统中StoreCache全局唯一命名</param>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="cacheTitle">缓存标题</param>
            <param name="dbServerType">使用的存储数据源的类型</param>
            <param name="dbInfoKey">使用的数据源Key(默认为默认数据源Key)</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.WCFStoreCacheBase`1.#ctor(System.String,System.String,System.String,MangoMis.Frame.DB.Info.DbServerType,System.String,MangoMis.Frame.DB.Info.DBInfo)">
            <summary>
            初始化自定义索引名,自定义标题的缓存
            </summary>
            <param name="cacheKey">系统中StoreCache全局唯一命名</param>
            <param name="pkId">当前实体唯一键(必要)</param>
            <param name="cacheTitle">缓存标题</param>
            <param name="dbServerType">使用的存储数据源的类型</param>
            <param name="dbInfoKey">使用的数据源Key(默认为默认数据源Key)</param>
            <param name="wcfUseDbInfo">20181220新增参数.可以传入WCF使用的数据连接</param>
        </member>
        <member name="T:MangoMis.Frame.Cache.StoreCache.IStoreCache">
            <summary>
            可更新的内存缓存.包括了数据源,与IStore.实现数据源(Sql)与IStore之间数据的交互.
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.IStoreCache.OnAfterRefreshCurrentFromStore">
            <summary>
            重新从仓储数据源重读取之后的事件
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.IStoreCache.OnCheckCanInsert">
            <summary>
            检查是否可以进行插入仓储
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.IStoreCache.OnCheckCanUpdate">
            <summary>
            检查是否可以进行更新仓储
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.IStoreCache.OnCheckCanDelete">
            <summary>
            检查是否可以进行删除仓储
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.IStoreCache.OnAfterStoreEntityInit">
            <summary>
            仓储实体初始化之后运行
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.IStoreCache.OnAfterGetEntityBySource">
            <summary>
            用于从数据源取得实例后事件
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.IStoreCache.OnAfterGetListBySource">
            <summary>
            用于从数据源取得列表后事件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.IStoreCache.CurrentType">
            <summary>
            当前缓存存储类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.IStoreCache.HaveDbSource">
            <summary>
            是否有数据库作为数据源
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.IStoreCache.CacheTitle">
            <summary>
            缓存名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.IStoreCache.CacheKey">
            <summary>
            缓存索引
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.IStoreCache.CachePkId">
            <summary>
            缓存主键
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.StoreCache.IStoreCache.IsInitEnd">
            <summary>
            是否已经初始化读取结束
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache.GetListBySource(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            通过数据源取得列表
            </summary>
            <param name="filters"></param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache.GetEntityBySource(System.Object)">
            <summary>
            通过数据源取得单条数据
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache.GetEntityBySource(System.Collections.Generic.List{System.Object})">
            <summary>
            通过数据源取得多条数据
            </summary>
            <param name="pkIdList">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache.GetEntityByStoreSource(System.Object)">
            <summary>
            通过Store数据源取得单条数据
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache.RefreshStoreFromSource">
            <summary>
            从数据源进行刷新所有数据并且保存数据
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache.RefreshStoreFromSource(System.Object)">
            <summary>
            从数据源进行刷新一条数据并且保存数据
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache.RefreshStoreFromSource(System.Collections.Generic.List{System.Object})">
            <summary>
            从数据源进行刷新多条数据并且保存数据
            </summary>
            <param name="pkIdList">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache.RefreshCurrentFromStore(System.Object)">
            <summary>
            从仓储数据源[一般暂时是Redis]刷新数据到本地缓存
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache.RefreshCurrentFromStore(System.Collections.Generic.List{System.Object})">
            <summary>
            从仓储数据源[一般暂时是Redis]刷新数据到本地缓存
            </summary>
            <param name="pkIdList">主键列表</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache.RefreshStoreFromSource(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            按条件刷新缓存
            </summary>
            <param name="filters">刷新条件</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache.PkId(System.Object)">
            <summary>
            取得主键的值
            </summary>
            <param name="entity">实体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache.StoreSave">
            <summary>
            手动向Store保存之前的变更 
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache.StoreRemove(System.Object)">
            <summary>
            从Store中移除对应的项目
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache.StoreRemoveWithOutSave(System.Object)">
            <summary>
            从Store中移除对应的项目(不自动保存)
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache.StoreRemoveAll">
            <summary>
            从Store中移除所有项目
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache.StoreAppend(System.Object)">
            <summary>
            向Store中更新数据
            </summary>
            <param name="entity">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache.StoreAppend(System.Collections.IList)">
            <summary>
            向Store中更新数据
            </summary>
            <param name="entitys">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache.StoreAppendWithOutSave(System.Object)">
            <summary>
            向Store中更新数据(不自动保存)
            </summary>
            <param name="entity">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache.StoreAppendWithOutSave(System.Collections.IList)">
            <summary>
            向Store中更新数据(不自动保存)
            </summary>
            <param name="entitys">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache.Contains(System.Object)">
            <summary>
            判断当前仓储中是否包括指定主键的缓存
            </summary>
            <param name="entityKey">指定主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache.RefreshStoreByUpdateTime">
            <summary>
            通过最后更新时间刷新Store
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache.GetConnectionString">
            <summary>
            取得当前数据连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache.GetTableName">
            <summary>
            取得当前操作的表名
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Cache.StoreCache.IStoreCache`1">
            <summary>
            缓存使用的接口
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.IStoreCache`1.OnAfterEntityInsert">
            <summary>
            插入缓存后操作
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.IStoreCache`1.OnAfterEntityUpdate">
            <summary>
            更新缓存后操作
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.IStoreCache`1.OnAfterEntityDelete">
            <summary>
            删除缓存后操作
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Cache.StoreCache.IStoreCache`1.OnAfterStoreEntityInit">
            <summary>
            仓储实体初始化之后运行
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache`1.GetListBySource(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            通过数据源取得列表
            </summary>
            <param name="filters"></param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache`1.GetEntityBySource(System.Object)">
            <summary>
            通过数据源取得单条数据
            </summary>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache`1.GetEntityBySource(System.Collections.Generic.List{System.Object})">
            <summary>
            通过数据源取得多条数据
            </summary>
            <param name="pkIdList">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache`1.PkId(`0)">
            <summary>
            取得主键的值
            </summary>
            <param name="entity">实体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache`1.StoreAppend(`0)">
            <summary>
            向Store中更新数据
            </summary>
            <param name="entity">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache`1.StoreAppend(System.Collections.Generic.List{`0})">
            <summary>
            向Store中更新数据
            </summary>
            <param name="entitys">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache`1.StoreAppendWithOutSave(`0)">
            <summary>
            向Store中更新数据(不自动保存)
            </summary>
            <param name="entity">实体</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.StoreCache.IStoreCache`1.StoreAppendWithOutSave(System.Collections.Generic.List{`0})">
            <summary>
            向Store中更新数据(不自动保存)
            </summary>
            <param name="entitys">实体</param>
        </member>
        <member name="T:MangoMis.Frame.Cache.UpgradeInfo.RedisDataLogControl">
            <summary>
            使用Redis的数据的操作提交
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.UpgradeInfo.RedisDataLogControl.RedisCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.UpgradeInfo.RedisDataLogControl.ApiUrl">
            <summary>
            当前使用的地址
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.UpgradeInfo.UpgradeEntity">
            <summary>
            缓存更新统计
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.UpgradeInfo.UpgradeEntity.LastRefreshFilterTime">
            <summary>
            上次更新时查询的时间范围
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.UpgradeInfo.UpgradeEntity.RefreshFilterTime">
            <summary>
            上次整体更新时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.UpgradeInfo.UpgradeEntity.Key">
            <summary>
            更新的缓存键(唯一)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.UpgradeInfo.UpgradeEntity.LoadFromStoreTimes">
            <summary>
            读取持久化缓存次数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.UpgradeInfo.UpgradeEntity.LastLoadFromStore">
            <summary>
            上次读取持久化缓存时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.UpgradeInfo.UpgradeEntity.SaveTimes">
            <summary>
            持久化缓存次数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.UpgradeInfo.UpgradeEntity.LastSaveTime">
            <summary>
            上次持久化缓存时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.UpgradeInfo.UpgradeEntity.UpdateTimesByOther">
            <summary>
            接受提交更新次数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.UpgradeInfo.UpgradeEntity.LastUpdateByOther">
            <summary>
            上次接受提交更新时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.UpgradeInfo.UpgradeEntity.UpdateTimesByInitLoader">
            <summary>
            整体更新次数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.UpgradeInfo.UpgradeEntity.LastUpdateByInitLoader">
            <summary>
            上次整体更新时间
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.UpgradeInfo.LockInitBuilder`1">
            <summary>
            锁定初始化建立
            </summary>
            <typeparam name="MT"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.Cache.UpgradeInfo.LockInitBuilder`1.#ctor(System.String,System.Func{`0})">
            <summary>
            锁定初始化建立
            </summary>
            <param name="title">标题</param>
            <param name="init">初始化函数</param>
        </member>
        <member name="P:MangoMis.Frame.Cache.UpgradeInfo.LockInitBuilder`1.Entity">
            <summary>
            取得对应的实体
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.UpgradeInfo.StoreUpgradeLog">
            <summary>
            更新使用的仓储
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.UpgradeInfo.StoreUpgradeLog.StoreName">
            <summary>
            当前仓储名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.UpgradeInfo.StoreUpgradeLog.GetUpgradeInfo(System.String)">
            <summary>
            取得缓存更新信息
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.UpgradeInfo.StoreUpgradeLog.UpdateCacheByInit(System.String)">
            <summary>
            通过初始化整体更新缓存
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.UpgradeInfo.StoreUpgradeLog.UpdateCacheByOther(System.String)">
            <summary>
            通过单条或其它站点调用更新缓存
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.UpgradeInfo.StoreUpgradeLog.SaveCache(System.String)">
            <summary>
            通过单条或其它站点调用更新缓存
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.UpgradeInfo.StoreUpgradeLog.SetRefreshCahceTime(System.String,System.DateTime)">
            <summary>
            设置上次整体更新时间
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
            <param name="filterTime">用于做条件的时间</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.UpgradeInfo.StoreUpgradeLog.SetCahceFilterTime(System.String,System.DateTime)">
            <summary>
            通过单条或其它站点调用更新缓存
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
            <param name="filterTime">用于做条件的时间</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.ServiceGetterParam`1.Dispose">
            <summary>
            执行与释放或重置非托管资源相关的应用程序定义的任务。
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.CacheOfServiceGetter">
            <summary>
            内部使用的WCF缓存的函数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheOfServiceGetter.Dispose">
            <summary>
            执行与释放或重置非托管资源相关的应用程序定义的任务。
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheOfServiceGetter.TryGetMainWcfDataByGetStatus(System.Func{System.Int32,System.Int32,System.Object},System.Action{System.Collections.IList,System.Int32},System.Int32,System.Int32@)">
            <summary>
            尝试取得主实体的数据
            </summary>
            <param name="wcfAction">运行WCF的方法</param>
            <param name="operateByRetList">对于数据的操作</param>
            <param name="pageSize">分页数据</param>
            <param name="wcfNumber">运行WCF次数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.CacheOfServiceGetter.TryGetSlaveWcfDataByGetStatus``1(System.Collections.Generic.List{System.Object},System.Collections.Generic.IDictionary{System.String,System.Collections.Concurrent.ConcurrentDictionary{System.String,System.Reflection.PropertyInfo}},System.Collections.Generic.IDictionary{System.String,System.Collections.Concurrent.ConcurrentDictionary{System.String,System.Reflection.PropertyInfo}},System.Collections.IList,System.String,System.Func{System.Object,System.Collections.Generic.List{System.Object},System.Object},System.Int32,System.Func{System.Object,System.Type},System.Action{``0,System.Object},System.Int32@)">
            <summary>
            试图取得WCF缓存从实体的数据
            </summary>
            <typeparam name="T">要返回的实体类型</typeparam>
            <param name="idList">要取得的ID列表</param>
            <param name="mulitiPropertyInfo">设置属性的属性列表</param>
            <param name="mulitiMapPropertyInfo"></param>
            <param name="wcfKeyList">WCF实例的索引</param>
            <param name="lowerPkid">小写主键名</param>
            <param name="wcfAction">运行WCF的委托</param>
            <param name="pageSize">分页取数据的数量</param>
            <param name="wcfTypeAction">取得运行的WCF的类型</param>
            <param name="setPkIdAction">设置主键的函数</param>
            <param name="wcfNumber">运行WCF次数</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Cache.UdpOperate">
            <summary>
            UDPCache操作
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.UdpOperate.PostSiteCache(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            提交统一使用的缓存[Redis]
            </summary>
            <param name="cacheKey">缓存索引</param>
            <param name="redisPath">Redis路径</param>
            <param name="redisDbBefore">Redis的数据库前缀</param>
            <param name="fullType">类型全名</param>
            <param name="redisPort">Redis端口号</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.UdpOperate.PostCacheUpdate(System.String,System.Object)">
            <summary>
            提交站点缓存更新
            </summary>
            <param name="fullType"></param>
            <param name="pkId"></param>
        </member>
        <member name="T:MangoMis.Frame.Cache.WithCacheUpdateApi">
            <summary>
            缓存使用更新所使用的API
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.WithCacheUpdateApi.ApplicationCacheApiUrl">
            <summary>
            提交至应用程序的网址
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.WithCacheUpdateApi.CacheKeyCacheEntityKeyMapping">
            <summary>
            当前使用的缓存与实体之间的映射关系
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.WithCacheUpdateApi.AppendMappingWcfFullNameCacheKey(System.String,System.String)">
            <summary>
            添加一个WCF完整名称与缓存名的映射[用于调用时使用]
            </summary>
            <param name="wcfEntityFullKey"></param>
            <param name="cacheKey"></param>
        </member>
        <member name="M:MangoMis.Frame.Cache.WithCacheUpdateApi.AppendMappingCacheKeyAndCacheEntityKey(System.String,System.String)">
            <summary>
            添加一个缓存名与缓存实例名的映射[老缓存中缓存名不等于调用缓存的名]
            </summary>
            <param name="cacheKey"></param>
            <param name="cacheEntityKey"></param>
        </member>
        <member name="M:MangoMis.Frame.Cache.WithCacheUpdateApi.PostSingleRedis(System.Type,System.String,System.String)">
            <summary>
            提交单独的Redis
            </summary>
            <param name="currentType">当前缓存类型</param>
            <param name="cacheKey">缓存索引</param>
            <param name="pkId">主键</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.WithCacheUpdateApi.RefreshCacheByMt``1(System.Object)">
            <summary>
            刷新使用的缓存
            </summary>
            <param name="primaryKey">刷新主键</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Cache.Cache_Data_Load_Filter">
            <summary>
            读取缓存数据的时候的查询条件组
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Cache_Data_Load_Filter.lasttime">
            <summary>
            使用最后更新日期进行查询
            </summary>
            <value>The lasttime.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Cache.DataStore.DataStoreCollection">
            <summary>
            数据源数据存储器(非缓存)
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.DataStore.FileDataStore`2">
            <summary>
            文件持久化数据
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.FileDataStore`2.#ctor(System.String,System.String,MangoMis.Frame.Cache.DataStore.DataStore_GetEntityKey{`0,`1},System.Type,System.Reflection.PropertyInfo[])">
            <summary>
            使用缓存文件,及版本号文件做为参数
            </summary>
            <param name="source_path"></param>
            <param name="version_path"></param>
            <param name="mType"></param>
            <param name="mtInfos"></param>
            <param name="entity_getkey"></param>
        </member>
        <member name="P:MangoMis.Frame.Cache.DataStore.FileDataStore`2.last_get_time">
            <summary>
            最后一次存储数据时间(由外部赋值.内部只做接口使用.不做处理)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.DataStore.FileDataStore`2.Is_Load_Success">
            <summary>
            是否已经读取完成(由外部运行SetSuccess赋值,如果内容EntitysDictionary/Entitys为NULL,自动变为False)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.FileDataStore`2.Exists">
            <summary>
            判断当前Store是否存在
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Cache.DataStore.FileDataStore`2.EntitysDictionary">
            <summary>
            字典实体列表
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.DataStore.FileDataStore`2.Entitys">
            <summary>
            实体列表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.FileDataStore`2.EntityKey(`0)">
            <summary>
            取得实体的索引
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.FileDataStore`2.SaveList">
            <summary>
            存储数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.FileDataStore`2.UpdateList(System.Collections.Generic.List{`0})">
            <summary>
            更新持久化缓存中的数据
            </summary>
            <param name="entitys"></param>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.FileDataStore`2.LoadList">
            <summary>
            读取数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.FileDataStore`2.DeleteAndClearData">
            <summary>
            清空数据并删除数据文件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.FileDataStore`2.BakDataFile(System.String@)">
            <summary>
            备份数据文件
            </summary>
            <param name="bac_file_path"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.FileDataStore`2.ClearData">
            <summary>
            清空数据
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.FileDataStore`2.DataFileInfo">
            <summary>
            得到数据文件的文件信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Cache.DataStore.KeyValueStore_Item">
            <summary>
            存储项 用于存储于键值对的存储器中
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.KeyValueStore_Item.#ctor(System.String,System.String)">
            <summary>
            通过Key和Value实例化存储项
            </summary>
            <param name="_key">索引</param>
            <param name="_value">值</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.KeyValueStore_Item.#ctor">
            <summary>
            直接初始化存储项
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.DataStore.KeyValueStore_Item.key">
            <summary>
            索引
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.DataStore.KeyValueStore_Item.value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.DataStore.KeyValueStore">
            <summary>
            文件格式的键值存储器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.KeyValueStore.#ctor(System.String)">
            <summary>
            文件格式的键值存储器
            </summary>
            <param name="file_path">文件路径</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.KeyValueStore.Exists">
            <summary>
            判断当前Store是否存在
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Cache.DataStore.KeyValueStore.EntitysDictionary">
            <summary>
            字典实体列表(此类型中不使用此实例)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.DataStore.KeyValueStore.Entitys">
            <summary>
            实体列表
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.DataStore.KeyValueStore.Is_Load_Success">
            <summary>
            是否已经读取完成(由外部运行SetSuccess赋值,如果内容EntitysDictionary/Entitys为NULL,自动变为False)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.DataStore.KeyValueStore.last_get_time">
            <summary>
            最后一次存储数据时间(由外部赋值.内部只做接口使用.不做处理)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.KeyValueStore.LoadList">
            <summary>
            读取数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.KeyValueStore.SaveList">
            <summary>
            存储数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.KeyValueStore.UpdateList(System.Collections.Generic.List{MangoMis.Frame.Cache.DataStore.KeyValueStore_Item})">
            <summary>
            更新持久化缓存中的数据
            </summary>
            <param name="entitys"></param>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.KeyValueStore.DataFileInfo">
            <summary>
            得到数据文件的文件信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.KeyValueStore.ClearData">
            <summary>
            清空数据
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.KeyValueStore.DeleteAndClearData">
            <summary>
            清空数据并删除数据文件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.KeyValueStore.BakDataFile(System.String@)">
            <summary>
            备份数据文件
            </summary>
            <param name="bac_file_path"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.KeyValueStore.EntityKey(MangoMis.Frame.Cache.DataStore.KeyValueStore_Item)">
            <summary>
            取得实体的索引
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Cache.DataStore.SqlServerDataStore`2">
            <summary>
            Access持久化数据(可以无索引,但是GetID要返回-1)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.SqlServerDataStore`2.#ctor(System.String,MangoMis.Frame.Cache.DataStore.DataStore_GetEntityKey{`0,`1},System.String,System.Type,System.Reflection.PropertyInfo[])">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.SqlServerDataStore`2.#ctor(System.String,MangoMis.Frame.Cache.DataStore.DataStore_GetEntityKey{`0,`1},System.String,System.Type,System.Reflection.PropertyInfo[],System.String)">
            <summary>
            带表名初始化Access存储器,以此方式初始化.没有版本索引器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.SqlServerDataStore`2.Exists">
            <summary>
            判断当前Store是否存在
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Cache.DataStore.SqlServerDataStore`2.EntitysDictionary">
            <summary>
            字典实体列表
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.DataStore.SqlServerDataStore`2.Entitys">
            <summary>
            实体列表
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.DataStore.SqlServerDataStore`2.Is_Load_Success">
            <summary>
            是否已经读取完成(由外部运行SetSuccess赋值,如果内容EntitysDictionary/Entitys为NULL,自动变为False)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.DataStore.SqlServerDataStore`2.last_get_time">
            <summary>
            最后一次存储数据时间(由外部赋值.内部只做接口使用.不做处理)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.SqlServerDataStore`2.LoadList">
            <summary>
            读取数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.SqlServerDataStore`2.SaveList">
            <summary>
            存储数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.SqlServerDataStore`2.UpdateList(System.Collections.Generic.List{`0})">
            <summary>
            更新持久化缓存中的数据
            </summary>
            <param name="entitys"></param>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.SqlServerDataStore`2.DataFileInfo">
            <summary>
            得到数据文件的文件信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.SqlServerDataStore`2.ClearData">
            <summary>
            清空数据
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.SqlServerDataStore`2.DeleteAndClearData">
            <summary>
            清空数据并删除数据文件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.SqlServerDataStore`2.BakDataFile(System.String@)">
            <summary>
            备份数据文件
            </summary>
            <param name="bac_file_path"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.SqlServerDataStore`2.EntityKey(`0)">
            <summary>
            取得实体的索引(如果返回值-1.代表此实例无索引)
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Cache.DataStore.StoreManager">
            <summary>
                当前使用的存储器管理
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.DataStore.StoreManager.AccessStoreExt">
            <summary>
                扩展名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.DataStore.StoreManager.KeyvalueStoreExt">
            <summary>
                扩展名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.DataStore.StoreManager.StoreType">
            <summary>
                1 文件  2 Access 3 Sqlserver
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.StoreManager.MemoryCacheStore``1(System.String,System.String,MangoMis.Frame.Cache.DataStore.DataStore_GetEntityKey{``0,System.Int32},System.String)">
            <summary>
                内存缓存存储器
            </summary>
            <typeparam name="T">内存列表类型</typeparam>
            <param name="file_path">文件路径 </param>
            <param name="file_Name">文件名</param>
            <param name="entity_getkey">取得主键的委托</param>
            <param name="_pkid">主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.StoreManager.KeyValueCacheStore_For_ChangeStore(System.String,System.String)">
            <summary>
                配置缓存存储器(存储器切换时的原存储器)
            </summary>
            <param name="file_path">文件路径 </param>
            <param name="file_Name">文件名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.StoreManager.KeyValueCacheStore(System.String,System.String)">
            <summary>
                配置缓存存储器
            </summary>
            <param name="file_path">文件路径 </param>
            <param name="file_Name">文件名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.StoreManager.TableCacheStore``2(System.String,System.String,System.String,System.String,MangoMis.Frame.Cache.DataStore.DataStore_GetEntityKey{``0,``1})">
            <summary>
                在同一存储器中存储多张表
            </summary>
            <param name="file_path">文件路径 </param>
            <param name="file_Name">文件名</param>
            <param name="pk_id">主键</param>
            <param name="tablename">表名</param>
            <param name="entity_getkey">主键取得</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Cache.DataStore.DataStore_GetEntityKey`2">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <typeparam name="MT"></typeparam>
            <typeparam name="KeyMT"></typeparam>
        </member>
        <member name="T:MangoMis.Frame.Cache.DataStore.IDataStore`2">
            <summary>
            用于持久化数据的处理接口,类型不会自动存取数据.由外部调用存取
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.IDataStore`2.Exists">
            <summary>
            判断当前Store是否存在
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Cache.DataStore.IDataStore`2.EntitysDictionary">
            <summary>
            字典实体列表
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.DataStore.IDataStore`2.Entitys">
            <summary>
            实体列表
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.DataStore.IDataStore`2.Is_Load_Success">
            <summary>
            是否已经读取完成(由外部运行SetSuccess赋值,如果内容EntitysDictionary/Entitys为NULL,自动变为False)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.DataStore.IDataStore`2.last_get_time">
            <summary>
            最后一次存储数据时间(由外部赋值.内部只做接口使用.不做处理)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.IDataStore`2.LoadList">
            <summary>
            读取数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.IDataStore`2.SaveList">
            <summary>
            存储数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.IDataStore`2.UpdateList(System.Collections.Generic.List{`0})">
            <summary>
            更新持久化缓存中的数据
            </summary>
            <param name="entitys"></param>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.IDataStore`2.DataFileInfo">
            <summary>
            得到数据文件的文件信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.IDataStore`2.ClearData">
            <summary>
            清空数据
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.IDataStore`2.DeleteAndClearData">
            <summary>
            清空数据并删除数据文件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.IDataStore`2.BakDataFile(System.String@)">
            <summary>
            备份数据文件
            </summary>
            <param name="bac_file_path"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.DataStore.IDataStore`2.EntityKey(`0)">
            <summary>
            取得实体的索引
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Cache.IOld_Site_Cache_Inteface">
            <summary>
            为了兼容老版本的SiteCache的接口
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.IOld_Site_Cache_Inteface.ObjVistor">
            <summary>
            当前数据类型OBJ
            </summary>
            <value>The object vistor.</value>
        </member>
        <member name="M:MangoMis.Frame.Cache.IOld_Site_Cache_Inteface.DeleteAndClear">
            <summary>
            清空本地缓存
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.IOld_Site_Cache_Inteface.ReloadFromWcfByIds(System.Collections.Generic.List{System.Int32})">
            <summary>
            从WCF重读取数据
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.IOld_Site_Cache_Inteface.ReloadByIdsNoUpdata(System.Collections.Generic.List{System.Int32})">
            <summary>
            从WCF重读取数据
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.IOld_Site_Cache_Inteface.GetFileInfo">
            <summary>
            取得文件信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.IOld_Site_Cache_Inteface.Write">
            <summary>
            写入本地缓存
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.IOld_Site_Cache_Inteface.GetObjectFromCache(System.Collections.Generic.List{System.Int32})">
            <summary>
            从缓存中取数据
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="T:MangoMis.Frame.Cache.ISite_Cache_Inteface">
            <summary>
            站点缓存使用的接口
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.ISite_Cache_Inteface.MT_Type">
            <summary>
            实体类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.ISite_Cache_Inteface.DataVistors">
            <summary>
            取数据使用的数据接口(ModelType,接口)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.ISite_Cache_Inteface.EntityDictionary">
            <summary>
            缓存内容实体
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.ISite_Cache_Inteface.Entitys">
            <summary>
            缓存内容实体
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.ISite_Cache_Inteface.Current_Config">
            <summary>
            缓存所使用的配置项目
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.ISite_Cache_Inteface.Refresh_ErrorInit">
            <summary>
            重置错误的初始化
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.ISite_Cache_Inteface.Is_Inited">
            <summary>
            是否已经加载.为了判断当前缓存是否可用
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.ISite_Cache_Inteface.Is_Initing">
            <summary>
            是否正在初始化.为了保证不重复初始化
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.ISite_Cache_Inteface.Is_Refreshing">
            <summary>
            是否正在刷新,为了保持不重复加载数据
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.ISite_Cache_Inteface.Last_Refresh_Time">
            <summary>
            上次更新时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.ISite_Cache_Inteface.Loading_Step">
            <summary>
            加载的步骤.用于显示当前读取到哪步
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.ISite_Cache_Inteface.Loading_Memo">
            <summary>
            加载步骤的描述.用于显示当前读取的情况
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.ISite_Cache_Inteface.Delete_Cache_File">
            <summary>
            删除缓存数据文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.ISite_Cache_Inteface.Write_Cache_File">
            <summary>
            将当前内存中的缓存内容写入的缓存文件中
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.ISite_Cache_Inteface.Read_Cache_File(System.DateTime@)">
            <summary>
            读取缓存内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.ISite_Cache_Inteface.Get_Cache_FileInfo">
            <summary>
            取得缓存文件信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.ISite_Cache_Inteface.Init_Current">
            <summary>
            初始化缓存
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.ISite_Cache_Inteface.Clear_Site_Cache">
            <summary>
            清除内存中的缓存内容(然后加载时会进行重新初始化的步骤)
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.ISite_Cache_Inteface.Delete_And_Clear">
            <summary>
            清除内存中的缓存内容并删除缓存数据文件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.ISite_Cache_Inteface.Log_Paths">
            <summary>
            取得日志的URL
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.ISite_Cache_Inteface.Entity_ID(System.Object)">
            <summary>
            取得编号
            </summary>
            <param name="entity">实体</param>
            <returns>实体</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.ISite_Cache_Inteface.Update_Cache_Entity(System.Object)">
            <summary>
            手动更新本站缓存
            </summary>
            <param name="entity">实体</param>
            <returns>实体</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.ISite_Cache_Inteface.Update_Cache_Entitys(System.Collections.IList)">
            <summary>
            手动更新本站缓存
            </summary>
            <param name="entitys">实体</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.ISite_Cache_Inteface.Get_Entity_From_Cache(System.Object)">
            <summary>
            从缓存中取得实体数据
            </summary>
            <param name="id">主键</param>
            <returns>实体</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.ISite_Cache_Inteface.Get_Entitys_From_Cache(System.Collections.IList)">
            <summary>
            从缓存中取得实体数据列表
            </summary>
            <param name="ids">主键列表</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.ISite_Cache_Inteface.Get_Entitys_From_Cache_With_Empty_Vistor(System.Collections.IList)">
            <summary>
            从缓存中取得数据.如果没有此数据则从接口更新
            </summary>
            <param name="ids">主键列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.ISite_Cache_Inteface.Get_Entity_From_Cache_With_Empty_Vistor(System.Int32)">
            <summary>
            从缓存中取得数据.如果没有此数据则从接口更新
            </summary>
            <param name="id">主键</param>
            <returns>实体</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.ISite_Cache_Inteface.Where(System.Int32@,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            查询列表
            </summary>
            <param name="count"></param>
            <param name="current"></param>
            <param name="size"></param>
            <param name="filters"></param>
            <param name="orders"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.ISite_Cache_Inteface.Get_Entity_From_Vistor(System.Object,System.Type)">
            <summary>
            从数据接口中取得实体数据
            </summary>
            <param name="id">主键</param>
            <param name="get_type">取得类型.默认是主要类型</param>
            <returns>实体</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.ISite_Cache_Inteface.Get_Entitys_From_Vistor(System.Collections.IList,System.Type)">
            <summary>
            从数据接口中取得实体数据列表
            </summary>
            <param name="ids">主键列表</param>
            <param name="get_type">取得类型.默认是主要类型</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.ISite_Cache_Inteface.Refresh_CacheEntity_From_Vistor(System.Object)">
            <summary>
            从数据接口取得数据实体更新缓存
            </summary>
            <param name="id">主键</param>
            <returns>更新是否成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.ISite_Cache_Inteface.Refresh_CacheEntitys_From_Vistor(System.Collections.IList)">
            <summary>
            从数据接口取得数据实体列表更新缓存
            </summary>
            <param name="ids">主键列表</param>
            <returns>更新条目数</returns>
        </member>
        <member name="T:MangoMis.Frame.Cache.vistor_Client_Builder">
            <summary>
            建立出数据实例的代理
            </summary>
            <param name="pagne_name"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Cache.Load_Vistor_Container">
            <summary>
            数据读取的相关实例的容器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.Load_Vistor_Container.#ctor(MangoMis.Frame.Cache.vistor_Client_Builder,System.Type,System.String)">
            <summary>
            使用建立数据实例的代理和页面(说明)名,初始化一个数据实例的容器
            </summary>
            <param name="builder"></param>
            <param name="model_type">数据类型</param>
            <param name="page_name"></param>
        </member>
        <member name="F:MangoMis.Frame.Cache.Load_Vistor_Container._client_Builder">
            <summary>
            建立事件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Load_Vistor_Container.Vistor_Type">
            <summary>
            本vistor 的类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Load_Vistor_Container.Model_Type">
            <summary>
            本Model 的类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Load_Vistor_Container.Vistor">
            <summary>
            本Vistor的实例
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.Load_Vistor_Container.Run(System.String,System.Object[])">
            <summary>
            运行相关的函数
            </summary>
            <param name="action">函数事件名</param>
            <param name="args">函数参数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Load_Vistor_Container.GetResultData(System.Object)">
            <summary>
            取得返回值中的Data
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Load_Vistor_Container.GetModel(System.Int32)">
            <summary>
            取得列表(DefaultResult  List MT )
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Load_Vistor_Container.GetList(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得列表(DefaultResult  List MT )
            </summary>
            <param name="page"></param>
            <param name="page_size"></param>
            <param name="filter"></param>
            <param name="orders"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Load_Vistor_Container.GetIds(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得ID列表
            </summary>
            <param name="page"></param>
            <param name="page_size"></param>
            <param name="filter"></param>
            <param name="orders"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Load_Vistor_Container.GetCount(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得总条目数
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Cache.Site_Cache_Config">
            <summary>
            站点缓存的配置项目
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.Site_Cache_Config.param_model">
            <summary>
            
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.Site_Cache_Config.param_model._value">
            <summary>
            当前存储的值
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.Site_Cache_Config.param_model.Is_Defalut">
            <summary>
            是否默认值
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.Site_Cache_Config.param_bool">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Config.param_bool.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Config.param_bool.#ctor(System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="_v"></param>
            <param name="is_default"></param>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Config.param_bool.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.Site_Cache_Config.param_string">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Config.param_string.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Config.param_string.#ctor(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="_v"></param>
            <param name="is_default"></param>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Config.param_string.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.Site_Cache_Config.param_int">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Config.param_int.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Config.param_int.#ctor(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="_v"></param>
            <param name="is_default"></param>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Config.param_int.Value">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Config.SiteCacheDefaultConfigPath">
            <summary>
            此缓存的基础目录
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.Site_Cache_Config._siteCacheDefaultConfig">
            <summary>
            站点缓存默认配置
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Config.Site_Cache_Default_Config">
            <summary>
            站点缓存默认配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Config.#ctor">
            <summary>
            初始化空白的站点缓存配置项目
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Config.#ctor(System.String)">
            <summary>
            初始化空白的站点缓存配置项目
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Config.#ctor(System.String,MangoMis.Frame.Cache.Site_Cache_Config)">
            <summary>
            初始化站点缓存配置项目
            </summary>
            <param name="dir_path">配置保存目录</param>
            <param name="default_config">基础默认值</param>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Config.EnName">
            <summary>
            获取或设置缓存保存时用的中文名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Config.CnName">
            <summary>
            获取或设置缓存显示用的中文名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Config.Filter_Column_Name">
            <summary>
            用于默认检索(更新时取最新记录)的字段暂时只支持大于这个字段
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.Site_Cache_Config._Is_Open">
            <summary>
            指示此缓存是否开启
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Config.Is_Open">
            <summary>
            指示此缓存是否开启
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.Site_Cache_Config._Is_Open_Data">
            <summary>
            指示此缓存是否开始持久化
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Config.Is_Open_Data">
            <summary>
            指示此缓存是否开始持久化
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Config.Is_Many_Entity">
            <summary>
            指示此缓存是否是由多个实体拼接而成
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.Site_Cache_Config._Is_Auto_Load">
            <summary>
            指示此缓存是否在站点启动时自动加载,True则在站点启动时自动实例化此缓存,False则在使用到此缓存时实例化此缓存
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Config.Is_Auto_Load">
            <summary>
            指示此缓存是否在站点启动时自动加载,True则在站点启动时自动实例化此缓存,False则在使用到此缓存时实例化此缓存
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.Site_Cache_Config._Refresh_Cache_Span">
            <summary>
            重新检查更新缓存的时间间隔(0则从不检查更新)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Config.Refresh_Cache_Span">
            <summary>
            重新检查更新缓存的时间间隔(0则从不检查更新)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.Site_Cache_Config._Save_Data_Span">
            <summary>
            指定此缓存进行持久化的时间间隔(0则每次重新检查更新后进行持久化)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Config.Save_Data_Span">
            <summary>
            指定此缓存进行持久化的时间间隔(0则每次重新检查更新后进行持久化)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Config.Pk_Id_Column">
            <summary>
            缓存实体使用的主键名(多个实体时此字段关联相关的表)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Config.Primary_Entity_Type">
            <summary>
            多表时使用,主要取得数据的基准表.其它表通过此表取得的ID来获取.如果不指定.则使用第一个类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Config.Save">
            <summary>
            保存配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Config.Read">
            <summary>
            读取配置
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.Site_Cache_Refresh_Data_Callback`1">
            <summary>
            缓存运行中的架设事件
            </summary>
            <typeparam name="MT"></typeparam>
            <param name="new_data"></param>
        </member>
        <member name="T:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1">
            <summary>
            站点的缓存
            </summary>
            <typeparam name="MT"></typeparam>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.MT_Type">
            <summary>
            缓存的实体类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.MT_PropertyInfos">
            <summary>
            缓存的实体类型的属性
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.#ctor(System.Collections.Generic.Dictionary{System.Type,MangoMis.Frame.Cache.Load_Vistor_Container},MangoMis.Frame.Cache.Site_Cache_Config)">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.GetFileInfo">
            <summary>
            取得文件信息
            </summary>
            <returns>FileInfo.</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.remove_file">
            <summary>
            移除本地缓存文件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.DataVistors">
            <summary>
            取数据使用的数据接口(ModelName,接口)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Current_Config">
            <summary>
            缓存所使用的配置项目
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Is_Initing">
            <summary>
            是否正在初始化
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Is_Refreshing">
            <summary>
            是否正在刷新
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Last_Refresh_Time">
            <summary>
            上次更新时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Loading_Step">
            <summary>
            加载的步骤.用于显示当前读取到哪步
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Loading_Memo">
            <summary>
            加载步骤的描述.用于显示当前读取的情况
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.current_path">
            <summary>
            此缓存的基础目录
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.current_config_path">
            <summary>
            配置文件路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.log_path">
            <summary>
            此缓存的日志存放目录
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.data_path">
            <summary>
            此缓存数据存放目录
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.now_log_filepath">
            <summary>
            此缓存当前日志文件名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.last_log_time">
            <summary>
            日志添加时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.begin_log_time">
            <summary>
            日志开始时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.log_text_index">
            <summary>
            当前是第几条日志
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.start_load_log">
            <summary>
            开始一个读取日志
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.add_log_log(System.String)">
            <summary>
            添加读取日志记录
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.end_load_log">
            <summary>
            结束并写入读取日志记录
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.append_log_string(System.String)">
            <summary>
            添加日志记录文本
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.current_log(System.String,System.Exception)">
            <summary>
            记录本地日志
            </summary>
            <param name="log_txt">日志信息</param>
            <param name="ex">错误信息</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.write_run_Log(System.String)">
            <summary>
            写入运行日志 
            </summary>
            <param name="log_text"></param>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.write_catch_log(System.String,System.Exception)">
            <summary>
            写入错误日志
            </summary>
            <param name="txt"></param>
            <param name="ex"></param>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.EntityDictionary">
            <summary>
            缓存内容实体
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Entitys">
            <summary>
            缓存内容实体
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Current_List">
            <summary>
            本地缓存内容
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Current_Data">
            <summary>
            本地缓存内容
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.current_Timer_Id">
            <summary>
            当前缓存使用的计时器编号
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Refresh_ErrorInit">
            <summary>
            重新初始化错.用以再次初始化
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Is_Inited">
            <summary>
            是否已经初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.get_Id(System.Object)">
            <summary>
            取得实体中的主键
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.get_Vistor_Container(System.Type)">
            <summary>
            取得对应的容器
            </summary>
            <param name="get_type"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Init_Current">
            <summary>
            初始化缓存
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.refresh_Entitys(MangoMis.Frame.Cache.Cache_Data_Load_Filter,MangoMis.Frame.Cache.Site_Cache_Refresh_Data_Callback{`0})">
            <summary>
            更新当前的缓存
            </summary>
            <param name="filter">调用更新的条件</param>
            <param name="callback">取得值之后的回调函数</param>
        </member>
        <member name="P:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Item(System.Int32)">
            <summary>
            从缓存中取得实例对象
            </summary>
            <param name="id">主键编号</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Delete_Cache_File">
            <summary>
            删除缓存数据文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Write_Cache_File">
            <summary>
            将当前内存中的缓存内容写入的缓存文件中
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Write_Cache_File_By_Data(System.Collections.Generic.List{`0},System.DateTime)">
            <summary>
            将当前内存中的缓存内容写入的缓存文件中
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Read_Cache_File(System.DateTime@)">
            <summary>
            读取缓存内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Get_Cache_FileInfo">
            <summary>
            取得缓存文件信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Clear_Site_Cache">
            <summary>
            清除内存中的缓存内容(然后加载时会进行重新初始化的步骤)
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Delete_And_Clear">
            <summary>
            清除内存中的缓存内容并删除缓存数据文件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Log_Paths">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Entity_ID(System.Object)">
            <summary>
            取得编号
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Update_Cache_Entity(System.Object)">
            <summary>
            手动更新本站缓存
            </summary>
            <param name="entity">实体</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Update_Cache_Entitys(System.Collections.IList)">
            <summary>
            手动更新本站缓存
            </summary>
            <param name="entitys">实体</param>
            <returns>更新条目录数</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Get_Entity_From_Cache(System.Object)">
            <summary>
            从缓存中取得实体数据
            </summary>
            <param name="id">主键</param>
            <returns>实体</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Get_Entitys_From_Cache(System.Collections.IList)">
            <summary>
            从缓存中取得实体数据列表
            </summary>
            <param name="ids">主键列表</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Get_Entitys_From_Cache_With_Empty_Vistor(System.Collections.IList)">
            <summary>
            从缓存中取得数据.如果没有此数据则从接口更新
            </summary>
            <param name="ids">主键列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Get_Entity_From_Cache_With_Empty_Vistor(System.Int32)">
            <summary>
            从缓存中取得数据.如果没有此数据则从接口更新
            </summary>
            <param name="id">主键</param>
            <returns>实体</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.C_Get_Entitys_From_Cache_With_Empty_Vistor(System.Collections.Generic.List{System.Int32})">
            <summary>
            从缓存中取得数据.如果没有此数据则从接口更新
            </summary>
            <param name="ids">主键列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.C_Get_Entity_From_Cache_With_Empty_Vistor(System.Int32)">
            <summary>
            从缓存中取得数据.如果没有此数据则从接口更新
            </summary>
            <param name="id">主键</param>
            <returns>实体</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Get_Entity_From_Vistor(System.Object,System.Type)">
            <summary>
            从数据接口中取得实体数据
            </summary>
            <param name="id">主键</param>
            <param name="get_type">取得类型.默认是主要类型</param>
            <returns>实体</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Get_Entitys_From_Vistor(System.Collections.IList,System.Type)">
            <summary>
            从数据接口中取得实体数据列表
            </summary>
            <param name="ids">主键列表</param>
            <param name="get_type">取得类型.默认是主要类型</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Refresh_CacheEntity_From_Vistor(System.Object)">
            <summary>
            从数据接口取得数据实体更新缓存
            </summary>
            <param name="id">主键</param>
            <returns>更新是否成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Refresh_CacheEntitys_From_Vistor(System.Collections.IList)">
            <summary>
            从数据接口取得数据实体列表更新缓存
            </summary>
            <param name="ids">主键列表</param>
            <returns>更新条目数</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.C_Update_Cache_Entity(`0)">
            <summary>
            手动更新本站缓存
            </summary>
            <param name="entity">实体</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.C_Update_Cache_Entitys(System.Collections.Generic.List{`0})">
            <summary>
            手动更新本站缓存
            </summary>
            <param name="entitys">实体</param>
            <returns>更新条目录数</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.C_Get_Entity_From_Cache(System.Int32)">
            <summary>
            从缓存中取得实体数据(不取网络数据)
            </summary>
            <param name="id">主键</param>
            <returns>实体</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.C_Get_Entitys_From_Cache(System.Collections.IList)">
            <summary>
            从缓存中取得实体数据列表
            </summary>
            <param name="ids">主键列表</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.Where(System.Int32@,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            查询列表
            </summary>
            <param name="count"></param>
            <param name="current"></param>
            <param name="size"></param>
            <param name="filters"></param>
            <param name="orders"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.C_Get_Entity_From_Vistor(System.Int32,System.Type)">
            <summary>
            从数据接口中取得实体数据
            </summary>
            <param name="id">主键</param>
            <param name="get_type">取得类型.默认是主要类型</param>
            <returns>实体</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.C_Get_Entitys_From_Vistor(System.Collections.Generic.List{System.Int32},System.Type)">
            <summary>
            从数据接口中取得实体数据列表
            </summary>
            <param name="ids">主键列表</param>
            <param name="get_type">取得类型.默认是主要类型</param>
            <returns>实体列表</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.C_Refresh_CacheEntity_From_Vistor(System.Int32)">
            <summary>
            从数据接口取得数据实体更新缓存
            </summary>
            <param name="id">主键</param>
            <returns>更新是否成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.Site_Cache_Vistor_For_WCF`1.C_Refresh_CacheEntitys_From_Vistor(System.Collections.Generic.List{System.Int32})">
            <summary>
            从数据接口取得数据实体列表更新缓存
            </summary>
            <param name="ids">主键列表</param>
            <returns>更新条目数(如果是多个实体拼接.则为 Number * 实体个数)</returns>
        </member>
        <member name="T:MangoMis.Frame.Cache.InterfaceUrlParam">
            <summary>
            取得接口地址使用的参数
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.InterfaceUrlParam.SysKey_MisSite">
            <summary>
            应用站点列表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.InterfaceUrlParam.SysKey_ApiSite">
            <summary>
            接口站点列表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.InterfaceUrlParam.SysKey_ApiUrl">
            <summary>
            接口地址列表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.InterfaceUrlParam.SysKey_CurrentApi">
            <summary>
            本地使用接口地址列表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.InterfaceUrlParam.SysKey_SiteAddress">
             <summary>
            应用站点位置列表
             </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.InterfaceUrlParam.SysKey_ProjectName">
             <summary>
            应用站点名列表
             </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.InterfaceUrlParam.SysKey_LocalName">
             <summary>
            本地站点名列表
             </summary>
        </member>
        <member name="F:MangoMis.Frame.Cache.InterfaceUrlParam.SysKey_ApiTypes">
             <summary>
            Api接口的所有类型
             </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.ApiStaticStringItem">
            <summary>
            apistatic中使用的String
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.ApiStaticStringItem.StringItem">
            <summary>
            内容
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Cache.WCFInterfaceUrl">
            <summary>
            当前WCF连接使用的地址
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.WCFInterfaceUrl.wcf_url_mapping">
            <summary>
            当前的WCF映射
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.WCFInterfaceUrl.MisSiteStore">
            <summary>
            应用站点列表
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.WCFInterfaceUrl.ApiSiteStore">
             <summary>
            接口站点列表
             </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.WCFInterfaceUrl.ApiUrlStore">
             <summary>
            接口地址列表
             </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.WCFInterfaceUrl.CurrentApiStore">
            <summary>
            本地使用接口地址列表
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.WCFInterfaceUrl.siteAddressStore">
             <summary>
            应用站点位置列表
             </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.WCFInterfaceUrl.SiteAddressStore">
             <summary>
            应用站点位置列表
             </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.WCFInterfaceUrl._projectNameStore">
             <summary>
            应用站点名列表
             </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.WCFInterfaceUrl.ProjectNameStore">
             <summary>
            应用站点名列表
             </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.WCFInterfaceUrl.localNameStore">
             <summary>
            本地站点名列表
             </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.WCFInterfaceUrl.LocalNameStore">
             <summary>
            本地站点名列表
             </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.WCFInterfaceUrl.apiTypesStore">
            <summary>
            所有Api的类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Cache.WCFInterfaceUrl.ApiTypesStore">
             <summary>
            本地站点名列表
             </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.WCFInterfaceUrl.AppendCurrentApi(MangoMis.Frame.Model.ApiItem)">
            <summary>
            添加本地使用API
            </summary>
            <param name="item">要添加的API</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.WCFInterfaceUrl.RemoveCurrentApi(System.String)">
            <summary>
            移除一个本地API
            </summary>
            <param name="apiInterface">要移除的API的Interface</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.WCFInterfaceUrl.SaveCurrentApi">
            <summary>
            持久化本地API
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.WCFInterfaceUrl.GetListCurrentApi">
            <summary>
            本地所有的Api
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.WCFInterfaceUrl.FindCurrentApi(System.String)">
            <summary>
            查找本地API
            </summary>
            <param name="apiInterface">要查找的API的Interface</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.WCFInterfaceUrl.FindApiSite(System.String)">
            <summary>
            查找站点名
            </summary>
            <param name="siteName">要查找的站点名</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.WCFInterfaceUrl.FindMisSite(System.String)">
            <summary>
            查找Mis站点
            </summary>
            <param name="siteName">要查找的站点名</param>
        </member>
        <member name="M:MangoMis.Frame.Cache.WCFInterfaceUrl.GetDefaultCurrentApi(System.String)">
            <summary>
            根据TypeName取得默认的实例
            </summary>
            <param name="typeName">TypeName</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Cache.WCFInterfaceUrl.GetListApiUrls">
            <summary>
            所有的Api
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.WCFInterfaceUrl.GetListProjectName">
            <summary>
            取得所有的项目名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.WCFInterfaceUrl.GetListSiteAddress">
            <summary>
            取得所有地址列表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.WCFInterfaceUrl.GetListLocalName">
            <summary>
            取得所有机器名列表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.WCFInterfaceUrl.Load">
            <summary>
            读取数据本地缓存数据
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.WCFInterfaceUrl.ReloadData">
            <summary>
            保存已经变更的数据
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.WCFInterfaceUrl.Load_Apistatic">
            <summary>
            从ApiStatic取得对应的值
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Cache.WCFInterfaceUrl.InitWcfMapping">
            <summary>
            初始化WCF连接
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DataHelper.Log.CacheEntityUpgradeChangeItem">
            <summary>
            缓存更新内容
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataHelper.Log.CacheEntityUpgradeChangeItem.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataHelper.Log.CacheEntityUpgradeChangeItem.#ctor(System.String,System.Object,System.Object)">
            <summary>
            缓存更新内容
            </summary>
            <param name="columnName"></param>
            <param name="valueOld"></param>
            <param name="valueNew"></param>
        </member>
        <member name="P:MangoMis.Frame.DataHelper.Log.CacheEntityUpgradeChangeItem.ColumnName">
            <summary>
            更新字段名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataHelper.Log.CacheEntityUpgradeChangeItem.ValueOld">
            <summary>
            字段原值
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataHelper.Log.CacheEntityUpgradeChangeItem.OldText">
            <summary>
            原文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataHelper.Log.CacheEntityUpgradeChangeItem.NewText">
            <summary>
            新文本
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.DataHelper.Log.CacheEntityUpgradeChangeItem.ValueNew">
            <summary>
            字段新值
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DataHelper.Log.CacheEntityUpgradeItem">
            <summary>
            缓存更新的项目
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataHelper.Log.CacheEntityUpgradeItem.entityKey">
            <summary>
            项目主键
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataHelper.Log.CacheEntityUpgradeItem.UpgradKeys">
            <summary>
            更新列表
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DataHelper.Log.CacheEntityUpgradeLogItem">
            <summary>
            项目更新日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataHelper.Log.CacheEntityUpgradeLogItem.UpgradeKey">
            <summary>
            更新来源
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataHelper.Log.CacheEntityUpgradeLogItem.AddTime">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataHelper.Log.CacheEntityUpgradeLogItem.UpgradeSource">
            <summary>
            更新来源
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataHelper.Log.CacheEntityUpgradeLogItem.PageUrl">
            <summary>
            更新页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataHelper.Log.CacheEntityUpgradeLogItem.SiteKey">
            <summary>
            更新站点名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataHelper.Log.CacheEntityUpgradeLogItem.Memo">
            <summary>
            更新备注
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataHelper.Log.CacheEntityUpgradeLogItem.Changes">
            <summary>
            更新项
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DataHelper.Log.LockLogType">
            <summary>
            当前锁定状态
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataHelper.Log.LockLogType.WantLock">
            <summary>
            未准备好数据,准备Lock
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataHelper.Log.LockLogType.InLock">
            <summary>
            进入Lock方法
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataHelper.Log.LockLogType.InLockEvenReadyEnd">
            <summary>
            进入Lock后发现已经准备好数据.结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataHelper.Log.LockLogType.InLockToLoad">
            <summary>
            进入Lock未准备好数据.开始准备数据
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataHelper.Log.LockLogType.InLockToLoadEnd">
            <summary>
            进入Lock准备数据完成
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DataHelper.Log.LockerLog">
            <summary>
            当前锁定日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataHelper.Log.LockerLog.Key">
            <summary>
            唯一键
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataHelper.Log.LockerLog.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DataHelper.Log.LockerLogItem">
            <summary>
            Lock的日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataHelper.Log.LockerLogItem.Key">
            <summary>
            Guid索引
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataHelper.Log.LockerLogItem.LockType">
            <summary>
            Lock类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataHelper.Log.LockerLogItem.AddTime">
            <summary>
            添加时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataHelper.Log.LockerLogItem.UserId">
            <summary>
            调用的用户编号
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataHelper.Log.LockerLogItem.SessionId">
            <summary>
            当前SessionID
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataHelper.Log.LockerLogItem.Url">
            <summary>
            当前地址
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataHelper.Log.LockerLogItem.Source">
            <summary>
            当前调用源
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DataHelper.Log.UpgradeLogBuilder">
            <summary>
            日志建立
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataHelper.Log.UpgradeLogBuilder.UpgradeItemStore(System.String)">
            <summary>
            日志使用的数据源操作
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataHelper.Log.UpgradeLogBuilder.UpgradeLogCommand">
            <summary>
            日志使用的数据源操作
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataHelper.Log.UpgradeLogBuilder.BuildWriteLogHtml(System.Text.StringBuilder,System.String)">
            <summary>
            写入相关的LogBuilder
            </summary>
            <param name="builder"></param>
            <param name="type"></param>
        </member>
        <member name="M:MangoMis.Frame.DataHelper.Log.UpgradeLogBuilder.AppendInLockEvenReadyLog(System.Text.StringBuilder)">
            <summary>
            添加一个已经完成Lock的日志
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:MangoMis.Frame.DataHelper.Log.UpgradeLogBuilder.AppendInLockInitLog(System.Text.StringBuilder)">
            <summary>
            添加一个未完成Lock的日志
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:MangoMis.Frame.DataHelper.Log.UpgradeLogBuilder.AppendInLockInitEndLog(System.Text.StringBuilder,System.String,System.String)">
            <summary>
            添加一个完成初始化Lock的日志并且延时写入日志
            </summary>
            <param name="builder"></param>
            <param name="initKey">初始化时的字符</param>
            <param name="logKey">记录成的日志默认(laterWriteLog)</param>
        </member>
        <member name="M:MangoMis.Frame.DataHelper.Log.UpgradeLogBuilder.AppendInLockLog(System.Text.StringBuilder)">
            <summary>
            添加一个准备Lock的日志
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:MangoMis.Frame.DataHelper.Log.UpgradeLogBuilder.CacheUpgradeLog``1(System.String,MangoMis.Frame.DataSource.Model.SimpleTable,``0,``0,System.String,System.String)">
            <summary>
            记录缓存更新日志
            </summary>
            <param name="cacheKey">缓存索引</param>
            <param name="table">缓存表结构</param>
            <param name="entityOld">原始数据</param>
            <param name="entityNew">更新数据</param>
            <param name="memo">备注</param>
            <param name="source">更新源</param>
            <typeparam name="MT"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataHelper.Log.UpgradeLogBuilder.GetLogList(System.String,System.Object)">
            <summary>
            取得日志列表
            </summary>
            <param name="cacheKey">缓存索引</param>
            <param name="pkId">主键</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DataHelper.SqlTextBuilder">
            <summary>
            Class SqlTextBuilder.
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataHelper.SqlTextBuilder.GetFilterStringByFilter(TT.Common.Frame.Model.CommonFilterModel,System.Boolean)">
            <summary>
            Gets the filter string by filter.
            </summary>
            <param name="item">The item.</param>
            <param name="IsInt">if set to <c>true</c> [is int].</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataHelper.SqlTextBuilder.GetFilterStringByFilters(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.Dictionary{System.String,System.Boolean})">
            <summary>
            Gets the filter string by filters.
            </summary>
            <param name="item">The item.</param>
            <param name="IsIntColumn">The is int column.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:MangoMis.Frame.Creator.DataInterface_v3">
            <summary>
            Class DataInterface.
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="F:MangoMis.Frame.Creator.DataInterface_v3.ThisName">
            <summary>
            The this name
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Creator.DataInterface_v3.ThisTitle">
            <summary>
            The this name
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Creator.DataInterface_v3.checkTypes">
            <summary>
            验证类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Creator.DataInterface_v3.DefaultCreate(System.Web.UI.HtmlControls.HtmlForm,MangoMis.Frame.Helper.TT_H_Generic)">
            <summary>
            已有用户登陆调用的函数.需要重写
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/22 14:03:17
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Creator.DataInterface_v3.CreateAspx(System.Web.UI.Control)">
            <summary>
            Creates the aspx.
            </summary>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Creator.DataInterface_v3.SelectType(MangoMis.Frame.Helper.TT_H_Generic,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            Noes the use API static.
            </summary>
            <param name="formDiv">The form div.</param>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Creator.DataInterface_v3.OpenAspx(MangoMis.Frame.Helper.TT_H_Generic,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            Noes the use API static.
            </summary>
            <param name="formDiv">The form div.</param>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Creator.DataInterface_v2">
            <summary>
            Class DataInterface.
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="F:MangoMis.Frame.Creator.DataInterface_v2.ThisName">
            <summary>
            The this name
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Creator.DataInterface_v2.ThisTitle">
            <summary>
            The this name
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Creator.DataInterface_v2.checkTypes">
            <summary>
            验证类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Creator.DataInterface_v2.DefaultCreate(System.Web.UI.HtmlControls.HtmlForm,MangoMis.Frame.Helper.TT_H_Generic)">
            <summary>
            已有用户登陆调用的函数.需要重写
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/22 14:03:17
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Creator.DataInterface_v2.CreateAspx(System.Web.UI.Control)">
            <summary>
            Creates the aspx.
            </summary>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Creator.DataInterface_v2.SelectType(MangoMis.Frame.Helper.TT_H_Generic,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            Noes the use API static.
            </summary>
            <param name="formDiv">The form div.</param>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Creator.DataInterface_v2.OpenAspx(MangoMis.Frame.Helper.TT_H_Generic,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            Noes the use API static.
            </summary>
            <param name="formDiv">The form div.</param>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Creator.DataInterface_v2_1">
            <summary>
            Class DataInterface_v2_1.
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Creator.DataInterface_v2_1.ThisName">
            <summary>
            The this name
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Creator.DataInterface_v2_1.ThisTitle">
            <summary>
            The this name
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Creator.DataInterface_v2_1.checkTypes">
            <summary>
            验证类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Creator.DataInterface_v2_1.DefaultCreate(System.Web.UI.HtmlControls.HtmlForm,MangoMis.Frame.Helper.TT_H_Generic)">
            <summary>
            已有用户登陆调用的函数.需要重写
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/22 14:03:17
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Creator.DataInterface_v2_1.CreateAspx(System.Web.UI.Control)">
            <summary>
            Creates the aspx.
            </summary>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Creator.DataInterface_v2_1.SelectType(MangoMis.Frame.Helper.TT_H_Generic,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            Noes the use API static.
            </summary>
            <param name="formDiv">The form div.</param>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Creator.DataInterface_v2_1.OpenAspx(MangoMis.Frame.Helper.TT_H_Generic,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            Noes the use API static.
            </summary>
            <param name="formDiv">The form div.</param>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Creator.AspxCreator">
            <summary>
            Class AspxCreator.
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Creator.AspxCreator.DefaultCreate(System.Web.UI.HtmlControls.HtmlForm,MangoMis.Frame.Helper.TT_H_Generic)">
            <summary>
            已有用户登陆调用的函数.需要重写
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/22 14:03:17
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Creator.AspxCreator.CreateAspx(System.Web.UI.Control)">
            <summary>
            Creates the aspx.
            </summary>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Creator.AspxCreator.OpenAspx(MangoMis.Frame.Helper.TT_H_Generic,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            Noes the use API static.
            </summary>
            <param name="formDiv">The form div.</param>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Creator.CreatorBase">
            <summary>
            Class CreatorBase.
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Creator.CreatorBase.BuildAssemblySelection(MangoMis.Frame.Helper.TT_H_Generic,System.Web.UI.HtmlControls.HtmlForm,System.String)">
            <summary>
            用于创建页面时.建立程序集选择
            </summary>
            <param name="formDiv">用于展示的Div</param>
            <param name="form">用于取得FormID的Form</param>
            <param name="pageName">页面名</param>
        </member>
        <member name="M:MangoMis.Frame.Creator.CreatorBase.BuildTypeSelection(System.String,MangoMis.Frame.Helper.TT_H_Generic,System.Web.UI.HtmlControls.HtmlForm,System.String)">
            <summary>
            用于创建页面时.建立类型选择
            </summary>
            <param name="assemblyKey">要建立的程序集索引</param>
            <param name="formDiv">用于展示的Div</param>
            <param name="form">用于取得FormID的Form</param>
            <param name="pageName">页面名</param>
        </member>
        <member name="M:MangoMis.Frame.Creator.CreatorBase.TryGetTypeByAssemblyKeyAndTypeKey(System.String,System.String,System.Web.UI.Control)">
            <summary>
            尝试取得程序集中的类型,如果查找不到返回NULL[向Form中输出Msg]
            </summary>
            <param name="assemblyKey">查找的程序集索引(程序名.非FullName)</param>
            <param name="typeKey">查找的类型索引(类型命名,FullName,非Name)</param>
            <param name="form">要输出错误内容的Form</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Creator.CreatorBase.DefaultCreate">
            <summary>
            Defaults the create.
            </summary>
            <returns>Page.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Creator.CreatorBase.SubLastDot(System.String)">
            <summary>
            删除最后的逗号
            </summary>
            <param name="txt">The text.</param>
            <returns>System.String.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Creator.CreatorBase.BuildButton(System.Web.UI.Control,System.String,System.String,System.String)">
            <summary>
            Builds the button.
            </summary>
            <param name="form">The form.</param>
            <param name="text">The text.</param>
            <param name="config">The configuration.</param>
            <param name="desc">The desc.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Creator.CreatorBase.BuildEditButton(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            取得编辑按键
            </summary>
            <param name="btnAction">The BTN action.</param>
            <param name="buttonText">The button text.</param>
            <param name="formId">The form id.</param>
            <param name="editid">The editid.</param>
            <param name="type">The type.</param>
            <returns>HtmlButton.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Creator.CreatorBase.GetTextBox(System.String,System.String,System.String,System.Boolean)">
            <summary>
            取得文本框
            </summary>
            <param name="configName">Name of the configuration.</param>
            <param name="config">The configuration.</param>
            <param name="value">The value.</param>
            <param name="disabled">if set to <c>true</c> [disabled].</param>
            <returns>TT_H_Generic.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Creator.CreatorBase.WebSiteNamespace">
            <summary>
            取得站点命名空间
            </summary>
            <returns>System.String.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="F:MangoMis.Frame.Creator.CreatorBase.notinDirs">
            <summary>
            The notin dirs
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Creator.CreatorBase.tdCss">
            <summary>
            The td CSS
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Creator.CreatorBase.tableCss">
            <summary>
            The table CSS
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Creator.CreatorBase.GetDirBtn(System.IO.DirectoryInfo,MangoMis.Frame.Helper.TT_H_Table,System.Web.UI.HtmlControls.HtmlForm,System.String[],System.String,System.String)">
            <summary>
            Gets the dir BTN.
            </summary>
            <param name="info">The information.</param>
            <param name="table">The table.</param>
            <param name="form">The form.</param>
            <param name="paths">The paths.</param>
            <param name="basePath">The base path.</param>
            <param name="name">The name.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Creator.DataInterface">
            <summary>
            Class DataInterface.
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="F:MangoMis.Frame.Creator.DataInterface.ThisName">
            <summary>
            The this name
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Creator.DataInterface.ThisTitle">
            <summary>
            The this name
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Creator.DataInterface.checkTypes">
            <summary>
            验证类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Creator.DataInterface.DefaultCreate(System.Web.UI.HtmlControls.HtmlForm,MangoMis.Frame.Helper.TT_H_Generic)">
            <summary>
            已有用户登陆调用的函数.需要重写
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/22 14:03:17
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Creator.DataInterface.CreateAspx(System.Web.UI.Control)">
            <summary>
            Creates the aspx.
            </summary>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Creator.DataInterface.SelectType(MangoMis.Frame.Helper.TT_H_Generic,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            Noes the use API static.
            </summary>
            <param name="formDiv">The form div.</param>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Creator.DataInterface.OpenAspx(MangoMis.Frame.Helper.TT_H_Generic,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            Noes the use API static.
            </summary>
            <param name="formDiv">The form div.</param>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Creator.ListAspxHandler">
            <summary>
            Class ListAspxHandler.
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Creator.ListAspxHandler.DefaultCreate(System.Web.UI.HtmlControls.HtmlForm,MangoMis.Frame.Helper.TT_H_Generic)">
            <summary>
            已有用户登陆调用的函数.需要重写
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/22 14:03:17
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Creator.ListAspxHandler.CreateAspx(System.Web.UI.Control)">
            <summary>
            Creates the aspx.
            </summary>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Creator.ListAspxHandler.SelectType(MangoMis.Frame.Helper.TT_H_Generic,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            Noes the use API static.
            </summary>
            <param name="formDiv">The form div.</param>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Creator.ListAspxHandler.OpenAspx(MangoMis.Frame.Helper.TT_H_Generic,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            Noes the use API static.
            </summary>
            <param name="formDiv">The form div.</param>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Creator.GetJson">
            <summary>
            Class ListAspxHandler.
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="F:MangoMis.Frame.Creator.GetJson.ThisName">
            <summary>
            The this name
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Creator.GetJson.ThisTitle">
            <summary>
            The this name
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Creator.GetJson.DefaultCreate(System.Web.UI.HtmlControls.HtmlForm,MangoMis.Frame.Helper.TT_H_Generic)">
            <summary>
            已有用户登陆调用的函数.需要重写
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/22 14:03:17
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Creator.GetJson.CreateAspx(System.Web.UI.Control)">
            <summary>
            Creates the aspx.
            </summary>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Creator.GetJson.SelectType(MangoMis.Frame.Helper.TT_H_Generic,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            Noes the use API static.
            </summary>
            <param name="formDiv">The form div.</param>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Creator.DataInterface_v4">
            <summary>
            创页4.0
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Getassembly">
            <summary>
            获取程序集
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Gettypes(System.String)">
            <summary>
            获取程序集中的Model
            </summary>
            <param name="assemblyKey"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Getmodel(System.String,System.String)">
            <summary>
            通过Model获取当前字段
            </summary>
            <param name="assemblyKey"></param>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Getdir">
            <summary>
            获取文件夹路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Save1(System.String,System.String)">
            <summary>
            生成文件 第一版 不带插件的
            </summary>
            <param name="pd"></param>
            <param name="bd"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Save2(System.String,System.String)">
            <summary>
            生成文件 第二版,基于插件开发
            </summary>
            <param name="pd"></param>
            <param name="bd"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_ColType">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_ColType.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_ColType.#ctor(System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="index"></param>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_ColType.Name">
            <summary>
            字段名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_ColType.Index">
            <summary>
            索引
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_ColType.Mean">
            <summary>
            含义
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_ColType.DefaultValue">
            <summary>
            默认值-1无 0用户 1时间 2否 3是
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_ColType.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_ColType.ShowType">
            <summary>
            显示类型-1正常   1字典 2用户   3组织 4日期 5备注 6选择 7是否 8小区 9行政区
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_ColType.Show_List">
            <summary>
            列表是否显示
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_ColType.Show_Add">
            <summary>
            添加是否显示
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_ColType.Show_Edit">
            <summary>
            编辑是否显示
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_ColType.Show_Search">
            <summary>
            查询是否显示
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_ColType.ShowType_val">
            <summary>
            客户端提交上来的特性,返回值不需要
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_ColType.Val_null">
            <summary>
            非空验证
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_ColType.Val_int">
            <summary>
            整形验证
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_ColType.Val_double">
            <summary>
            浮点型验证
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_ColType.Val_tel">
            <summary>
            手机号验证
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_ColType.Val_idcard">
            <summary>
            身份证验证
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_Base">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_Base.assemblyKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_Base.model">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_Base.PageID">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_Base.PageName">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_Base.PageTitle">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_Base.HelpID">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_Base.FilePath">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_Base.Run_api">
            <summary>
            是否生成api
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_Base.Run_js">
            <summary>
            是否生成js
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_Base.Run_aspx">
            <summary>
            是否生成aspx
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_Root">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_Root.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_Root.#ctor(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="value"></param>
            <param name="root"></param>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_Root.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_Root.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_Root.getspace(System.Int32)">
            <summary>
            
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_Root.excludePath">
            <summary>
            排除文件夹
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_Root.GetList(System.String,System.String)">
            <summary>
            递归获取目录
            </summary>
            <param name="path"></param>
            <param name="root"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_KV">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_KV.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_KV.Key">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Model_KV.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Error(System.Exception)">
            <summary>
            
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Creator.DataInterface_v4.Error(System.String)">
            <summary>
            
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Creator.DataInterface_v4.GetColDefault(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="colName"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Creator.DataInterface_v4.GetTypeCol(System.String)">
            <summary>
            
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Creator.DataHandlerV1">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Creator.DataHandlerV1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Creator.DataHandlerV1.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Simple.SimpleStore">
            <summary>
            简单仓储信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.SimpleStore.GetListBySomeIds``1(MangoMis.Frame.Cache.StoreCache.IStoreCache{``0},System.Collections.Generic.List{System.Int32},System.Func{``0,System.Nullable{System.Int32}},System.Func{``0,System.Boolean})">
            <summary>
            主要是为了操作对某ID 进行In操作(非主键)(二分法)
            </summary>
            <param name="store">要进行操作的仓储</param>
            <param name="someIds">要进行In操作的ID</param>
            <param name="someIdGetter">取得ID的函数</param>
            <param name="otherChecker">其它验证条件</param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.SimpleStore.MulitiWCF``1(System.String,System.Collections.Generic.List{System.Type},System.Type,System.String,System.String)">
            <summary>
            使用WCF的仓储缓存[由多个WCF拼成的实体][PS.如果主要类型实体中有lastupdatetime/lasttime等字段.会根据此字段取更新内容而不会取全部的值]
            </summary>
            <param name="pkId">缓存的实体的主键字段</param>
            <param name="cacheKey">缓存名[全局唯一][默认为类型全名]</param>
            <param name="cacheTitle">缓存标题.[默认为缓存名]</param>
            <param name="mulitiTypes">多个绑定的WCF对象类型:EG.typeof(User_List)</param>
            <param name="primaryType">主要对象类型[用于取得PKID];EG.typeof(User_Base)</param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.SimpleStore.MulitiWcfByDbInfo``1(System.String,System.Collections.Generic.List{System.Type},System.Type,System.String,System.String,MangoMis.Frame.DB.Info.DbServerType,System.String)">
            <summary>
            取得自定义数据源类型的缓存(如非必要请不要调用此函数)[由多个WCF拼成的实体][PS.如果主要类型实体中有lastupdatetime/lasttime等字段.会根据此字段取更新内容而不会取全部的值]
            </summary>
            <param name="pkId">缓存的实体的主键字段</param>
            <param name="cacheKey">缓存名[全局唯一][默认为类型全名]</param>
            <param name="cacheTitle">缓存标题.[默认为缓存名]</param>
            <param name="mulitiTypes">多个绑定的WCF对象类型:EG.typeof(User_List)</param>
            <param name="primaryType">主要对象类型[用于取得PKID];EG.typeof(User_Base)</param>
            <param name="dbType">仓储持久化数据源类型</param>
            <param name="dbInfoKey">仓储持久数据源Key</param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.SimpleStore.WCF``1(System.String,System.String,System.String)">
            <summary>
            使用WCF的仓储缓存.单独的WCF.初始化或者取得新数据时会去调用WCF来取得新数据.[PS.如果实体中有lastupdatetime/lasttime等字段.会根据此字段取更新内容而不会取全部的值]
            </summary>
            <param name="pkId">缓存的实体的主键</param>
            <param name="cacheKey">缓存名[全局唯一][不填写默认为类型全名]</param>
            <param name="cacheTitle">缓存标题.[不填写默认为cacheKey]</param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.SimpleStore.WcfWithDbInfo``1(System.String,MangoMis.Frame.DB.Info.DBInfo,System.String,System.String)">
            <summary>
            使用WCF的仓储缓存.单独的WCF.初始化或者取得新数据时会去调用WCF来取得新数据.[PS.如果实体中有lastupdatetime/lasttime等字段.会根据此字段取更新内容而不会取全部的值]
            </summary>
            <param name="pkId">缓存的实体的主键</param>
            <param name="cacheKey">缓存名[全局唯一][不填写默认为类型全名]</param>
            <param name="wcfUseDbInfo">些Wcf数据源读取WCF时使用的数据源</param>
            <param name="cacheTitle">缓存标题.[不填写默认为cacheKey]</param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.SimpleStore.WcfWithDbInfo``1(System.String,System.String,System.String)">
            <summary>
            使用WCF的仓储缓存(连接字符为new).单独的WCF.初始化或者取得新数据时会去调用WCF来取得新数据.[PS.如果实体中有lastupdatetime/lasttime等字段.会根据此字段取更新内容而不会取全部的值]
            </summary>
            <param name="pkId">缓存的实体的主键</param>
            <param name="cacheKey">这里同时即是表名也是缓存名[全局唯一]</param>
            <param name="cacheTitle">缓存标题.[不填写默认为cacheKey]</param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.SimpleStore.WcfWithDbInfo``1(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            使用WCF的仓储缓存.单独的WCF.初始化或者取得新数据时会去调用WCF来取得新数据.[PS.如果实体中有lastupdatetime/lasttime等字段.会根据此字段取更新内容而不会取全部的值]
            </summary>
            <param name="pkId">缓存的实体的主键</param>
            <param name="connKey">连接字符串</param>
            <param name="tableName">表名</param>
            <param name="cacheKey">缓存名[全局唯一][不填写默认为类型全名]</param>
            <param name="cacheTitle">缓存标题.[不填写默认为cacheKey]</param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.SimpleStore.ConvertWCF``2(System.String,System.Func{``0,``1},System.String,System.String)">
            <summary>
            使用WCF的仓储缓存[将WCF的数据类型转换成其它类型][一般用于排除某些字段不进行缓存]
            </summary>
            <param name="pkId">缓存的实体的主键</param>
            <param name="converter">实体转移器</param>
            <param name="cacheKey">缓存名[全局唯一][默认为类型全名]</param>
            <param name="cacheTitle">缓存标题.[默认为缓存名]</param>
            <typeparam name="TWcfEntity">WCF数据源的类型</typeparam>
            <typeparam name="TMapToEntity">转换成的数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.SimpleStore.HaveSource``1(System.String,System.Func{System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{``0}},System.String,System.String)">
            <summary>
            此方法需要提供一个可以使用ListFilter的数据源取得函数.(需要支持两种基础条件,一是根据主键取数据,还有一种是根据最后更新时间取数据)
            </summary>
            <param name="pkId">缓存的实体的主键</param>
            <param name="getter">数据列表获取器</param>
            <param name="cacheKey">缓存名[全局唯一][默认为类型全名]</param>
            <param name="cacheTitle">缓存标题.[默认为缓存名]</param>
            <typeparam name="TEntity">数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.SimpleStore.Memory``1(System.String,System.Func{System.Collections.Generic.List{``0}},System.String,System.String)">
            <summary>
            !!!!!!没有必要不要使用此方式建立缓存,此方式只能从数据源更新所有.不可能单条更新.如果想单条更新.只能自己去取值之后Append进缓存中.不使用WCF数据源.无数据源(自己自定义实例化数据源)的存储器.数据完全通过getter来取得
            </summary>
            <param name="pkId">缓存的实体的主键</param>
            <param name="getter">数据列表获取器</param>
            <param name="cacheKey">缓存名[全局唯一][默认为类型全名]</param>
            <param name="cacheTitle">缓存标题.[默认为缓存名]</param>
            <typeparam name="TEntity">数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.SimpleStore.Current``1(System.String,System.String,System.String)">
            <summary>
            不使用WCF数据源.无数据源,也没有初始数据的虚拟缓存,存在于内存中.可以自行向其中添加数据.一般用于系统记录配置等
            </summary>
            <param name="pkId">缓存的实体的主键</param>
            <param name="cacheKey">缓存名[全局唯一][默认为类型全名]</param>
            <param name="cacheTitle">缓存标题.[默认为缓存名]</param>
            <typeparam name="TEntity">数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.SimpleStore.MulitiWcf``1(System.String,System.Collections.Generic.List{System.Type},System.Type,MangoMis.Frame.DB.Info.DbServerType,System.String,System.String)">
            <summary>
            使用WCF的仓储缓存[由多个WCF拼成的实体][PS.如果主要类型实体中有lastupdatetime/lasttime等字段.会根据此字段取更新内容而不会取全部的值]
            </summary>
            <param name="pkId">缓存的实体的主键字段</param>
            <param name="serverType">存储数据的本地缓存类型</param>
            <param name="cacheKey">缓存名[全局唯一][默认为类型全名]</param>
            <param name="cacheTitle">缓存标题.[默认为缓存名]</param>
            <param name="mulitiTypes">多个绑定的WCF对象类型:EG.typeof(User_List)</param>
            <param name="primaryType">主要对象类型[用于取得PKID];EG.typeof(User_Base)</param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.SimpleStore.Wcf``1(System.String,MangoMis.Frame.DB.Info.DbServerType,System.String,System.String)">
            <summary>
            使用WCF的仓储缓存.单独的WCF.初始化或者取得新数据时会去调用WCF来取得新数据.[PS.如果实体中有lastupdatetime/lasttime等字段.会根据此字段取更新内容而不会取全部的值]
            </summary>
            <param name="pkId">缓存的实体的主键</param>
            <param name="serverType">存储数据的本地缓存类型</param>
            <param name="cacheKey">缓存名[全局唯一][默认为类型全名]</param>
            <param name="cacheTitle">缓存标题.[默认为缓存名]</param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.SimpleStore.ConvertWcf``2(System.String,System.Func{``0,``1},MangoMis.Frame.DB.Info.DbServerType,System.String,System.String)">
            <summary>
            使用WCF的仓储缓存[将WCF的数据类型转换成其它类型][一般用于排除某些字段不进行缓存]
            </summary>
            <param name="pkId">缓存的实体的主键</param>
            <param name="converter">实体转移器</param>
            <param name="serverType">存储数据的本地缓存类型</param>
            <param name="cacheKey">缓存名[全局唯一][默认为类型全名]</param>
            <param name="cacheTitle">缓存标题.[默认为缓存名]</param>
            <typeparam name="TWcfEntity">WCF数据源的类型</typeparam>
            <typeparam name="TMapToEntity">转换成的数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.SimpleStore.OtherSource``1(System.String,System.Func{System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{``0}},System.String,System.String)">
            <summary>
            不使用WCF数据源.自定义数据源存储器.数据完全通过getter来取得.(可以传FilterFiter自己支持)
            </summary>
            <param name="pkId">缓存的实体的主键</param>
            <param name="dataGetter">数据列表获取器</param>
            <param name="cacheKey">缓存名[全局唯一][默认为类型全名]</param>
            <param name="cacheTitle">缓存标题.[默认为缓存名]</param>
            <typeparam name="TEntity">数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.SimpleStore.Memory``1(System.String,System.Func{System.Collections.Generic.List{``0}},MangoMis.Frame.DB.Info.DbServerType,System.String,System.String)">
            <summary>
            不使用WCF数据源.无数据源(自己自定义实例化数据源)的存储器.数据完全通过getter来取得
            </summary>
            <param name="pkId">缓存的实体的主键</param>
            <param name="serverType">存储数据的本地缓存类型</param>
            <param name="getter">数据列表获取器</param>
            <param name="cacheKey">缓存名[全局唯一][默认为类型全名]</param>
            <param name="cacheTitle">缓存标题.[默认为缓存名]</param>
            <typeparam name="TEntity">数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.SimpleStore.Current``1(System.String,MangoMis.Frame.DB.Info.DbServerType,System.String,System.String)">
            <summary>
            不使用WCF数据源.无数据源,也没有初始数据的虚拟缓存,存在于内存中.可以自行向其中添加数据.一般用于系统记录配置等
            </summary>
            <param name="pkId">缓存的实体的主键</param>
            <param name="serverType">存储数据的本地缓存类型</param>
            <param name="cacheKey">缓存名[全局唯一][默认为类型全名]</param>
            <param name="cacheTitle">缓存标题.[默认为缓存名]</param>
            <typeparam name="TEntity">数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Simple.WCFParam">
            <summary>
            通过自定参数调用WCF
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFParam.HaveTable``1(System.String)">
            <summary>
            需要自定义表名
            </summary>
            <param name="tableName">表名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFParam.HaveConnKey``1(System.String)">
            <summary>
            需要自定义连接字符串
            </summary>
            <param name="connKey">连接字符串</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFParam.HaveTableAndConnKey``1(System.String,System.String)">
            <summary>
            需要自定义连接字符串同时也需要表名
            </summary>
            <param name="tableName">表名</param>
            <param name="connKey">连接字符串</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFParam.Client``1(MangoMis.Frame.Model.ISimpleWCFParamInfo{``0})">
            <summary>
            取得客户端
            </summary>
            <param name="paramInfo">需要的参数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFParam.IdList``1(MangoMis.Frame.Model.ISimpleWCFParamInfo{``0},System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得ID列表
            </summary>
            <param name="paramInfo">需要的参数</param>
            <param name="page">要取得第几页(从1开始)</param>
            <param name="size">每页多少条数据</param>
            <param name="filters">查询条件</param>
            <param name="orders">排序条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFParam.IdListAll``1(MangoMis.Frame.Model.ISimpleWCFParamInfo{``0},System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            循环取得某条件ID列表(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="paramInfo">需要的参数</param>
            <param name="filters">查询条件</param>
            <param name="pagesize">每页取多少条.默认是4000条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFParam.IdListAll``1(MangoMis.Frame.Model.ISimpleWCFParamInfo{``0},System.Int32)">
            <summary>
            循环取得某条件ID列表(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="paramInfo">需要的参数</param>
            <param name="pagesize">每页取多少条.默认是4000条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFParam.ColumnsAll``1(MangoMis.Frame.Model.ISimpleWCFParamInfo{``0},System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            取得指定字段的分页列表(用于大数据表,想节约查询时间的情况)(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="paramInfo">需要的参数</param>
            <param name="columns">需要查询的字段列表</param>
            <param name="pagesize">每页取多少条.默认是400条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFParam.Columns``1(MangoMis.Frame.Model.ISimpleWCFParamInfo{``0},System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得指定字段的分页列表(用于大数据表,想节约查询时间的情况)
            </summary>
            <param name="paramInfo">需要的参数</param>
            <param name="page">要取得第几页(从1开始)</param>
            <param name="size">每页多少条数据</param>
            <param name="filters">查询条件</param>
            <param name="orders">排序条件</param>
            <param name="columns">需要查询的字段列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFParam.ColumnsAll``1(MangoMis.Frame.Model.ISimpleWCFParamInfo{``0},System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            取得指定字段的分页列表(用于大数据表,想节约查询时间的情况)(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="paramInfo">需要的参数</param>
            <param name="filters">查询条件</param>
            <param name="columns">需要查询的字段列表</param>
            <param name="pagesize">每页取多少条.默认是400条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFParam.QueryAll``1(MangoMis.Frame.Model.ISimpleWCFParamInfo{``0},System.Int32)">
            <summary>
            循环取得所有数据(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="paramInfo">需要的参数</param>
            <param name="pagesize">每页取多少条.默认是400条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFParam.Query``1(MangoMis.Frame.Model.ISimpleWCFParamInfo{``0},System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="paramInfo">需要的参数</param>
            <param name="page">要取得第几页(从1开始)</param>
            <param name="size">每页多少条数据</param>
            <param name="filters">查询条件</param>
            <param name="orders">排序条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFParam.QueryAll``1(MangoMis.Frame.Model.ISimpleWCFParamInfo{``0},System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            循环取得某条件下的所有数据(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="paramInfo">需要的参数</param>
            <param name="filters">查询条件</param>
            <param name="pagesize">每页取多少条.默认是400条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFParam.Query``1(MangoMis.Frame.Model.ISimpleWCFParamInfo{``0},System.Int32)">
            <summary>
            取得单条数据
            </summary>
            <param name="paramInfo">需要的参数</param>
            <param name="PkId">查找主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFParam.Query``1(MangoMis.Frame.Model.ISimpleWCFParamInfo{``0},System.Collections.Generic.List{System.Int32})">
            <summary>
            取得多条数据
            </summary>
            <param name="paramInfo">需要的参数</param>
            <param name="PkIdList">查找主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFParam.Count``1(MangoMis.Frame.Model.ISimpleWCFParamInfo{``0},System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得符合条件的记录总数
            </summary>
            <param name="paramInfo">需要的参数</param>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFParam.Count``1(MangoMis.Frame.Model.ISimpleWCFParamInfo{``0})">
            <summary>
            取得录总数
            </summary>
            <param name="paramInfo">需要的参数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFParam.GroupBy``1(MangoMis.Frame.Model.ISimpleWCFParamInfo{``0},System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得当前条件下的统计数据
            </summary>
            <param name="paramInfo">需要的参数</param>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFParam.GroupBy``1(MangoMis.Frame.Model.ISimpleWCFParamInfo{``0},System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得可分页的统计数据
            </summary>
            <param name="paramInfo">需要的参数</param>
            <param name="page">页数</param>
            <param name="pagesize">每页条目数</param>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="orders">The orders.</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFParam.Add``1(MangoMis.Frame.Model.ISimpleWCFParamInfo{``0},``0)">
            <summary>
            插入一条数据
            </summary>
            <param name="paramInfo">需要的参数</param>
            <param name="entity">数据记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFParam.Add``1(MangoMis.Frame.Model.ISimpleWCFParamInfo{``0},System.Collections.Generic.List{``0})">
            <summary>
            插入多条数据
            </summary>
            <param name="paramInfo">需要的参数</param>
            <param name="entitys">数据列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFParam.Update``1(MangoMis.Frame.Model.ISimpleWCFParamInfo{``0},``0)">
            <summary>
            更新一条数据
            </summary>
            <param name="paramInfo">需要的参数</param>
            <param name="entity">数据记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFParam.Update``1(MangoMis.Frame.Model.ISimpleWCFParamInfo{``0},System.Collections.Generic.List{``0})">
            <summary>
            更新多条数据
            </summary>
            <param name="paramInfo">需要的参数</param>
            <param name="entitys">数据列表</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Simple.WcfV3`1">
            <summary>
            简易WCF连接客户端V3版本
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WcfV3`1.SetTable(System.String)">
            <summary>
            手动设置表名(用于表名和实体名不一致的情况)
            </summary>
            <param name="tableName">要设置的表名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WcfV3`1.SetConnKey(System.String)">
            <summary>
            手动设置ConnKey(用于ConnKey不是new,并且没在ConnKey管理里配置过,或者ConnKey与配置不一致的情况)
            </summary>
            <param name="connKey">要使用的ConnKey</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WcfV3`1.SetNoPass">
            <summary>
            设置为返回值不加密模式(可能会快一些)
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WcfV3`1.TableName(System.String)">
            <summary>
            设置要查询的表名
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WcfV3`1.SetPageName(System.String)">
            <summary>
            设置页面名(默认值是CommonFrame.CurrentFrameHandler?.PageName ?? "NoPage")
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WcfV3`1.SetHasPass">
            <summary>
            设置为返回值加密
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WcfV3`1.SetTableAndConnKey(System.String,System.String)">
            <summary>
            设置表名并且设置ConnKey(用于表名和实体名不一致的情况,并且ConnKey不是new,并且没在ConnKey管理里配置过,或者ConnKey与配置不一致的情况)
            </summary>
            <param name="tableName">要设置的表名</param>
            <param name="connKey">要使用的ConnKey</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WcfV3`1.GetIds(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得ID列表
            </summary>
            <param name="page">要取得第几页(从1开始)</param>
            <param name="size">每页多少条数据</param>
            <param name="filters">查询条件</param>
            <param name="orders">排序条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WcfV3`1.GetTotalIdByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            循环取得某条件ID列表(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="filters">查询条件</param>
            <param name="pagesize">每页取多少条.默认是4000条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WcfV3`1.Columns(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得指定字段的分页列表(用于大数据表,想节约查询时间的情况)
            </summary>
            <param name="page">要取得第几页(从1开始)</param>
            <param name="size">每页多少条数据</param>
            <param name="filters">查询条件</param>
            <param name="orders">排序条件</param>
            <param name="columns">需要查询的字段列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WcfV3`1.GetTotalColumnByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String})">
            <summary>
            分页取得条件下的所有数据,默认每页200条
            </summary>
            <param name="filters">条件</param>
            <param name="columns">需要查询的字段列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WcfV3`1.GetTotalColumnByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            取得指定字段的分页列表(用于大数据表,想节约查询时间的情况)(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="filters">查询条件</param>
            <param name="columns">需要查询的字段列表</param>
            <param name="pagesize">每页取多少条.默认是400条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WcfV3`1.GetColumnsNoCount(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得指定字段的分页列表(不返回Count)
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">The columns.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WcfV3`1.Query(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">要取得第几页(从1开始)</param>
            <param name="size">每页多少条数据</param>
            <param name="filters">查询条件</param>
            <param name="orders">排序条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WcfV3`1.GetTotalListByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            循环取得某条件下的所有数据(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="filters">查询条件</param>
            <param name="pagesize">每页取多少条.默认是400条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WcfV3`1.GetModel(System.Int32)">
            <summary>
            取得单条数据
            </summary>
            <param name="pkId">查找主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WcfV3`1.GetModelByIds(System.Collections.Generic.List{System.Int32})">
            <summary>
            取得多条数据
            </summary>
            <param name="pkIdList">查找主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WcfV3`1.GetCount(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得符合条件的记录总数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WcfV3`1.GroupBy(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得当前条件下的统计数据
            </summary>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WcfV3`1.GroupBy(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得可分页的统计数据
            </summary>
            <param name="page">页数</param>
            <param name="pagesize">每页条目数</param>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="orders">The orders.</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WcfV3`1.Add(`0)">
            <summary>
            插入一条数据
            </summary>
            <param name="entity">数据记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WcfV3`1.Update(`0)">
            <summary>
            更新一条数据
            </summary>
            <param name="entity">数据记录</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Simple.SimpleClientStore">
            <summary>
            简易WCF连接的仓储管理
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.Simple.SimpleClientStore.StoreName">
            <summary>
            当前仓储名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.SimpleClientStore.Append(System.String)">
            <summary>
            添加一个Config
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.SimpleClientStore.GetConfigInfo(System.String)">
            <summary>
            取得缓存更新信息
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.SimpleClientStore.GetConnectionKey(System.String)">
            <summary>
            连接字符串(默认值为new)
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.SimpleClientStore.SetConnectionKey(System.String,System.String)">
            <summary>
            连接字符串(默认值为new)
            </summary>
            <param name="cacheKey">缓存唯一命名</param>
            <param name="value">连接字符串</param>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Simple.WCF`1">
            <summary>
            简易WCF连接客户端
            20171208加不了EntityBase.因为需要与其它通用
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Simple.WCF`1.Client">
            <summary>
            取得客户端(使用配置中的连接字符串)
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF`1.IdList(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得ID列表
            </summary>
            <param name="page">要取得第几页(从1开始)</param>
            <param name="size">每页多少条数据</param>
            <param name="filters">查询条件</param>
            <param name="orders">排序条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF`1.IdListAll(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            循环取得某条件ID列表(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="filters">查询条件</param>
            <param name="pagesize">每页取多少条.默认是4000条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF`1.IdListAll(System.Int32)">
            <summary>
            循环取得某条件ID列表(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="pagesize">每页取多少条.默认是4000条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF`1.ColumnsAll(System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            取得指定字段的分页列表(用于大数据表,想节约查询时间的情况)(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="columns">需要查询的字段列表</param>
            <param name="pagesize">每页取多少条.默认是400条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF`1.Columns(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得指定字段的分页列表(用于大数据表,想节约查询时间的情况)
            </summary>
            <param name="page">要取得第几页(从1开始)</param>
            <param name="size">每页多少条数据</param>
            <param name="filters">查询条件</param>
            <param name="orders">排序条件</param>
            <param name="columns">需要查询的字段列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF`1.ColumnsAll(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            取得指定字段的分页列表(用于大数据表,想节约查询时间的情况)(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="filters">查询条件</param>
            <param name="columns">需要查询的字段列表</param>
            <param name="pagesize">每页取多少条.默认是400条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF`1.QueryAll(System.Int32)">
            <summary>
            循环取得所有数据(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="pagesize">每页取多少条.默认是400条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF`1.Query(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">要取得第几页(从1开始)</param>
            <param name="size">每页多少条数据</param>
            <param name="filters">查询条件</param>
            <param name="orders">排序条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF`1.QueryAll(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            循环取得某条件下的所有数据(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="filters">查询条件</param>
            <param name="pagesize">每页取多少条.默认是400条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF`1.Query(System.Int32)">
            <summary>
            取得单条数据
            </summary>
            <param name="PkId">查找主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF`1.Query(System.Collections.Generic.List{System.Int32})">
            <summary>
            取得多条数据
            </summary>
            <param name="PkIdList">查找主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF`1.Count(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得符合条件的记录总数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF`1.Count">
            <summary>
            取得录总数
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF`1.GroupBy(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得当前条件下的统计数据
            </summary>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF`1.GroupBy(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得可分页的统计数据
            </summary>
            <param name="page">页数</param>
            <param name="pagesize">每页条目数</param>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="orders">The orders.</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF`1.Add(`0)">
            <summary>
            插入一条数据
            </summary>
            <param name="entity">数据记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF`1.Add(System.Collections.Generic.List{`0})">
            <summary>
            插入多条数据
            </summary>
            <param name="entitys">数据列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF`1.Update(`0)">
            <summary>
            更新一条数据
            </summary>
            <param name="entity">数据记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF`1.Update(System.Collections.Generic.List{`0})">
            <summary>
            更新多条数据
            </summary>
            <param name="entitys">数据列表</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Simple.WCFClient">
            <summary>
            动态WCF创建的类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Simple.WCFClient.ClientHelperItems">
            <summary>
            当前所有实例化过的WCF项目
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Simple.WCFClient.LockerItemObject">
            <summary>
            用于创建WCF项目时锁定
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Simple.WCFClient.LokcerObject">
            <summary>
            创建函数项目时锁定
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Simple.WCFClient.ClientHelperMeothods">
            <summary>
            当前WCF运行函数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFClient.Invoke(System.String,System.String,System.Object[])">
            <summary>
            运行一个WCF
            </summary>
            <param name="modelFullTypeName">运行的实体全名</param>
            <param name="methodName">运行函数名</param>
            <param name="pObjects">运行参数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFClient.GetMethodResult(System.String,System.Object[])">
            <summary>
            调用函数并取得返回值
            </summary>
            <param name="methodName">调用的函数名</param>
            <param name="pObjects">此函数传参</param>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Simple.WCFClient.baseInterface">
            <summary>
            当前Model的Interface类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Simple.WCFClient.clientHelperType">
            <summary>
            当前Model的CilentHelper类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Simple.WCFClient.Client">
            <summary>
            取得客户端(使用配置中的连接字符串)
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFClient.#ctor(System.String)">
            <summary>
            构造函数.非共公构造
            </summary>
            <param name="modelFullName"></param>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Simple.WCF">
            <summary>
            简易WCF连接客户端
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF.IdList(System.String,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得ID列表
            </summary>
            <param name="modelFullTypeName">WCF类型</param>
            <param name="page">要取得第几页(从1开始)</param>
            <param name="size">每页多少条数据</param>
            <param name="filters">查询条件</param>
            <param name="orders">排序条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF.IdListAll(System.String,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            循环取得某条件ID列表(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="modelFullTypeName">WCF类型</param>
            <param name="filters">查询条件</param>
            <param name="pagesize">每页取多少条.默认是4000条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF.IdListAll(System.String,System.Int32)">
            <summary>
            循环取得某条件ID列表(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="modelFullTypeName">WCF类型</param>
            <param name="pagesize">每页取多少条.默认是4000条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF.ColumnsAll(System.String,System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            取得指定字段的分页列表(用于大数据表,想节约查询时间的情况)(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="modelFullTypeName">WCF类型</param>
            <param name="columns">需要查询的字段列表</param>
            <param name="pagesize">每页取多少条.默认是400条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF.Columns(System.String,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得指定字段的分页列表(用于大数据表,想节约查询时间的情况)
            </summary>
            <param name="modelFullTypeName">WCF类型</param>
            <param name="page">要取得第几页(从1开始)</param>
            <param name="size">每页多少条数据</param>
            <param name="filters">查询条件</param>
            <param name="orders">排序条件</param>
            <param name="columns">需要查询的字段列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF.ColumnsAll(System.String,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            取得指定字段的分页列表(用于大数据表,想节约查询时间的情况)(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="modelFullTypeName">WCF类型</param>
            <param name="filters">查询条件</param>
            <param name="columns">需要查询的字段列表</param>
            <param name="pagesize">每页取多少条.默认是400条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF.QueryAll(System.String,System.Int32)">
            <summary>
            循环取得所有数据(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="modelFullTypeName">WCF类型</param>
            <param name="pagesize">每页取多少条.默认是400条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF.Query(System.String,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="modelFullTypeName">WCF类型</param>
            <param name="page">要取得第几页(从1开始)</param>
            <param name="size">每页多少条数据</param>
            <param name="filters">查询条件</param>
            <param name="orders">排序条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF.QueryAll(System.String,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            循环取得某条件下的所有数据(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="modelFullTypeName">WCF类型</param>
            <param name="filters">查询条件</param>
            <param name="pagesize">每页取多少条.默认是400条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF.Query(System.String,System.Int32)">
            <summary>
            取得单条数据
            </summary>
            <param name="modelFullTypeName">WCF类型</param>
            <param name="PkId">查找主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF.Query(System.String,System.Collections.Generic.List{System.Int32})">
            <summary>
            取得多条数据
            </summary>
            <param name="modelFullTypeName">WCF类型</param>
            <param name="PkIdList">查找主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF.Count(System.String,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得符合条件的记录总数
            </summary>
            <param name="modelFullTypeName">WCF类型</param>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF.Count(System.String)">
            <summary>
            取得录总数
            </summary>
            <param name="modelFullTypeName">WCF类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF.GroupBy(System.String,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得当前条件下的统计数据
            </summary>
            <param name="modelFullTypeName">WCF类型</param>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF.GroupBy(System.String,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得可分页的统计数据
            </summary>
            <param name="modelFullTypeName">WCF类型</param>
            <param name="page">页数</param>
            <param name="pagesize">每页条目数</param>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="orders">The orders.</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF.Add(System.String,System.Object)">
            <summary>
            插入一条数据
            </summary>
            <param name="modelFullTypeName">WCF类型</param>
            <param name="entity">数据记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF.Add(System.String,System.Collections.IEnumerable)">
            <summary>
            插入多条数据
            </summary>
            <param name="modelFullTypeName">WCF类型</param>
            <param name="entitys">数据列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF.Update(System.String,System.Object)">
            <summary>
            更新一条数据
            </summary>
            <param name="modelFullTypeName">WCF类型</param>
            <param name="entity">数据记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCF.Update(System.String,System.Collections.IEnumerable)">
            <summary>
            更新多条数据
            </summary>
            <param name="modelFullTypeName">WCF类型</param>
            <param name="entitys">数据列表</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Simple.SimpleWCFClientConfig">
            <summary>
            简单WCF连接的配置
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Simple.SimpleWCFClientConfig.Key">
            <summary>
            唯一主键.WCF实体类型全名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Simple.SimpleWCFClientConfig.ConnectionKey">
            <summary>
            连接字符串(默认值为new)
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Simple.WCFbyKey`1">
            <summary>
            使用自定义连接字符的简易WCF连接客户端
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFbyKey`1.Client(System.String)">
            <summary>
            取得客户端
            </summary>
            <param name="connectionKey">连接字符串(new,old,等)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFbyKey`1.IdList(System.String,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得ID列表
            </summary>
            <param name="connectionKey">连接字符串(传入new,old,等)</param>
            <param name="page">要取得第几页(从1开始)</param>
            <param name="size">每页多少条数据</param>
            <param name="filters">查询条件</param>
            <param name="orders">排序条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFbyKey`1.IdListAll(System.String,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            循环取得某条件ID列表(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="connectionKey">连接字符串(传入new,old,等)</param>
            <param name="filters">查询条件</param>
            <param name="pagesize">每页取多少条.默认是4000条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFbyKey`1.IdListAll(System.String,System.Int32)">
            <summary>
            循环取得某条件ID列表(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="connectionKey">连接字符串(传入new,old,等)</param>
            <param name="pagesize">每页取多少条.默认是4000条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFbyKey`1.ColumnsAll(System.String,System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            取得指定字段的分页列表(用于大数据表,想节约查询时间的情况)(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="connectionKey">连接字符串(传入new,old,等)</param>
            <param name="columns">需要查询的字段列表</param>
            <param name="pagesize">每页取多少条.默认是400条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFbyKey`1.Columns(System.String,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得指定字段的分页列表(用于大数据表,想节约查询时间的情况)
            </summary>
            <param name="connectionKey">连接字符串(传入new,old,等)</param>
            <param name="page">要取得第几页(从1开始)</param>
            <param name="size">每页多少条数据</param>
            <param name="filters">查询条件</param>
            <param name="orders">排序条件</param>
            <param name="columns">需要查询的字段列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFbyKey`1.ColumnsAll(System.String,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            取得指定字段的分页列表(用于大数据表,想节约查询时间的情况)(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="connectionKey">连接字符串(传入new,old,等)</param>
            <param name="filters">查询条件</param>
            <param name="columns">需要查询的字段列表</param>
            <param name="pagesize">每页取多少条.默认是400条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFbyKey`1.QueryAll(System.String,System.Int32)">
            <summary>
            循环取得所有数据(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="connectionKey">连接字符串(传入new,old,等)</param>
            <param name="pagesize">每页取多少条.默认是400条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFbyKey`1.Query(System.String,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="connectionKey">连接字符串(传入new,old,等)</param>
            <param name="page">要取得第几页(从1开始)</param>
            <param name="size">每页多少条数据</param>
            <param name="filters">查询条件</param>
            <param name="orders">排序条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFbyKey`1.QueryAll(System.String,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            循环取得某条件下的所有数据(房源等大数据表及日志表不要循环查询所有)
            </summary>
            <param name="connectionKey">连接字符串(传入new,old,等)</param>
            <param name="filters">查询条件</param>
            <param name="pagesize">每页取多少条.默认是400条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFbyKey`1.Query(System.String,System.Int32)">
            <summary>
            取得单条数据
            </summary>
            <param name="connectionKey">连接字符串(传入new,old,等)</param>
            <param name="PkId">查找主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFbyKey`1.Query(System.String,System.Collections.Generic.List{System.Int32})">
            <summary>
            取得多条数据
            </summary>
            <param name="connectionKey">连接字符串(传入new,old,等)</param>
            <param name="PkIdList">查找主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFbyKey`1.Count(System.String,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得符合条件的记录总数
            </summary>
            <param name="connectionKey">连接字符串(传入new,old,等)</param>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFbyKey`1.Count(System.String)">
            <summary>
            取得录总数
            </summary>
            <param name="connectionKey">连接字符串(传入new,old,等)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFbyKey`1.GroupBy(System.String,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得当前条件下的统计数据
            </summary>
            <param name="connectionKey">连接字符串(传入new,old,等)</param>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFbyKey`1.GroupBy(System.String,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得可分页的统计数据
            </summary>
            <param name="connectionKey">连接字符串(传入new,old,等)</param>
            <param name="page">页数</param>
            <param name="pagesize">每页条目数</param>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="orders">The orders.</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFbyKey`1.Add(System.String,`0)">
            <summary>
            插入一条数据
            </summary>
            <param name="connectionKey">连接字符串(传入new,old,等)</param>
            <param name="entity">数据记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFbyKey`1.Add(System.String,System.Collections.Generic.List{`0})">
            <summary>
            插入多条数据
            </summary>
            <param name="connectionKey">连接字符串(传入new,old,等)</param>
            <param name="entitys">数据列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFbyKey`1.Update(System.String,`0)">
            <summary>
            更新一条数据
            </summary>
            <param name="connectionKey">连接字符串(传入new,old,等)</param>
            <param name="entity">数据记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Simple.WCFbyKey`1.Update(System.String,System.Collections.Generic.List{`0})">
            <summary>
            更新多条数据
            </summary>
            <param name="connectionKey">连接字符串(传入new,old,等)</param>
            <param name="entitys">数据列表</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DataSource.DataCommand.CompareType">
            <summary>
            比较类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.DataCommand.CompareType.等于">
            <summary>
            
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.DataCommand.CompareType.不等于">
            <summary>
            
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.DataCommand.CompareType.大于">
            <summary>
            
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.DataCommand.CompareType.小于">
            <summary>
            
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.DataCommand.CompareType.大于等于">
            <summary>
            
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.DataCommand.CompareType.小于等于">
            <summary>
            
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.DataCommand.CompareType.Like">
            <summary>
            
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.DataCommand.CompareType.In">
            <summary>
            
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.DataCommand.CompareType.NotIn">
            <summary>
            
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DataSource.DataCommand.DataCommandBase`1">
            <summary>
            DataCommand操作基类
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.DataCommandBase`1.#ctor(MangoMis.Frame.DB.Info.DBInfo)">
            <summary>
            DataCommand操作基类
            </summary>
            <param name="currentDbInfo"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.DataCommandBase`1.GetTableName">
            <summary>
            取得当前操作的表名
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.DataCommandBase`1.GetConnectionString">
            <summary>
            取得当前数据连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.DataSource.DataCommand.DataCommandBase`1.CurrentDbInfo">
            <summary>
            数据源信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.DataCommandBase`1.FisrtOrDefault(System.Func{`0,System.Boolean})">
            <summary>
            查出第一个符合条件的对象.如果没有.返回Null
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.DataCommandBase`1.Delete(System.Object)">
            <summary>
            删除一条记录
            </summary>
            <param name="entityKey">记录主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.DataCommandBase`1.Delete(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            删除记录列表
            </summary>
            <param name="entityKeys">记录主键列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.DataCommandBase`1.Clear">
            <summary>
            清空表中所有记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.DataCommandBase`1.Insert(System.Object,`0)">
            <summary>
            插入一条记录
            </summary>
            <param name="entityKey">主键</param>
            <param name="entity">记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.DataCommandBase`1.Insert(System.Collections.Generic.IDictionary{System.Object,`0})">
            <summary>
            插入记录列表
            </summary>
            <param name="keyAndEntities">记录列表,包括主键值与实体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.DataCommandBase`1.Update(System.Object,`0)">
            <summary>
            更新一条记录
            </summary>
            <param name="entityKey">主键</param>
            <param name="entity">记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.DataCommandBase`1.Update(System.Collections.Generic.IDictionary{System.Object,`0})">
            <summary>
            更新记录列表
            </summary>
            <param name="keyAndEntities">记录列表,包括主键值与实体</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DataSource.DataCommand.CommandParam">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.CommandParam.ToCollection(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            转成集合模式
            </summary>
            <param name="filters"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.CommandParam.ToCollection(System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            转成集合模式
            </summary>
            <param name="orders"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DataSource.DataCommand.FilterCollection">
            <summary>
            查询条件集合
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.DataCommand.FilterCollection.Item(System.Int32)">
            <summary>
            取得子项
            </summary>
            <param name="index">索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.FilterCollection.ToList">
            <summary>
            转成列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.FilterCollection.Add(System.String,MangoMis.Frame.DataSource.DataCommand.CompareType,System.Object)">
            <summary>
            添加一个查询条件
            </summary>
            <param name="columnName">查询名</param>
            <param name="compareType">对比列表</param>
            <param name="value">对比值</param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.FilterCollection.Add(System.String,System.String,System.String)">
            <summary>
            添加一个自定义条件(一般用于自定查询)
            </summary>
            <param name="columnName"></param>
            <param name="compareString"></param>
            <param name="valueString"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.FilterCollection.Add(TT.Common.Frame.Model.CommonFilterModel)">
            <summary>
            添加字段,已有字段则覆盖字段
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.FilterCollection.AddRanger(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            添加字段,已有字段则覆盖字段
            </summary>
            <param name="columns"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.FilterCollection.Filters(System.String)">
            <summary>
            查询所有某字段的条件
            </summary>
            <param name="filterName"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.FilterCollection.Where(System.Func{TT.Common.Frame.Model.CommonFilterModel,System.Boolean})">
            <summary>
            查询对应的内容
            </summary>
            <param name="compare"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.FilterCollection.FirstIndex(System.String)">
            <summary>
            查找第一个索引
            </summary>
            <param name="columnName">字段名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.FilterCollection.Remove(System.Int32)">
            <summary>
            移除项目
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.FilterCollection.GetEnumerator">
            <summary>
            返回一个循环访问集合的枚举器。
            </summary>
            <returns>
            可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator"/> 对象。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.FilterCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            从特定的 <see cref="T:System.Array"/> 索引处开始，将 <see cref="T:System.Collections.ICollection"/> 的元素复制到一个 <see cref="T:System.Array"/> 中。
            </summary>
            <param name="array">作为从 <see cref="T:System.Collections.ICollection"/> 复制的元素的目标位置的一维 <see cref="T:System.Array"/>。<see cref="T:System.Array"/> 必须具有从零开始的索引。</param><param name="index"><paramref name="array"/> 中从零开始的索引，将在此处开始复制。</param><exception cref="T:System.ArgumentNullException"><paramref name="array"/> 为 null。</exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> 小于零。</exception><exception cref="T:System.ArgumentException"><paramref name="array"/> 是多维的。- 或 -源 <see cref="T:System.Collections.ICollection"/> 中的元素数目大于从 <paramref name="index"/> 到目标 <paramref name="array"/> 末尾之间的可用空间。</exception><exception cref="T:System.ArgumentException">源 <see cref="T:System.Collections.ICollection"/> 的类型无法自动转换为目标 <paramref name="array"/> 的类型。</exception><filterpriority>2</filterpriority>
        </member>
        <member name="P:MangoMis.Frame.DataSource.DataCommand.FilterCollection.Count">
            <summary>
            获取 <see cref="T:System.Collections.ICollection"/> 中包含的元素数。
            </summary>
            <returns>
            <see cref="T:System.Collections.ICollection"/> 中包含的元素数。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:MangoMis.Frame.DataSource.DataCommand.FilterCollection.SyncRoot">
            <summary>
            获取一个可用于同步对 <see cref="T:System.Collections.ICollection"/> 的访问的对象。
            </summary>
            <returns>
            可用于同步对 <see cref="T:System.Collections.ICollection"/> 的访问的对象。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:MangoMis.Frame.DataSource.DataCommand.FilterCollection.IsSynchronized">
            <summary>
            获取一个值，该值指示是否同步对 <see cref="T:System.Collections.ICollection"/> 的访问（线程安全）。
            </summary>
            <returns>
            如果对 <see cref="T:System.Collections.ICollection"/> 的访问是同步的（线程安全），则为 true；否则为 false。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:MangoMis.Frame.DataSource.DataCommand.OrderCollection">
            <summary>
            查询条件集合
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.DataCommand.OrderCollection.Item(System.Int32)">
            <summary>
            取得子项
            </summary>
            <param name="index">索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.OrderCollection.ToList">
            <summary>
            转成列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.OrderCollection.AddDECS(System.String)">
            <summary>
            添加一个倒序条件
            </summary>
            <param name="columnName"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.OrderCollection.AddASC(System.String)">
            <summary>
            添加一个正序条件
            </summary>
            <param name="columnName"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.OrderCollection.Add(TT.Common.Frame.Model.CommonOrderModel)">
            <summary>
            添加字段,已有字段则覆盖字段
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.OrderCollection.AddRanger(System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            添加字段,已有字段则覆盖字段
            </summary>
            <param name="columns"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.OrderCollection.Remove(System.Int32)">
            <summary>
            移除项目
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.OrderCollection.FirstIndex(System.String)">
            <summary>
            查找第一个索引
            </summary>
            <param name="columnName">字段名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.OrderCollection.GetEnumerator">
            <summary>
            返回一个循环访问集合的枚举器。
            </summary>
            <returns>
            可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator"/> 对象。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.OrderCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            从特定的 <see cref="T:System.Array"/> 索引处开始，将 <see cref="T:System.Collections.ICollection"/> 的元素复制到一个 <see cref="T:System.Array"/> 中。
            </summary>
            <param name="array">作为从 <see cref="T:System.Collections.ICollection"/> 复制的元素的目标位置的一维 <see cref="T:System.Array"/>。<see cref="T:System.Array"/> 必须具有从零开始的索引。</param><param name="index"><paramref name="array"/> 中从零开始的索引，将在此处开始复制。</param><exception cref="T:System.ArgumentNullException"><paramref name="array"/> 为 null。</exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> 小于零。</exception><exception cref="T:System.ArgumentException"><paramref name="array"/> 是多维的。- 或 -源 <see cref="T:System.Collections.ICollection"/> 中的元素数目大于从 <paramref name="index"/> 到目标 <paramref name="array"/> 末尾之间的可用空间。</exception><exception cref="T:System.ArgumentException">源 <see cref="T:System.Collections.ICollection"/> 的类型无法自动转换为目标 <paramref name="array"/> 的类型。</exception><filterpriority>2</filterpriority>
        </member>
        <member name="P:MangoMis.Frame.DataSource.DataCommand.OrderCollection.Count">
            <summary>
            获取 <see cref="T:System.Collections.ICollection"/> 中包含的元素数。
            </summary>
            <returns>
            <see cref="T:System.Collections.ICollection"/> 中包含的元素数。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:MangoMis.Frame.DataSource.DataCommand.OrderCollection.SyncRoot">
            <summary>
            获取一个可用于同步对 <see cref="T:System.Collections.ICollection"/> 的访问的对象。
            </summary>
            <returns>
            可用于同步对 <see cref="T:System.Collections.ICollection"/> 的访问的对象。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:MangoMis.Frame.DataSource.DataCommand.OrderCollection.IsSynchronized">
            <summary>
            获取一个值，该值指示是否同步对 <see cref="T:System.Collections.ICollection"/> 的访问（线程安全）。
            </summary>
            <returns>
            如果对 <see cref="T:System.Collections.ICollection"/> 的访问是同步的（线程安全），则为 true；否则为 false。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:MangoMis.Frame.DataSource.DataCommand.IDataCommand">
            <summary>
            数据操作类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.IDataCommand.Insert(System.Object,System.Object)">
            <summary>
            插入一条记录
            </summary>
            <param name="entityKey">主键</param>
            <param name="entity">记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.IDataCommand.Insert(System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>
            插入记录列表
            </summary>
            <param name="keyAndEntities">记录列表,包括主键值与实体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.IDataCommand.Update(System.Object,System.Object)">
            <summary>
            更新一条记录
            </summary>
            <param name="entityKey">主键</param>
            <param name="entity">记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.IDataCommand.Update(System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>
            更新记录列表
            </summary>
            <param name="keyAndEntities">记录列表,包括主键值与实体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.IDataCommand.Delete(System.Object)">
            <summary>
            删除一条记录
            </summary>
            <param name="entityKey">记录主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.IDataCommand.Delete(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            删除记录列表
            </summary>
            <param name="entityKeys">记录主键列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.IDataCommand.Clear">
            <summary>
            清空表中所有记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.IDataCommand.GetConnectionString">
            <summary>
            取得当前数据连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.IDataCommand.GetTableName">
            <summary>
            取得当前操作的表名
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.DataSource.DataCommand.IDataCommand.CurrentDbInfo">
            <summary>
            数据源信息
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DataSource.DataCommand.IDataCommand`1">
            <summary>
            数据操作 直接操作数据源运行语句查询数据
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.IDataCommand`1.Insert(System.Object,`0)">
            <summary>
            插入一条记录
            </summary>
            <param name="entityKey">主键</param>
            <param name="entity">记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.IDataCommand`1.Insert(System.Collections.Generic.IDictionary{System.Object,`0})">
            <summary>
            插入记录列表
            </summary>
            <param name="keyAndEntities">记录列表,包括主键值与实体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.IDataCommand`1.Update(System.Object,`0)">
            <summary>
            更新一条记录
            </summary>
            <param name="entityKey">主键</param>
            <param name="entity">记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.DataCommand.IDataCommand`1.Update(System.Collections.Generic.IDictionary{System.Object,`0})">
            <summary>
            更新记录列表
            </summary>
            <param name="keyAndEntities">记录列表,包括主键值与实体</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Model.QueryBase`1">
            <summary>
            查询类型的基类.用于初始化Object类型的类型
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.Get(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.GetCount(System.Func{`0,System.Boolean})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.Get">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.Get(System.Func{`0,System.Boolean})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.Get(System.Int32,System.Int32,System.Func{`0,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[])">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.Get(System.Int32,System.Int32,System.Func{`0,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[],System.String[])">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.Get(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.Find(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.Find(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.FisrtOrDefault(System.Func{`0,System.Boolean})">
            <summary>
            查出第一个符合条件的对象.如果没有.返回Null
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.Count(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.MangoMis#Frame#DataSource#Model#IQuery#Query">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.MangoMis#Frame#DataSource#Model#IQuery#Query(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.MangoMis#Frame#DataSource#Model#IQuery#Query(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.MangoMis#Frame#DataSource#Model#IQuery#QueryColumns(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.MangoMis#Frame#DataSource#Model#IQuery#GroupBy(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.MangoMis#Frame#DataSource#Model#IQuery#GroupBy(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="filters">条件</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.Query">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.Query(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.Query(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.QueryColumns(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.GroupBy(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.GroupBy(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="filters">条件</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.All">
            <summary>
            取得所有列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.QueryBase`1.MangoMis#Frame#DataSource#Model#IQuery#All">
            <summary>
            取得所有列表
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Model.IQuery">
            <summary>
            允许查询的接口
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery.Get(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery.Get(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery.Find(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery.Find(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery.Count(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery.Get">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery.Query">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery.Get(System.Func{System.Object,System.Boolean})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery.Query(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery.All">
            <summary>
            取得所有列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery.Get(System.Int32,System.Int32,System.Func{System.Object,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[])">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery.Query(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery.Get(System.Int32,System.Int32,System.Func{System.Object,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[],System.String[])">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery.QueryColumns(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery.GroupBy(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery.GroupBy(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="filters">条件</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Model.IQuery`1">
            <summary>
            允许查询的接口
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery`1.All">
            <summary>
            取得所有列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery`1.Get(System.Object)">
            <summary>
            按主键(唯一键)取得实体(允许返回Null值)
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery`1.Get(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery`1.Get">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery`1.FisrtOrDefault(System.Func{`0,System.Boolean})">
            <summary>
            查出第一个符合条件的对象.如果没有.返回Null
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery`1.Get(System.Func{`0,System.Boolean})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery`1.GetCount(System.Func{`0,System.Boolean})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery`1.Get(System.Int32,System.Int32,System.Func{`0,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[])">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery`1.Get(System.Int32,System.Int32,System.Func{`0,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[],System.String[])">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery`1.Find(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery`1.Find(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery`1.Query">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery`1.Query(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery`1.Query(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery`1.QueryColumns(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery`1.GroupBy(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.IQuery`1.GroupBy(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="filters">条件</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Model.SimpleColumn">
            <summary>
            数据字段
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleColumn.#ctor">
            <summary>
            不初始化任何字段(最好不要用)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleColumn.#ctor(System.String)">
            <summary>
            只初始化字段名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleColumn.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            初始化字段
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleColumn.GetValue(System.Object)">
            <summary>
            得到字段的值
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleColumn.SetValue(System.Object,System.Object)">
            <summary>
            为字段赋值
            </summary>
            <param name="entity">实体</param>
            <param name="value">字段值</param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleColumn.PropertyType">
            <summary>
            取得类型
            </summary>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.DataSource.Model.SimpleColumn.IsDateTime">
            <summary>
            字段名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Model.SimpleColumn.Name">
            <summary>
            字段名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Model.SimpleColumn.Memo">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Model.SimpleColumn.IsInsert">
            <summary>
            是否参与插入操作(防止主键自增时给赋值)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Model.SimpleColumn.CurrentType">
            <summary>
            当前字段类型
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Model.SimpleDBServer">
            <summary>
            数据服务基础
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleDBServer.#ctor(MangoMis.Frame.DB.Info.DbServerType)">
            <summary>
            初始化一个数据服务基础
            </summary>
            <param name="serverType"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleDBServer.ColumnType(System.Type)">
            <summary>
            初始化一个字段类型
            </summary>
            <param name="currentType">当前类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleDBServer.NewColumn(System.Reflection.PropertyInfo)">
            <summary>
            初始化一个新的字段
            </summary>
            <param name="propertyInfo">字段属性</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleDBServer.NewTable(System.Type,System.String,System.String)">
            <summary>
            初始化表
            </summary>
            <param name="tableType">表类型</param>
            <param name="tableName">存储使用的表名</param>
            <param name="pkIdColumn">主键字段</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Model.ITypeMapTo">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.ITypeMapTo.DeclareString(MangoMis.Frame.DataSource.Model.SourceColumnType)">
            <summary>
            取得类型创建字符串
            </summary>
            <param name="_columnType">Data类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.ITypeMapTo.MapType(MangoMis.Frame.DataSource.Model.SourceColumnType)">
            <summary>
            取得数据类型
            </summary>
            <param name="_columnType">Data类型</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Model.SimpleColumnCollection">
            <summary>
            简单字段数据集合
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Model.SimpleColumnCollection.Item(System.Int32)">
            <summary>
            取得子项
            </summary>
            <param name="index">索引</param>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Model.SimpleColumnCollection.Item(System.String)">
            <summary>
            取得子项
            </summary>
            <param name="columnName">字段名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleColumnCollection.#ctor">
            <summary>
            默认初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleColumnCollection.#ctor(System.String[])">
            <summary>
            初始化只有字段名的字段集合
            </summary>
            <param name="columnNames"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleColumnCollection.Contains(System.String)">
            <summary>
            是否包含字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleColumnCollection.ContainsLower(System.String)">
            <summary>
            是否包含字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleColumnCollection.GetColumnNameByLowerName(System.String)">
            <summary>
            是否包含字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleColumnCollection.ToList">
            <summary>
            转换成列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleColumnCollection.Add(MangoMis.Frame.DataSource.Model.SimpleColumn)">
            <summary>
            添加字段,已有字段则覆盖字段
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleColumnCollection.GetEnumerator">
            <summary>
            返回一个循环访问集合的枚举器。
            </summary>
            <returns>
            可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator"/> 对象。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleColumnCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            从特定的 <see cref="T:System.Array"/> 索引处开始，将 <see cref="T:System.Collections.ICollection"/> 的元素复制到一个 <see cref="T:System.Array"/> 中。
            </summary>
            <param name="array">作为从 <see cref="T:System.Collections.ICollection"/> 复制的元素的目标位置的一维 <see cref="T:System.Array"/>。<see cref="T:System.Array"/> 必须具有从零开始的索引。</param><param name="index"><paramref name="array"/> 中从零开始的索引，将在此处开始复制。</param><exception cref="T:System.ArgumentNullException"><paramref name="array"/> 为 null。</exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> 小于零。</exception><exception cref="T:System.ArgumentException"><paramref name="array"/> 是多维的。- 或 -源 <see cref="T:System.Collections.ICollection"/> 中的元素数目大于从 <paramref name="index"/> 到目标 <paramref name="array"/> 末尾之间的可用空间。</exception><exception cref="T:System.ArgumentException">源 <see cref="T:System.Collections.ICollection"/> 的类型无法自动转换为目标 <paramref name="array"/> 的类型。</exception><filterpriority>2</filterpriority>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Model.SimpleColumnCollection.Count">
            <summary>
            获取 <see cref="T:System.Collections.ICollection"/> 中包含的元素数。
            </summary>
            <returns>
            <see cref="T:System.Collections.ICollection"/> 中包含的元素数。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Model.SimpleColumnCollection.SyncRoot">
            <summary>
            获取一个可用于同步对 <see cref="T:System.Collections.ICollection"/> 的访问的对象。
            </summary>
            <returns>
            可用于同步对 <see cref="T:System.Collections.ICollection"/> 的访问的对象。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Model.SimpleColumnCollection.IsSynchronized">
            <summary>
            获取一个值，该值指示是否同步对 <see cref="T:System.Collections.ICollection"/> 的访问（线程安全）。
            </summary>
            <returns>
            如果对 <see cref="T:System.Collections.ICollection"/> 的访问是同步的（线程安全），则为 true；否则为 false。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Model.SimpleTable">
            <summary>
            简单数据表实例
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Model.SimpleTable.ExpireSeconds">
            <summary>
            记录过期时间(秒)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Model.SimpleTable.SetExpireWhenGetItem">
            <summary>
            取得数据同时设置超时时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Model.SimpleTable.HasKeysField">
            <summary>
            有Key字段
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Model.SimpleTable.CurrentType">
            <summary>
            当前实体的类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Model.SimpleTable.DbInfoKey">
            <summary>
            此实体所在的DbInfo
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Model.SimpleTable.PkIdColumnName">
            <summary>
            创建的主键名(唯一键值)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Model.SimpleTable.Title">
            <summary>
            表名标题.非唯一
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Model.SimpleTable.Name">
            <summary>
            表名(唯一值)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Model.SimpleTable.Memo">
            <summary>
            描述(说明字段)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleTable.Columns">
            <summary>
            表中所有的字段
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleTable.PkCoulumn">
            <summary>
            主键字段
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleTable.#ctor">
            <summary>
            初始化表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleTable.#ctor(System.String,System.String,System.Type,System.String,System.String)">
            <summary>
            服务使用的实体的信息
            </summary>
            <param name="name">系统中唯一命名,实体名(用于保存的名,比如表名,文件名等)</param>
            <param name="pkIdColumnName">主键名</param>
            <param name="entityType">实体类型</param>
            <param name="title">实体标题</param>
            <param name="dbInfoKey">DbInfokey</param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleTable.#ctor(System.Type,System.String,System.String)">
            <summary>
            初始化表中字段
            </summary>
            <param name="current">实体类型</param>
            <param name="tableName">系统中唯一命名,实体名(用于保存的名,比如表名,文件名等)</param>
            <param name="pkIdName">主键名</param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleTable.NewEntity(System.Object[],System.Type[])">
            <summary>
            新建实体
            </summary>
            <param name="initParams">实例化实体时的初始化参数</param>
            <param name="GenericTypes">实体的泛型类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleTable.PkId(System.Object)">
            <summary>
            取得对应的主键
            </summary>
            <param name="entity">需要取得主键的实体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleTable.SetPkId(System.Object,System.Object)">
            <summary>
            设置对应的主键
            </summary>
            <param name="entity">需要取得主键的实体</param>
            <param name="PkId">主键值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleTable.PkConvert(System.Object)">
            <summary>
            取得对应的主键的类型值
            </summary>
            <param name="objectPkid">主键的Object值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.SimpleTable.FillValuesWithNoNull(System.Object,System.Object)">
            <summary>
            使用一个实体中的非NULL值,替换实体中的对应值
            </summary>
            <param name="entity">被替换的实体(最终使用对象)</param>
            <param name="ValueResource">值的来源实体.</param>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Model.SourceColumnType">
            <summary>
            数据类型的枚举
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.Model.SourceColumnType.TinyInt">
            <summary>
            短整型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.Model.SourceColumnType.Int">
            <summary>
            整型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.Model.SourceColumnType.BigInt">
            <summary>
            长整型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.Model.SourceColumnType.DateTime">
            <summary>
            日期时间类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.Model.SourceColumnType.Double">
            <summary>
            双精度类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.Model.SourceColumnType.Float">
            <summary>
            单精度类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.Model.SourceColumnType.Decimal">
            <summary>
            实型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.Model.SourceColumnType.String">
            <summary>
            字符串类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.Model.SourceColumnType.Defalut">
            <summary>
            默认=String
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Model.TypeMapToBase`1">
            <summary>
            数据类型映射关系实例(用于被继承)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.TypeMapToBase`1.AppendColumnDeclare(`0,System.String)">
            <summary>
            添加一个字段定义的映射
            </summary>
            <param name="mappingType">字段类型</param>
            <param name="declareString">字义类型的字符串</param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.TypeMapToBase`1.MapToInt(`0)">
            <summary>
            将类型映射到[Int]
            </summary>
            <param name="mappingType"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.TypeMapToBase`1.MapToTinyInt(`0)">
            <summary>
            将类型映射到[TinyInt]
            </summary>
            <param name="mappingType"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.TypeMapToBase`1.MapToBigInt(`0)">
            <summary>
            将类型映射到[BigInt]
            </summary>
            <param name="mappingType"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.TypeMapToBase`1.MapToDateTime(`0)">
            <summary>
            将类型映射到[DateTime]
            </summary>
            <param name="mappingType"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.TypeMapToBase`1.MapToDecimal(`0)">
            <summary>
            将类型映射到[Decimal]
            </summary>
            <param name="mappingType"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.TypeMapToBase`1.MapToFloat(`0)">
            <summary>
            将类型映射到[Float]
            </summary>
            <param name="mappingType"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.TypeMapToBase`1.MapToDouble(`0)">
            <summary>
            将类型映射到[Double]
            </summary>
            <param name="mappingType"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.TypeMapToBase`1.MapToString(`0)">
            <summary>
            将类型映射到[String]
            </summary>
            <param name="mappingType"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.TypeMapToBase`1.MapToDefalut(`0)">
            <summary>
            将类型映射到[Default]
            </summary>
            <param name="mappingType"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.TypeMapToBase`1.DeclareString(System.Object)">
            <summary>
            取得类型创建字符串
            </summary>
            <param name="type">Data类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.TypeMapToBase`1.DeclareString(MangoMis.Frame.DataSource.Model.SourceColumnType)">
            <summary>
            取得类型创建字符串
            </summary>
            <param name="_columnType">Data类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.TypeMapToBase`1.MapType(MangoMis.Frame.DataSource.Model.SourceColumnType)">
            <summary>
            取得数据类型
            </summary>
            <param name="_columnType">Data类型</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Model.TypeMapToDB">
            <summary>
            DB映射器
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Model.TypeMapToDB.Mapping">
            <summary>
            DB类型的映射器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.TypeMapToDB.#ctor">
            <summary>
            初始化一个默认的DB映射器
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Model.TypeMapToSql">
            <summary>
            Sql映射器
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Model.TypeMapToSql.Mapping">
            <summary>
            Sql类型的映射器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.Model.TypeMapToSql.#ctor">
            <summary>
            初始化一个默认的Sql映射器
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DataSource.Model.MgType">
            <summary>
            应用程序中使用的类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Model.MgType.DataType">
            <summary>
            取得对象的数据类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.Model.MgType.TypeDeclareString">
            <summary>
            定义字段类型的字符串
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DataSource.HttpData.ApiStatic">
            <summary>
            ApiStatic
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.HttpData.ApiStatic.with_none_getter_times">
            <summary>
            当取得数据为Null的时候重新取得的次数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.HttpData.ApiStatic.UpdateSiteCacheByApiStatic(System.String,System.String,System.String)">
            <summary>
            通过WCF更新其它站点内缓存
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.HttpData.ApiStatic.GetStringFromServicePage(System.Object)">
            <summary>
            通过GetService页面取得String值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.HttpData.ApiStatic.GetStringByLocalOrProjectName(System.String)">
            <summary>
            通过GetService页面取得String值(如果本站名非取得对应的数据.则通过ProjectName取得)
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.HttpData.ApiStatic.GetApistaticLogToken">
            <summary>
            从APIStatic取得日志的Token
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.HttpData.ApiStatic.GetStringList(System.String)">
            <summary>
            取得以$分割的字符串列表
            </summary>
            <param name="list_string">The site list.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.DataSource.HttpData.ApiStatic.With_None_later``1(System.Func{``0},System.Int32)">
            <summary>
            当取得数据为NULL的时候重新取得数据
            </summary>
            <param name="getter">取得数据的函数</param>
            <param name="last_times">剩余次数</param>
            <typeparam name="MT"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.HttpData.ApiStatic.Clear(System.Nullable{MangoMis.Frame.Model.ApiStaticGetType})">
            <summary>
            清空当前数据,重新从网络获取
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DataSource.SqlData.Sql_DataType">
            <summary>
            绑定数据类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.SqlData.Sql_DataType.default_type">
            <summary>
            默认的数据类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.SqlData.Sql_DataType.types">
            <summary>
            当前系统中的数据类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.Sql_DataType.#ctor(System.Data.DbType,System.Data.SqlDbType)">
            <summary>
            实例化绑定的数据类型
            </summary>
            <param name="sql">Sql中的数据类型</param>
            <param name="sqlDbType">SqlServer中的数据类型</param>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.Sql_DataType.sql_type">
            <summary>
            Sql中的数据类型 
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.Sql_DataType.sqlserver_type">
             <summary>
            Sql中的数据类型
             </summary>
        </member>
        <member name="T:MangoMis.Frame.DataSource.SqlData.SqlSource">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SqlSource.Variable">
            <summary>
            相关的独立变量
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SqlSource.server">
            <summary>
            
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SqlSource.uid">
            <summary>
            
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SqlSource.pwd">
            <summary>
            
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="F:MangoMis.Frame.DataSource.SqlData.SqlSource.connstring_base">
            <summary>
            基础连接字符串
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.SqlData.SqlSource.dbname_master">
            <summary>
            master数据库名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SqlSource.build_connstring(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            建立连接字符串
            </summary>
            <param name="dbser">服务器</param>
            <param name="dbname">数据库</param>
            <param name="userid">登陆账号</param>
            <param name="password">登陆密码</param>
            <param name="timeout_second">超时时间(1200)</param>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SqlSource.Data_Type">
            <summary>
            数据访问类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SqlSource.CreateDataBase">
            <summary>
            创建数据库.
            </summary>
            <returns>创建数据库是否成功(如果文件已存在,反回True)</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SqlSource.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SqlSource.CreateTable(MangoMis.Frame.DataSource.SqlData.SourceTable)">
            <summary>
            创建数据表
            </summary>
            <param name="mapping"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SqlSource.CompareTable(MangoMis.Frame.DataSource.SqlData.SourceTable)">
            <summary>
            对比并创建数据表
            </summary>
            <param name="mapping"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SqlSource.GetTableColumns(System.String)">
            <summary>
            取得表中的字段列表.取得表失败返回NULL
            </summary>
            <param name="tablename"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SqlSource.DataSet(System.String)">
            <summary>
            返回指定sql语句的DataSet
            </summary>
            <param name="sqlstr"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SqlSource.ExecuteSql(System.String)">
            <summary>
            执行sql语句
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SqlSource.DataSet(System.Collections.Generic.List{MangoMis.Frame.DataSource.SqlData.SqlExecuteItem})">
            <summary>
            返回指定Command语句的DataSet
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SqlSource.DataSet(MangoMis.Frame.DataSource.SqlData.SqlExecuteItem)">
            <summary>
            返回指定Command语句的DataSet
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SqlSource.ExecuteSql(System.Collections.Generic.List{MangoMis.Frame.DataSource.SqlData.SqlExecuteItem})">
            <summary>
            返回指定Command语句的DataSet
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SqlSource.ExecuteSql(MangoMis.Frame.DataSource.SqlData.SqlExecuteItem)">
            <summary>
            执行sql语句
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SqlSource.NewParameter">
            <summary>
            取得新的Sql参数
            </summary>
            <returns>Sql参数</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SqlSource.NewCommand">
            <summary>
            新建一条命令
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DataSource.SqlData.Access_DataType">
            <summary>
            绑定数据类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.SqlData.Access_DataType.default_type">
            <summary>
            默认的数据类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.SqlData.Access_DataType.types">
            <summary>
            当前系统中的数据类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.Access_DataType.#ctor(System.Data.DbType,System.Data.OleDb.OleDbType)">
            <summary>
            实例化绑定的数据类型
            </summary>
            <param name="sql">Sql中的数据类型</param>
            <param name="access">Access中的数据类型</param>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.Access_DataType.sql_type">
            <summary>
            Sql中的数据类型 
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.Access_DataType.access_type">
             <summary>
            Access中的数据类型
             </summary>
        </member>
        <member name="T:MangoMis.Frame.DataSource.SqlData.AccessSource">
            <summary>
            AccessHelper 的摘要说明
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.AccessSource.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.AccessSource.Data_Type">
            <summary>
            数据访问类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.AccessSource.Variable">
            <summary>
            相关的独立变量
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.AccessSource.CreateDataBase">
            <summary>
            创建数据库.
            </summary>
            <returns>创建数据库是否成功(如果文件已存在,反回True)</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.AccessSource.GetTableColumns(System.String)">
            <summary>
            取得表中的字段列表.取得表失败返回NULL
            </summary>
            <param name="tablename"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.AccessSource.CompareTable(MangoMis.Frame.DataSource.SqlData.SourceTable)">
            <summary>
            对比并创建数据表
            </summary>
            <param name="mapping"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.AccessSource.CreateTable(MangoMis.Frame.DataSource.SqlData.SourceTable)">
            <summary>
            创建数据表
            </summary>
            <param name="mapping"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.AccessSource.openConnection">
            <summary>
            打开数据库
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.AccessSource.NewParameter">
            <summary>
            取得新的Sql参数
            </summary>
            <returns>Sql参数</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.AccessSource.NewCommand">
            <summary>
            新建一条命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.AccessSource.ExecuteSql(System.String)">
            <summary>
            执行sql语句
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.AccessSource.DataSet(MangoMis.Frame.DataSource.SqlData.SqlExecuteItem)">
            <summary>
            返回指定Command语句的DataSet
            </summary>
            <param name="sqlExecuteItem"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.AccessSource.DataSet(System.Collections.Generic.List{MangoMis.Frame.DataSource.SqlData.SqlExecuteItem})">
            <summary>
            返回指定Command语句的DataSet
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.AccessSource.ExecuteSql(System.Collections.Generic.List{MangoMis.Frame.DataSource.SqlData.SqlExecuteItem})">
            <summary>
            返回指定Command语句的DataSet
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.AccessSource.ExecuteSql(MangoMis.Frame.DataSource.SqlData.SqlExecuteItem)">
            <summary>
            执行sql语句
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.AccessSource.DataReader(System.String)">
            <summary>
            返回指定sql语句的OleDbDataReader对象,使用时请注意关闭这个对象。
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.AccessSource.DataSet(System.String)">
            <summary>
            返回指定sql语句的DataSet
            </summary>
            <param name="sqlstr"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.AccessSource.DataSet(System.String,System.Data.DataSet@)">
            <summary>
            返回指定sql语句的DataSet
            </summary>
            <param name="sqlstr"></param>
            <param name="ds"></param>
        </member>
        <member name="T:MangoMis.Frame.DataSource.SqlData.DataCommandType">
            <summary>
            Sql运行类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.SqlData.DataCommandType.INSERT">
            <summary>
            插入
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.SqlData.DataCommandType.UPDATE">
            <summary>
            更新
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.SqlData.DataCommandType.DELETE">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.SqlData.DataCommandType.SELECT">
            <summary>
            查询
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DataSource.SqlData.SqlExecuteItem">
            <summary>
            Sql运行参数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SqlExecuteItem.TextItem(System.String,MangoMis.Frame.DataSource.SqlData.IDataSource)">
            <summary>
            返回一个运行Sql的语句
            </summary>
            <param name="text"></param>
            <param name="dbSource"></param>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SqlExecuteItem.Command">
            <summary>
            运行的命令
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SqlExecuteItem.Name">
            <summary>
            获取或设置SQL语句执行名称
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SqlExecuteItem.IsTransaction">
            <summary>
            获取或设置是否执行事务
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SqlExecuteItem.Dispose">
            <summary>
            执行与释放或重置非托管资源相关的应用程序定义的任务。
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SqlExecuteItem.Finalize">
            <summary>
            允许 <see cref="T:System.Object"/> 在“垃圾回收”回收 <see cref="T:System.Object"/> 之前尝试释放资源并执行其他清理操作。
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SqlExecuteItem.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:MangoMis.Frame.DataSource.SqlData.SqlVariable">
            <summary>
            Sql服务变量参数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SqlVariable.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            初始化
            </summary>
            <param name="sys_start">防止系统字符冲突的前置字符</param>
            <param name="sys_end">防止系统字符冲突的后置字符</param>
            <param name="str_start">字符串区别于数值的前置字符</param>
            <param name="str_end">字符串区别于数值的后置字符</param>
            <param name="like_start">模糊查找的前置字符</param>
            <param name="like_end">模糊查找的后置字符</param>
            <param name="and">And并接条件</param>
            <param name="or">Or并接条件</param>
            <param name="nolock">允许脏读字符串</param>
            <param name="paging">分页字符串</param>
            <param name="identity">取得自增的字符串</param>
            <param name="list_temp_table">列表操作时创建临时表</param>
            <param name="list_insert_id">列表操作时存放临时编号</param>
            <param name="list_id_table_getter">取得临时ID</param>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SqlVariable.LIST_ID_TABLE_GETTER">
            <summary>
            取得临时ID
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SqlVariable.LIST_TEMP_TABLE">
            <summary>
            列表操作时创建临时表
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SqlVariable.LIST_INSERT_ID">
            <summary>
            列表操作时存放临时编号
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SqlVariable.IDENTITY">
            <summary>
            取得自增的字符串
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SqlVariable.PAGING">
            <summary>
            分页字符串
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SqlVariable.NOLOCK">
            <summary>
            允许脏读字符串
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SqlVariable.SYS_START">
            <summary>
            防止系统字符冲突的前置字符
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SqlVariable.SYS_END">
            <summary>
            防止系统字符冲突的后置字符
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SqlVariable.STR_START">
            <summary>
            字符串区别于数值的前置字符
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SqlVariable.STR_END">
            <summary>
            字符串区别于数值的后置字符
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SqlVariable.LIKE_START">
            <summary>
            模糊查找的前置字符
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SqlVariable.LIKE_END">
            <summary>
            模糊查找的后置字符
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SqlVariable.AND">
            <summary>
            And并接条件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SqlVariable.OR">
            <summary>
            Or并接条件
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DataSource.SqlData.DBCommandBuilder`1">
            <summary>
            Class CommonBuilder.
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.DBCommandBuilder`1.#ctor(MangoMis.Frame.DataSource.SqlData.IDataSource,MangoMis.Frame.DataSource.SqlData.SourceTable)">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.DBCommandBuilder`1.Current_Table">
            <summary>
            数据表映射
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.DBCommandBuilder`1.DbSource">
            <summary>
            数据处理接口
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.DBCommandBuilder`1.GetProInfoValue(`0,System.String)">
            <summary>
            取得属性值
            </summary>
            <param name="entity">The entity.</param>
            <param name="proName">Name of the pro.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.DBCommandBuilder`1.SetProInfoValue(`0@,System.String,System.Object)">
            <summary>
            设置实体的值
            </summary>
            <param name="entity">The entity.</param>
            <param name="proName">Name of the pro.</param>
            <param name="value">The value.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.DBCommandBuilder`1.CreateEntity(System.Data.DataRow)">
            <summary>
                根据DataRow创建一个实体
            </summary>
            <param name="entityRow">The entity row.</param>
            <returns></returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.DBCommandBuilder`1.CreateEntity(System.Data.SqlClient.SqlDataReader)">
            <summary>
                根据DataReader创建一个实体
            </summary>
            <param name="entityReader">The entity reader.</param>
            <returns></returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.DBCommandBuilder`1.GetDbParameters(`0,MangoMis.Frame.DataSource.SqlData.DataCommandType,System.String)">
            <summary>
            取得Sql语句的参数
            </summary>
            <param name="entity">要取得参数的实体</param>
            <param name="commandType">语句类型</param>
            <param name="param_list_index">批量运行时的参数索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.DBCommandBuilder`1.GetColumnByProName(System.String)">
            <summary>
            通过属性名取得字段
            </summary>
            <param name="proName"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.DBCommandBuilder`1.Delete(MangoMis.Frame.DataSource.SqlData.SelectionParameter)">
            <summary>
            删除语句
            </summary>
            <param name="selectParam"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.DBCommandBuilder`1.GetList(MangoMis.Frame.DataSource.SqlData.SelectionParameter)">
            <summary>
                查询列表
            </summary>
            <param name="selectParam">查询条件</param>
            <returns></returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.DBCommandBuilder`1.GetInsertCommand(`0)">
            <summary>
            默认插入(不会插入关联表)
            </summary>
            <param name="entity">实体</param>
            <returns>System.String.</returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.DBCommandBuilder`1.Insert(`0)">
            <summary>
                默认插入列表(不会插入关联表)
            </summary>
            <param name="entity">实体</param>
            <returns></returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.DBCommandBuilder`1.Insert(System.Collections.Generic.List{`0})">
            <summary>
                默认插入列表(不会插入关联表)
            </summary>
            <param name="entitys">实体</param>
            <returns></returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.DBCommandBuilder`1.BuildUpdateSql(`0,System.String,System.String,System.String)">
            <summary>
            建立更新语句
            </summary>
            <param name="entity"></param>
            <param name="whereSb"></param>
            <param name="pkid"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.DBCommandBuilder`1.Update(`0)">
            <summary>
                默认更新(不会更新关联表)
            </summary>
            <param name="entity">实体</param>
            <returns></returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.DBCommandBuilder`1.Update(System.Collections.Generic.List{`0})">
            <summary>
                默认更新(不会更新关联表)
            </summary>
            <param name="entitys">实体</param>
            <returns></returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.DBCommandBuilder`1.buildCountString(MangoMis.Frame.DataSource.SqlData.SelectionParameter)">
            <summary>
                取得查询总数的字符串
            </summary>
            <returns></returns>
            <example></example>
            CreateUser:Mr.Zxf
            CreateDate:2013/2/20
        </member>
        <member name="T:MangoMis.Frame.DataSource.SqlData.FilterType">
            <summary>
            Enum FilterType
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.SqlData.FilterType.And">
            <summary>
            
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DataSource.SqlData.FilterType.Or">
            <summary>
            The or
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DataSource.SqlData.FilterGroup">
            <summary>
            Class FilterGroup
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.FilterGroup.#ctor">
            <summary>
            默认初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.FilterGroup.#ctor(MangoMis.Frame.DataSource.SqlData.FilterType)">
            <summary>
            查询类型初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.FilterGroup.#ctor(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            通过条件列表初始化.
            </summary>
            <param name="list">The list.</param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.FilterGroup.#ctor(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},MangoMis.Frame.DataSource.SqlData.FilterType)">
            <summary>
            通过条件列表 和查询类型
            </summary>
            <param name="list">The list.</param>
            <param name="type">The type.</param>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.FilterGroup.Current_Filter">
            <summary>
            条件
            </summary>
            <value>The filters.</value>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.FilterGroup.Groups">
            <summary>
            条件组
            </summary>
            <value>The groups.</value>
        </member>
        <member name="F:MangoMis.Frame.DataSource.SqlData.FilterGroup.JoinType">
            <summary>
            And 还是 Or
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.FilterGroup.Current_Table">
            <summary>
            当前的表映射
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.FilterGroup.DbSource">
            <summary>
            当前数据库的映射
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.FilterGroup.FilterString">
            <summary>
            查询字符串
            </summary>
            <value>The filter string.</value>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.FilterGroup.BuildFilterString">
            <summary>
            取得查询条件字符串
            </summary>
            <returns>System.String.</returns>
            <example></example>
            CreateUser:Mr.Zxf
            CreateDate:2013/2/20
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.FilterGroup.BuildFilterString(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},MangoMis.Frame.DataSource.SqlData.FilterType)">
            <summary>
            取得查询条件字符串
            </summary>
            <param name="filters">查询参数</param>
            <param name="type">The type.</param>
            <returns>System.String.</returns>
            <example></example>
            CreateUser:Mr.Zxf
            CreateDate:2013/2/20
        </member>
        <member name="T:MangoMis.Frame.DataSource.SqlData.IDataSource">
            <summary>
            数据访问接口
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.IDataSource.Data_Type">
            <summary>
            数据访问类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.IDataSource.CreateDataBase">
            <summary>
            创建数据库.
            </summary>
            <returns>创建数据库是否成功(如果文件已存在,反回True)</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.IDataSource.CreateTable(MangoMis.Frame.DataSource.SqlData.SourceTable)">
            <summary>
            创建数据表
            </summary>
            <param name="mapping"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.IDataSource.DataSet(System.String)">
            <summary>
            返回指定sql语句的DataSet
            </summary>
            <param name="sqlstr"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.IDataSource.ExecuteSql(System.String)">
            <summary>
            执行sql语句
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.IDataSource.DataSet(System.Collections.Generic.List{MangoMis.Frame.DataSource.SqlData.SqlExecuteItem})">
            <summary>
            返回指定Command语句的DataSet
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.IDataSource.DataSet(MangoMis.Frame.DataSource.SqlData.SqlExecuteItem)">
            <summary>
            返回指定Command语句的DataSet
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.IDataSource.ExecuteSql(System.Collections.Generic.List{MangoMis.Frame.DataSource.SqlData.SqlExecuteItem})">
            <summary>
            返回指定Command语句的DataSet
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.IDataSource.ExecuteSql(MangoMis.Frame.DataSource.SqlData.SqlExecuteItem)">
            <summary>
            执行sql语句
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.IDataSource.NewParameter">
            <summary>
            取得新的Sql参数
            </summary>
            <returns>Sql参数</returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.IDataSource.NewCommand">
            <summary>
            新建一条命令
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.IDataSource.Variable">
            <summary>
            相关的独立变量
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DataSource.SqlData.SourceColumn">
            <summary>
            Sql绑定字段
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SourceColumn.NewColumn(System.Reflection.PropertyInfo)">
            <summary>
            根据属性创建新的字段
            </summary>
            <param name="propertyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SourceColumn.#ctor">
            <summary>
            实体化Sql绑定字段
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SourceColumn.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            实体化Sql绑定字段
            </summary>
            <param name="proName">程序中的属性名</param>
            <param name="sqlName">Sql字段名</param>
            <param name="proType">程序中的属性</param>
            <param name="sqlType">Sql属性</param>
            <param name="description">字段描述</param>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SourceColumn.SqlName">
            <summary>
            数据库字段名
            </summary>
            <value>
            The name of the SQL.
            </value>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SourceColumn.ProName">
            <summary>
            数据模型属性名
            </summary>
            <value>
            The name of the property.
            </value>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SourceColumn.Description">
            <summary>
            字段描述
            </summary>
            <value>
            The description.
            </value>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SourceColumn.ProType">
            <summary>
            属性类型
            </summary>
            <value>
            The type of the property.
            </value>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SourceColumn.SqlType">
            <summary>
            Sql字段类型
            </summary>
            <value>
            The type of the SQL.
            </value>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SourceColumn.ItType">
            <summary>
            当前操作类型
            </summary>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SourceColumn.SqlDbType">
            <summary>
            取得Sql的数据类型
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DataSource.SqlData.SelectionParameter">
            <summary>
            查询参数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SelectionParameter.ALL(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            查询所有符合条件记录的参数[不锁表,不查Count]
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SelectionParameter.Paging(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            分页查询的参数[不锁表,查Count]
            </summary>
            <param name="currentPage">当前页</param>
            <param name="pageSize">显示条目数</param>
            <param name="filters">查询条件</param>
            <param name="orders">排序条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SelectionParameter.PagingColumn(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            分页查询的参数[不锁表,查Count]
            </summary>
            <param name="currentPage">当前页</param>
            <param name="pageSize">显示条目数</param>
            <param name="filters">查询条件</param>
            <param name="orders">排序条件</param>
            <param name="column">查询字段</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SelectionParameter.WithLock">
            <summary>
            允许锁表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SelectionParameter.WithNoCount">
            <summary>
            不取得Count总数
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SelectionParameter.CurrentPage">
            <summary>
            当前页
            </summary>
            <value>
            The current page.
            </value>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SelectionParameter.PageSize">
            <summary>
            每页显示条目数
            </summary>
            <value>
            The size of the page.
            </value>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SelectionParameter.Filter">
            <summary>
            查询条件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SelectionParameter.colums">
            <summary>
            查询的字段(模型属性名)
            </summary>
            <value>
            The colums.
            </value>
            CreateUser:Mr.Zxf
            CreateDate:2012/9/5
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SelectionParameter.Orders">
            <summary>
            排序条件
            </summary>
            <value>
            The orders.
            </value>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SelectionParameter.GroupColumns">
            <summary>
            分组条件
            </summary>
            <value>
            The group columns.
            </value>
            <example></example>
            CreateUser:Mr.Zxf
            CreateDate:2013/2/20
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SelectionParameter.IsEnlock">
            <summary>
            是否允许锁表
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SelectionParameter.IsCount">
            <summary>
            是否取得同等条件的数量
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DataSource.SqlData.SourceTable">
            <summary>
            当前数据表映射
            </summary>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SourceTable.NewTable(System.Type,System.String)">
            <summary>
            根据数据类型创建一个表映射
            </summary>
            <param name="type">表的数据类型</param>
            <param name="pkid">主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DataSource.SqlData.SourceTable.#ctor">
            <summary>
            通过一个配置文件实例
            </summary>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SourceTable.TableName">
            <summary>
            表名
            </summary>
            <value>
            The name of the table.
            </value>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SourceTable.SqlPkIdColumn">
            <summary>
            表中主键(新增,删除,修改)
            </summary>
            <value>
            The pk id column.
            </value>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SourceTable.IsPKIdentity">
            <summary>
            主键是否是自增
            </summary>
            <value>
            The logic delete column.
            </value>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SourceTable.LogicDeleteColumn">
            <summary>
            逻辑删除字段
            </summary>
            <value>
            The logic delete column.
            </value>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SourceTable.IsLogicDelete">
            <summary>
            是否逻辑删除
            </summary>
            <value>
            	<c>true</c> if this instance is logic delete; otherwise, <c>false</c>.
            </value>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="P:MangoMis.Frame.DataSource.SqlData.SourceTable.Columns">
            <summary>
            映射中的字段
            </summary>
            <value>
            The colums.
            </value>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="T:MangoMis.Frame.DB.Common.CommandCommon">
            <summary>
            数据源命令
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.CommandCommon.GetCommand(MangoMis.Frame.DataSource.Model.SimpleTable,MangoMis.Frame.DB.Info.DBInfo)">
            <summary>
            取得对应的数据操作
            </summary>
            <param name="table">数据表</param>
            <param name="dbInfo">数据源服务器信息</param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.CommandCommon.GetCommand(System.Type,System.String,System.String)">
            <summary>
            取得对应的数据操作
            </summary>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.CommandCommon.GetCommand``1(System.String,System.String)">
            <summary>
            取得对应的数据操作
            </summary>
            <typeparam name="TMt"></typeparam>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.CommandCommon.GetCommand``1(System.String,System.String,System.String)">
            <summary>
            取得对应的数据操作
            </summary>
            <typeparam name="TMt"></typeparam>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="P:MangoMis.Frame.DB.Common.CommandCommon.DataCommands">
            <summary>
            当前的数据处理
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.CommandCommon.SimpleCommand``1(System.String)">
            <summary>
            取得对应的数据操作
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.CommandCommon.GetCommand``1(MangoMis.Frame.DataSource.Model.SimpleTable,MangoMis.Frame.DB.Info.DBInfo)">
            <summary>
            取得对应的数据操作
            </summary>
            <param name="table">数据表</param>
            <param name="dbInfo">数据源服务器信息</param>
            <typeparam name="TMt"></typeparam>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="P:MangoMis.Frame.DB.Common.DefaultConfig.DbInfoKey">
            <summary>
            默认调用DBInfo的键(基于其它的默认项目,可配置)
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DB.Common.DefaultConfigItem">
            <summary>
            服务配置默认项目
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Common.DefaultConfigItem.Key">
            <summary>
            索引
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Common.DefaultConfigItem.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Common.DefaultConfigItem.Title">
            <summary>
            配置
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Common.DefaultConfigItem.Memo">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Common.DefaultConfigItem.TypeName">
            <summary>
            配置类型(TypeHelper.Full...)暂时只支持Bool Int,DateTime,Decimal,String
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.DefaultConfigItem.GetValue">
            <summary>
            取得值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.DefaultConfigItem.SetValue(System.Object)">
            <summary>
            取得值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.DefaultConfigItem.Date">
            <summary>
            取得Datetime值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.DefaultConfigItem.Decimal">
            <summary>
            取得decimal值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.DefaultConfigItem.String">
            <summary>
            取得String值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.DefaultConfigItem.Int">
            <summary>
            取得Int值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.DefaultConfigItem.Bool">
            <summary>
            取得Bool值
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DB.Common.TableCommon">
            <summary>
            系统Store使用的是全局基础配置数据源
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.TableCommon.GetShowProperties(System.String)">
            <summary>
            缓存中显示属性的管理
            </summary>
            <param name="cacheKey">缓存索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.TableCommon.GetShowProperty(System.String)">
            <summary>
            缓存中显示属性的管理
            </summary>
            <param name="id">显示属性主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.TableCommon.RemoveShowProperty(System.String)">
            <summary>
            删除一个显示属性,直接保存
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.TableCommon.AppendShowProperty(MangoMis.Frame.Model.CacheListShowProperty)">
            <summary>
            添加一个显示属性
            </summary>
            <param name="showProperty">属性信息</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.TableCommon.SaveShowProperties">
            <summary>
            保存现在的显示属性变更(添加后使用)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.TableCommon.GetPropertiyInfos(System.String)">
            <summary>
            取得某个缓存实体的的属性列表
            </summary>
            <param name="cacheKey">缓存索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.TableCommon.SetPropertyInfo(MangoMis.Frame.Model.CachePropertyShowInfo)">
            <summary>
            设置一个属性
            </summary>
            <param name="propertyInfo">属性信息</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.TableCommon.GetTable(System.String)">
            <summary>
            取得Table(必须已经存在不会自动创建)
            </summary>
            <param name="tableKey">系统中唯一命名,实体名(用于保存的名,比如表名,文件名等)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.TableCommon.Contains(System.String)">
            <summary>
            判断是否包含Key
            </summary>
            <param name="tableKey">系统中唯一命名,实体名(用于保存的名,比如表名,文件名等)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.TableCommon.GetTable(System.Type,System.String,System.String,System.String,System.String)">
            <summary>
            当前系统中的实体Info没有则创建默认实体
            </summary>
            <param name="tableType">表类型</param>
            <param name="tableKey">系统中唯一命名,实体名(用于保存的名,比如表名,文件名等)</param>
            <param name="pkColumnName">主键名</param>
            <param name="dbInfoKey">数据源Key</param>
            <param name="title">实体标题</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.TableCommon.GetTableByTitle(System.Type,System.String,System.String,System.String)">
            <summary>
            当前系统中的实体Info没有则创建默认实体
            </summary>
            <param name="tableType">表类型</param>
            <param name="tableKey">系统中唯一命名,实体名(用于保存的名,比如表名,文件名等)</param>
            <param name="pkColumnName">主键名</param>
            <param name="title">实体标题</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.TableCommon.GetTable(System.Type,System.String,System.String,System.String)">
            <summary>
            当前系统中的实体Info没有则创建默认实体
            </summary>
            <param name="tableType">表类型</param>
            <param name="tableKey">系统中唯一命名,实体名(用于保存的名,比如表名,文件名等)</param>
            <param name="pkColumnName">主键名</param>
            <param name="dbInfoKey">数据源Key</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.TableCommon.GetTable(System.Type,System.String,System.String)">
            <summary>
            当前系统中的实体Info没有则创建默认实体
            </summary>
            <param name="tableType">表类型</param>
            <param name="tableKey">系统中唯一命名,实体名(用于保存的名,比如表名,文件名等)</param>
            <param name="pkColumnName">主键名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.TableCommon.GetTable(System.Type,System.String)">
            <summary>
            当前系统中的实体Info没有则创建默认实体
            </summary>
            <param name="tableType">表类型</param>
            <param name="pkColumnName">主键名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.TableCommon.GetTable``1(System.String,System.String,System.String,System.String)">
            <summary>
            当前系统中的实体Info没有则创建默认实体
            </summary>
            <param name="tableKey">系统中唯一命名,实体名(用于保存的名,比如表名,文件名等)</param>
            <param name="pkColumnName">主键名</param>
            <param name="dbInfoKey">数据源Key</param>
            <param name="title">实体标题</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.TableCommon.GetTable``1(System.String,System.String,System.String)">
            <summary>
            当前系统中的实体Info没有则创建默认实体
            </summary>
            <param name="tableKey">系统中唯一命名,实体名(用于保存的名,比如表名,文件名等)</param>
            <param name="pkColumnName">主键名</param>
            <param name="dbInfoKey">数据源Key</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.TableCommon.GetTable``1(System.String,System.String)">
            <summary>
            当前系统中的实体Info没有则创建默认实体
            </summary>
            <param name="tableKey">系统中唯一命名,实体名(用于保存的名,比如表名,文件名等)</param>
            <param name="pkColumnName">主键名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.TableCommon.GetTable``1(System.String)">
            <summary>
            当前系统中的实体Info没有则创建默认实体
            </summary>
            <param name="pkColumnName">主键名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.TableCommon.GetOrCreateTable``1(System.String,System.String,System.String,System.String)">
            <summary>
            当前系统中的实体Info没有则创建默认实体
            </summary>
            <param name="tableKey">系统中唯一命名,实体名(用于保存的名,比如表名,文件名等)</param>
            <param name="pkColumnName">主键名</param>
            <param name="dbInfoKey">数据源Key</param>
            <param name="title">实体标题</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.TableCommon.GetOrCreateTable(System.Type,System.String,System.String,System.String,System.String)">
            <summary>
            当前系统中的实体Info没有则创建默认实体
            </summary>
            <param name="tableType">表类型</param>
            <param name="tableKey">系统中唯一命名,实体名(用于保存的名,比如表名,文件名等)</param>
            <param name="pkColumnName">主键名</param>
            <param name="dbInfoKey">数据源Key</param>
            <param name="title">实体标题</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.TableCommon.CreateOrUpdateTable(MangoMis.Frame.DataSource.Model.SimpleTable,System.Type,System.String,System.String,System.String,System.String)">
            <summary>
            创建或者更新表
            </summary>
            <param name="table">原表结构</param>
            <param name="tableType">表类型</param>
            <param name="tableKey">系统中唯一命名,实体名(用于保存的名,比如表名,文件名等)</param>
            <param name="pkColumnName">主键名</param>
            <param name="dbInfoKey">数据源Key</param>
            <param name="title">实体标题</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DB.Common.UpgradeRedisLog">
            <summary>
            更新Redis日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Common.UpgradeRedisLog.key">
            <summary>
            索引
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Common.UpgradeRedisLog.log">
            <summary>
            日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Common.UpgradeRedisLog.apppoolinfo">
            <summary>
            池信息
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Common.UpgradeRedisLog.hostinfo">
            <summary>
            域名信息
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Common.UpgradeRedisLog.siteinfo">
            <summary>
            站点信息
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Common.UpgradeRedisLog.addtime">
            <summary>
            添加时间
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DB.Common.StoreCommon">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Common.StoreCommon.Stores">
            <summary>
            用于保存当前所有的数据仓库
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.StoreCommon.GetStore(System.String)">
            <summary>
            取得实体的对应的仓储(需要先添加服务器以及实体信息)
            </summary>
            <param name="key">实体主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.StoreCommon.DeleteStore(System.String)">
            <summary>
            取得实体的对应的仓储(需要先添加服务器以及实体信息)
            </summary>
            <param name="key">实体主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.StoreCommon.NewStore``1(MangoMis.Frame.DataSource.DataCommand.IDataCommand{``0},MangoMis.Frame.DataSource.Model.SimpleTable)">
            <summary>
            取得对应的仓储操作
            </summary>
            <param name="command">对应的数据操作</param>
            <param name="table">数据表</param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.StoreCommon.ContainsStore(System.String)">
            <summary>
            是否包含此Store
            </summary>
            <param name="storeKey">Store索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.StoreCommon.GetStoreByTableKey``1(System.String)">
            <summary>
            通过SimpleTable的TableKey(Name)来创建与之对应的Store
            </summary>
            <typeparam name="T">Store的实体类型</typeparam>
            <param name="tableKey">表索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.StoreCommon.Store``1(System.String,System.String,System.String,System.Boolean)">
            <summary>
            取得实体的对应的仓储(需要先添加服务器以及实体信息)
            </summary>
            <param name="tableKey">实体的唯一索引</param>
            <param name="pkColumnName">主键名</param>
            <param name="title">标题名</param>
            <typeparam name="T"></typeparam> 
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Common.StoreCommon.Store``1(System.String,System.String)">
            <summary>
            取得实体的对应的仓储(需要先添加服务器以及实体信息)
            </summary>
            <param name="tableKey">实体的唯一索引</param>
            <param name="pkColumnName">主键名</param>
            <typeparam name="TMt"></typeparam>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DB.Info.ServerInfo">
            <summary>
            服务器信息
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DB.Info.SiteInfo">
            <summary>
            站点配置信息
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.SiteInfo.SiteTagName">
            <summary>
            当前站点名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.SiteInfo.#ctor">
            <summary>
            站点信息
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.SiteInfo.IsOpenUpgradeLog">
            <summary>
            是否开启了缓存更新日志记录
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DB.Info.DBInfo">
            <summary>
            服务器属性
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.DBInfo.#ctor(MangoMis.Frame.DB.Info.DbServerType,System.String)">
            <summary>
            服务器属性
            </summary>
            <param name="dbType">服务器类型</param>
            <param name="key">名称</param>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.DBInfo.#ctor(MangoMis.Frame.DB.Info.DbServerType,System.String,System.String)">
            <summary>
            服务器属性
            </summary>
            <param name="dbType">服务器类型</param>
            <param name="key">名称</param>
            <param name="name">显示标题</param>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.DBInfo.DbType">
            <summary>
            当前服务器类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.DBInfo.IsDefault">
            <summary>
            是否是默认
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.DBInfo.Name">
            <summary>
            显示标题
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.DBInfo.Key">
            <summary>
            键值
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.DBInfo.CurrentKeys">
            <summary>
            取得当前服务类型所有的键以及涵意
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.DBInfo.Get">
            <summary>
            取得当前所有属性值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.DBInfo.Get(MangoMis.Frame.DB.Info.DBInfoKey)">
            <summary>
            取得对应的属性值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.DBInfo.Set(MangoMis.Frame.DB.Info.DBInfoKey,System.String)">
            <summary>
            设置属性值
            </summary>
            <param name="key">属性键</param>
            <param name="value">属性值</param>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.DBInfo.ServerHost">
            <summary>
            所在域名(IP)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.DBInfo.ServerPort">
            <summary>
            服务端口
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.DBInfo.LoginUserId">
            <summary>
            登陆用户名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.DBInfo.LoginPassword">
            <summary>
            登陆密码
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.DBInfo.ConnectTimeout">
            <summary>
            连接超时时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.DBInfo.DbTableNameBefore">
            <summary>
            表名前缀(一般用于区分不同站点在同一个服务器上的存储.可以为空)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.DBInfo.FilePath">
            <summary>
            文件路径(不包括文件名)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.DBInfo.DbName">
            <summary>
            数据库名(文件名)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.DBInfo.Extension">
            <summary>
            文件扩展名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.DBInfo.ConnectionPoolClientCount">
            <summary>
            数据连接池中的实例数量
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.DBInfo.PoolClientKeepAliveSeconds">
            <summary>
            数据连接池中实例的不活动存活时间(秒)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.DBInfo.CheckAliveTimeSpanSeconds">
            <summary>
            检查存活时间的时间间隔
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.DBInfo.RecordKeySplit">
            <summary>
            分割记录索引的Key中不同的分段
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DB.Info.DBInfoCommon">
            <summary>
            数据服务器属性管理
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.DBInfoCommon.MapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.DBInfoCommon.InfoKeyNames">
            <summary>
            Info属性的名称集合
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.DBInfoCommon.DbInfos">
            <summary>
            当前所有数据源实例
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.DBInfoCommon.InitDBinfos">
            <summary>
            用于Lock的时候初始化数据源
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.DBInfoCommon.IsInitWithConfigCenter">
            <summary>
            通过CC初始化数据源
            </summary>
            <returns>初始化成功返回true,未初始化成功返回false</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.DBInfoCommon.RebuildDbInfo(System.String)">
            <summary>
            重新建立一个数据连接
            </summary>
            <param name="dbInfoKey"></param>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DBInfoCommon.DefaultDbInfoKeyRedis">
            <summary>
            Redis默认的服务信息的索引
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DBInfoCommon.DefaultDbInfoKeyWcf">
            <summary>
            Redis默认的服务信息的索引
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DBInfoCommon.DefaultDbInfoKeyXml">
            <summary>
            Redis默认的服务信息的索引
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.DBInfoCommon.GetDbInfo(System.String,MangoMis.Frame.DB.Info.DbServerType)">
            <summary>
            按唯一索引取得服务器信息
            </summary>
            <param name="infoKey"></param>
            <param name="dbType">DB类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.DBInfoCommon.GetDefaultDbKey(MangoMis.Frame.DB.Info.DbServerType)">
            <summary>
            取得默认的DbKey
            </summary>
            <param name="dbType">DB类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.DBInfoCommon.GetDefaultDbInfo">
            <summary>
            取得默认的DB(Redis)
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.DBInfoCommon.GetDefaultDbInfo(MangoMis.Frame.DB.Info.DbServerType)">
            <summary>
            取得默认的DbKey
            </summary>
            <param name="dbType">DB类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.DBInfoCommon.GetDbInfoKeyList">
            <summary>
            取得当前系统中所有数据源的Key
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.DBInfoCommon.GetDbInfo(System.String)">
            <summary>
            按唯一索引取得服务器信息
            </summary>
            <param name="infoKey"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.DBInfoCommon.Contains(System.String)">
            <summary>
            检查是否包含对应的服务器信息
            </summary>
            <param name="infoKey"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.DBInfoCommon.Append(MangoMis.Frame.DB.Info.DBInfo)">
            <summary>
            添加服务器信息
            </summary>
            <param name="dbInfo"></param>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.DBInfoCommon.KeyNames(MangoMis.Frame.DB.Info.DbServerType)">
            <summary>
            返回服务器类型所包括的属性名
            </summary>
            <param name="dbtype">服务器类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.DBInfoCommon.Check(MangoMis.Frame.DB.Info.DbServerType,MangoMis.Frame.DB.Info.DBInfoKey)">
            <summary>
            检查是否包括此属性
            </summary>
            <param name="dbtype">服务器类型</param>
            <param name="key">属性Key</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DB.Info.DBInfoKey">
            <summary>
            服务器信息的索引键
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DBInfoKey.DBType">
            <summary>
            数据源类型(参考DbServerType)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DBInfoKey.Key">
            <summary>
            索引主键全局唯一
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DBInfoKey.ServerHost">
            <summary>
            所在域名(IP)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DBInfoKey.ServerPort">
            <summary>
            服务端口
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DBInfoKey.LoginUserId">
            <summary>
            登陆用户名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DBInfoKey.LoginPassword">
            <summary>
            登陆密码
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DBInfoKey.ConnectTimeout">
            <summary>
            连接超时时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DBInfoKey.DBTableNameBefore">
            <summary>
            表名前缀(一般用于区分不同站点在同一个服务器上的存储.可以为空)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DBInfoKey.FilePath">
            <summary>
            文件路径(不包括文件名)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DBInfoKey.DBName">
            <summary>
            数据库名(文件名)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DBInfoKey.Extension">
            <summary>
            文件扩展名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DBInfoKey.ConnectionPoolClientCount">
            <summary>
            数据连接池中的实例数量
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DBInfoKey.PoolClientKeepAliveSeconds">
            <summary>
            数据连接池中实例的不活动存活时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DBInfoKey.CheckAliveTimeSpanSeconds">
            <summary>
            检查存活时间的时间间隔
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DBInfoKey.RecordKeySplit">
            <summary>
            分割记录索引的Key中不同的分段
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DB.Info.DBInfoProperty">
            <summary>
            服务属性实体
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.DBInfoProperty.#ctor(MangoMis.Frame.DB.Info.DBInfoKey,System.String)">
            <summary>
            服务属性实体
            </summary>
            <param name="infoKey">键</param>
            <param name="infoValue">值</param>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.DBInfoProperty.InfoKey">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.DBInfoProperty.InfoValue">
            <summary>
            值
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DB.Info.DbServerType">
            <summary>
            Enum SqlConnType
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DbServerType.SqlServer">
            <summary>
            SqlServer类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DbServerType.MySql">
            <summary>
            MySql类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DbServerType.SQLite">
            <summary>
            SQLite类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DbServerType.Access">
            <summary>
            Access类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DbServerType.Redis">
            <summary>
            Redis
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DbServerType.File">
            <summary>
            File
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DbServerType.XML">
            <summary>
            保存XML文件
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.DbServerType.WCF">
            <summary>
            保存XML文件
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DB.Info.Mapping_DataType">
            <summary>
            绑定数据类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.Mapping_DataType.GetTrueType(System.Type)">
            <summary>
            取得有可能是带?的类型的真实类型(有缓存)
            </summary>
            <param name="can_null_type">有可能为NULL的类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.Mapping_DataType.GetDBTypeByPropertyType(System.Type)">
            <summary>
            通过PropertyType取得DBType
            </summary>
            <param name="propertyType"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.Mapping_DataType.GetSqlDbTypeByPropertyType(System.Type)">
            <summary>
            通过PropertyType取得DBType
            </summary>
            <param name="propertyType"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.Mapping_DataType.IsValueDataType(System.Type)">
            <summary>
            是否是值类型的数据类型
            </summary>
            <param name="propertyInfoType">数据类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.Mapping_DataType.IsValueDataType(System.Data.DbType)">
            <summary>
            是否是值类型的数据类型
            </summary>
            <param name="type">数据类型</param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.Mapping_DataType.default_type">
            <summary>
            默认的数据类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Info.Mapping_DataType.types">
            <summary>
            当前系统中的数据类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Info.Mapping_DataType.#ctor(System.String,System.Data.DbType,System.Type)">
            <summary>
            实例化绑定的数据类型
            </summary>
            <param name="str">数据类型的字符串(用于写在配置文件中进行映射)</param>
            <param name="sql">Sql中的数据类型</param>
            <param name="pro">应用程序中的数据类型</param>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.Mapping_DataType.type_string">
            <summary>
            数据类型的字符串(用于写在配置文件中进行映射)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.Mapping_DataType.sql_type">
            <summary>
            Sql中的数据类型 
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Info.Mapping_DataType.pro_type">
             <summary>
            应用程序中的数据类型
             </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlCommandExecute`1.#ctor(System.String,MangoMis.Frame.DB.Info.DBInfo)">
            <summary>
            创建带主键字段名的Builder,[默认:主键自增][默认:表名为类名]
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlCommandExecute`1.#ctor(System.String,System.Boolean,MangoMis.Frame.DB.Info.DBInfo)">
            <summary>
            创建带主键字段名的Builder[默认:表名为类名]
            </summary>
            <param name="pkIdColumn">主键字段名</param>
            <param name="isPkIdentity">主键是否自增</param>
            <param name="dbinfo">选择的数据源</param>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlCommandExecute`1.#ctor(System.String,System.String,System.Boolean,MangoMis.Frame.DB.Info.DBInfo)">
            <summary>
            创建带主键字段名,自定义表名的Builder
            </summary>
            <param name="pkIdColumn">主键字段名</param>
            <param name="isPkIdentity">主键是否自增</param>
            <param name="tableName">自定义表名</param>
            <param name="dbinfo">选择的数据源</param>
        </member>
        <member name="F:MangoMis.Frame.DB.SqlServer.SqlCommandExecute`1.connstring_base">
            <summary>
            基础连接字符串
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlCommandExecute`1.GetProInfoValue(`0,System.String)">
            <summary>
            取得属性值
            </summary>
            <param name="entity">The entity.</param>
            <param name="proName">Name of the pro.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlCommandExecute`1.SetProInfoValue(`0@,System.String,System.Object)">
            <summary>
            设置实体的值
            </summary>
            <param name="entity">The entity.</param>
            <param name="proName">Name of the pro.</param>
            <param name="value">The value.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlCommandExecute`1.CreateEntity(System.Data.DataRow)">
            <summary>
                根据DataRow创建一个实体
            </summary>
            <param name="entityRow">The entity row.</param>
            <returns></returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlCommandExecute`1.CreateEntity(System.Data.SqlClient.SqlDataReader)">
            <summary>
                根据DataReader创建一个实体
            </summary>
            <param name="entityReader">The entity reader.</param>
            <returns></returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlCommandExecute`1.GetDbParameters(`0,MangoMis.Frame.DataSource.SqlData.DataCommandType,System.String)">
            <summary>
            取得Sql语句的参数
            </summary>
            <param name="entity">要取得参数的实体</param>
            <param name="commandType">语句类型</param>
            <param name="param_list_index">批量运行时的参数索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlCommandExecute`1.GetList(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
                查询列表
            </summary>
            <returns></returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlCommandExecute`1.GetInsertCommand(`0)">
            <summary>
            默认插入(不会插入关联表)
            </summary>
            <param name="entity">实体</param>
            <returns>System.String.</returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlCommandExecute`1.Insert(`0)">
            <summary>
                默认插入列表(不会插入关联表)
            </summary>
            <param name="entity">实体</param>
            <returns></returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlCommandExecute`1.Update(`0)">
            <summary>
                默认更新(不会更新关联表)
            </summary>
            <param name="entity">实体</param>
            <returns></returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/28
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlCommandExecute`1.buildCountString">
            <summary>
                取得查询总数的字符串
            </summary>
            <returns></returns>
            <example></example>
            CreateUser:Mr.Zxf
            CreateDate:2013/2/20
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlCommandExecute`1.DataSet(System.String)">
            <summary>
            返回指定sql语句的DataSet
            </summary>
            <param name="sqlstr"></param>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlCommandExecute`1.ExecuteSql(System.String)">
            <summary>
            执行sql语句
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlCommandExecute`1.DataSet(System.Collections.Generic.List{MangoMis.Frame.DataSource.SqlData.SqlExecuteItem})">
            <summary>
            返回指定Command语句的DataSet
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlCommandExecute`1.DataSet(System.Data.SqlClient.SqlCommand)">
            <summary>
            返回指定Command语句的DataSet
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlCommandExecute`1.ExecuteSql(System.Collections.Generic.List{MangoMis.Frame.DataSource.SqlData.SqlExecuteItem})">
            <summary>
            返回指定Command语句的DataSet
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlCommandExecute`1.ExecuteSql(System.Data.SqlClient.SqlCommand)">
            <summary>
            执行sql语句
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DB.SqlServer.SqlSimpleStore`1">
            <summary>
            
            </summary>
            <typeparam name="Entity"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlSimpleStore`1.#ctor(MangoMis.Frame.DB.Info.DBInfo,System.String)">
            <summary>
            简单SqlServer仓库
            </summary>
            <param name="dbInfo">数据连接</param>
            <param name="pkIdName">主键</param>
        </member>
        <member name="T:MangoMis.Frame.DB.SqlServer.Configuration">
            <summary>
            登陆使用的配置类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.Configuration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.OtherConfigParam_Login"/> class.
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.SqlServer.Configuration.Redis_ServerPath">
            <summary>
            Redis服务地址:端口号
            </summary>
            <value><c>true</c> if this instance is login SSO by I frame; otherwise, <c>false</c>.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.DB.SqlServer.Configuration.Redis_NameBefore">
            <summary>
            加入缓存的表名前缀.以防键重复.建立用英文.不建议太长
            </summary>
            <value>The redis_ name before.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.DB.SqlServer.Configuration.Redis_IsUseRedis">
            <summary>
            是否启用Redis
            </summary>
            <value>The redis_ name before.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1">
            <summary>
            SqlServer的操作
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.All">
            <summary>
            取得所有列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.#ctor(System.String,MangoMis.Frame.DB.Info.DBInfo)">
            <summary>
            定义一个SqlServer的操作
            </summary>
            <param name="pkIdColumnName">主键字段</param>
            <param name="currentDbInfo"></param>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.#ctor(MangoMis.Frame.DataSource.Model.SimpleTable,MangoMis.Frame.DB.Info.DBInfo)">
            <summary>
            定义一个SqlServer的操作
            </summary>
            <param name="table">操作表</param>
            <param name="currentDbInfo"></param>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.Find(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.Query">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.Query(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.Query(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.QueryColumns(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.GroupBy(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.GroupBy(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="filters">条件</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.Count(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.Get(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.Get(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.Get">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.Get(System.Func{`0,System.Boolean})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.Get(System.Int32,System.Int32,System.Func{`0,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[])">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.Get(System.Int32,System.Int32,System.Func{`0,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[],System.String[])">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.GetCount(System.Func{`0,System.Boolean})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.Find(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.Delete(System.Object)">
            <summary>
            删除一条记录
            </summary>
            <param name="entityKey">记录主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.Delete(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            删除记录列表
            </summary>
            <param name="entityKeys">记录主键列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.Clear">
            <summary>
            清空表中所有记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.GetConnectionString">
            <summary>
            取得当前数据连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.GetTableName">
            <summary>
            取得当前操作的表名
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.Insert(System.Object,`0)">
            <summary>
            插入一条记录
            </summary>
            <param name="entityKey">主键</param>
            <param name="entity">记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.Insert(System.Collections.Generic.IDictionary{System.Object,`0})">
            <summary>
            插入记录列表
            </summary>
            <param name="keyAndEntities">记录列表,包括主键值与实体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.Update(System.Object,`0)">
            <summary>
            更新一条记录
            </summary>
            <param name="entityKey">主键</param>
            <param name="entity">记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.SqlServer.SqlServerCommand`1.Update(System.Collections.Generic.IDictionary{System.Object,`0})">
            <summary>
            更新记录列表
            </summary>
            <param name="keyAndEntities">记录列表,包括主键值与实体</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DB.WCF.WCFCommandV3`1">
            <summary>
            WCF对应的数据操作命令
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.All">
            <summary>
            取得所有列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.#ctor">
            <summary>
            Redis 的操作Command
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.#ctor(MangoMis.Frame.DataSource.Model.SimpleTable,MangoMis.Frame.DB.Info.DBInfo)">
            <summary>
            Redis 的操作Command
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.Find(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.Find(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.Query">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.Query(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.Query(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.QueryColumns(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.GroupBy(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.GroupBy(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="filters">条件</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.Count(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.FisrtOrDefault(System.Func{`0,System.Boolean})">
            <summary>
            查出第一个符合条件的对象.如果没有.返回Null
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.Get(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.Get(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.Get">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.Get(System.Func{`0,System.Boolean})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.Get(System.Int32,System.Int32,System.Func{`0,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[])">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.Get(System.Int32,System.Int32,System.Func{`0,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[],System.String[])">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.GetCount(System.Func{`0,System.Boolean})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.Delete(System.Object)">
            <summary>
            删除一条记录
            </summary>
            <param name="entityKey">记录主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.Delete(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            删除记录列表
            </summary>
            <param name="entityKeys">记录主键列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.Clear">
            <summary>
            清空表中所有记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.GetConnectionString">
            <summary>
            取得当前数据连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.GetTableName">
            <summary>
            取得当前操作的表名
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.Insert(System.Object,`0)">
            <summary>
            插入一条记录
            </summary>
            <param name="entityKey">主键</param>
            <param name="entity">记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.Insert(System.Collections.Generic.IDictionary{System.Object,`0})">
            <summary>
            插入记录列表
            </summary>
            <param name="keyAndEntities">记录列表,包括主键值与实体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.Update(System.Object,`0)">
            <summary>
            更新一条记录
            </summary>
            <param name="entityKey">主键</param>
            <param name="entity">记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommandV3`1.Update(System.Collections.Generic.IDictionary{System.Object,`0})">
            <summary>
            更新记录列表
            </summary>
            <param name="keyAndEntities">记录列表,包括主键值与实体</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DB.WCF.WCFCommand`1">
            <summary>
            WCF对应的数据操作命令
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.All">
            <summary>
            取得所有列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.#ctor">
            <summary>
            Redis 的操作Command
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.#ctor(MangoMis.Frame.DataSource.Model.SimpleTable,MangoMis.Frame.DB.Info.DBInfo)">
            <summary>
            Redis 的操作Command
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.Find(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.Find(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.Query">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.Query(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.Query(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.QueryColumns(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.GroupBy(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.GroupBy(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="filters">条件</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.Count(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.FisrtOrDefault(System.Func{`0,System.Boolean})">
            <summary>
            查出第一个符合条件的对象.如果没有.返回Null
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.Get(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.Get(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.Get">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.Get(System.Func{`0,System.Boolean})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.Get(System.Int32,System.Int32,System.Func{`0,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[])">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.Get(System.Int32,System.Int32,System.Func{`0,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[],System.String[])">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.GetCount(System.Func{`0,System.Boolean})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.Delete(System.Object)">
            <summary>
            删除一条记录
            </summary>
            <param name="entityKey">记录主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.Delete(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            删除记录列表
            </summary>
            <param name="entityKeys">记录主键列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.Clear">
            <summary>
            清空表中所有记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.GetConnectionString">
            <summary>
            取得当前数据连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.GetTableName">
            <summary>
            取得当前操作的表名
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.Insert(System.Object,`0)">
            <summary>
            插入一条记录
            </summary>
            <param name="entityKey">主键</param>
            <param name="entity">记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.Insert(System.Collections.Generic.IDictionary{System.Object,`0})">
            <summary>
            插入记录列表
            </summary>
            <param name="keyAndEntities">记录列表,包括主键值与实体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.Update(System.Object,`0)">
            <summary>
            更新一条记录
            </summary>
            <param name="entityKey">主键</param>
            <param name="entity">记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.WCF.WCFCommand`1.Update(System.Collections.Generic.IDictionary{System.Object,`0})">
            <summary>
            更新记录列表
            </summary>
            <param name="keyAndEntities">记录列表,包括主键值与实体</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DB.XML.XMLHelper">
            <summary>
            XML帮助类型
            </summary>
        </member>
        <member name="T:MangoMis.Frame.DB.XML.XMLHelper.XmlType">
            <summary>
            XML数据类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.XML.XMLHelper.XmlType.File">
            <summary>
            
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.XML.XMLHelper.XmlType.String">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.CreateXmlDocument(System.String,System.String)">
            <summary>
            创建XML文档
            </summary>
            <param name="name">根节点名称</param>
            <param name="type">根节点的一个属性值</param>
            <returns></returns>
            .net中调用方法：写入文件中,则：
                     document = XmlOperate.CreateXmlDocument("sex", "sexy");
                     document.Save("c:/bookstore.xml");        
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.Read(System.String,System.String,System.String)">
            <summary>
            读取数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时返回该属性值，否则返回串联值</param>
            <returns>string</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.GetNode(System.Xml.XmlDocument,System.String,System.Collections.Generic.KeyValuePair{System.String,System.String}[])">
            <summary>
            创建并取得一个Node
            </summary>
            <param name="xml">XML文档</param>
            <param name="nodeName">Node名</param>
            <param name="attributes">Node的属性</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.Insert(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            插入数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="element">元素名，非空时插入新元素，否则在该元素中插入属性</param>
            <param name="attribute">属性名，非空时插入该元素属性值，否则插入元素值</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.Update(System.String,System.String,System.String,System.String)">
            <summary>
            修改数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时修改该节点属性值，否则修改节点值</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.Delete(System.String,System.String,System.String)">
            <summary>
            删除数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时删除该节点属性值，否则删除节点值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.GetDataSet(System.String,MangoMis.Frame.DB.XML.XMLHelper.XmlType)">
            <summary>
            读取XML资源到DataSet中
            </summary>
            <param name="source">XML资源，文件为路径，否则为XML字符串</param>
            <param name="xmlType">XML资源类型</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.GetNodeInfoByNodeName(System.String,System.String)">
            <summary>
            获得xml文件中指定节点的节点数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.get_XmlValue_ds(System.String,System.Data.DataSet@)">
            <summary>
            获取一个字符串xml文档中的ds
            </summary>
            <param name="xml_string">含有xml信息的字符串</param>
            <param name="ds"></param>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.GetTable(System.String,MangoMis.Frame.DB.XML.XMLHelper.XmlType,System.String)">
            <summary>
            读取XML资源到DataTable中
            </summary>
            <param name="source">XML资源，文件为路径，否则为XML字符串</param>
            <param name="xmlType">XML资源类型：文件，字符串</param>
            <param name="tableName">表名称</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.GetTableCell(System.String,MangoMis.Frame.DB.XML.XMLHelper.XmlType,System.String,System.Int32,System.String)">
            <summary>
            读取XML资源中指定的DataTable的指定行指定列的值
            </summary>
            <param name="source">XML资源</param>
            <param name="xmlType">XML资源类型：文件，字符串</param>
            <param name="tableName">表名</param>
            <param name="rowIndex">行号</param>
            <param name="colName">列名</param>
            <returns>值，不存在时返回Null</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.GetTableCell(System.String,MangoMis.Frame.DB.XML.XMLHelper.XmlType,System.String,System.Int32,System.Int32)">
            <summary>
            读取XML资源中指定的DataTable的指定行指定列的值
            </summary>
            <param name="source">XML资源</param>
            <param name="xmlType">XML资源类型：文件，字符串</param>
            <param name="tableName">表名</param>
            <param name="rowIndex">行号</param>
            <param name="colIndex">列号</param>
            <returns>值，不存在时返回Null</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.SaveTableToFile(System.Data.DataTable,System.String)">
            <summary>
            将DataTable写入XML文件中
            </summary>
            <param name="dt">含有数据的DataTable</param>
            <param name="filePath">文件路径</param>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.SaveTableToFile(System.Data.DataTable,System.String,System.String)">
            <summary>
            将DataTable以指定的根结点名称写入文件
            </summary>
            <param name="dt">含有数据的DataTable</param>
            <param name="rootName">根结点名称</param>
            <param name="filePath">文件路径</param>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.UpdateTableCell(System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            使用DataSet方式更新XML文件节点
            </summary>
            <param name="filePath">XML文件路径</param>
            <param name="tableName">表名称</param>
            <param name="rowIndex">行号</param>
            <param name="colName">列名</param>
            <param name="content">更新值</param>
            <returns>更新是否成功</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.UpdateTableCell(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            使用DataSet方式更新XML文件节点
            </summary>
            <param name="filePath">XML文件路径</param>
            <param name="tableName">表名称</param>
            <param name="rowIndex">行号</param>
            <param name="colIndex">列号</param>
            <param name="content">更新值</param>
            <returns>更新是否成功</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.GetNodeValue(System.String,MangoMis.Frame.DB.XML.XMLHelper.XmlType,System.String)">
            <summary>
            读取XML资源中的指定节点内容
            </summary>
            <param name="source">XML资源</param>
            <param name="xmlType">XML资源类型：文件，字符串</param>
            <param name="nodeName">节点名称</param>
            <returns>节点内容</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.GetNodeValue(System.String,System.String)">
            <summary>
            读取XML资源中的指定节点内容
            </summary>
            <param name="source">XML资源</param>
            <param name="nodeName">节点名称</param>
            <returns>节点内容</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.UpdateNode(System.String,System.String,System.String)">
            <summary>
            更新XML文件中的指定节点内容
            </summary>
            <param name="filePath">文件路径</param>
            <param name="nodeName">节点名称</param>
            <param name="nodeValue">更新内容</param>
            <returns>更新是否成功</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.ReadXML``1(System.String)">
            <summary>
            读取xml文件，并将文件序列化为类
            </summary>
            <typeparam name="T"></typeparam>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.WriteXML``1(``0,System.String,System.String,System.String)">
            <summary>
            将对象写入XML文件
            </summary>
            <typeparam name="T">C#对象名</typeparam>
            <param name="item">对象实例</param>
            <param name="path">路径</param>
            <param name="jjdbh">标号</param>
            <param name="ends">结束符号（整个xml的路径类似如下：C:\xmltest\201111send.xml，其中path=C:\xmltest,jjdbh=201111,ends=send）</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.WriteXML``1(``0,System.String)">
            <summary>
            将对象写入XML文件
            </summary>
            <typeparam name="T">C#对象名</typeparam>
            <param name="item">对象实例</param>
            <param name="xmlPath">路径</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.SerializeToXmlStr``1(``0,System.Boolean)">
            <summary>
            静态扩展
            </summary>
            <typeparam name="T">需要序列化的对象类型，必须声明[Serializable]特征</typeparam>
            <param name="obj">需要序列化的对象</param>
            <param name="omitXmlDeclaration">true:省略XML声明;否则为false.默认false，即编写 XML 声明。</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.XmlSerialize``1(``0,System.Boolean)">
            <summary>
            使用XmlSerializer序列化对象
            </summary>
            <typeparam name="T">需要序列化的对象类型，必须声明[Serializable]特征</typeparam>
            <param name="obj">需要序列化的对象</param>
            <param name="omitXmlDeclaration">true:省略XML声明;否则为false.默认false，即编写 XML 声明。</param>
            <returns>序列化后的字符串</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.XmlSerialize``1(System.String,``0,System.Boolean,System.Boolean)">
            <summary>
            使用XmlSerializer序列化对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="path">文件路径</param>
            <param name="obj">需要序列化的对象</param>
            <param name="omitXmlDeclaration">true:省略XML声明;否则为false.默认false，即编写 XML 声明。</param>
            <param name="removeDefaultNamespace">是否移除默认名称空间(如果对象定义时指定了:XmlRoot(Namespace = "http://www.xxx.com/xsd")则需要传false值进来)</param>
            <returns>序列化后的字符串</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.XmlFileDeserialize``1(System.String)">
            <summary>
            从文件读取并反序列化为对象 （解决: 多线程或多进程下读写并发问题）
            </summary>
            <typeparam name="T">返回的对象类型</typeparam>
            <param name="path">文件地址</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLHelper.XmlDeserialize``1(System.String)">
            <summary>
            使用XmlSerializer反序列化对象
            </summary>
            <param name="xmlOfObject">需要反序列化的xml字符串</param>
            <returns>反序列化后的对象</returns>
        </member>
        <member name="T:MangoMis.Frame.DB.XML.XMLStore`1">
            <summary>
            XML仓库(一般只用于缓存本地数据)
            </summary>
            <typeparam name="Entity"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLStore`1.#ctor(MangoMis.Frame.DataSource.DataCommand.IDataCommand{`0},MangoMis.Frame.DataSource.Model.SimpleTable)">
            <summary>
            XML仓库(一般只用于缓存本地数据)
            </summary>
            <param name="command"></param>
            <param name="table"></param>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLStore`1.PhysicalSave">
            <summary>
            将当前数据更新到持久化
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DB.XML.XMLCommand`1">
            <summary>
            XML操作类型
            </summary>
            <typeparam name="TEntity">XML操作类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.All">
            <summary>
            取得所有列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.FisrtOrDefault(System.Func{`0,System.Boolean})">
            <summary>
            查出第一个符合条件的对象.如果没有.返回Null
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.Get(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.Get(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.Get">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.Get(System.Func{`0,System.Boolean})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.Get(System.Int32,System.Int32,System.Func{`0,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[])">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.Get(System.Int32,System.Int32,System.Func{`0,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[],System.String[])">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.GetCount(System.Func{`0,System.Boolean})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.#ctor(MangoMis.Frame.DataSource.Model.SimpleTable,MangoMis.Frame.DB.Info.DBInfo)">
            <summary>
            XML操作类型实例
            </summary>
            <param name="table"></param>
            <param name="currentDbInfo"></param>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.Find(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.Query">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.Query(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.Query(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.QueryColumns(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.GroupBy(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.GroupBy(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="filters">条件</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.Count(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.Find(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.Delete(System.Object)">
            <summary>
            删除一条记录
            </summary>
            <param name="entityKey">记录主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.Delete(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            删除记录列表
            </summary>
            <param name="entityKeys">记录主键列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.Clear">
            <summary>
            清空表中所有记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.GetConnectionString">
            <summary>
            取得当前数据连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.GetTableName">
            <summary>
            取得当前操作的表名
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.Insert(System.Object,`0)">
            <summary>
            插入记录(会重写对应的XML,不会更新)
            </summary>
            <param name="entityKey">主键</param>
            <param name="entity">记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.Insert(System.Collections.Generic.IDictionary{System.Object,`0})">
            <summary>
            插入记录列表(会重写对应的XML)
            </summary>
            <param name="keyAndEntities">记录列表,包括主键值与实体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.Update(System.Object,`0)">
            <summary>
            更新一条记录(会在原XML基础之上进行修改)
            </summary>
            <param name="entityKey">主键</param>
            <param name="entity">记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.XML.XMLCommand`1.Update(System.Collections.Generic.IDictionary{System.Object,`0})">
            <summary>
            更新记录列表(会在原XML基础之上进行修改)
            </summary>
            <param name="keyAndEntities">记录列表,包括主键值与实体</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DB.Redis.MangoRedisCommand`1">
            <summary>
            Redis的相关数据操作(PS只用于内存仓库中.只实现了[Query(),Insert,Update,Delete].其它方法未实现)
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.All">
            <summary>
            取得所有列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.#ctor(MangoMis.Frame.DataSource.Model.SimpleTable,MangoMis.Frame.DB.Info.DBInfo)">
            <summary>
            Redis 的操作Command
            </summary>
            <param name="table">命令的数据表</param>
            <param name="dbInfo">服务器信息</param>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.#ctor(MangoMis.Frame.DataSource.Model.SimpleTable,System.String)">
            <summary>
            Redis 的操作Command
            </summary>
            <param name="table">命令的数据表</param>
            <param name="dbKey">服务器索引</param>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.Find(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.GetConnectionString">
            <summary>
            取得当前数据连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.GetTableName">
            <summary>
            取得当前操作的表名
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.FisrtOrDefault(System.Func{`0,System.Boolean})">
            <summary>
            查出第一个符合条件的对象.如果没有.返回Null
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.Get(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.Get(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.Get">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.Get(System.Func{`0,System.Boolean})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.Get(System.Int32,System.Int32,System.Func{`0,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[])">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.Get(System.Int32,System.Int32,System.Func{`0,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[],System.String[])">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.GetCount(System.Func{`0,System.Boolean})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.Find(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.Query">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.Query(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.Query(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.QueryColumns(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.GroupBy(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.GroupBy(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="filters">条件</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.Delete(System.Object)">
            <summary>
            删除一条记录
            </summary>
            <param name="entityKey">记录主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.Count(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.Delete(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            删除记录列表
            </summary>
            <param name="entityKeys">记录主键列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.Clear">
            <summary>
            清空表中所有记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.Insert(System.Object,`0)">
            <summary>
            插入一条记录
            </summary>
            <param name="entityKey">主键</param>
            <param name="entity">记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.Insert(System.Collections.Generic.IDictionary{System.Object,`0})">
            <summary>
            插入记录列表
            </summary>
            <param name="keyAndEntities">记录列表,包括主键值与实体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.Update(System.Object,`0)">
            <summary>
            更新一条记录
            </summary>
            <param name="entityKey">主键</param>
            <param name="entity">记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.MangoRedisCommand`1.Update(System.Collections.Generic.IDictionary{System.Object,`0})">
            <summary>
            更新记录列表
            </summary>
            <param name="keyAndEntities">记录列表,包括主键值与实体</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DB.Redis.RedisCommand`1">
            <summary>
            Redis的相关数据操作(PS只用于内存仓库中.只实现了[Query(),Insert,Update,Delete].其它方法未实现)
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.All">
            <summary>
            取得所有列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.#ctor(MangoMis.Frame.DataSource.Model.SimpleTable,MangoMis.Frame.DB.Info.DBInfo)">
            <summary>
            Redis 的操作Command
            </summary>
            <param name="table">命令的数据表</param>
            <param name="dbInfo">服务器信息</param>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.#ctor(MangoMis.Frame.DataSource.Model.SimpleTable,System.String)">
            <summary>
            Redis 的操作Command
            </summary>
            <param name="table">命令的数据表</param>
            <param name="dbKey">服务器索引</param>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.Find(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.GetConnectionString">
            <summary>
            取得当前数据连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.GetTableName">
            <summary>
            取得当前操作的表名
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.FisrtOrDefault(System.Func{`0,System.Boolean})">
            <summary>
            查出第一个符合条件的对象.如果没有.返回Null
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.Get(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.Get(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.Get">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.Get(System.Func{`0,System.Boolean})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.Get(System.Int32,System.Int32,System.Func{`0,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[])">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.Get(System.Int32,System.Int32,System.Func{`0,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[],System.String[])">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.GetCount(System.Func{`0,System.Boolean})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.Find(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.Query">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.Query(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.Query(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.QueryColumns(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.GroupBy(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.GroupBy(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="filters">条件</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.Delete(System.Object)">
            <summary>
            删除一条记录
            </summary>
            <param name="entityKey">记录主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.Count(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.Delete(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            删除记录列表
            </summary>
            <param name="entityKeys">记录主键列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.Clear">
            <summary>
            清空表中所有记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.Insert(System.Object,`0)">
            <summary>
            插入一条记录
            </summary>
            <param name="entityKey">主键</param>
            <param name="entity">记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.Insert(System.Collections.Generic.IDictionary{System.Object,`0})">
            <summary>
            插入记录列表
            </summary>
            <param name="keyAndEntities">记录列表,包括主键值与实体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.Update(System.Object,`0)">
            <summary>
            更新一条记录
            </summary>
            <param name="entityKey">主键</param>
            <param name="entity">记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisCommand`1.Update(System.Collections.Generic.IDictionary{System.Object,`0})">
            <summary>
            更新记录列表
            </summary>
            <param name="keyAndEntities">记录列表,包括主键值与实体</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DB.Redis.RedisStore`1">
            <summary>
            Redis仓库
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.DB.Redis.RedisStore`1.#ctor(MangoMis.Frame.DataSource.DataCommand.IDataCommand{`0},MangoMis.Frame.DataSource.Model.SimpleTable)">
            <summary>
            Redis仓库
            </summary>
            <param name="command"></param>
            <param name="table"></param>
        </member>
        <member name="T:MangoMis.Frame.DB.Store.IStore">
            <summary>
            数据的仓储,数据的的持久化缓存.实现了基础的内存数据与持久化的缓存数据(Redis)之前的交互
            </summary>
        </member>
        <member name="E:MangoMis.Frame.DB.Store.IStore.OnCheckCanInsert">
            <summary>
            检查是否可以进行插入仓储
            </summary>
        </member>
        <member name="E:MangoMis.Frame.DB.Store.IStore.OnCheckCanUpdate">
            <summary>
            检查是否可以进行更新仓储
            </summary>
        </member>
        <member name="E:MangoMis.Frame.DB.Store.IStore.OnCheckCanDelete">
            <summary>
            检查是否可以进行删除仓储
            </summary>
        </member>
        <member name="E:MangoMis.Frame.DB.Store.IStore.OnAfterEntityInsert">
            <summary>
            插入缓存后操作
            </summary>
        </member>
        <member name="E:MangoMis.Frame.DB.Store.IStore.OnAfterEntityUpdate">
            <summary>
            更新缓存后操作
            </summary>
        </member>
        <member name="E:MangoMis.Frame.DB.Store.IStore.OnAfterEntityDelete">
            <summary>
            删除缓存后操作
            </summary>
        </member>
        <member name="E:MangoMis.Frame.DB.Store.IStore.OnAfterEntityInit">
            <summary>
            仓储实体初始化之后运行
            </summary>
        </member>
        <member name="E:MangoMis.Frame.DB.Store.IStore.OnAfterStorePhysicalSave">
            <summary>
            用于向Store物理存储数据后的事件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Store.IStore.DbTable">
            <summary>
            当前存储Table
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Store.IStore.StoreEntityType">
            <summary>
            当前存储类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Store.IStore.IsFirstLoadStoreFromPhysicalOver">
            <summary>
            是否已经首次从物理存储加载完成
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.IStore.PhysicalClear">
            <summary>
            清空持久化数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.IStore.PhysicalSave">
            <summary>
            持久化现有数据集
            </summary>
            <returns>影响行数</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.IStore.PhysicalLoad">
            <summary>
            将当前数据更新到持久化
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.IStore.PhysicalRefresh(System.Object)">
            <summary>
            从数据源刷新仓储
            </summary>
            <param name="entityKey">项目主键</param>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.IStore.PhysicalRefresh(System.Collections.Generic.List{System.Object})">
            <summary>
            从数据源刷新仓储
            </summary>
            <param name="entityKeys">项目主键</param>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.IStore.StoreRemove(System.Object)">
            <summary>
            移除项目此功能很消耗性能,请谨慎使用
            </summary>
            <param name="entityKey">项目主键</param>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.IStore.StoreRemove(System.Collections.IList)">
            <summary>
            移除项目此功能很消耗性能,请谨慎使用
            </summary>
            <param name="entityKeys">项目主键</param>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.IStore.StoreAppend(System.Object,System.Boolean)">
            <summary>
            向当前仓储中添加或更新数据
            </summary>
            <param name="entity">需要更新的项目</param>
            <param name="isReplace">如果项目已经存在.是否直接进行替换[false则是按字段更新,会把非Null值更新进现有的实体中]</param>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.IStore.StoreAppend(System.Collections.IList,System.Boolean)">
            <summary>
            向当前仓储中添加或更新数据
            </summary>
            <param name="entities">需要更新的项目</param>
            <param name="isReplace">如果项目已经存在.是否直接进行替换[false则是按字段更新,会把非Null值更新进现有的实体中]</param>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.IStore.StoreContains(System.Object)">
            <summary>
            判断当前是否有此实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.IStore.PhysicalInsert(System.Object)">
            <summary>
            直接添加一条数据(一般用于主键自增的情况,返回主键)
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.IStore.GetFromStoreSource(System.Object)">
            <summary>
            直接从Store数据源取得一条数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.IStore.ChangeCommand(MangoMis.Frame.DataSource.DataCommand.IDataCommand)">
            <summary>
            切换数据命令集
            </summary>
            <param name="newCommand">新的数据命令集</param>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.DB.Store.IStore.IsHaveLastUpdateTimeColumn">
            <summary>
            是否有最后更新时间字段
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Store.IStore.LastUpdateTimeColumn">
            <summary>
            最后更新时间字段
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.IStore.GetConnectionString">
            <summary>
            取得当前数据连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.IStore.GetTableName">
            <summary>
            取得当前操作的表名
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DB.Store.IStore`1">
            <summary>
            数据源的仓库
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="E:MangoMis.Frame.DB.Store.IStore`1.OnAfterEntityInsert">
            <summary>
            插入缓存后操作
            </summary>
        </member>
        <member name="E:MangoMis.Frame.DB.Store.IStore`1.OnAfterEntityUpdate">
            <summary>
            更新缓存后操作
            </summary>
        </member>
        <member name="E:MangoMis.Frame.DB.Store.IStore`1.OnAfterEntityDelete">
            <summary>
            删除缓存后操作
            </summary>
        </member>
        <member name="E:MangoMis.Frame.DB.Store.IStore`1.OnAfterEntityInit">
            <summary>
            仓储实体初始化之后运行
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.IStore`1.StoreAppend(`0,System.Boolean)">
            <summary>
            向当前仓储中添加或更新数据
            </summary>
            <param name="entity">需要更新的项目</param>
            <param name="isReplace">如果项目已经存在.是否直接进行替换[false则是按字段更新,会把非Null值更新进现有的实体中]</param>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.IStore`1.StoreAppend(System.Collections.Generic.List{`0},System.Boolean)">
            <summary>
            向当前仓储中添加或更新数据
            </summary>
            <param name="entities">需要更新的项目</param>
            <param name="isReplace">如果项目已经存在.是否直接进行替换[false则是按字段更新,会把非Null值更新进现有的实体中]</param>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.IStore`1.PhysicalInsert(`0)">
            <summary>
            直接添加一条数据(一般用于主键自增的情况,返回主键)
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.IStore`1.GetFromStoreSource(System.Object)">
            <summary>
            直接从Store数据源取得一条数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DB.Store.StoreBase`1">
            <summary>
            实体仓库
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Store.StoreBase`1.Command">
            <summary>
            操作命令
            </summary>
        </member>
        <member name="F:MangoMis.Frame.DB.Store.StoreBase`1.Table">
            <summary>
            数据表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.GetConnectionString">
            <summary>
            取得当前数据连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.GetTableName">
            <summary>
            取得当前操作的表名
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.MangoMis#Frame#DB#Store#IStore#GetFromStoreSource(System.Object)">
            <summary>
            直接从Store数据源取得一条数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.GetFromStoreSource(System.Object)">
            <summary>
            直接从Store数据源取得一条数据
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.DB.Store.StoreBase`1.IsHaveLastUpdateTimeColumn">
            <summary>
            是否有最后更新时间字段
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Store.StoreBase`1.LastUpdateTimeColumn">
            <summary>
            最后更新时间字段
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Store.StoreBase`1.AddItemPkidList">
            <summary>
            插入列表
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Store.StoreBase`1.UpdateItemPkidList">
            <summary>
            更新列表
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Store.StoreBase`1.DeleteItemPkidList">
            <summary>
            删除列表
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Store.StoreBase`1.Entities">
            <summary>
            实体列表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.ChangeCommand(MangoMis.Frame.DataSource.DataCommand.IDataCommand)">
            <summary>
            TODO 变更处理程序
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.#ctor(MangoMis.Frame.DataSource.DataCommand.IDataCommand{`0},MangoMis.Frame.DataSource.Model.SimpleTable,System.Boolean)">
            <summary>
            初始化一个实体仓库
            </summary>
            <param name="command"></param>
            <param name="table"></param>
            <param name="noConfigInit">是否不初始化Config</param>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.#ctor(MangoMis.Frame.DataSource.DataCommand.IDataCommand{`0},MangoMis.Frame.DataSource.Model.SimpleTable)">
            <summary>
            初始化一个实体仓库
            </summary>
            <param name="command"></param>
            <param name="table"></param>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.PhysicalInsert(`0)">
            <summary>
            直接添加一条数据(一般用于自增主键)
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.UpdateItem(`0,System.Object,System.Boolean)">
            <summary>
            更新项目
            </summary>
            <param name="entity">需要更新的项目</param>
            <param name="pkId">主键</param>
            <param name="isReplace">是否直接进行替换[false则是按字段更新,会把非Null值更新进现有的实体中]</param>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.GetIndexByPkId(System.Object)">
            <summary>
            通过主键取得当前列表中的索引
            </summary>
            <param name="pkId"></param>
            <returns>小于0为索引错误.其它为正常索引</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.DeleteItem(System.Object)">
            <summary>
            此功能很消耗性能,请谨慎使用
            </summary>
            <param name="pkId"></param>
        </member>
        <member name="P:MangoMis.Frame.DB.Store.StoreBase`1.ListCount">
            <summary>
            当前记录总数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.Find(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.FisrtOrDefault(System.Func{`0,System.Boolean})">
            <summary>
            查出第一个符合条件的对象.如果没有.返回Null
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.Get(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.Get(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.GetCount(System.Func{`0,System.Boolean})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.Get">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.Get(System.Func{`0,System.Boolean})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.Get(System.Int32,System.Int32,System.Func{`0,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[])">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.Get(System.Int32,System.Int32,System.Func{`0,System.Boolean},TT.Common.Frame.Model.CommonOrderModel[],System.String[])">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.Find(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.Count(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.Query">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.Query(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.Query(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.QueryColumns(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.GroupBy(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.GroupBy(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},MangoMis.Frame.DataSource.Model.SimpleColumnCollection,MangoMis.Frame.DataSource.Model.SimpleColumnCollection)">
            <summary>
            取得指定字段的分页列表
            </summary>
            <param name="filters">条件</param>
            <param name="groupby">分组</param>
            <param name="columns">指定要取得的字段</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="E:MangoMis.Frame.DB.Store.StoreBase`1.MangoMis#Frame#DB#Store#IStore#OnAfterEntityInit">
            <summary>
            仓储实体初始化之后运行
            </summary>
        </member>
        <member name="E:MangoMis.Frame.DB.Store.StoreBase`1.OnAfterStorePhysicalSave">
            <summary>
            用于向Store物理存储数据后的事件
            </summary>
        </member>
        <member name="E:MangoMis.Frame.DB.Store.StoreBase`1.OnCheckCanInsert">
            <summary>
            检查是否可以进行插入仓储
            </summary>
        </member>
        <member name="E:MangoMis.Frame.DB.Store.StoreBase`1.OnCheckCanUpdate">
            <summary>
            检查是否可以进行更新仓储
            </summary>
        </member>
        <member name="E:MangoMis.Frame.DB.Store.StoreBase`1.OnCheckCanDelete">
            <summary>
            检查是否可以进行删除仓储
            </summary>
        </member>
        <member name="E:MangoMis.Frame.DB.Store.StoreBase`1.OnAfterEntityInsert">
            <summary>
            插入缓存后操作
            </summary>
        </member>
        <member name="E:MangoMis.Frame.DB.Store.StoreBase`1.OnAfterEntityUpdate">
            <summary>
            更新缓存后操作
            </summary>
        </member>
        <member name="E:MangoMis.Frame.DB.Store.StoreBase`1.OnAfterEntityDelete">
            <summary>
            删除缓存后操作
            </summary>
        </member>
        <member name="E:MangoMis.Frame.DB.Store.StoreBase`1.MangoMis#Frame#DB#Store#IStore#OnAfterEntityInsert">
            <summary>
            插入缓存后操作
            </summary>
        </member>
        <member name="E:MangoMis.Frame.DB.Store.StoreBase`1.MangoMis#Frame#DB#Store#IStore#OnAfterEntityUpdate">
            <summary>
            更新缓存后操作
            </summary>
        </member>
        <member name="E:MangoMis.Frame.DB.Store.StoreBase`1.MangoMis#Frame#DB#Store#IStore#OnAfterEntityDelete">
            <summary>
            删除缓存后操作
            </summary>
        </member>
        <member name="E:MangoMis.Frame.DB.Store.StoreBase`1.OnAfterEntityInit">
            <summary>
            仓储实体初始化之后运行
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Store.StoreBase`1.DbTable">
            <summary>
            当前存储Table
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Store.StoreBase`1.StoreEntityType">
            <summary>
            当前存储类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.DB.Store.StoreBase`1.IsFirstLoadStoreFromPhysicalOver">
            <summary>
            是否已经首次从物理存储加载完成
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.PhysicalClear">
            <summary>
            清空持久化数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.PhysicalSave">
            <summary>
            将当前数据更新到持久化(返回影响行数)
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.PhysicalLoad">
            <summary>
            读取当前持久化的数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.PhysicalRefresh(System.Object)">
            <summary>
            从数据源刷新仓储 
            </summary>
            <param name="entityKey">项目主键</param>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.PhysicalRefresh(System.Collections.Generic.List{System.Object})">
            <summary>
            从数据源刷新仓储
            </summary>
            <param name="entityKeys">项目主键</param>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.StoreUpgrade(`0,System.Boolean)">
            <summary>
            更新项目
            </summary>
            <param name="entity">需要更新的项目</param>
            <param name="isReplace"></param>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.StoreAppend(`0,System.Boolean)">
            <summary>
            更新项目
            </summary>
            <param name="entity">需要更新的项目</param>
            <param name="isReplace">如果项目已经存在.是否直接进行替换[false则是按字段更新,会把非Null值更新进现有的实体中]</param>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.StoreAppend(System.Collections.Generic.List{`0},System.Boolean)">
            <summary>
            向当前仓储中添加或更新数据
            </summary>
            <param name="entities">需要更新的项目</param>
            <param name="isReplace">如果项目已经存在.是否直接进行替换[false则是按字段更新,会把非Null值更新进现有的实体中]</param>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.StoreRemove(System.Object)">
            <summary>
            移除项目此功能很消耗性能,请谨慎使用
            </summary>
            <param name="pkId">项目主主键</param>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.StoreRemove(System.Collections.IList)">
            <summary>
            移除项目此功能很消耗性能,请谨慎使用
            </summary>
            <param name="entityKeys">项目主键</param>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.StoreContains(System.Object)">
            <summary>
            判断当前是否有此实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.GetEnumerator">
            <summary>
            返回一个循环访问集合的枚举器。
            </summary>
            <returns>
            可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator"/> 对象。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:MangoMis.Frame.DB.Store.StoreBase`1.All">
            <summary>
            取得所有列表
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DB.Upgrade.IUpgrade`1">
            <summary>
            通用数据更新接口
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Upgrade.IUpgrade`1.Insert(System.Object,`0)">
            <summary>
            插入一条记录
            </summary>
            <param name="entityKey">主键</param>
            <param name="entity">记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Upgrade.IUpgrade`1.Insert(System.Collections.Generic.IDictionary{System.Object,`0})">
            <summary>
            插入记录列表
            </summary>
            <param name="keyAndEntities">记录列表,包括主键值与实体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Upgrade.IUpgrade`1.Update(System.Object,`0)">
            <summary>
            更新一条记录
            </summary>
            <param name="entityKey">主键</param>
            <param name="entity">记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Upgrade.IUpgrade`1.Update(System.Collections.Generic.IDictionary{System.Object,`0})">
            <summary>
            更新记录列表
            </summary>
            <param name="keyAndEntities">记录列表,包括主键值与实体</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DB.Upgrade.IUpgrade">
            <summary>
            通用数据更新接口
            </summary>
        </member>
        <member name="M:MangoMis.Frame.DB.Upgrade.IUpgrade.Insert(System.Object,System.Object)">
            <summary>
            插入一条记录
            </summary>
            <param name="entityKey">主键</param>
            <param name="entity">记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Upgrade.IUpgrade.Insert(System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>
            插入记录列表
            </summary>
            <param name="keyAndEntities">记录列表,包括主键值与实体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Upgrade.IUpgrade.Update(System.Object,System.Object)">
            <summary>
            更新一条记录
            </summary>
            <param name="entityKey">主键</param>
            <param name="entity">记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Upgrade.IUpgrade.Update(System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>
            更新记录列表
            </summary>
            <param name="keyAndEntities">记录列表,包括主键值与实体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Upgrade.IUpgrade.Delete(System.Object)">
            <summary>
            删除一条记录
            </summary>
            <param name="entityKey">记录主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Upgrade.IUpgrade.Delete(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            删除记录列表
            </summary>
            <param name="entityKeys">记录主键列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Upgrade.IUpgrade.Clear">
            <summary>
            清空表中所有记录
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.DB.Upgrade.UpgradeBase`1">
            <summary>
            更新数据的基类
            </summary>
            <typeparam name="Entity"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.DB.Upgrade.UpgradeBase`1.Delete(System.Object)">
            <summary>
            删除一条记录
            </summary>
            <param name="entityKey">记录主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Upgrade.UpgradeBase`1.Delete(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            删除记录列表
            </summary>
            <param name="entityKeys">记录主键列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Upgrade.UpgradeBase`1.Clear">
            <summary>
            清空表中所有记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Upgrade.UpgradeBase`1.Insert(System.Object,`0)">
            <summary>
            插入一条记录
            </summary>
            <param name="entityKey">主键</param>
            <param name="entity">记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Upgrade.UpgradeBase`1.Insert(System.Collections.Generic.IDictionary{System.Object,`0})">
            <summary>
            插入记录列表
            </summary>
            <param name="keyAndEntities">记录列表,包括主键值与实体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Upgrade.UpgradeBase`1.Update(System.Object,`0)">
            <summary>
            更新一条记录
            </summary>
            <param name="entityKey">主键</param>
            <param name="entity">记录</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.DB.Upgrade.UpgradeBase`1.Update(System.Collections.Generic.IDictionary{System.Object,`0})">
            <summary>
            更新记录列表
            </summary>
            <param name="keyAndEntities">记录列表,包括主键值与实体</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Debug.DParam">
            <summary>
            用于系统Debug中的参数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Debug.DParam.New(System.String,System.String)">
            <summary>
            返回一个新的参数
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Debug.DParam.Key">
            <summary>
            当前参数的键
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Debug.DParam.Value">
            <summary>
            当前参数的值
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Debug.RunItem">
            <summary>
            临时存储的项目记录项.最终会以SysRunLogItem的格式返回
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Debug.RunItem.#ctor(System.String)">
            <summary>
            初化记录项
            </summary>
            <param name="text"></param>
        </member>
        <member name="F:MangoMis.Frame.Debug.RunItem.PrevItem">
            <summary>
            前一节点
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Debug.RunItem.LogText">
            <summary>
            记录内容
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Debug.RunItem.AddTime">
            <summary>
            添加时间
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Debug.RunItem.Clear">
            <summary>
            清空前一节点信息
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Debug.SiteRunDebug">
            <summary>
            站点运行Debug
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Debug.SiteRunDebug.BuildLogTitle(System.String,MangoMis.Frame.Debug.DParam[])">
            <summary>
            建立一个系统日志的标题
            </summary>
            <param name="key">当前运行的内容的主键[主要是表示此Debug是在哪儿运行]</param>
            <param name="param">此标题的参数如[Key:Value]</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Debug.SiteRunDebug.WriteLogOnce(System.String,System.String)">
            <summary>
            添加日志记录
            </summary>
            <param name="key">索引</param>
            <param name="txt"></param>
        </member>
        <member name="M:MangoMis.Frame.Debug.SiteRunDebug.NoConfigOnceStart(System.String,System.String)">
            <summary>
            写入一对操作的开始操作
            </summary>
            <param name="key">索引</param>
            <param name="txt">文本</param>
        </member>
        <member name="M:MangoMis.Frame.Debug.SiteRunDebug.NoConfigOnceEnd(System.String,System.String)">
            <summary>
            写入一对操作的开始操作
            </summary>
            <param name="key">索引</param>
            <param name="txt">文本</param>
        </member>
        <member name="M:MangoMis.Frame.Debug.SiteRunDebug.OnceStart(System.String,System.String)">
            <summary>
            写入一对操作的开始操作
            </summary>
            <param name="key">索引</param>
            <param name="txt">文本</param>
        </member>
        <member name="M:MangoMis.Frame.Debug.SiteRunDebug.OnceEnd(System.String,System.String)">
            <summary>
            写入一对操作的结束操作
            </summary>
            <param name="key">索引</param>
            <param name="txt">文本</param>
        </member>
        <member name="M:MangoMis.Frame.Debug.SiteRunDebug.LockerBegin(System.String,System.String,MangoMis.Frame.Debug.DParam[])">
            <summary>
            记录一个Lock开始的日志
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Debug.SiteRunDebug.LockerEnd(System.Int32,System.String)">
            <summary>
            记录一个Lock结束的日志
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Debug.SiteRunDebug.WriteRunLog(System.String)">
            <summary>
            添加日志记录
            </summary>
            <param name="txt"></param>
        </member>
        <member name="M:MangoMis.Frame.Debug.SiteRunDebug.GetLog">
            <summary>
            取得日志
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Debug.SiteRunDebug.Clear">
            <summary>
            清空日志
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Debug.SysRunHandle">
            <summary>
            在内存的同一请求内容的运行记录模块
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Debug.SysRunHandle.#ctor(System.Int32,System.String,System.String)">
            <summary>
            通过运行对象,运行内容初始化记录模块
            </summary>
            <param name="index">全文索引只是累加项目</param>
            <param name="runObject">运行对象,一般是指运行的大模块.比如Store,FileHelper等</param>
            <param name="runContent">运行内容.一般是指运行的具体函数或功能</param>
        </member>
        <member name="F:MangoMis.Frame.Debug.SysRunHandle._runningItem">
            <summary>
            当前记录项
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Debug.SysRunHandle._itemCount">
            <summary>
            当前共有多少记录项
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Debug.SysRunHandle.Add(System.String)">
            <summary>
            添加一个记录项
            </summary>
            <param name="logText">记录内容</param>
        </member>
        <member name="M:MangoMis.Frame.Debug.SysRunHandle.New(System.String)">
            <summary>
            添加一个记录项
            </summary>
            <param name="logText">记录内容</param>
        </member>
        <member name="M:MangoMis.Frame.Debug.SysRunHandle.End(System.String)">
            <summary>
            结束运行模块.并返回日志内容
            </summary>
            <param name="endText">结语</param>
            <returns>返回日志数组</returns>
        </member>
        <member name="T:MangoMis.Frame.Debug.SysRunHelper">
            <summary>
            运行流水记录
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Debug.SysRunHelper.WriteLog">
            <summary>
            强制记录日志
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Debug.SysRunHelper.Write">
            <summary>
            日志写入文件操作
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Debug.SysRunHelper.SingleLog(System.String,System.String,System.String)">
            <summary>
            记录一个没有上下文.只是独立的一条日志
            </summary>
            <param name="runObject">当前运行的主要对象</param>
            <param name="runContent">运行的对象内容</param>
            <param name="debugText">需要记录的文本</param>
        </member>
        <member name="M:MangoMis.Frame.Debug.SysRunHelper.StartLog(System.String,System.String,System.String)">
            <summary>
            在函数新的操作流水
            </summary>
            <param name="runObject">当前运行的主要对象</param>
            <param name="runContent">运行的对象内容</param>
            <param name="debugText">需要记录的文本</param>
        </member>
        <member name="M:MangoMis.Frame.Debug.SysRunHelper.AddLog(System.String,System.String,System.String)">
            <summary>
            向当前已有的操作流水中添加内容,如果没有则创建
            </summary>
            <param name="runObject">当前运行的主要对象</param>
            <param name="runContent">运行的对象内容</param>
            <param name="debugText">需要记录的文本</param>
        </member>
        <member name="M:MangoMis.Frame.Debug.SysRunHelper.EndLog(System.String,System.String,System.String)">
            <summary>
            结束一个操作流水
            </summary>
            <param name="runObject">当前运行的主要对象</param>
            <param name="runContent">运行的对象内容</param>
            <param name="debugText">需要记录的文本</param>
        </member>
        <member name="T:MangoMis.Frame.Debug.SysRunLogItem">
            <summary>
            用于在内存中记录日志
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Debug.SysRunLogItem.LogTime">
            <summary>
            日志记录时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Debug.SysRunLogItem.LogText">
            <summary>
            日志内容
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Debug.ConfigOfDebug">
            <summary>
            相关Debug的Config[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Debug.ConfigOfDebug.debugIsOpen">
            <summary>
            Debug是否开启[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            <value><c>true</c> if [debug is open]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Debug.ConfigOfDebug.IsDebugUser">
            <summary>
            是否是Debug用户[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            <value><c>true</c> if this instance is debug user; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:MangoMis.Frame.Enums.HandlerTag">
            <summary>
            当前处理程序类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Enums.HandlerTag.VirtualHanler">
            <summary>
            虚拟的处理程序
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Enums.HandlerTag.Handler">
            <summary>
            是Handler
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Enums.HandlerTag.Page">
            <summary>
            是Page
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Enums.HandlerTag.AutoData">
            <summary>
            是自动返回数据处理程序
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Enums.HandlerTag.SettingPage">
            <summary>
            是配置页面
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Enums.HandlerTag.DataInterfaceV1">
            <summary>
            是DateInterfaceV1
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Enums.HandlerTag.DataInterfaceV2">
            <summary>
            是DateInterfaceV2
            </summary>
        </member>
        <member name="T:MangoMis.Frame.EventModule.CommonEventItem">
            <summary>
            通用事件实体
            </summary>
        </member>
        <member name="E:MangoMis.Frame.EventModule.CommonEventItem.BeforeHandler">
            <summary>
            前置事件
            </summary>
        </member>
        <member name="E:MangoMis.Frame.EventModule.CommonEventItem.CurrentHandler">
            <summary>
            实际运行事件
            </summary>
        </member>
        <member name="E:MangoMis.Frame.EventModule.CommonEventItem.AfterHandler">
            <summary>
            后置事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.EventModule.CommonEventItem.#ctor(MangoMis.Frame.EventModule.BeforeExecuteEvent,MangoMis.Frame.EventModule.ExecuteEvent,MangoMis.Frame.EventModule.AfterExecuteEvent)">
            <summary>
            初始化一个当前事件
            </summary>
            <param name="beforeExecute">前置事件</param>
            <param name="currentHandler">当前运行事件</param>
            <param name="afterExecute">后置事件</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.CommonEventItem.Execute(System.Object,System.EventArgs)">
            <summary>
            开始运行
            </summary>
            <param name="sender">事件发送方</param>
            <param name="e">事件参数</param>
            <returns>是否还继续运行</returns>
        </member>
        <member name="T:MangoMis.Frame.EventModule.CommonEventItemCollection">
            <summary>
            通用事件项目集合
            </summary>
        </member>
        <member name="F:MangoMis.Frame.EventModule.CommonEventItemCollection._eventTable">
            <summary>
            本地事件表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.EventModule.CommonEventItemCollection._sender">
            <summary>
            事件发送方
            </summary>
        </member>
        <member name="P:MangoMis.Frame.EventModule.CommonEventItemCollection.IsEnded">
            <summary>
            是否已经不现运行
            </summary>
        </member>
        <member name="P:MangoMis.Frame.EventModule.CommonEventItemCollection.BindBody">
            <summary>
            绑定的对象
            </summary>
        </member>
        <member name="M:MangoMis.Frame.EventModule.CommonEventItemCollection.#ctor(System.Object,System.IDisposable)">
            <summary>
            初始化一个通用事件
            </summary>
            <param name="sender">事件发送方</param>
            <param name="bindBody">绑定的对象(新子实例运行的子实例)</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.CommonEventItemCollection.AddEventItem(System.Object,MangoMis.Frame.EventModule.IEventItem)">
            <summary>
            添加一个事件项目
            </summary>
            <param name="key">事件索引(全局唯一)</param>
            <param name="eventItem">事件项目</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.CommonEventItemCollection.Execute(System.Object,System.EventArgs)">
            <summary>
            执行事件
            </summary>
            <param name="key">事件索引(全局唯一)</param>
            <param name="eventArgs">事件参数</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.CommonEventItemCollection.Dispose">
            <summary>
            消毁
            </summary>
        </member>
        <member name="T:MangoMis.Frame.EventModule.CommonModuleEventItem">
            <summary>
            目前通用模块事件
            </summary>
        </member>
        <member name="F:MangoMis.Frame.EventModule.CommonModuleEventItem.BeforeExecute">
            <summary>
            前置事件
            </summary>
        </member>
        <member name="F:MangoMis.Frame.EventModule.CommonModuleEventItem.AfterExecute">
            <summary>
            后置事件
            </summary>
        </member>
        <member name="T:MangoMis.Frame.EventModule.CommonModuleManager">
            <summary>
            每种Module全局只有一个Manager
            </summary>
        </member>
        <member name="M:MangoMis.Frame.EventModule.CommonModuleManager.#ctor(System.Type)">
            <summary>
            初始化时需要传入基础类,基类中定义了事件的名称以及事件的索引
            </summary>
            <param name="rootModuleType"></param>
        </member>
        <member name="P:MangoMis.Frame.EventModule.CommonModuleManager.RootModuleType">
            <summary>
            基础类型(用于读取基础事件列表)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.EventModule.CommonModuleManager.EventKeyList">
            <summary>
            事件索引列表-
            </summary>
        </member>
        <member name="P:MangoMis.Frame.EventModule.CommonModuleManager.ContextMethodBuildInfoList">
            <summary>
            (每次运行是新的子实例)子实例初始化事件的列表
            </summary>
        </member>
        <member name="P:MangoMis.Frame.EventModule.CommonModuleManager.ModuleEventCollections">
            <summary>
            附加模块事件的列表
            </summary>
        </member>
        <member name="P:MangoMis.Frame.EventModule.CommonModuleManager.ModuleEventTargetCollections">
            <summary>
            附加模块运行主体的列表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.EventModule.CommonModuleManager.Init(System.Type)">
            <summary>
            通过基类初始化一个事件管理器.取得其中的事件列表
            </summary>
            <param name="rootModuleType"></param>
        </member>
        <member name="P:MangoMis.Frame.EventModule.CommonModuleManager.BeginEvents">
            <summary>
            前置事件列表
            </summary>
        </member>
        <member name="P:MangoMis.Frame.EventModule.CommonModuleManager.EndEvents">
            <summary>
            后置事件列表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.EventModule.CommonModuleManager.AddEvent(System.Object,MangoMis.Frame.EventModule.IModuleEventItem)">
            <summary>
            针对单独的事件添加附加运行事件
            </summary>
            <param name="key">事件索引(全局唯一Object)</param>
            <param name="moduleEventItem">模块运行事件项目</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.CommonModuleManager.RemoveEvent(System.Object,MangoMis.Frame.EventModule.IModuleEventItem)">
            <summary>
            针对单独的事件移除附加运行事件
            </summary>
            <param name="key">事件索引(全局唯一Object)</param>
            <param name="moduleEventItem">模块运行事件项目</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.CommonModuleManager.AddModule(System.Type)">
            <summary>
            附加一个整体的运行模块(模块运行模式是每个模块全局唯一实体.运行时如果已经实例化过,则不再重新实例化)
            </summary>
            <param name="moduleType">模块类型</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.CommonModuleManager.RemoveModule(System.Type)">
            <summary>
            移除一个已附加的整体运行模块(模块运行模式是每个模块全局唯一实体.运行时如果已经实例化过,则不再重新实例化)
            </summary>
            <param name="moduleType">模块类型</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.CommonModuleManager.BuildExecuteEventList(System.IDisposable,System.Object)">
            <summary>
            建立此模块的所有事件列表
            </summary>
            <param name="bindBody">绑定的对象(用于承载事件的子实例)</param>
            <param name="sender">事件发送人</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.EventModule.ContextMethodBuildInfo">
            <summary>
            运行子实例的函数建立信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.EventModule.ContextMethodBuildInfo.#ctor(System.Type,System.Reflection.MethodInfo)">
            <summary>
            初始化
            </summary>
            <param name="delegateType">委托类型(方法的委托类型)</param>
            <param name="bindMethodInfoethod">函数信息(用于创建方法并运行)</param>
        </member>
        <member name="P:MangoMis.Frame.EventModule.ContextMethodBuildInfo.DelegateType">
            <summary>
            委托类型(方法的委托类型)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.EventModule.ContextMethodBuildInfo.BindMethodInfo">
            <summary>
            函数信息(用于创建方法并运行)
            </summary>
        </member>
        <member name="T:MangoMis.Frame.EventModule.ContextMethodBuildInfoCollection">
            <summary>
            运行子实例的函数建立信息集合
            </summary>
        </member>
        <member name="P:MangoMis.Frame.EventModule.ContextMethodBuildInfoCollection.MethodInfoList">
            <summary>
            函数集合
            </summary>
        </member>
        <member name="M:MangoMis.Frame.EventModule.ContextMethodBuildInfoCollection.#ctor(System.Type,System.Collections.Concurrent.ConcurrentDictionary{System.String,MangoMis.Frame.EventModule.EventKeyInfo})">
            <summary>
            初始化一个新的集合
            </summary>
            <param name="contextType">子实例的类型</param>
            <param name="eventInfoList">此Module支持的函数Key集合(通过Root的静态Object变量定义)</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.ContextMethodBuildInfoCollection.CreateMethod(System.Object,System.Object,System.ComponentModel.EventHandlerList)">
            <summary>
            向EventHandlerList创建运行函数
            </summary>
            <param name="key">要初始化的事件的索引</param>
            <param name="eventBody">事件运行的主体[子实例]</param>
            <param name="events">要生成运行事件的事件列表(被初始化)</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.ContextMethodBuildInfoCollection.Init">
            <summary>
            本地初始化,初始化此模块的运行函数创建信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.EventModule.ContextMethodBuildInfoCollection.GetEnumerator">
            <summary>
            返回一个循环访问集合的枚举器。
            </summary>
            <returns>
            可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator"/> 对象。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:MangoMis.Frame.EventModule.ContextMethodBuildInfoCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            从特定的 <see cref="T:System.Array"/> 索引处开始，将 <see cref="T:System.Collections.ICollection"/> 的元素复制到一个 <see cref="T:System.Array"/> 中。
            </summary>
            <param name="array">作为从 <see cref="T:System.Collections.ICollection"/> 复制的元素的目标位置的一维 <see cref="T:System.Array"/>。<see cref="T:System.Array"/> 必须具有从零开始的索引。</param><param name="index"><paramref name="array"/> 中从零开始的索引，将在此处开始复制。</param><exception cref="T:System.ArgumentNullException"><paramref name="array"/> 为 null。</exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> 小于零。</exception><exception cref="T:System.ArgumentException"><paramref name="array"/> 是多维的。- 或 -源 <see cref="T:System.Collections.ICollection"/> 中的元素数目大于从 <paramref name="index"/> 到目标 <paramref name="array"/> 末尾之间的可用空间。</exception><exception cref="T:System.ArgumentException">源 <see cref="T:System.Collections.ICollection"/> 的类型无法自动转换为目标 <paramref name="array"/> 的类型。</exception><filterpriority>2</filterpriority>
        </member>
        <member name="P:MangoMis.Frame.EventModule.ContextMethodBuildInfoCollection.Count">
            <summary>
            获取 <see cref="T:System.Collections.ICollection"/> 中包含的元素数。
            </summary>
            <returns>
            <see cref="T:System.Collections.ICollection"/> 中包含的元素数。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:MangoMis.Frame.EventModule.ContextMethodBuildInfoCollection.SyncRoot">
            <summary>
            获取一个可用于同步对 <see cref="T:System.Collections.ICollection"/> 的访问的对象。
            </summary>
            <returns>
            可用于同步对 <see cref="T:System.Collections.ICollection"/> 的访问的对象。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:MangoMis.Frame.EventModule.ContextMethodBuildInfoCollection.IsSynchronized">
            <summary>
            获取一个值，该值指示是否同步对 <see cref="T:System.Collections.ICollection"/> 的访问（线程安全）。
            </summary>
            <returns>
            如果对 <see cref="T:System.Collections.ICollection"/> 的访问是同步的（线程安全），则为 true；否则为 false。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:MangoMis.Frame.EventModule.EventModule">
            <summary>
            模块加载管理
            </summary>
        </member>
        <member name="F:MangoMis.Frame.EventModule.EventModule.ModuleManagerHash">
            <summary>
            当前模块管理的列表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.EventModule.EventModule.InitEventManagers">
            <summary>
            初始化目前系统中所有的需要加载的事件管理器..
            </summary>
        </member>
        <member name="F:MangoMis.Frame.EventModule.EventModule.CommonEventDelegateType">
            <summary>
            当前运行事件的代理类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.EventModule.EventModule.CreateModuleEvent(System.Object,System.IDisposable,System.Object)">
            <summary>
            创建用于调用的模块事件列表
            </summary>
            <param name="moduleKey">模块索引</param>
            <param name="bindBody">绑定的对象</param>
            <param name="sender">事件发送方</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.EventModule.EventModule.BindEvents(MangoMis.Frame.EventModule.ContextMethodBuildInfo,System.Object,System.Object,System.ComponentModel.EventHandlerList)">
            <summary>
            向事件列表中绑定事件
            </summary>
            <param name="contextMethodInfo">函数创建方法</param>
            <param name="eventKey">事件索引</param>
            <param name="eventBody">承载事件的主体</param>
            <param name="events">事件列表(返回事件)</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.EventModule.AddEvent(System.Object,System.Object,MangoMis.Frame.EventModule.IModuleEventItem)">
            <summary>
            附加事件
            </summary>
            <param name="moduleKey">模块管理索引</param>
            <param name="eventKey">事件索引</param>
            <param name="currentEventItem">要添加事件(注意添加和移除时必须要用统一的实例,不然会移除失败)</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.EventModule.AddEvent(MangoMis.Frame.EventModule.IModuleManager,System.Object,MangoMis.Frame.EventModule.IModuleEventItem)">
            <summary>
            附加事件
            </summary>
            <param name="moudleManager">模块管理</param>
            <param name="eventKey">事件索引</param>
            <param name="currentEventItem">要添加事件(注意添加和移除时必须要用统一的实例,不然会移除失败)</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.EventModule.RemoveCommonEvent(System.Object,System.Object,MangoMis.Frame.EventModule.IModuleEventItem)">
            <summary>
            移除事件
            </summary>
            <param name="moduleKey">模块管理索引</param>
            <param name="eventKey">事件索引</param>
            <param name="currentEventItem">要添加事件(注意添加和移除时必须要用统一的实例,不然会移除失败)</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.EventModule.RemoveCommonEvent(MangoMis.Frame.EventModule.IModuleManager,System.Object,MangoMis.Frame.EventModule.IModuleEventItem)">
            <summary>
            移除事件
            </summary>
            <param name="moduleManager">模块管理</param>
            <param name="eventKey">事件索引</param>
            <param name="currentEventItem">要添加事件(注意添加和移除时必须要用统一的实例,不然会移除失败)</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.EventModule.AddAllManagerModule(System.Object)">
            <summary>
            添加当前系统中所有此ManagerKey的模块事件
            </summary>
            <param name="moduleKey">模块索引</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.EventModule.AddModule(System.Object,MangoMis.Frame.AssemblyLoader.AssemblyBody)">
            <summary>
            添加程序集中所有的此模块的事件
            </summary>
            <param name="moduleKey">模块索引</param>
            <param name="assemblyBody">程序集</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.EventModule.AddModule(System.Object,System.Type)">
            <summary>
            添加一个模块事件
            </summary>
            <param name="moduleKey">模块索引</param>
            <param name="currentType">添加类型</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.EventModule.RemoveAllManagerModule(System.Object)">
            <summary>
            移除当前系统中所有此ManagerKey的模块事件
            </summary>
            <param name="moduleKey">模块索引</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.EventModule.RemoveModule(System.Object,MangoMis.Frame.AssemblyLoader.AssemblyBody)">
            <summary>
            移除程序集中所有的此模块的事件
            </summary>
            <param name="moduleKey">模块索引</param>
            <param name="assemblyBody">程序集</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.EventModule.RemoveModule(System.Object,System.Type)">
            <summary>
            移除一个模块事件
            </summary>
            <param name="moduleKey">模块索引</param>
            <param name="currentType">添加类型</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.EventModule.GetMethodBuildInfoList(System.Type,System.Type,System.Collections.Concurrent.ConcurrentDictionary{System.String,MangoMis.Frame.EventModule.EventKeyInfo})">
            <summary>
            根据处理目标类型,取得处理目标中对应事件的实例化信息,用于初始化一个处理步骤时,实例化相关事件
            </summary>
            <param name="targetType">处理目标类型</param>
            <param name="eventDelegateType">事件的代理类型</param>
            <param name="eventInfos">对应的事件列表</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.EventModule.ExecuteEvent">
            <summary>
            真正运行的主体事件
            </summary>
            <param name="sender">事件发送方</param>
            <param name="e">事件参数</param>
        </member>
        <member name="T:MangoMis.Frame.EventModule.BeforeExecuteEvent">
            <summary>
            运行主体的前置事件
            </summary>
            <param name="sender">事件发送方</param>
            <param name="e">事件参数</param>
            
        </member>
        <member name="T:MangoMis.Frame.EventModule.AfterExecuteEvent">
            <summary>
            运行主体的后置事件
            </summary>
            <param name="sender">事件发送方</param>
            <param name="beginResult">前置事件的返回值</param>
        </member>
        <member name="T:MangoMis.Frame.EventModule.IEventItem">
            <summary>
            单个事件的项目
            </summary>
        </member>
        <member name="M:MangoMis.Frame.EventModule.IEventItem.Execute(System.Object,System.EventArgs)">
            <summary>
            事件实例的运行
            </summary>
            <param name="sender">发送方</param>
            <param name="e">发送事件参数</param>
            <returns>是否还继续运行</returns>
        </member>
        <member name="T:MangoMis.Frame.EventModule.IEventItemCollection">
            <summary>
            事件项目集合(一般一个集合就差不多是一个功能Module)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.EventModule.IEventItemCollection.IsEnded">
            <summary>
            是否已经不现运行
            </summary>
        </member>
        <member name="P:MangoMis.Frame.EventModule.IEventItemCollection.BindBody">
            <summary>
            绑定的对象
            </summary>
        </member>
        <member name="M:MangoMis.Frame.EventModule.IEventItemCollection.AddEventItem(System.Object,MangoMis.Frame.EventModule.IEventItem)">
            <summary>
            添加一个事件项目
            </summary>
            <param name="key">事件索引(全局唯一)</param>
            <param name="eventItem">事件项目</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.IEventItemCollection.Execute(System.Object,System.EventArgs)">
            <summary>
            执行事件
            </summary>
            <param name="key">事件索引(全局唯一)</param>
            <param name="eventArgs">事件参数</param>
        </member>
        <member name="T:MangoMis.Frame.EventModule.IModuleEventItem">
            <summary>
            模块事件,所有事件继承于此接口.此接口暂无其它作用
            </summary>
        </member>
        <member name="T:MangoMis.Frame.EventModule.IModuleManager">
            <summary>
            模块管理(每一种模块有统一的管理实例)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.EventModule.IModuleManager.RootModuleType">
            <summary>
            基础类型(用于读取基础事件列表)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.EventModule.IModuleManager.BuildExecuteEventList(System.IDisposable,System.Object)">
            <summary>
            建立此模块的所有事件列表
            </summary>
            <param name="bindBody">绑定的对象</param>
            <param name="sender">事件发送人</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.EventModule.IModuleManager.AddEvent(System.Object,MangoMis.Frame.EventModule.IModuleEventItem)">
            <summary>
            为一个单独的事件附加一个运行事件
            </summary>
            <param name="key">事件索引(全局唯一的Object)</param>
            <param name="moduleEventItem">模块事件项目</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.IModuleManager.RemoveEvent(System.Object,MangoMis.Frame.EventModule.IModuleEventItem)">
            <summary>
            移除单独事件上附加的运行事件(注意要一致否则不能移除)
            </summary>
            <param name="key">事件索引(全局唯一的Object)</param>
            <param name="moduleEventItem">模块事件项目(注意要一致否则不能移除)</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.IModuleManager.AddModule(System.Type)">
            <summary>
            添加附加的处理模块
            </summary>
            <param name="moduleType">处理模块类型</param>
        </member>
        <member name="M:MangoMis.Frame.EventModule.IModuleManager.RemoveModule(System.Type)">
            <summary>
            移除附加的处理模块
            </summary>
            <param name="moduleType"></param>
        </member>
        <member name="T:MangoMis.Frame.EventModule.IModuleRoot">
            <summary>
            根模块的接口所有根模块继承于此接口
            </summary>
        </member>
        <member name="T:MangoMis.Frame.EventModule.EventKeyInfo">
            <summary>
            事件的索引(每个事件都有[新子实例运行,附加实体,单独Event])
            </summary>
        </member>
        <member name="M:MangoMis.Frame.EventModule.EventKeyInfo.#ctor(System.String,System.Object)">
            <summary>
            初始化一个事件的索引信息
            </summary>
            <param name="eventName">事件名(暂时没啥用)</param>
            <param name="eventObjectKey">事件索引(使用object做主键)</param>
        </member>
        <member name="P:MangoMis.Frame.EventModule.EventKeyInfo.EventObjectKey">
            <summary>
            事件的索引
            </summary>
        </member>
        <member name="P:MangoMis.Frame.EventModule.EventKeyInfo.EventName">
            <summary>
            事件名
            </summary>
        </member>
        <member name="T:MangoMis.Frame.EventModule.IEventContext">
            <summary>
            事件实例的基础接口.无实现
            </summary>
        </member>
        <member name="T:MangoMis.Frame.EventModule.IModuleCommonRoot">
            <summary>
            暂时无用
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Foundation.ConfigureCommon">
            <summary>
            相关通用配置的处理位置
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Foundation.ConfigureCommon.StoreConfigureKey">
            <summary>
            配置索引
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Foundation.ConfigureCommon.CurrentStoreConfigureInfo">
            <summary>
            Store的配置项目
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Foundation.ConfigureCommon.FindStoreConfigure(System.String)">
            <summary>
            Store的配置项目,查找对应配置项目
            </summary>
            <param name="configKey"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Foundation.ConfigureCommon.GetConfigureInfo(System.String,System.String)">
            <summary>
            取得公用配置(外部不使用.用于Control中实例化对应的控件使用)
            </summary>
            <param name="configTypeKey"></param>
            <param name="configKey"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Foundation.ConfigureCommon.SetConfigureInfo(System.String,System.String,MangoMis.Frame.Foundation.ConfigureInfo)">
            <summary>
            设置公用配置(外部不使用.用于Control中实例化对应的控件使用)
            </summary>
            <param name="configTypeKey"></param>
            <param name="configKey"></param>
            <param name="configureInfo"></param>
        </member>
        <member name="T:MangoMis.Frame.Foundation.ConfigureInfo">
            <summary>
            基础配置配置类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Foundation.ConfigureInfo.Key">
            <summary>
            键(唯一)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Foundation.ConfigureInfo.Title">
            <summary>
            配置标题
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Foundation.ConfigureInfo.Memo">
            <summary>
            说明文本
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Foundation.ConfigureInfo.Items">
            <summary>
            配置项目
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Foundation.ConfigureInfo.AppendItem(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            添加一个配置项目
            </summary>
            <param name="itemKey">索引</param>
            <param name="title">标题</param>
            <param name="memo">备注</param>
            <param name="defaultValue">默认值</param>
            <param name="typeName">类型(TypeHelper.Full...)</param>
        </member>
        <member name="M:MangoMis.Frame.Foundation.ConfigureInfo.Item(System.String)">
            <summary>
            取得配置项目
            </summary>
            <param name="configKey"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Foundation.ConfigureInfo.Item(System.String,MangoMis.Frame.DB.Common.DefaultConfigItem)">
            <summary>
            设置配置项目
            </summary>
            <param name="configKey"></param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Foundation.ConfigureInfo.Keys">
            <summary>
            取得所有的配置键
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Foundation.ConfigureInfo.Value(System.String,System.Object)">
            <summary>
            赋值
            </summary>
            <param name="configKey"></param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Foundation.ConfigureInfo.Value(System.String)">
            <summary>
            取值
            </summary>
            <param name="configKey"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Foundation.ConfigureInfoStore`1">
            <summary>
            配置项目的基类
            </summary>
            <typeparam name="ConfigEntity"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.Foundation.ConfigureInfoStore`1.#ctor(System.String)">
            <summary>
            配置项目的基类
            </summary>
            <param name="configuareName">配置名.唯一</param>
        </member>
        <member name="F:MangoMis.Frame.Foundation.ConfigureInfoStore`1.StoreName">
            <summary>
            当前仓储名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Foundation.ConfigureInfoStore`1.ConfigStore">
            <summary>
            当前仓储数据源信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Foundation.ConfigureInfoStore`1.GetConfigInfo(System.String)">
            <summary>
            取得缓存更新信息
            </summary>
            <param name="configKey">缓存唯一命名</param>
        </member>
        <member name="M:MangoMis.Frame.Foundation.ConfigureInfoStore`1.Append(System.String)">
            <summary>
            添加一个Config
            </summary>
            <param name="configKey">缓存唯一命名</param>
        </member>
        <member name="M:MangoMis.Frame.Foundation.ConfigureInfoStore`1.Value(System.String,System.String)">
            <summary>
            取得配置的值
            </summary>
            <param name="configKey"></param>
            <param name="configItemName"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Foundation.ConfigureInfoStore`1.Value(System.String,System.String,System.Object)">
            <summary>
            取得配置的值
            </summary>
            <param name="configKey"></param>
            <param name="configItemName"></param>
            <param name="value"></param>
        </member>
        <member name="M:MangoMis.Frame.Foundation.ConfigureInfoStore`1.Item(System.String,System.String)">
            <summary>
            取得配置项目
            </summary>
            <param name="configKey">配置唯一命名</param>
            <param name="configItemName"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Foundation.ConfigureInfoStore`1.Item(System.String,System.String,MangoMis.Frame.DB.Common.DefaultConfigItem)">
            <summary>
            设置配置项目
            </summary>
            <param name="configKey">配置唯一命名</param>
            <param name="configItemName">配置键</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Foundation.ConfigureInfoStore`1.Keys(System.String)">
            <summary>
            取得所有的配置键
            </summary>
            <param name="configKey">配置唯一命名</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Foundation.ConfigureLocalSite">
            <summary>
            本站配置
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Foundation.ConfigureLocalSite.SiteTagName">
            <summary>
            当前站点名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Foundation.ConfigureLocalSite.#ctor">
            <summary>
            初始化缓存Info
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Foundation.ConfigureLocalSite.IsOpenUpgradeLog">
            <summary>
            是否开启了缓存更新日志记录
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Foundation.DbInfoStoreItem">
            <summary>
            保存DbInfo用的项目
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Foundation.DbInfoStoreItem.Properties">
            <summary>
            当前所有属性
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Foundation.DbInfoStoreItem.DbType">
            <summary>
            当前服务器类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Foundation.DbInfoStoreItem.IsDefault">
            <summary>
            是否是默认项目
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Foundation.DbInfoStoreItem.Name">
            <summary>
            显示标题
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Foundation.DbInfoStoreItem.Key">
            <summary>
            键值
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Foundation.FoundationConfig">
            <summary>
            除WebConfig外不可通过其它项目进行配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Foundation.FoundationConfig.GetFoundationDBConfig(MangoMis.Frame.DB.Info.DBInfoKey,System.String)">
            <summary>
            取得基础数据源的配置信息(只能从Config里配置,否则采用默认值)
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.Foundation.FoundationConfig.FoundationDbKey">
            <summary>
            临时兼容,用于判断FoundationDbInfoKey
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Foundation.FoundationConfig.FoundationDbInfo">
            <summary>
            当前基础不可变配置->数据源列表
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Foundation.FoundationStore">
            <summary>
            当前基础的DB仓储信息
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Foundation.FoundationStore.DbInfoStore">
            <summary>
            当前仓储数据源信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Foundation.FoundationStore.ReloadDbInfo(System.String)">
            <summary>
            从数据源重新加载一条缓存
            </summary>
            <param name="dbInfoKey">缓存Key</param>
            <returns>加载得到的项目</returns>
        </member>
        <member name="M:MangoMis.Frame.Foundation.FoundationStore.GetItems">
            <summary>
            取得当前系统中所有的DBInfo项目
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Foundation.FoundationStore.MangoRedisClientStore">
            <summary>
            当前Redis客户端配置(因为这个是读取Redis的前置.)
            换句话来说.读取这个的时候Redis还没有配置好.所以这个并不可以使用系统内部的仓储配置.只能通过系统配置的位置来读取
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Foundation.FoundationStore.TabelStore">
            <summary>
            当前仓储数据源信息
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Foundation.FoundationStore.CacheShowPropertyInfoStore">
            <summary>
            当前仓储中的表属性显示信息
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Foundation.FoundationStore.CacheListShowPropertyStore">
            <summary>
            仓储列表中显示属性的管理
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Foundation.FoundationStoreBase`1">
            <summary>
            基础数据缓存
            </summary>
            <typeparam name="TMt"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.Foundation.FoundationStoreBase`1.NewByPk(System.String)">
            <summary>
            创建一个系统配置缓存[使用主键]
            </summary>
            <param name="primaryKey"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Foundation.FoundationStoreBase`1.NewByPkAndTitle(System.String,System.String)">
            <summary>
            创建一个系统配置缓存[使用主键以及Title]
            </summary>
            <param name="primaryKey"></param>
            <param name="title"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Foundation.FoundationStoreBase`1.New(System.String,System.String,System.String)">
            <summary>
            创建一个系统配置缓存[使用Key,主键以及Title]
            </summary>
            <param name="key">存储的名称</param>
            <param name="primaryKey"></param>
            <param name="title"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Foundation.StoreConfigureInfo">
            <summary>
            Store配置信息
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Foundation.StoreConfigureInfo.IsOpenUpgradeLogName">
            <summary>
            开启更新日志的键
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Foundation.StoreConfigureInfo.#ctor">
            <summary>
            初始化缓存Info
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Foundation.StoreConfigureInfo.IsOpenUpgradeLog">
            <summary>
            是否开启了缓存更新日志记录
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Model.LastChildActionDebugBuilder">
            <summary>
            Debug构造,用于建立Debug,可以在函数开始时声明
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.LastChildActionDebugBuilder.#ctor(System.Func{System.String})">
            <summary>
            初始化
            </summary>
            <param name="actionGetter">运行名</param>
        </member>
        <member name="M:MangoMis.Frame.Model.LastChildActionDebugBuilder.#ctor(System.String)">
            <summary>
            初始化
            </summary>
            <param name="action">运行名</param>
        </member>
        <member name="M:MangoMis.Frame.Model.LastChildActionDebugBuilder.End">
            <summary>
            结束Debug
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/5/23 13:12:30
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Model.LastChildActionDebugBuilder.End(System.String)">
            <summary>
            插入记录之后结束
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="T:MangoMis.Frame.Model.DebugBuilder">
            <summary>
            Debug构造,用于建立Debug,可以在函数开始时声明
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.DebugBuilder.InitSysDebug">
            <summary>
            初始化系统调用Debug信息
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/5/23 13:14:54
            ************************************************************
        </member>
        <member name="P:MangoMis.Frame.Model.DebugBuilder.Action">
            <summary>
            运行名
            </summary>
            <value>The action.</value>
        </member>
        <member name="F:MangoMis.Frame.Model.DebugBuilder.BeginTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.DebugBuilder.CurrentBeginTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.DebugBuilder.IsEnded">
            <summary>
            是否已经结束
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.DebugBuilder.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.DebugBuilder.#ctor(System.String)">
            <summary>
            初始化
            </summary>
            <param name="action">运行名</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DebugBuilder.#ctor(System.Func{System.String})">
            <summary>
            初始化
            </summary>
            <param name="textGetterFunc">运行名</param>
        </member>
        <member name="P:MangoMis.Frame.Model.DebugBuilder.CurrentHaveDebug">
            <summary>
            当前是否有Debug的配置 
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.DebugBuilder.InitIsHaveDebug">
            <summary>
            初始化本次请求是否有Debug
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.DebugBuilder.CanDebug">
            <summary>
            可以使用Debug
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.DebugBuilder.Init(System.Func{System.String})">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.DebugBuilder.Init(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.DebugBuilder.GotoLastChild">
            <summary>
            转移至最后一个子级
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.DebugBuilder.GotoParent">
            <summary>
            转移至父级
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.DebugBuilder.SetTitle(System.Func{System.String})">
            <summary>
            添加Debug
            </summary>
            <param name="titleGetterFunc">取得标题的文本</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DebugBuilder.Append(System.Func{System.String})">
            <summary>
            添加Debug
            </summary>
            <param name="textGetterFunc">The text.</param>
        </member>
        <member name="F:MangoMis.Frame.Model.DebugBuilder._temporaryDebugText">
            <summary>
            用于本类中临时使用的字符串
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.DebugBuilder.Append(System.String)">
            <summary>
            添加Debug
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/5/23 13:12:24
            ************************************************************
            <param name="text">The text.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DebugBuilder.End">
            <summary>
            结束Debug
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/5/23 13:12:30
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Model.DebugBuilder.End(System.String)">
            <summary>
            插入记录之后结束
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DebugBuilder.AppendActionInfo(System.Func{System.String})">
            <summary>
            在上一个执行中加入Debug(Parent.LastChild)
            </summary>
            <param name="textGetter">The text.</param>
        </member>
        <member name="T:MangoMis.Frame.Model.OtherConfigParam_Type">
            <summary>
            配置数据类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.OtherConfigParam_Type.Int">
            <summary>
            数字类型配置
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.OtherConfigParam_Type.String">
            <summary>
            字符类型配置
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.OtherConfigParam_Type.Bool">
            <summary>
            Bool类型配置
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.OtherConfigParam_Type.Button">
            <summary>
            按钮类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.OtherConfigParam_Type.InputAction">
            <summary>
            输入框加按键类型
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.Configs">
            <summary>
            页面配置参数(配置取值唯一位置)
            </summary>
            <summary>
            全局静态配置
            </summary>
            <summary>
            全局静态配置
            </summary>
            <summary>
            全局静态配置
            </summary>
            <summary>
            全局静态配置
            </summary>
            <summary>
            页面配置参数(配置取值唯一位置)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Denied_User_Agent">
            <summary>
            屏蔽user-agent
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Denied_Allow_User_Agent_Ips">
            <summary>
            屏蔽user-agent的IP白名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Denied_IPs">
            <summary>
            屏蔽的IP名单
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Denied_Return_String">
            <summary>
            屏蔽访问的返回值
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Denied_Is_Use_Denied">
            <summary>
            开启屏蔽访问功能
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.CmIsOpenPostCmLog">
            <summary>
            向CM提交时记录日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.CmIsOpenRecieveCmLog">
            <summary>
            接到CM请求时记录日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.AutoPostCacheUpdateApiAddress">
            <summary>
            自动提交更新缓存的Url地址
            </summary>
            <value><c>true</c> if this instance is login SSO by I frame; otherwise, <c>false</c>.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.CmSiteGroup">
            <summary>
            提交的站点分组(取代[自动数据库类型])(site_zy/site_jm)
            </summary>
            <value><c>true</c> if this instance is login SSO by I frame; otherwise, <c>false</c>.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.LocalServerPortForPostToCacheManager">
            <summary>
            用于提交至CacheManager的本地端口号
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.LocalServerIpForPostToCacheManager">
            <summary>
            用于提交至CacheManager的本地IP
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.SitePathForCacheManagerApi">
            <summary>
            调用CacheManager的域名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.ApiPathForCacheManagerInitSite">
            <summary>
            调用CacheManager的初始化站点地址
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.ApiPathForCacheManagerInitCache">
            <summary>
            调用CacheManager的初始化缓存地址
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.ApiPathForCacheManagerUpdateCache">
            <summary>
            调用CacheManager的更新缓存地址
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.ApiPathForCacheManagerCallbackUpdateStore">
            <summary>
            CacheManager回调更新Store地址
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.ApiPathForCacheManagerCallbackUpdateCache">
            <summary>
            CacheManager回调更新Cache地址
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.AutoPostCacheType">
            <summary>
            自动数据库类型(ZY=1/JM=2)
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.RedisIsOpenAutoUpCacheKey">
            <summary>
            是否启用自动提交使用缓存
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Redis_ServerPath">
            <summary>
            Redis服务地址:端口号
            </summary>
            <value>The WCF url_ dict.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Redis_NameBefore">
            <summary>
            加入缓存的表名前缀.以防键重复.建立用英文.不建议太长
            </summary>
            <value>The redis_ name before.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Redis_IsUseRedis">
            <summary>
            是否启用Redis
            </summary>
            <value><c>true</c> if [redis_ is use redis]; otherwise, <c>false</c>.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.BaseUrl_BaseFiveWcfUrl">
            <summary>
            Gets or sets the WCF url_ dict.
            </summary>
            <value>The WCF url_ dict.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsOpenWcfEmptyLog">
            <summary>
            WCF解出Data是NULL的日志开启
            </summary>
            <value>The poser url_ view org.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.local_wcfurl_config_path">
            <summary>
            本地WCF配置的文件路径
            </summary>
            <value>The poser url_ view org.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.BaseUrl_Dict">
            <summary>
            Gets or sets the WCF url_ dict.
            </summary>
            <value>The WCF url_ dict.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.BaseUrl_MapType_Link">
            <summary>
            Gets or sets the userlisturl.
            </summary>
            <value>The userlisturl.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.BaseUrl_Area">
            <summary>
            Gets or sets the WCF url_ area.
            </summary>
            <value>The WCF url_ area.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.BaseUrl_City">
            <summary>
            Gets or sets the WCF url_ city.
            </summary>
            <value>The WCF url_ city.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.BaseUrl_OrgShow">
            <summary>
            Gets or sets the WCF url_ org show.
            </summary>
            <value>The WCF url_ org show.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.BaseUrl_OrgList">
            <summary>
            Gets or sets the WCF url_ org list.
            </summary>
            <value>The WCF url_ org list.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.BaseUrl_OrgCW">
            <summary>
            Gets or sets the WCF url_ org list.
            </summary>
            <value>The WCF url_ org list.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.BaseUrl_OrgJobInfo">
            <summary>
            Gets or sets the WCF url_ org list.
            </summary>
            <value>The WCF url_ org list.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.BaseUrl_UserBase">
            <summary>
            Gets or sets the WCF url_ user base.
            </summary>
            <value>The WCF url_ user base.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.BaseUrl_UserShow">
            <summary>
            Gets or sets the userlisturl.
            </summary>
            <value>The userlisturl.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.BaseUrl_UserList">
            <summary>
            Gets or sets the userlisturl.
            </summary>
            <value>The userlisturl.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.PowerUrl_ViewOrg">
            <summary>
            Gets or sets the poser url_ view org.
            </summary>
            <value>The poser url_ view org.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.PowerUrl_Role">
            <summary>
            Gets or sets the poser url_ role.
            </summary>
            <value>The poser url_ role.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.PowerUrl_Responsibility">
            <summary>
            Gets or sets the poser url_ responsibility.
            </summary>
            <value>The poser url_ responsibility.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.PowerUrl_Permission">
            <summary>
            Gets or sets the poser url_ permission.
            </summary>
            <value>The poser url_ permission.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.PowerUrl_UserPermission">
            <summary>
            Gets or sets the poser url_ permission.
            </summary>
            <value>The poser url_ permission.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.PowerUrl_Module">
            <summary>
            Gets or sets the poser url_ module.
            </summary>
            <value>The poser url_ module.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.PowerUrl_OrgCanSee">
            <summary>
            Gets or sets the poser url_ module.
            </summary>
            <value>The poser url_ module.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.DllDownloadService">
            <summary>
            Gets or sets the poser url_ module.
            </summary>
            <value>The poser url_ module.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.PowerUserIds">
            <summary>
            有配置权限的用户编号
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Sys_IsOpenEverySetting">
            <summary>
            无权限进行配置
            </summary>
            <value><c>true</c> if [sys_ is open every setting]; otherwise, <c>false</c>.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Sys_IsOpenApistatic">
            <summary>
            开启使用ApiStatic
            </summary>
            <value><c>true</c> if [sys_ is open every setting]; otherwise, <c>false</c>.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Sys_IsOpenPageId0NoPower">
            <summary>
            开启PageId0无权限
            </summary>
            <value><c>true</c> if this instance is login SSO by I frame; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Sys_ApiStaticUrl">
            <summary>
            配置中的ApiStatic的地址
            </summary>
            <value><c>true</c> if [sys_ is open every setting]; otherwise, <c>false</c>.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsLoginSSOByIFrame">
            <summary>
            是否启用Iframe的方法实现单点登陆
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.LoginTurnPageForSSO">
            <summary>
            登陆的服务端跳转页面
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsUseCardFromWebGet">
            <summary>
            是否使用网络取得的Card地址
            </summary>
            <value><c>true</c> if this instance is login SSO by I frame; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsNeverGetUrlFromWeb">
            <summary>
            从不从网上取得数据
            </summary>
            <value><c>true</c> if this instance is never get URL from web; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsNeverGetBaseUrlFromWeb">
            <summary>
            从不从网上取得数据
            </summary>
            <value><c>true</c> if this instance is never get URL from web; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Post_Card_API">
            <summary>
            PostCard的API接口
            </summary>
            <value>The post_ card_ API.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Post_Card_Service">
            <summary>
            Card地址
            </summary>
            <value>The post_ card_ API.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsPostedToWeb">
            <summary>
            是否已经提交过申请
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Current_Site_Name">
            <summary>
            提交的站点名
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Current_Project_Name">
            <summary>
            项目名
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Post_AddressName">
            <summary>
            服务器名
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Post_LocalName">
            <summary>
            本地站点名
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Post_ApistaticName">
            <summary>
            提交名
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.UpdateCacheUrl">
            <summary>
            本站更新使用的地址
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsWebSite">
            <summary>
            是否使用站点(否是测试站点)
            </summary>
            <value><c>true</c> if this instance is login SSO by I frame; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.WCFReloadTimeSpan">
            <summary>
            WCF缓存后重读取的时间间隔
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.WCFLoadingStatus">
            <summary>
            WCF自身缓存的状态
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.PassKeyPath">
            <summary>
            本地密钥文件的路径
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.is_open_xml_wcf_url">
            <summary>
            开启使用本地WCF地址配置
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.DefautPassKey">
            <summary>
            本地默认提交使用的密钥
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.WCFConns">
            <summary>
            本地默认提交使用的密钥
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.WCFRewrites">
            <summary>
            重载过的方法名(需要提交参数)
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsPostCityId">
            <summary>
            是否向WCF提交CityID
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Is_Open_Sys_RunLog">
            <summary>
            WCFDebug是否启用
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsOpenDebugForWCF">
            <summary>
            WCFDebug是否启用
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.DebugMaxStep">
            <summary>
            最多Debug层数(防止死循环)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsOpenLoginDebug">
            <summary>
            是否启用登陆时Debug
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsOpenAssemblyVersion">
            <summary>
            是否开启在Debug中显示程序集版本号
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsOpenTest">
            <summary>
            是否开启测试模式
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsOpenGetDebug">
            <summary>
            是否允许加载Debug
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsOpenShowDebug">
            <summary>
            是否允许显示Debug
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.NoMangerPanelUserIds">
            <summary>
            不显示管理Panel的用户(优先级高)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.NoMangerPanelUsers">
            <summary>
            不显示管理Panel的用户(优先级高)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.NoDebugUserIds">
            <summary>
            不显示Debug的用户(优先级高)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.NoDebugUsers">
            <summary>
            不显示Debug的用户(优先级高)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.ShowDebugUsers">
            <summary>
            可以显示Debug的用户
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.DebugCssPath">
            <summary>
            默认使用的Debug用到的CSS文件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.DebugJsPath">
            <summary>
            默认使用的Debug用到的JS文件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.othersitenoapicard">
            <summary>
            不用APICard采用第三方登陆的路径
            </summary>
            <value>The login turn page for SSO.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.PostSiteName">
            <summary>
            站点名[等价于SiteName]
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.SiteName">
            <summary>
            站点名[等价于PostSiteName]
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Protocol">
            <summary>
            站点协议HTTP
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.SiteType">
            <summary>
            类型[mis,jm,www,dev]
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.CookiePath">
            <summary>
             Cookie路径
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.SiteRootName">
            <summary>
            相对域名的路径
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.DBsource">
            <summary>
            站点DBSource
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.SiteId">
            <summary>
            站点编号
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Site_IsmanagerOpen">
            <summary>
            功能不可视时.管理员可视
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.WriteDir">
            <summary>
            是否开启日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.LogDir">
            <summary>
            是否开启日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IpVisitDir">
            <summary>
            访问记录日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.XMLDir">
            <summary>
            XML文件路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.DownloadAssemblysDir">
            <summary>
            下载程序配置路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.PowerCacheDir">
            <summary>
            权限缓存路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Dir_PagePower">
            <summary>
            页面权限配置
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Dir_UserSetting">
            <summary>
            用户个人配置
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.new_site_cache_path">
            <summary>
            新版本缓存存放路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Dir_EntityCacheDir">
            <summary>
            EntityCache路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsOpenCacheUpdatedLog">
            <summary>
            是否开启缓存被更新的日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsOpenLog">
            <summary>
            是否开启日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.isopenwcflog">
            <summary>
            是否开启WCF访问次数日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsUseLog4Net">
            <summary>
            是否开启 Log4Net日志名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Log4NetToken">
            <summary>
             Log4Net的Token
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Log4NetName">
            <summary>
             Log4Net日志名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.ErrorLogPath">
            <summary>
            错误日志
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.CustomLogPath(System.String)">
            <summary>
            自定义日志路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.AppErrorLogPath">
            <summary>
            站点错误日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.CatchErrorLogPath">
            <summary>
            捕获错误日志[20170123改为固定值.因为会出错.还是找不好加载顺序]
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.CacheLogPath">
            <summary>
            缓存日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.CommonLogPath">
            <summary>
            其它通用日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.LogoutPath">
            <summary>
            登出日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsLogOut">
            <summary>
            开启登出日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.SysRunningLogPath">
            <summary>
            系统运行日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.DownloadLogPath">
            <summary>
            自动下载日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.AppStartLogPath">
            <summary>
            系统启动日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.DefaultGlobalCssUrl">
            <summary>
            站点默认全局样式路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Other_NotWriteVisitNow">
            <summary>
             不参与记录页面(|分割)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsOpenIPRecord">
            <summary>
            开启IP记录
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Default_VisitIncludeFiles">
            <summary>
            IP记录查看用户的引入文件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Default_SiteCoder">
            <summary>
            本站使用的编码(日志等)20170824因为读文件死循环的问题.先写死
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.DefaultCssUrl">
            <summary>
            站点默认样式路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsAutoDefaultCss">
            <summary>
            自动引用默认CSS
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsAutoDownloadDll">
            <summary>
            是否自动下载DLL
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.WriteIpVistorTime">
            <summary>
            自动写入访问记录
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.AutoDownloadTimeSpan">
            <summary>
            自动下载时间间隔(分钟)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.SettingPageName">
            <summary>
            站点设置页面名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsOpenRequestRecord">
            <summary>
            开启请求时间记录
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsOpenErrorThrow">
            <summary>
            显示错误页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.DefalutAppErrorMsg">
            <summary>
            默认错误消息提示
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsOpenSysIcon">
            <summary>
            开启系统自动Mis图标
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsUseOldQueryActionName">
            <summary>
            是否使用旧版的方法名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.InculdeBaseUrl">
            <summary>
            站内公用引用的JS与CSS文件基础路径
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.HelpScript">
            <summary>
            在配置页面中显示Help的代码
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.InculdeJSExtLib">
            <summary>
            基础JS扩展库路径
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.InculdeUrlBase">
            <summary>
            引用的UrlBase
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.InculdeCSSExtLib">
            <summary>
            基础JS扩展库样式路径(已经不引用基础库了.)
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsAutoInculdeExtLib">
            <summary>
            自动引用[基础库]
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.PassKeyMapping">
            <summary>
            当前WCF配置
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.PagePowerConfigs">
            <summary>
            页面权限部分
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Configs._CustomConfigs">
            <summary>
            自定义配置参数 不可调用
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.CustomConfigs">
            <summary>
            自定义配置参数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.SetCustomGroup(System.String,MangoMis.Frame.Model.CustomConfigItemGroup)">
            <summary>
            手动设置一个配置组
            </summary>
            <param name="groupKey">配置Key</param>
            <param name="group">配置组内容 </param>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.LoopCustomGroup(System.Action{System.String,MangoMis.Frame.Model.CustomConfigItemGroup})">
            <summary>
            循环CustomGroup
            </summary>
            <param name="loopAction">循环函数</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.InitDllProValue">
            <summary>
            Initializes the DLL pro value.
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.SaveCustomGroupTitle">
            <summary>
            保存配置头
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.ContainsCustomKey(System.String)">
            <summary>
            是否包含此键
            </summary>
            <param name="groupKey">配置Key</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.TryGetCustomGroup(System.String)">
            <summary>
            取得自定义参数组
            </summary>
            <param name="name">The name.</param>
            <returns>不存在返回Null</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.CustomGroup(System.String)">
            <summary>
            取得自定义参数组
            </summary>
            <param name="name">The name.</param>
            <returns>不存在返回新的Group</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.CustomString(System.String,System.String)">
            <summary>
            取得自定义的字符串
            </summary>
            <param name="groupName">Name of the group.</param>
            <param name="configName">Name of the configuration.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.CustomInt(System.String,System.String)">
            <summary>
            取得自定义的Int
            </summary>
            <param name="groupName">Name of the group.</param>
            <param name="configName">Name of the configuration.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.CustomBool(System.String,System.String)">
            <summary>
            取得自定义的Bool
            </summary>
            <param name="groupName">Name of the group.</param>
            <param name="configName">Name of the configuration.</param>
            <returns>System.String.</returns>
        </member>
        <member name="F:MangoMis.Frame.Model.Configs._IsUserChildSitePath">
            <summary>
            因为有Config使用.所以此处修改为直接实例化
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Configs._IsUserChildSiteConfigPath">
            <summary>
            因为有Config使用.所以此处修改为直接实例化
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.DeniedConfig">
            <summary>
            Redis配置
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.RedisConfig">
            <summary>
            Redis配置
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.CenterConfig">
            <summary>
            CenterConfig配置
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.wcfUrlConfig">
            <summary>
            基础缓存的网址实例
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.sysManagerConfig">
            <summary>
            虚拟页面使用权限(不参与页面配置)实例
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.loginConfig">
            <summary>
            单点登陆的配置实例
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.webGetCardConfig">
            <summary>
            提交申请(不参与页面配置)实例
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.wcfConfig">
            <summary>
            WCF配置实例
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.debugConfig">
            <summary>
            站点使用Debug的相关配置实例
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.siteConfig">
            <summary>
            站点相关配置(站点名.站点编号)实例
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.dirConfig">
            <summary>
            站点路径配置实例
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.logConfig">
            <summary>
            日志相关配置实例
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.baseOtherConfig">
            <summary>
            站点其它配置. 包括 是否提交City.默认CSS名 是否自动下载实例
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.inculdeConfig">
            <summary>
            站内公用引用的JS与CSS文件配置实例
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.passkeyConfig">
            <summary>
            WCFAPP配置实例
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.wcfAppConfig">
            <summary>
            WCFAPP配置实例
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.ConfigDirConfig">
            <summary>
            其它配置文件的基础路径[20170116改为直接实例化]
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsCardServiceConfig">
            <summary>
            是否本身是Card服务(不去请求登陆)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.ApistaticUrlConfig">
            <summary>
             ApiStatic使用服务地址
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsUseChildSitePath">
            <summary>
            是否子站使用子站的配置
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsUseChildSiteConfigPath">
            <summary>
            是否子站使用WebConfig中的对应配置
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Configs.CURRENT_ROOT_BASE">
            <summary>
            虚拟相对路径根目录
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Configs.ROOT_BASE">
            <summary>
            根相对路径根目录 
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Configs.FILE_DIR_SPLIT">
            <summary>
            本地路径的文件夹分割符 
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Configs.PHYSICAL_CONTAINS">
            <summary>
            物理路径判断符 
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.ROOT_PHYSICAL_PATH">
            <summary>
            根目录物理路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.CURRENT_ROOT_PHYSICAL_PATH">
            <summary>
            站点目录物理路径
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.Is_Physical_Path(System.String)">
            <summary>
            判断路径是否是物理路径
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.Is_Root_Base_Path(System.String)">
            <summary>
            判断路径是否是根相对路径根目录
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.Is_Current_Root_Base_Path(System.String)">
            <summary>
            判断路径是否是虚拟相对路径根目录
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.Physical_Path(System.String)">
            <summary>
            取得物理路径
            </summary>
            <param name="path">The path.</param>
            <returns>System.String.</returns>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.CURRENT_WRITE_DIR_PHYSICAL_PATH">
            <summary>
            当前WriteDir文件夹
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.Virtual_Path(System.String)">
            <summary>
            取得站点相对路径
            </summary>
            <param name="path">The path.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.GetWriteDirPath(System.String)">
            <summary>
            取得使用WriteDir的路径
            </summary>
            <param name="path">The path.</param>
            <returns>System.String.</returns>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.Write_Dir_URL">
            <summary>
            取得使用WriteDir的路径
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.Get_URL_With_WriteDir(System.String[])">
            <summary>
            取得基于WriteDir的URL
            </summary>
            <param name="paths"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.GetBasePathUrl(System.String)">
            <summary>
            取得使用BasePath的Url
            </summary>
            <param name="url"></param>
            <returns>System.String.</returns>
        </member>
        <member name="F:MangoMis.Frame.Model.Configs.ConfigInstances">
            <summary>
            配置实例
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.FrameConfig``1">
            <summary>
            得到一个系统的Config
            </summary>
            <typeparam name="TConfigClass"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.AddConfigSetting(MangoMis.Frame.Model.IConfigSetting)">
            <summary>
            添加配置实例
            </summary>
            <param name="configInstance">The config instance.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.IsConfigExists(System.String)">
            <summary>
            判断当前配置是否已经添加
            </summary>
            <param name="configname">配置名.</param>
            <returns><c>true</c> if [is configuration exists] [the specified configname]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.GetWhatConfigIsFinding(System.String,System.Web.UI.HtmlControls.HtmlForm,System.String@)">
            <summary>
            判断当前点击的配置并进行对应处理
            </summary>
            <param name="action">The action.</param>
            <param name="form">The form.</param>
            <param name="title">The title.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.GetConfigButtons(System.Web.UI.HtmlControls.HtmlForm,System.Web.UI.Control)">
            <summary>
            取得配置使用的按钮
            </summary>
            <param name="form">The form.</param>
            <param name="container">容器</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.GetConfigSettingKeys">
            <summary>
            取得当前所有的Config的Key
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Configs.GetConfigSetting(System.String)">
            <summary>
            取得一个配置内容
            </summary>
            <param name="configKey">配置Key</param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.Model.Configs.PagePowerActionName">
            <summary>
            页面权限控制名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Configs.PagePowerAction">
            <summary>
            页面权限控制Action
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Configs.IsInitConfig">
            <summary>
            是否检查过WCF地址
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Configs.IsInitBaseOther">
            <summary>
            是否检查过WCF地址
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Configs.IsCheckCardWcf">
            <summary>
            是否检查过WCF地址
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Configs.IsSetPassKeyByConfig">
            <summary>
            是否已经使用配置文件建立了WCFAPP
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Configs.IsSetWCFAppByConfig">
            <summary>
            是否已经使用配置文件建立了WCFAPP
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.ConfigDir">
            <summary>
            其它配置文件的基础路径
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsOpenXmlErrorTextIntInt">
            <summary>
             是否开启XML错误时的XML显示
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsOpenXmlErrorText">
            <summary>
             是否开启XML错误时的XML显示
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.ConfigApiStaticUrl">
            <summary>
            WebConfig中的ApiStatic的Url(为none表示不启用ApiStatic)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.ApistaticUrl">
            <summary>
             ApiStatic使用服务地址
            </summary>
            <value>The assemblys path.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsCardService">
            <summary>
            是否本身是Card服务(不去请求登陆)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Configs.IsCanLoadCardApiFromApiStaticConfig">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Configs.IsCanLoadCardApiFromApiStatic">
            <summary>
            是否启用WCF的Debug
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.DebugContent">
            <summary>
            Debug容器[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.DebugContent.BaseDebug">
            <summary>
            基础Debug[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.DebugContent.Current">
            <summary>
            当前Debug[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.DebugContent.IsBaseDebug">
            <summary>
            是否基础Debug[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            <value><c>true</c> if this instance is base debug; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:MangoMis.Frame.Model.DebugContent.AddDebug(System.String)">
            <summary>
            添加一个Debug[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DebugContent.AddDebug(System.String,System.Boolean)">
            <summary>
            添加一个Debug[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            <param name="text">The text.</param>
            <param name="isbuilder">if set to <c>true</c> [isbuilder].</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DebugContent.Append(System.String)">
            <summary>
            只添加一条文本[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DebugContent.Append(System.String,System.DateTime@)">
            <summary>
            添加一条Debug文本[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            <param name="text">The text.</param>
            <param name="beginTime">The begin time.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DebugContent.EndDebug">
             <summary>
            结束当前Debug[此项已经于20160409删除,已经无效.请不要再调用此项目]
             </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.DebugControl">
            <summary>
            当前Debug存储控制器.
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.DebugControl.Debug_Control_ID">
            <summary>
            debug的控件LiteralControlID
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.DebugControl.ClearDebug">
            <summary>
            清空Debug,[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Model.DebugControl.GetDebug(System.Boolean,System.String)">
            <summary>
            写入Debug.[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            <param name="IsEveryRead">是否不判断其它</param>
            <param name="tilte">名称</param>
            <returns>System.String.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Model.DebugControl.ReadDebug(MangoMis.Frame.Frame.SysDebug,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            取得Debug信息[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            <param name="debug">The debug.</param>
            <param name="IsEveryReaded">是否总是读取</param>
            <param name="isHidden">是否隐藏</param>
            <param name="step">最高步骤</param>
            <returns>System.String.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/6/19 11:59:01
            ************************************************************
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/5/28 10:05:53
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Model.DebugControl.CloseDebug">
            <summary>
            运行结束关闭Debug[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.DebugControl.Debug">
            <summary>
            当前Debug[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            <value>The debug.</value>
            
        </member>
        <member name="P:MangoMis.Frame.Model.DebugControl.IsDebugUser">
            <summary>
            是否是Debug用户[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            <value><c>true</c> if this instance is debug user; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:MangoMis.Frame.Model.CustomConfig">
            <summary>
            自定义配置
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.CustomConfig.Config">
            <summary>
            自定义配置实例
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.CustomConfig.#ctor">
            <summary>
            不可创建
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.CustomConfig.Ext">
            <summary>
            扩展名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.CustomConfig.OnBeforeSave">
            <summary>
            保存前事件
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.CustomConfig.configName">
            <summary>
            配置名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.CustomConfig.SaveGroupName">
            <summary>
            保存配置组别名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.CustomConfig.SaveItems(System.String,System.Collections.Generic.Dictionary{System.String,MangoMis.Frame.Model.CustomConfigItem})">
            <summary>
            保存配置组配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.CustomConfig.BuildEditButton(System.String,System.String,System.String,System.String)">
            <summary>
            取得编辑按键
            </summary>
            <param name="action">The action.</param>
            <param name="buttonText">The button text.</param>
            <param name="formId">The form id.</param>
            <param name="editid">The editid.</param>
            <returns>HtmlButton.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.CustomConfig.SetTextConfig(System.String,System.String)">
            <summary>
            设置文本内容
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
            <returns>TT_H_Generic.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.CustomConfig.BuildDefalutForm(System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            建立默认列表
            </summary>
            <param name="form">The form.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.CustomConfig.SaveGroup(System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            Adds the new group.
            </summary>
            <param name="form">The form.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.CustomConfig.AddNewGroup(System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            Adds the new group.
            </summary>
            <param name="form">The form.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.CustomConfig.SaveItem(System.Web.UI.HtmlControls.HtmlForm,System.String)">
            <summary>
            保存新的配置.
            </summary>
            <param name="form">The form.</param>
            <param name="group">The group.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.CustomConfig.AddNewItem(System.Web.UI.HtmlControls.HtmlForm,System.String)">
            <summary>
            添加新的配置.
            </summary>
            <param name="form">The form.</param>
            <param name="group">The group.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.CustomConfig.Form(System.String,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            Edits the group form.
            </summary>
            <param name="action">The action.</param>
            <param name="form">The form.</param>
        </member>
        <member name="T:MangoMis.Frame.Model.CustomConfigItem">
            <summary>
            自定义配置项
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CustomConfigItem.name">
            <summary>
            配置名
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.CustomConfigItem.desc">
            <summary>
            配置描述
            </summary>
            <value>The desc.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.CustomConfigItem.value">
            <summary>
            配置值
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.CustomConfigItem.String">
            <summary>
            取得字符串类型的值
            </summary>
            <value>The string.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.CustomConfigItem.Int">
            <summary>
            取得Int类型的值
            </summary>
            <value>The int.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.CustomConfigItem.Bool">
            <summary>
            取得真假类型的值
            </summary>
            <value>The bool.</value>
        </member>
        <member name="T:MangoMis.Frame.Model.CustomConfigItemGroup">
            <summary>
            自定义配置组
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.CustomConfigItemGroup.#ctor(System.String,System.String)">
            <summary>
            自定义配置组
            </summary>
            <param name="Name">组名</param>
            <param name="Desc">组描述</param>
        </member>
        <member name="P:MangoMis.Frame.Model.CustomConfigItemGroup.name">
            <summary>
            组名
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.CustomConfigItemGroup.desc">
            <summary>
            组描述
            </summary>
            <value>The desc.</value>
        </member>
        <member name="F:MangoMis.Frame.Model.CustomConfigItemGroup.Items">
            <summary>
            组内部成员
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CustomConfigItemGroup.configs">
            <summary>
            所有组内配置
            </summary>
            <value>The configs.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.CustomConfigItemGroup.Item(System.String)">
            <summary>
            按配置名取得配置项
            </summary>
            <param name="configName">Name of the configuration.</param>
            <returns>MangoMis.Frame.Model.CustomConfigItem.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.CustomConfigItemGroup.Append(System.String,System.Object,System.String)">
            <summary>
            添加配置项
            </summary>
            <param name="itemname">The itemname.</param>
            <param name="value">The value.</param>
            <param name="itemdesc">The itemdesc.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.CustomConfigItemGroup.Set(System.String,System.Object,System.String)">
            <summary>
            为配置项赋值
            </summary>
            <param name="configName">Name of the configuration.</param>
            <param name="value">The value.</param>
            <param name="configDesc">The configuration desc.</param>
        </member>
        <member name="T:MangoMis.Frame.Model.IConfigSetting">
            <summary>
            配置的接口(包括设置按键和名称等)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.IConfigSetting.ConfigName">
            <summary>
            显示文本
            </summary>
            <value>The config text.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.IConfigSetting.ConfigText">
            <summary>
            显示文本
            </summary>
            <value>The config text.</value>
        </member>
        <member name="M:MangoMis.Frame.Model.IConfigSetting.SettingButton(System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            初始化按键
            </summary>
            <param name="form">The form.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.IConfigSetting.BuildSetting(System.String,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            编辑按钮设置
            </summary>
            <param name="action">The action.</param>
            <param name="form">The form.</param>
        </member>
        <member name="P:MangoMis.Frame.Model.IConfigSetting.BtnColor">
            <summary>
            当前的列表页面按钮颜色
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.IConfigSetting.GetDescription">
            <summary>
            取得此配置项描述
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.IConfigSetting.GetConfigChildItemKeys">
            <summary>
            取得此配置所有项目的Key
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.IConfigSetting.GetConfigChildStringValue(System.String)">
            <summary>
            取得单项配置的内容
            </summary>
            <param name="configChildKey">配置Key</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.IConfigSetting.GetConfigChildEditName(System.String)">
            <summary>
            取得单项配置的名称
            </summary>
            <param name="configChildKey">配置Key</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Model.ActionResult`1">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ActionResult`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ActionResult`1.#ctor(System.Boolean)">
            <summary>
            设置nodebug模式,使用这个构造函数,传true,在输出的时候不会debug信息
            </summary>
            <param name="NoDebug"></param>
        </member>
        <member name="P:MangoMis.Frame.Model.ActionResult`1.RequestId">
            <summary>
            服务器生成返回的 Guid，唯一，用于追踪
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.ActionResult`1.ResultCode">
            <summary>
            业务码
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.ActionResult`1.ResultMsg">
            <summary>
            响应消息内容描述
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.ActionResult`1.DebugMsg">
            <summary>
            调试信息
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.ActionResult`1.IsEncrypt">
            <summary>
            数据是否加密 默认否
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.ActionResult`1.DataCount">
            <summary>
            返回数据的记录数量
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.ActionResult`1.PageSize">
            <summary>
            每页行数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.ActionResult`1.PageIndex">
            <summary>
            当前页码
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.ActionResult`1.DataBody">
            <summary>
            数据体结构 一定为数组类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.ActionResult`1.EncDataBody">
            <summary>
            加密数据字符串
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ActionResult`1.Success(`0)">
            <summary>
            返回成功ResultCode=2000 用于单个记录
            </summary>
            <param name="data">需要返回的数据</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.ActionResult`1.Success(System.Collections.Generic.List{`0},System.Int32,System.Int32,System.Int32)">
            <summary>
            返回成功ResultCode=2000 用于分页
            </summary>
            <param name="data">需要返回的数据</param>
            <param name="PageSize">每页行数</param>
            <param name="PageIndex">当前页码</param>
            <param name="DataCount">数据总数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.ActionResult`1.Success(System.Collections.Generic.List{`0})">
            <summary>
            返回成功ResultCode=2000 不用于分页,有需求性的查询
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.ActionResult`1.Error(MangoMis.Frame.Model.ActionError)">
            <summary>
            返回失败(系统返回) 这个基本用不到,因为返回的msg基本都是英文的,建议使用Error(int ResultCode, string ResultMsg)
            </summary>
            <param name="e">对应错误的枚举</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.ActionResult`1.Error(System.Int32,System.String)">
            <summary>
            返回失败(自定义返回)
            </summary>
            <param name="ResultCode">错误码</param>
            <param name="ResultMsg">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.ActionResult`1._setDebug">
            <summary>
            在ApiVirtualHandler里取一次,可以全部查询出来
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ActionResult`1._endDebug">
            <summary>
            
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.ActionResult`1.debugBuilder">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ActionResult`1.BeginDebug(System.String)">
            <summary>
            开始一个debug调试
            </summary>
            <param name="title">标题</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.ActionResult`1.AddDebug(System.Object)">
            <summary>
            在BeginDebug之后调用,添加调试信息 如果不执行BeginDebug 那么默认标题是[调试]
            </summary>
            <param name="msg">调试信息,如果是对象,输出该对象的json,否则输出对应的字符串</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.ActionResult`1.EndDebug">
            <summary>
            结束一组调试信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Model.ActionError">
            <summary>
            
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.ActionError.ResourceChanged">
            <summary>
            资源已变更
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.ActionError.FaceRecognition">
            <summary>
            人脸识别
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.ActionError.RequestError">
            <summary>
            请求错误
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.ActionError.IdentityAuthenticationError">
            <summary>
            身份认证错误
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.ActionError.NoPower">
            <summary>
            权限不足
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.ActionError.ResourcenotExist">
            <summary>
            访问的资源不存在
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.ActionError.ParameterError">
            <summary>
            参数错误
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.ActionError.BusinessException">
            <summary>
            业务异常
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.ActionError.ServerInternalError">
            <summary>
            服务器内部错误
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.Debugger.DebugStatus">
            <summary>
            当前Debug状态
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Debugger.DebugStatus.所有人都显示也包括不显示Debug的人">
            <summary>
            所有人都显示包括不显示Debug的人
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Debugger.DebugStatus.所有人都显示不包括不显示Debug的人">
            <summary>
            只有不显示Debug的人不显示
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Debugger.DebugStatus.所有人都不显示包括有权限的人包括不显示Debug的人">
            <summary>
            所有人包括不显示Debug的人不显示
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Debugger.DebugStatus.除DebugUserIds外都不显示包括其它有权限的人包括不显示Debug的人">
            <summary>
            只有DebugUserIds中的人显示
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Debugger.DebugStatus.有权限的人都显示包括DebugUserIds的人包括不显示Debug的人">
            <summary>
            不显示Debug的人如果有权限也显示
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Debugger.DebugStatus.默认值有权限的人显示包括DebugUserIds的人但不包括不显示Debug的人">
            <summary>
            不显示Debug的人有权限也不显示
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.Debugger.HandlerDebugStatus">
            <summary>
            当前请求的Debug状态
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Debugger.HandlerDebugStatus.CanDebug">
            <summary>
            查看当前是否可以使用Debug[由当前配置,当前权限判断当前是否有查看Debug的权限]
            </summary>
            <value><c>true</c> if this instance is debug user; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:MangoMis.Frame.Model.Debugger.HandlerDebugStatus.CheckHaveDebug(MangoMis.Frame.Model.Debugger.DebugStatus,System.Collections.Generic.List{System.Int32})">
            <summary>
            检查当前请求是否允许Debug
            </summary>
            <param name="currentStatus">当前请求的Debug状态(来自于IFrameHandler的CurrentDebugStatus)</param>
            <param name="debugUserIds">当前额外标注的Debug用户(来自于IFrameHandler的CurrentDebugUserIds)</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Model.IResultInfoHasDebug">
            <summary>
            验证Token的返回值的根接口.无返回类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.IResultInfoHasDebug.debug">
            <summary>
            调试Debug
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.IResultInfoHasDebug.SetDebug(System.String)">
            <summary>
            设置Debug
            </summary>
            <param name="text"></param>
        </member>
        <member name="T:MangoMis.Frame.Model.IApiResult">
            <summary>
            验证Token的返回值的根接口.无返回类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.IApiResult.flag">
            <summary>
            返回状态,100为调用成功,非100表示调用失败
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.IApiResult.message">
            <summary>
            返回消息,一般当flag非100时可以弹出此消息
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.IApiResult.errorCode">
            <summary>
            错误代码
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.ApiResult">
            <summary>
            验证Token的返回值
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ApiResult.Step(System.String)">
            <summary>
            设置错误步骤
            </summary>
            <param name="stepName">步骤名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.ApiResult.To``1">
            <summary>
            将一个默认的返回值转换成指定类型的返回值(不包括Data转换)
            </summary>
            <typeparam name="TOut">指定的返回值类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.ApiResult.#ctor">
            <summary>
            初始化一个异常返回值(返回成功)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ApiResult.#ctor(System.Int32)">
            <summary>
            初始化一个异常返回值(正确返回值不值此实例化),返回的ErrorCode为UnKnown
            </summary>
            <param name="flagValue">返回状态</param>
        </member>
        <member name="M:MangoMis.Frame.Model.ApiResult.#ctor(System.Int32,System.String)">
            <summary>
            初始化一个异常返回值
            </summary>
            <param name="flagValue">返回状态</param>
            <param name="resultErrorCode">返回信息</param>
        </member>
        <member name="M:MangoMis.Frame.Model.ApiResult.#ctor(System.String,System.String)">
            <summary>
            初始化一个异常返回值(默认flag为0)
            </summary>
            <param name="resultErrorCode">返回错误状态</param>
            <param name="resultErrorMessage">错误消息</param>
        </member>
        <member name="M:MangoMis.Frame.Model.ApiResult.#ctor(System.Int32,System.String,System.String)">
            <summary>
            初始化一个异常返回值
            </summary>
            <param name="resultFlag">错误状态</param>
            <param name="resultErrorCode">错误代码</param>
            <param name="resultMessage">错误信息</param>
        </member>
        <member name="M:MangoMis.Frame.Model.ApiResult.SetFlag(System.Int32)">
            <summary>
            设置的Flag
            </summary>
            <param name="setFlag"></param>
        </member>
        <member name="P:MangoMis.Frame.Model.ApiResult.flag">
            <summary>
            返回状态,100为调用成功,非100表示调用失败
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.ApiResult.message">
            <summary>
            返回消息,一般当flag非100时可以弹出此消息
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.ApiResult.errorCode">
            <summary>
            错误代码
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.ApiResult.debug">
            <summary>
            调试Debug
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ApiResult.SetDebug(System.String)">
            <summary>
            设置Debug
            </summary>
            <param name="text"></param>
        </member>
        <member name="T:MangoMis.Frame.Model.ResultInfo`1">
            <summary>
            验证Token的返回值
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ResultInfo`1.#ctor(`0)">
            <summary>
            初始化一个异常返回值(返回成功)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ResultInfo`1.#ctor(System.Int32,System.String)">
            <summary>
            初始化一个异常返回值
            </summary>
            <param name="flagValue">返回状态</param>
            <param name="resultErrorCode">返回信息</param>
        </member>
        <member name="M:MangoMis.Frame.Model.ResultInfo`1.#ctor(System.String,System.String)">
            <summary>
            初始化一个异常返回值(默认flag为0)
            </summary>
            <param name="resultErrorCode">返回错误状态</param>
            <param name="resultErrorMessage">错误消息</param>
        </member>
        <member name="M:MangoMis.Frame.Model.ResultInfo`1.#ctor(System.Int32,System.String,System.String)">
            <summary>
            初始化一个异常返回值
            </summary>
            <param name="resultFlag">错误状态</param>
            <param name="resultErrorCode">错误代码</param>
            <param name="resultMessage">错误信息</param>
        </member>
        <member name="M:MangoMis.Frame.Model.ResultInfo`1.#ctor(`0,System.Int32,System.String,System.String)">
            <summary>
            初始化一个异常返回值
            </summary>
            <param name="data">返回数据内容</param>
            <param name="resultFlag">错误状态</param>
            <param name="resultErrorCode">错误代码</param>
            <param name="resultMessage">错误信息</param>
        </member>
        <member name="T:MangoMis.Frame.Model.ApiResult`1">
            <summary>
            验证Token的返回值
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ApiResult`1.To">
            <summary>
            转换为一个默认的返回值信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.ApiResult`1.#ctor(`0)">
            <summary>
            初始化一个异常返回值(返回成功)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ApiResult`1.#ctor(System.Int32,System.String)">
            <summary>
            初始化一个异常返回值
            </summary>
            <param name="flagValue">返回状态</param>
            <param name="resultErrorCode">返回信息</param>
        </member>
        <member name="M:MangoMis.Frame.Model.ApiResult`1.#ctor(System.String,System.String)">
            <summary>
            初始化一个异常返回值(默认flag为0)
            </summary>
            <param name="resultErrorCode">返回错误状态</param>
            <param name="resultErrorMessage">错误消息</param>
        </member>
        <member name="M:MangoMis.Frame.Model.ApiResult`1.#ctor(System.Int32,System.String,System.String)">
            <summary>
            初始化一个异常返回值
            </summary>
            <param name="resultFlag">错误状态</param>
            <param name="resultErrorCode">错误代码</param>
            <param name="resultMessage">错误信息</param>
        </member>
        <member name="M:MangoMis.Frame.Model.ApiResult`1.#ctor(`0,System.Int32,System.String,System.String)">
            <summary>
            初始化一个异常返回值
            </summary>
            <param name="data">返回数据内容</param>
            <param name="resultFlag">错误状态</param>
            <param name="resultErrorCode">错误代码</param>
            <param name="resultMessage">错误信息</param>
        </member>
        <member name="P:MangoMis.Frame.Model.ApiResult`1.result">
            <summary>
            参考返回值说明
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ApiResult`1.Step(System.String)">
            <summary>
            设置错误步骤
            </summary>
            <param name="stepName">步骤名</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Model.DtoBase">
            <summary>
            一切dto的基类,虽然没什么用
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.Dto_GetList">
            <summary>
            GetList方法的参数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Dto_GetList.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Dto_GetList.#ctor(System.String)">
            <summary>
            根据前台post过来的值来反序列化成mis标准对象,在转换成用于wcf操作的许
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Dto_GetList.PageIndex">
            <summary>
            当前页码
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Dto_GetList.PageSize">
            <summary>
            每页行数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Dto_GetList.Filters">
            <summary>
            条件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Dto_GetList.Orders">
            <summary>
            排序
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.PostModelFilters">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.PostModelFilters.Key">
            <summary>
            字段名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.PostModelFilters.Value">
            <summary>
            字段值 
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.PostModelFilters.Operator">
            <summary>
            操作符 = like  in  如果 如果in查询,那么Value是数组类型 比如[1,2,3]
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.PostModelOrders">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.PostModelOrders.Key">
            <summary>
            排序的字段
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.PostModelOrders.Value">
            <summary>
            0正序 1倒序
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.PostModelRoot">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.PostModelRoot.PageIndex">
            <summary>
            当前页码
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.PostModelRoot.PageSize">
            <summary>
            每页行数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.PostModelRoot.Filters">
            <summary>
            条件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.PostModelRoot.Orders">
            <summary>
            排序
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.Setting.IConfigInfo">
            <summary>
            ConfigInfo的基础无内容
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.Setting.OnceValueSetter`1">
            <summary>
            只设置一次的值需要初始化函数
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.Setting.OnceValueSetter`1.#ctor(System.Func{`0})">
            <summary>
            初始化一个只设置一次的值
            </summary>
            <param name="initFunc"></param>
        </member>
        <member name="M:MangoMis.Frame.Model.Setting.OnceValueSetter`1.#ctor(System.Func{`0},System.Boolean)">
            <summary>
            初始化一个只设置一次的值
            </summary>
            <param name="initFunc"></param>
            <param name="byLocker"></param>
        </member>
        <member name="P:MangoMis.Frame.Model.Setting.OnceValueSetter`1.Value">
            <summary>
            取得当前的值
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Setting.OnceValueSetter`1.Rebuild">
            <summary>
            重建一次
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Setting.OnceValueSetter`1.op_Implicit(MangoMis.Frame.Model.Setting.OnceValueSetter{`0})~`0">
            <summary>
            取得对应的值
            </summary>
            <param name="valueSetter"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Model.DictionaryCollenctionRoot`2">
            <summary>
            字典接口的基类
            </summary>
            <typeparam name="TCurrentKey">本类的Key类型</typeparam>
            <typeparam name="TChild">本类值的类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionaryCollenctionRoot`2.Init(System.Func{`0,`1})">
            <summary>
            实例化一个内容集合
            </summary>
            <param name="initChild">初始化子集的函数</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionaryCollenctionRoot`2.#ctor(System.Func{`0,`1})">
            <summary>
            实例化一个内容集合
            </summary>
            <param name="initChild">初始化子集的函数</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionaryCollenctionRoot`2.#ctor(System.Func{`0,`1},System.Boolean)">
            <summary>
            实例化一个内容集合
            </summary>
            <param name="initChild">初始化子集的函数</param>
            <param name="isByLock">是否需要锁定添加</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionaryCollenctionRoot`2.GetKeys">
            <summary>
            取得当前所有的Key
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionaryCollenctionRoot`2.Each(System.Action{`0,`1})">
            <summary>
            循环内容
            </summary>
            <param name="eachAction">操作循环的内容</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionaryCollenctionRoot`2.Rebuild(`0)">
            <summary>
            重新建立
            </summary>
            <param name="currentKey"></param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionaryCollenctionRoot`2.TryRemove(`0,`1@)">
            <summary>
            删除一个子集元素
            </summary>
            <param name="currentKey">第一层索引</param>
            <param name="outChild">移除的元素</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionaryCollenctionRoot`2.TryGetValue(`0,`1@)">
            <summary>
            取得子集内容
            </summary>
            <param name="currentKey">第一层索引</param>
            <param name="outChild">取得的元素</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionaryCollenctionRoot`2.GetChild(`0)">
            <summary>
            取得子集内容
            </summary>
            <param name="currentKey">第一层索引</param>
        </member>
        <member name="T:MangoMis.Frame.Model.DictionayCollection`9">
            <summary>
            八层Key的内容集合
            </summary>
            <typeparam name="TKey1">第一层索引的类型</typeparam>
            <typeparam name="TKey2">第二层索引的类型</typeparam>
            <typeparam name="TKey3">第三层索引的类型</typeparam>
            <typeparam name="TKey4">第四层索引的类型</typeparam>
            <typeparam name="TKey5">第五层索引的类型</typeparam>
            <typeparam name="TKey6">第六层索引的类型</typeparam>
            <typeparam name="TKey7">第七层索引的类型</typeparam>
            <typeparam name="TKey8">第八层索引的类型</typeparam>
            <typeparam name="TEntity">返回类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`9.#ctor(System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8},System.Boolean)">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
            <param name="isByLock">是否需要锁定添加</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`9.#ctor(System.Func{`0,`1,`2,`3,`4,`5,`6,`7,`8})">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`9.ReBuildItem(`0,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            重新实例化
            </summary>
            <param name="key1">第一层索引</param>
            <param name="key2">第二层索引</param>
            <param name="key3">第三层索引</param>
            <param name="key4">第四层索引</param>
            <param name="key5">第五层索引</param>
            <param name="key6">第六层索引</param>
            <param name="key7">第七层索引</param>
            <param name="key8">第八层索引</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`9.GetEntity(`0,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            取得内容
            </summary>
            <param name="key1">第一层索引</param>
            <param name="key2">第二层索引</param>
            <param name="key3">第三层索引</param>
            <param name="key4">第四层索引</param>
            <param name="key5">第五层索引</param>
            <param name="key6">第六层索引</param>
            <param name="key7">第七层索引</param>
            <param name="key8">第八层索引</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`9.TryRemove(`0,`1,`2,`3,`4,`5,`6,`7,`8@)">
            <summary>
            删除一个子集元素
            </summary>
            <param name="key1">第一层索引</param>
            <param name="key2">第二层索引</param>
            <param name="key3">第三层索引</param>
            <param name="key4">第四层索引</param>
            <param name="key5">第五层索引</param>
            <param name="key6">第六层索引</param>
            <param name="key7">第七层索引</param>
            <param name="key8">第八层索引</param>
            <param name="outChild">移除的元素</param>
        </member>
        <member name="T:MangoMis.Frame.Model.DictionayCollection`8">
            <summary>
            七层Key的内容集合
            </summary>
            <typeparam name="TKey1">第一层索引的类型</typeparam>
            <typeparam name="TKey2">第二层索引的类型</typeparam>
            <typeparam name="TKey3">第三层索引的类型</typeparam>
            <typeparam name="TKey4">第四层索引的类型</typeparam>
            <typeparam name="TKey5">第五层索引的类型</typeparam>
            <typeparam name="TKey6">第六层索引的类型</typeparam>
            <typeparam name="TKey7">第七层索引的类型</typeparam>
            <typeparam name="TEntity">返回类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`8.#ctor(System.Func{`0,`1,`2,`3,`4,`5,`6,`7},System.Boolean)">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
            <param name="isByLock">是否需要锁定添加</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`8.#ctor(System.Func{`0,`1,`2,`3,`4,`5,`6,`7})">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`8.ReBuildItem(`0,`1,`2,`3,`4,`5,`6)">
            <summary>
            重新实例化
            </summary>
            <param name="key1">第一层索引</param>
            <param name="key2">第二层索引</param>
            <param name="key3">第三层索引</param>
            <param name="key4">第四层索引</param>
            <param name="key5">第五层索引</param>
            <param name="key6">第六层索引</param>
            <param name="key7">第七层索引</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`8.GetEntity(`0,`1,`2,`3,`4,`5,`6)">
            <summary>
            取得内容
            </summary>
            <param name="key1">第一层索引</param>
            <param name="key2">第二层索引</param>
            <param name="key3">第三层索引</param>
            <param name="key4">第四层索引</param>
            <param name="key5">第五层索引</param>
            <param name="key6">第六层索引</param>
            <param name="key7">第七层索引</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`8.TryRemove(`0,`1,`2,`3,`4,`5,`6,`7@)">
            <summary>
            删除一个子集元素
            </summary>
            <param name="key1">第一层索引</param>
            <param name="key2">第二层索引</param>
            <param name="key3">第三层索引</param>
            <param name="key4">第四层索引</param>
            <param name="key5">第五层索引</param>
            <param name="key6">第六层索引</param>
            <param name="key7">第七层索引</param>
            <param name="outChild">移除的元素</param>
        </member>
        <member name="T:MangoMis.Frame.Model.DictionayCollection`7">
            <summary>
            六层Key的内容集合
            </summary>
            <typeparam name="TKey1">第一层索引的类型</typeparam>
            <typeparam name="TKey2">第二层索引的类型</typeparam>
            <typeparam name="TKey3">第三层索引的类型</typeparam>
            <typeparam name="TKey4">第四层索引的类型</typeparam>
            <typeparam name="TKey5">第五层索引的类型</typeparam>
            <typeparam name="TKey6">第六层索引的类型</typeparam>
            <typeparam name="TEntity">返回类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`7.#ctor(System.Func{`0,`1,`2,`3,`4,`5,`6},System.Boolean)">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
            <param name="isByLock">是否需要锁定添加</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`7.#ctor(System.Func{`0,`1,`2,`3,`4,`5,`6})">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`7.ReBuildItem(`0,`1,`2,`3,`4,`5)">
            <summary>
            重新实例化
            </summary>
            <param name="key1">第一层索引</param>
            <param name="key2">第二层索引</param>
            <param name="key3">第三层索引</param>
            <param name="key4">第四层索引</param>
            <param name="key5">第五层索引</param>
            <param name="key6">第六层索引</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`7.GetEntity(`0,`1,`2,`3,`4,`5)">
            <summary>
            取得内容
            </summary>
            <param name="key1">第一层索引</param>
            <param name="key2">第二层索引</param>
            <param name="key3">第三层索引</param>
            <param name="key4">第四层索引</param>
            <param name="key5">第五层索引</param>
            <param name="key6">第六层索引</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`7.TryRemove(`0,`1,`2,`3,`4,`5,`6@)">
            <summary>
            删除一个子集元素
            </summary>
            <param name="key1">第一层索引</param>
            <param name="key2">第二层索引</param>
            <param name="key3">第三层索引</param>
            <param name="key4">第四层索引</param>
            <param name="key5">第五层索引</param>
            <param name="key6">第六层索引</param>
            <param name="outChild">移除的元素</param>
        </member>
        <member name="T:MangoMis.Frame.Model.DictionayCollection`6">
            <summary>
            五层Key的内容集合
            </summary>
            <typeparam name="TKey1">第一层索引的类型</typeparam>
            <typeparam name="TKey2">第二层索引的类型</typeparam>
            <typeparam name="TKey3">第三层索引的类型</typeparam>
            <typeparam name="TKey4">第四层索引的类型</typeparam>
            <typeparam name="TKey5">第五层索引的类型</typeparam>
            <typeparam name="TEntity">返回类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`6.#ctor(System.Func{`0,`1,`2,`3,`4,`5},System.Boolean)">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
            <param name="isByLock">是否需要锁定添加</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`6.#ctor(System.Func{`0,`1,`2,`3,`4,`5})">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`6.ReBuildItem(`0,`1,`2,`3,`4)">
            <summary>
            重新实例化
            </summary>
            <param name="key1">第一层索引</param>
            <param name="key2">第二层索引</param>
            <param name="key3">第三层索引</param>
            <param name="key4">第四层索引</param>
            <param name="key5">第五层索引</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`6.GetEntity(`0,`1,`2,`3,`4)">
            <summary>
            取得内容
            </summary>
            <param name="key1">第一层索引</param>
            <param name="key2">第二层索引</param>
            <param name="key3">第三层索引</param>
            <param name="key4">第四层索引</param>
            <param name="key5">第五层索引</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`6.TryRemove(`0,`1,`2,`3,`4,`5@)">
            <summary>
            删除一个子集元素
            </summary>
            <param name="key1">第一层索引</param>
            <param name="key2">第二层索引</param>
            <param name="key3">第三层索引</param>
            <param name="key4">第四层索引</param>
            <param name="key5">第五层索引</param>
            <param name="outChild">移除的元素</param>
        </member>
        <member name="T:MangoMis.Frame.Model.DictionayCollection`5">
            <summary>
            四层Key的内容集合
            </summary>
            <typeparam name="TKey1">第一层索引的类型</typeparam>
            <typeparam name="TKey2">第二层索引的类型</typeparam>
            <typeparam name="TKey3">第三层索引的类型</typeparam>
            <typeparam name="TKey4">第四层索引的类型</typeparam>
            <typeparam name="TEntity">返回类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`5.#ctor(System.Func{`0,`1,`2,`3,`4},System.Boolean)">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
            <param name="isByLock">是否需要锁定添加</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`5.#ctor(System.Func{`0,`1,`2,`3,`4})">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`5.ReBuildItem(`0,`1,`2,`3)">
            <summary>
            重新实例化
            </summary>
            <param name="key1">第一层索引</param>
            <param name="key2">第二层索引</param>
            <param name="key3">第三层索引</param>
            <param name="key4">第四层索引</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`5.GetEntity(`0,`1,`2,`3)">
            <summary>
            取得内容
            </summary>
            <param name="key1">第一层索引</param>
            <param name="key2">第二层索引</param>
            <param name="key3">第三层索引</param>
            <param name="key4">第四层索引</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`5.TryRemove(`0,`1,`2,`3,`4@)">
            <summary>
            删除一个子集元素
            </summary>
            <param name="key1">第一层索引</param>
            <param name="key2">第二层索引</param>
            <param name="key3">第三层索引</param>
            <param name="key4">第四层索引</param>
            <param name="outChild">移除的元素</param>
        </member>
        <member name="T:MangoMis.Frame.Model.DictionayCollection`4">
            <summary>
            三层Key的内容集合
            </summary>
            <typeparam name="TKey1">第一层索引的类型</typeparam>
            <typeparam name="TKey2">第二层索引的类型</typeparam>
            <typeparam name="TKey3">第三层索引的类型</typeparam>
            <typeparam name="TEntity">返回类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`4.#ctor(System.Func{`0,`1,`2,`3},System.Boolean)">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
            <param name="isByLock">是否需要锁定添加</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`4.#ctor(System.Func{`0,`1,`2,`3})">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`4.ReBuildItem(`0,`1,`2)">
            <summary>
            重新实例化
            </summary>
            <param name="key1">第一层索引</param>
            <param name="key2">第二层索引</param>
            <param name="key3">第三层索引</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`4.GetEntity(`0,`1,`2)">
            <summary>
            取得内容
            </summary>
            <param name="key1">第一层索引</param>
            <param name="key2">第二层索引</param>
            <param name="key3">第三层索引</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`4.TryRemove(`0,`1,`2,`3@)">
            <summary>
            删除一个子集元素
            </summary>
            <param name="key1">第一层索引</param>
            <param name="key2">第二层索引</param>
            <param name="key3">第三层索引</param>
            <param name="outChild">移除的元素</param>
        </member>
        <member name="T:MangoMis.Frame.Model.DictionayCollection`3">
            <summary>
            两层Key的内容集合
            </summary>
            <typeparam name="TKey1">第一层索引的类型</typeparam>
            <typeparam name="TKey2">第二层索引的类型</typeparam>
            <typeparam name="TEntity">返回类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`3.#ctor(System.Func{`0,`1,`2},System.Boolean)">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
            <param name="isByLock">是否需要锁定添加</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`3.#ctor(System.Func{`0,`1,`2})">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`3.ReBuildItem(`0,`1)">
            <summary>
            重新实例化
            </summary>
            <param name="key1">第一层索引</param>
            <param name="key2">第二层索引</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`3.GetEntity(`0,`1)">
            <summary>
            取得内容
            </summary>
            <param name="key1">第一层索引</param>
            <param name="key2">第二层索引</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`3.TryRemove(`0,`1,`2@)">
            <summary>
            删除一个子集元素
            </summary>
            <param name="key1">第一层索引</param>
            <param name="key2">第二层索引</param>
            <param name="outChild">移除的元素</param>
        </member>
        <member name="T:MangoMis.Frame.Model.DictionayCollection`2">
            <summary>
            一层Key的内容集合
            </summary>
            <typeparam name="TKey1">第一层索引的类型</typeparam>
            <typeparam name="TEntity">返回类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`2.#ctor(System.Func{`0,`1},System.Boolean)">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
            <param name="isByLock">是否需要锁定添加</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`2.#ctor(System.Func{`0,`1})">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`2.ReBuildItem(`0)">
            <summary>
            重新实例 化
            </summary>
            <param name="key1">第一层索引</param>
        </member>
        <member name="M:MangoMis.Frame.Model.DictionayCollection`2.GetEntity(`0)">
            <summary>
            取得内容
            </summary>
            <param name="key1">第一层索引</param>
        </member>
        <member name="T:MangoMis.Frame.Model.IDictionaryCollenction">
            <summary>
            字典集合的空接口
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.SimpleStackInfo">
            <summary>
            简易堆栈调用函数信息
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.SimpleStackInfo.AssemblyName">
            <summary>
            所在程序集名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.SimpleStackInfo.AssemblyVersion">
             <summary>
            程序集版本号
             </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.SimpleStackInfo.AssemblyDate">
             <summary>
            程序集生成日期
             </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.SimpleStackInfo.MethodClassName">
            <summary>
            调用函数所在类名(包括名称空间)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.SimpleStackInfo.MethodName">
            <summary>
            调用的函数名
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.StringAppender">
            <inheritdoc />
            <summary>
            字符串累加器,因为.Net的String处理在进行相加运算时比较坑,所以如果有大量字符器的相加运算,请使用此类.只提供字符串累加(+)操作.不提供Replace,Substring等操作,用完之后记得把StringAppender的实例Clear或者Dispose掉
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.StringAppender.#ctor">
            <summary>
            实例化一个新的字符串累加器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.StringAppender.ToString">
            <summary>
            返回累加结果.用完之后记得把StringAppender的实例Clear或者Dispose掉
            </summary>
            <returns>
            <see cref="T:System.String" />，表示当前的 <see cref="T:System.Object" />。</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.StringAppender.Add(System.String[])">
            <summary>
            [推荐]累加一个字符串数组
            </summary>
            <param name="right">要加的字符串</param>
        </member>
        <member name="M:MangoMis.Frame.Model.StringAppender.Add(System.String)">
            <summary>
            [推荐]累加一个字符串
            </summary>
            <param name="right">要加的字符串</param>
        </member>
        <member name="M:MangoMis.Frame.Model.StringAppender.Add(MangoMis.Frame.Model.StringAppender)">
            <summary>
            [不推荐]累加一个其它的累加器,注意如果右边的内容使用完了,记得清空
            </summary>
            <param name="right"></param>
        </member>
        <member name="M:MangoMis.Frame.Model.StringAppender.Clear">
            <summary>
            清空内容
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.StringAppender.Dispose">
            <summary>执行与释放或重置非托管资源相关的应用程序定义的任务。</summary>
        </member>
        <member name="T:MangoMis.Frame.Model.TextCollection`1">
            <summary>
            一层Key的消息内容集合(用于存储固定的拼接后的字符串)
            </summary>
            <typeparam name="TKey1">第一层索引的类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.TextCollection`1.#ctor(System.Func{`0,System.String})">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
        </member>
        <member name="M:MangoMis.Frame.Model.TextCollection`1.#ctor(System.Func{`0,System.String},System.Boolean)">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
            <param name="isByLock">是否需要锁定添加</param>
        </member>
        <member name="T:MangoMis.Frame.Model.TextCollection`2">
            <summary>
            两层Key的消息内容集合(用于存储固定的拼接后的字符串)
            </summary>
            <typeparam name="TKey1">第一层索引的类型</typeparam>
            <typeparam name="TKey2">第二层索引的类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.TextCollection`2.#ctor(System.Func{`0,`1,System.String},System.Boolean)">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
            <param name="isByLock">是否需要锁定添加</param>
        </member>
        <member name="M:MangoMis.Frame.Model.TextCollection`2.#ctor(System.Func{`0,`1,System.String})">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
        </member>
        <member name="T:MangoMis.Frame.Model.TextCollection`3">
            <summary>
            三层Key的消息内容集合(用于存储固定的拼接后的字符串)
            </summary>
            <typeparam name="TKey1">第一层索引的类型</typeparam>
            <typeparam name="TKey2">第二层索引的类型</typeparam>
            <typeparam name="TKey3">第三层索引的类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.TextCollection`3.#ctor(System.Func{`0,`1,`2,System.String},System.Boolean)">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
            <param name="isByLock">是否需要锁定添加</param>
        </member>
        <member name="M:MangoMis.Frame.Model.TextCollection`3.#ctor(System.Func{`0,`1,`2,System.String})">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
        </member>
        <member name="T:MangoMis.Frame.Model.TextCollection`4">
            <summary>
            四层Key的消息内容集合(用于存储固定的拼接后的字符串)
            </summary>
            <typeparam name="TKey1">第一层索引的类型</typeparam>
            <typeparam name="TKey2">第二层索引的类型</typeparam>
            <typeparam name="TKey3">第三层索引的类型</typeparam>
            <typeparam name="TKey4">第四层索引的类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.TextCollection`4.#ctor(System.Func{`0,`1,`2,`3,System.String},System.Boolean)">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
            <param name="isByLock">是否需要锁定添加</param>
        </member>
        <member name="M:MangoMis.Frame.Model.TextCollection`4.#ctor(System.Func{`0,`1,`2,`3,System.String})">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
        </member>
        <member name="T:MangoMis.Frame.Model.TextCollection`5">
            <summary>
            五层Key的消息内容集合(用于存储固定的拼接后的字符串)
            </summary>
            <typeparam name="TKey1">第一层索引的类型</typeparam>
            <typeparam name="TKey2">第二层索引的类型</typeparam>
            <typeparam name="TKey3">第三层索引的类型</typeparam>
            <typeparam name="TKey4">第四层索引的类型</typeparam>
            <typeparam name="TKey5">第五层索引的类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.TextCollection`5.#ctor(System.Func{`0,`1,`2,`3,`4,System.String},System.Boolean)">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
            <param name="isByLock">是否需要锁定添加</param>
        </member>
        <member name="M:MangoMis.Frame.Model.TextCollection`5.#ctor(System.Func{`0,`1,`2,`3,`4,System.String})">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
        </member>
        <member name="T:MangoMis.Frame.Model.TextCollection`6">
            <summary>
            六层Key的消息内容集合(用于存储固定的拼接后的字符串)
            </summary>
            <typeparam name="TKey1">第一层索引的类型</typeparam>
            <typeparam name="TKey2">第二层索引的类型</typeparam>
            <typeparam name="TKey3">第三层索引的类型</typeparam>
            <typeparam name="TKey4">第四层索引的类型</typeparam>
            <typeparam name="TKey5">第五层索引的类型</typeparam>
            <typeparam name="TKey6">第六层索引的类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.TextCollection`6.#ctor(System.Func{`0,`1,`2,`3,`4,`5,System.String},System.Boolean)">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
            <param name="isByLock">是否需要锁定添加</param>
        </member>
        <member name="M:MangoMis.Frame.Model.TextCollection`6.#ctor(System.Func{`0,`1,`2,`3,`4,`5,System.String})">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
        </member>
        <member name="T:MangoMis.Frame.Model.TextCollection`7">
            <summary>
            七层Key的消息内容集合(用于存储固定的拼接后的字符串)
            </summary>
            <typeparam name="TKey1">第一层索引的类型</typeparam>
            <typeparam name="TKey2">第二层索引的类型</typeparam>
            <typeparam name="TKey3">第三层索引的类型</typeparam>
            <typeparam name="TKey4">第四层索引的类型</typeparam>
            <typeparam name="TKey5">第五层索引的类型</typeparam>
            <typeparam name="TKey6">第六层索引的类型</typeparam>
            <typeparam name="TKey7">第七层索引的类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.TextCollection`7.#ctor(System.Func{`0,`1,`2,`3,`4,`5,`6,System.String},System.Boolean)">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
            <param name="isByLock">是否需要锁定添加</param>
        </member>
        <member name="M:MangoMis.Frame.Model.TextCollection`7.#ctor(System.Func{`0,`1,`2,`3,`4,`5,`6,System.String})">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
        </member>
        <member name="T:MangoMis.Frame.Model.TextCollection`8">
            <summary>
            七层Key的消息内容集合(用于存储固定的拼接后的字符串)
            </summary>
            <typeparam name="TKey1">第一层索引的类型</typeparam>
            <typeparam name="TKey2">第二层索引的类型</typeparam>
            <typeparam name="TKey3">第三层索引的类型</typeparam>
            <typeparam name="TKey4">第四层索引的类型</typeparam>
            <typeparam name="TKey5">第五层索引的类型</typeparam>
            <typeparam name="TKey6">第六层索引的类型</typeparam>
            <typeparam name="TKey7">第七层索引的类型</typeparam>
            <typeparam name="TKey8">第八层索引的类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.TextCollection`8.#ctor(System.Func{`0,`1,`2,`3,`4,`5,`6,`7,System.String},System.Boolean)">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
            <param name="isByLock">是否需要锁定添加</param>
        </member>
        <member name="M:MangoMis.Frame.Model.TextCollection`8.#ctor(System.Func{`0,`1,`2,`3,`4,`5,`6,`7,System.String})">
            <summary>
            实例化一个消息内容集合
            </summary>
            <param name="initFunction">字符串初始化函数</param>
        </member>
        <member name="T:MangoMis.Frame.Model.CacheListShowProperty">
            <summary>
            缓存中显示属性的管理
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CacheListShowProperty.Id">
            <summary>
            主键没啥用.只用于Redis存储
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CacheListShowProperty.CacheKey">
            <summary>
            对应的表的主键
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CacheListShowProperty.PropertyNames">
            <summary>
            显示的属性列表
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CacheListShowProperty.ShowName">
            <summary>
            按钮名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CacheListShowProperty.IsDefault">
            <summary>
            是否默认值
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.CachePropertyShowInfo">
            <summary>
            缓存中属性管理
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CachePropertyShowInfo.Id">
            <summary>
            主键没啥用.只用于Redis存储
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CachePropertyShowInfo.CacheKey">
            <summary>
            对应的表的主键
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CachePropertyShowInfo.IsOrderColumn">
            <summary>
            是否是排序字段
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CachePropertyShowInfo.DefaultOrder">
            <summary>
            默认排序 desc,asc
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CachePropertyShowInfo.DefaultOrderIndex">
            <summary>
            默认排序顺序
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CachePropertyShowInfo.PropertyName">
            <summary>
            属性名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CachePropertyShowInfo.ShowName">
            <summary>
            对应的显示中文名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CachePropertyShowInfo.Width">
            <summary>
            列表显示宽度
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CachePropertyShowInfo.TextLength">
            <summary>
            显示文字宽度
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CachePropertyShowInfo.ColumnType">
            <summary>
            字典类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CachePropertyShowInfo.DicClassId">
            <summary>
            字典类型号
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.Counter">
            <summary>
            计数器
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Counter._totalLevelCount">
            <summary>
            当前所有等级的计数
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Counter._currentCount">
            <summary>
            无级别原始计数
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Counter._currentLevel">
            <summary>
            当前共有等级
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Counter.Name">
            <summary>
            计数器名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Counter.SingleLevelMaxCount">
            <summary>
            单级最大的计数(为了防止有并发超出最大值.8223372036854775807/9223372036854775807)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Counter.DefaultMaxLevel">
            <summary>
            计数器的默认最大等级(计数器等级是指满值之后可以进位的次数.也就是SingleLevelMaxCount的多少次幂)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Counter.#ctor">
            <summary>
            初始化一个默认的计数器[名称为Guid值][等级为默认等级Counter.DefaultMaxLevel](计数器等级是指满值之后可以进位的次数.也就是SingleLevelMaxCount的多少次幂)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Counter.#ctor(System.String)">
            <summary>
            初始化一个算定义名称,默认等级的计数器[等级为默认等级Counter.DefaultMaxLevel](计数器等级是指满值之后可以进位的次数.也就是SingleLevelMaxCount的多少次幂)
            </summary>
            <param name="name">计数器命名</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Counter.#ctor(System.Int32)">
            <summary>
            初始化一个自定义等级默认名称的计数器[名称为Guid值]
            </summary>
            <param name="maxLevel">计数器等级(计数器等级是指满值之后可以进位的次数.也就是SingleLevelMaxCount的多少次幂)</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Counter.#ctor(System.Int32,System.String)">
            <summary>
            初始化一个计数器
            </summary>
            <param name="maxLevel">计数器等级(计数器等级是指满值之后可以进位的次数.也就是SingleLevelMaxCount的多少次幂)</param>
            <param name="name">计数器名</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Counter.ReadCount(System.Int64,System.String)">
            <summary>
            读取当前的数值
            </summary>
            <param name="xishu">显示系数(/多少.)时间的话会显示太多</param>
            <param name="danwei">显示单位</param>
            <returns>返回数值字符串.eg.1234+111111 * 4+1111111^2 * 4</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Counter.ReadCount">
            <summary>
            读取当前的数值
            </summary>
            <returns>返回数值字符串.eg.1234+111111 * 4+1111111^2 * 4</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Counter.Add">
            <summary>
            在计数器累加
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Counter.Add(System.Int64)">
            <summary>
            向计数器累加指定数值
            </summary>
            <param name="appendNumber">要添加的数值.必须小于SingleLevelMaxCount</param>
        </member>
        <member name="T:MangoMis.Frame.Model.EnumCounterCollection`1">
            <summary>
            通过枚举类型实例化的计数器集合(枚举中每项会实例化成一个计数器)
            </summary>
            <typeparam name="TEnum"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.EnumCounterCollection`1.#ctor">
            <summary>
            实例化一个计数器集合
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.EnumCounterCollection`1.#ctor(System.Int32)">
            <summary>
            实例化一个计数器集合
            </summary>
            <param name="maxLevel">此计数器最多等级</param>
        </member>
        <member name="M:MangoMis.Frame.Model.EnumCounterCollection`1.GetEnumCountDictionary">
            <summary>
            以传入的枚举类型做为Key取得计数计统计的字典
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.EnumCounterCollection`1.GetCountDictionary">
            <summary>
            取得计数计统计数量的字典
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.EnumCounterCollection`1.GetCount(`0)">
            <summary>
            取得单个计数器的计数情况 
            </summary>
            <param name="currentEnum">计数器的枚举类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.EnumCounterCollection`1.Add(`0)">
            <summary>
            为计数器累加
            </summary>
            <param name="name">计数器的枚举类型</param>
        </member>
        <member name="M:MangoMis.Frame.Model.EnumCounterCollection`1.Append(`0,System.Int32)">
            <summary>
            为计数器累加指定数值
            </summary>
            <param name="currentEnum">计数器的枚举类型</param>
            <param name="appendNumber">指定累加的数值</param>
        </member>
        <member name="T:MangoMis.Frame.Model.CounterCollection">
            <summary>
            计数器集合
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.CounterCollection.#ctor(System.Type)">
            <summary>
            实例化一个计数器集合
            </summary>
            <param name="enumType">指定一个枚举类型.为此类型中所有的枚举项添加一个计数器</param>
        </member>
        <member name="M:MangoMis.Frame.Model.CounterCollection.#ctor(System.Int32,System.Type)">
            <summary>
            实例化一个计数器集合
            </summary>
            <param name="maxLevel">此计数器最多等级</param>
            <param name="enumType">指定一个枚举类型.为此类型中所有的枚举项添加一个计数器</param>
        </member>
        <member name="M:MangoMis.Frame.Model.CounterCollection.GetCountDictionary">
            <summary>
            取得计数计统计数量的字典
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.CounterCollection.GetCount(System.String)">
            <summary>
            取得间个计数器的计数情况 
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.CounterCollection.GetCount(System.Enum)">
            <summary>
            取得单个计数器的计数情况 
            </summary>
            <param name="name">计数器的枚举类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.CounterCollection.Add(System.Enum)">
            <summary>
            为计数器累加
            </summary>
            <param name="name">计数器的枚举类型</param>
        </member>
        <member name="M:MangoMis.Frame.Model.CounterCollection.Append(System.Enum,System.Int32)">
            <summary>
            为计数器累加指定数值
            </summary>
            <param name="name">计数器的枚举类型</param>
            <param name="appendNumber">指定累加的数值</param>
        </member>
        <member name="T:MangoMis.Frame.Model.LinkList`1">
            <summary>
            连接表.一般用于不确定数据量.只是想逐条往下取数据的情况
            </summary>
            <typeparam name="T">项目类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.LinkList`1.#ctor">
            <summary>
            初始化一个链接表(默认最大数量为100)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.LinkList`1.#ctor(System.Int32)">
            <summary>
            初始化一个链接表
            </summary>
            <param name="maxNumber">连接表中项目最大数量</param>
        </member>
        <member name="F:MangoMis.Frame.Model.LinkList`1._currentListItem">
            <summary>
            当前正在使用的项目
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.LinkList`1._maxNumber">
            <summary>
            最大允许的项目数量
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.LinkList`1._nextIndex">
            <summary>
            下一个要实例化项目时的索引
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.LinkList`1._lockObj">
            <summary>
            使用项目时锁定项目
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.LinkList`1.NowCount">
            <summary>
            当前链接表中的项目数量
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.LinkList`1.CanAdd">
            <summary>
            判断当前是否可以继续添加项目
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.LinkList`1.NextItem(System.Int32@)">
            <summary>
            取得下一个可用项目
            </summary>
            <param name="index">返回项目索引(没有可用的项目则返回-1)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.LinkList`1.AddItem(`0,System.Int32@)">
            <summary>
            添加一个新项并返回它.
            </summary>
            <param name="item">要添加的新项</param>
            <param name="index">添加新项之后的索引-1为添加失败</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.LinkList`1.DestroyItem(System.Int32)">
            <summary>
            移除指定索引的项目
            </summary>
            <param name="index">项目索引</param>
        </member>
        <member name="T:MangoMis.Frame.Model.LinkListItem`1">
            <summary>
            特殊链表的项目
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:MangoMis.Frame.Model.CheckStoreUpdateCanDo">
            <summary>
            检查仓储存储时是否可以进行(插入/更新/删除)
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Model.CheckStoreUpdateMtCanDo`1">
            <summary>
            检查仓储存储时是否可以进行(插入/更新/删除)
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Model.InitEventAction">
            <summary>
            用于初始化的事件
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.GetStoreEvent`1">
            <summary>
            用于判断当前是否已经初始化结束
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.IsReadyEvent">
            <summary>
            用于判断当前是否已经初始化结束
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.EventActionForBool">
            <summary>
            有一个Bool参数的事件
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.AfterGetEntityBySource">
            <summary>
            用于从数据源取得实例后事件
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.AfterGetListBySource">
            <summary>
            用于从数据源取得列表后事件
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.OnSaveEvent">
            <summary>
            用于向Store物理存储数据后的事件
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.Excel.BorderCollection">
            <summary>
            边框样式
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Excel.BorderCollection.Left">
            <summary>
            左边框
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Excel.BorderCollection.Right">
            <summary>
            右边框
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Excel.BorderCollection.Top">
            <summary>
            顶边框
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Excel.BorderCollection.Bottom">
            <summary>
            下边框
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.BorderCollection.Full">
            <summary>
            全边框
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.BorderCollection.Empty">
            <summary>
            无边框
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.BorderCollection.FullBorder">
            <summary>
            返回全边框
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.BorderCollection.SetWeight(System.Int32)">
            <summary>
            添加左边框
            </summary>
            <param name="weight"></param>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.BorderCollection.EmptyBorder">
            <summary>
            返回无边框
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.BorderCollection.AddLeftBorder(System.Int32)">
            <summary>
            添加左边框
            </summary>
            <param name="weight"></param>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.BorderCollection.AddRightBorder(System.Int32)">
            <summary>
            添加右边框
            </summary>
            <param name="weight"></param>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.BorderCollection.AddTopBorder(System.Int32)">
            <summary>
            添加上边框
            </summary>
            <param name="weight"></param>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.BorderCollection.AddBottomBorder(System.Int32)">
            <summary>
            添加下边框
            </summary>
            <param name="weight"></param>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.BorderCollection.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            <see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:MangoMis.Frame.Model.Excel.CellDataType">
            <summary>
            单元格数据格式
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Excel.CellDataType.STRING">
            <summary>
            字符串类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Excel.CellDataType.NUMBER">
            <summary>
            数值类型
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.Excel.ExcelAlignment">
            <summary>
            Alignment属性
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Excel.ExcelAlignment.Horizontal">
            <summary>
            横向显示
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Excel.ExcelAlignment.Vertical">
            <summary>
            纵向显示
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelAlignment.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelAlignment.CenterHorizontal">
            <summary>
            横向居中显示
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelAlignment.CenterVertical">
            <summary>
            纵向居中显示
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelAlignment.Center">
            <summary>
            全居中
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelAlignment.Top">
            <summary>
            顶部显示
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelAlignment.Bottom">
            <summary>
            底部显示
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelAlignment.Right">
            <summary>
            右侧显示
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelAlignment.Left">
            <summary>
            左侧显示
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelAlignment.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            <see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:MangoMis.Frame.Model.Excel.ExcelBorder">
            <summary>
            边框样式
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Excel.ExcelBorder.Weight">
            <summary>
            Border线宽
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Excel.ExcelBorder.Pos">
            <summary>
            Border位置
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Excel.ExcelBorder.Style">
            <summary>
            Border线样式
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelBorder.#ctor(System.String)">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelBorder.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            <see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:MangoMis.Frame.Model.Excel.ExcelCell">
            <summary>
            Excel的单元格
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Excel.ExcelCell.CellDataTypeMapping">
            <summary>
            单元格数据类型映射
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelCell.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            <see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelCell.#ctor(System.String)">
            <summary>
            初始化单元格
            </summary>
            <param name="styleId">单元格样式</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelCell.#ctor(System.String,System.String)">
            <summary>
            初始化单元格
            </summary>
            <param name="styleId">单元格样式</param>
            <param name="value">单元格内容</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelCell.#ctor(System.String,System.String,System.Int32)">
            <summary>
            初始化单元格
            </summary>
            <param name="styleId">单元格样式</param>
            <param name="value">单元格内容</param>
            <param name="mergeAcross">合并单元格</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelCell.#ctor(System.String,System.String,MangoMis.Frame.Model.Excel.CellDataType)">
            <summary>
            初始化单元格
            </summary>
            <param name="styleId">单元格样式</param>
            <param name="value">单元格内容</param>
            <param name="dataType">单元格格式</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelCell.#ctor(System.String,System.String,MangoMis.Frame.Model.Excel.CellDataType,System.Int32)">
            <summary>
            初始化单元格
            </summary>
            <param name="styleId">单元格样式</param>
            <param name="value">单元格内容</param>
            <param name="dataType">单元格格式</param>
            <param name="mergeAcross">合并单元格</param>
        </member>
        <member name="F:MangoMis.Frame.Model.Excel.ExcelCell.DataType">
            <summary>
            单元格数据格式,默认为STRING
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Excel.ExcelCell.MergeAcross">
            <summary>
            横向合并
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Excel.ExcelCell.Value">
            <summary>
            Excel单元格值
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Excel.ExcelCell.StyleId">
            <summary>
            使用的样式主键
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.Excel.ExcelCollection`1">
            <summary>
            Excel内容集合
            </summary>
            <typeparam name="MT"></typeparam>
        </member>
        <member name="T:MangoMis.Frame.Model.Excel.ExcelColumn">
            <summary>
            Excel的列
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelColumn.#ctor(System.String,System.String)">
            <summary>
            初始化一个列
            </summary>
            <param name="columnName">列字段名</param>
            <param name="defaultStyleId">默认样式</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelColumn.#ctor(System.String,System.String,MangoMis.Frame.Model.Excel.CellDataType)">
            <summary>
            初始化一个列
            </summary>
            <param name="columnName">列字段名</param>
            <param name="defaultStyleId">默认样式</param>
            <param name="dataType">字段格式</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelColumn.#ctor(System.String,System.String,MangoMis.Frame.Model.Excel.CellDataType,MangoMis.Frame.Model.Excel.GetExcelValue)">
            <summary>
            初始化一个列
            </summary>
            <param name="columnName">列字段名</param>
            <param name="defaultStyleId">默认样式</param>
            <param name="dataType">字段格式</param>
            <param name="onGetExcelSytleId">样式取得函数</param>
        </member>
        <member name="F:MangoMis.Frame.Model.Excel.ExcelColumn.DataType">
            <summary>
            单元格数据格式,默认为STRING
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Excel.ExcelColumn.MergeAcross">
            <summary>
            横向合并
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Excel.ExcelColumn.ColumnName">
            <summary>
            列名[字段名,属性名]
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Excel.ExcelColumn.StyleId">
            <summary>
            默认样式
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Model.Excel.ExcelColumn.OnGetExcelSytleId">
            <summary>
            取得样式编号
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Model.Excel.ExcelColumn.OnGetExcelValue">
            <summary>
            取得值
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelColumn.Cell(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            取得一个单元格
            </summary>
            <param name="dataRow">当前行</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelColumn.Cell(System.String,System.String)">
            <summary>
            创建个默认的单元格(使用指定样式ID)
            </summary>
            <param name="cellValue">单元格值</param>
            <param name="styleId">样式ID</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Model.Excel.ExcelDocument">
            <summary>
            创建Excel的文档
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelDocument.#ctor">
            <summary>
            <para>创建一个默认的EXCEL文档</para> 
            <para>[可选][Step 010]NewStyle():添加样式(可以不添加,使用默认样式)</para> 
            <para>[必选][Step 020]NewSheet(sheetName):添加一张表/或多次添加多张表</para> 
            <para>[必选][Step 030]步骤参见ExcelSheet的步骤<see cref="T:MangoMis.Frame.Model.Excel.ExcelSheet"/></para> 
            <para>[必选][Step 040]ToString()取得Excel文档文本/或ExcelResponse(OutFileName)直接输出Response文件</para> 
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelDocument.GetSheet(System.Int32)">
            <summary>
            取得指定索引的表格
            </summary>
            <param name="index">索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelDocument.NewSheet(System.String)">
            <summary>
            添加一张新的表格
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelDocument.GetStyle(System.Int32)">
            <summary>
            取得指定索引的样式
            </summary>
            <param name="index">索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelDocument.NewStyle">
            <summary>
            添加新的默认的单元格样式
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelDocument.SetDefaultTitleStyleId(System.String)">
            <summary>
            设置默认的标题样式ID
            </summary>
            <param name="defaultTitleStyleId"></param>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelDocument.SetDefaultCellStyleId(System.String)">
            <summary>
            设置默认的单元格样式ID
            </summary>
            <param name="defaultCellStyleId"></param>
        </member>
        <member name="F:MangoMis.Frame.Model.Excel.ExcelDocument.DefaultTitleStyleId">
            <summary>
            默认标题样式
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Excel.ExcelDocument.DefaultCellStyleId">
            <summary>
            默认单元格样式
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelDocument.ToString">
            <summary>
            返回当前Excel的XML文本
            </summary>
            <returns>
            <see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelDocument.ExcelResponse(System.String)">
            <summary>
            导出Excel文件.通过Response输出
            </summary>
            <param name="OutFileName">导出文件名</param>
            <returns>System.String.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Model.Excel.ExcelFont">
            <summary>
            字体
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelFont.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            <see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:MangoMis.Frame.Model.Excel.ExcelFont.Size">
            <summary>
            字体大小
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Excel.ExcelFont.CharSet">
            <summary>
            字体大小
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Excel.ExcelFont.FontName">
            <summary>
            字符样式
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Excel.ExcelFont.Color">
            <summary>
            颜色
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Excel.ExcelFont.IsBold">
            <summary>
            是否加粗
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelFont.#ctor(System.Int32)">
            <summary>
            初始化
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelFont.#ctor(System.String)">
            <summary>
            初始化
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelFont.#ctor(System.String,System.Int32)">
            <summary>
            初始化
            </summary>
            <param name="color"></param>
            <param name="size"></param>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelFont.#ctor(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            初始化
            </summary>
            <param name="fontName"></param>
            <param name="color"></param>
            <param name="size"></param>
            <param name="isBold"></param>
        </member>
        <member name="T:MangoMis.Frame.Model.Excel.ExcelInterior">
            <summary>
            单元格样式
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Excel.ExcelInterior.Color">
            <summary>
            颜色
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Excel.ExcelInterior.Pattern">
            <summary>
            某种东西.值是Solid
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelInterior.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelInterior.#ctor(System.String)">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelInterior.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            <see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:MangoMis.Frame.Model.Excel.ExcelLineStyle">
            <summary>
            线样式
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Excel.ExcelLineStyle.Continuous">
            <summary>
            Continuous
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.Excel.ExcelPosition">
            <summary>
            纵向排位
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Excel.ExcelPosition.Right">
            <summary>
            右侧显示
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Excel.ExcelPosition.Left">
            <summary>
            左侧显示
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Excel.ExcelPosition.Top">
            <summary>
            顶部显示
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Excel.ExcelPosition.Bottom">
            <summary>
            底部显示
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.Excel.ExcelRow">
            <summary>
            Excel的单元格
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelRow.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            <see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelRow.#ctor(MangoMis.Frame.Model.Excel.ExcelDocument)">
            <summary>
            Excel单元格集合
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Excel.ExcelRow.Parent">
            <summary>
            父级Excel文档
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelRow.AddTitle(System.String,System.String,System.Int32)">
            <summary>
            添加一个标题
            </summary>
            <param name="styleId">样式ID</param>
            <param name="titleText">标题内容</param>
            <param name="mergeAcross">合并几个单元格</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelRow.AddTitle(System.String,System.Int32)">
            <summary>
            添加一个标题
            </summary>
            <param name="titleText">标题内容</param>
            <param name="mergeAcross">合并几个单元格</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelRow.AddCell(System.String)">
            <summary>
            添加一个单元格
            </summary>
            <param name="text">单元格内容</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelRow.AddCell(MangoMis.Frame.Model.Excel.ExcelCell)">
            <summary>
            添加一个单元格
            </summary>
            <param name="cell"></param>
        </member>
        <member name="P:MangoMis.Frame.Model.Excel.ExcelRow.Item(System.Int32)">
            <summary>
            当前单元格
            </summary>
            <param name="index"></param>
        </member>
        <member name="T:MangoMis.Frame.Model.Excel.ExcelSheet">
            <summary>
            <para>Excel表格[本类不可以实例化.只能从<seealso cref="T:MangoMis.Frame.Model.Excel.ExcelDocument"/>中添加]</para>
            <para>[可选][Step 010]NewTitleRow:添加新的标题行,不添加就没有标题</para>
            <para>[可选][Step 020]AddColumn:添加新列,可以选择添加简单列或者复杂列</para>
            <para>[必选][Step 030]AddRow:添加一行数据,注意如果没有[020]请使用添加简单行.非简单行字典的KEY需要与列名一致</para>
            <para>[可选][Step 040]ToString:输出Sheet的XML文本.不过此方法一般不调用,直接通过<seealso cref="T:MangoMis.Frame.Model.Excel.ExcelDocument"/>输出</para>
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelSheet.#ctor(System.String,MangoMis.Frame.Model.Excel.ExcelDocument)">
            <summary>
            Excel单元格集合
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelSheet.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            <see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="F:MangoMis.Frame.Model.Excel.ExcelSheet.Parent">
            <summary>
            父级Excel文档
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelSheet.AddRow(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            添加一行数据[此方法列名需要与Key对应.所以需要先添加Column]
            </summary>
            <param name="rowData">数据行</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelSheet.AddRow(System.Collections.Generic.List{System.String})">
            <summary>
            添加简单行,一行使用默认样式的单元格数据(此方法不需要列名,所以注意数据顺序)
            </summary>
            <param name="rowData">数据行</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelSheet.GetColumn(System.Int32)">
            <summary>
            取得指定索引的列
            </summary>
            <param name="index">索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelSheet.GetTitleRow(System.Int32)">
            <summary>
            取得指定索引的标题行
            </summary>
            <param name="index">索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelSheet.NewTitleRow(System.Collections.Generic.List{System.String})">
            <summary>
            添加新的默认标题行
            </summary>
            <param name="titleTexts">标题显示内容</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelSheet.NewTitleRow">
            <summary>
            新的标题行[需要自行配置标题行中的内容,以及标题中的单元格]<seealso cref="T:MangoMis.Frame.Model.Excel.ExcelRow"/>
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Model.Excel.ExcelSheet.SheetName">
            <summary>
            表格名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelSheet.AddColumn(System.Collections.Generic.List{System.String})">
            <summary>
            添加默认字段列表
            </summary>
            <param name="columnNames">字段名列表</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelSheet.AddColumn(System.String,MangoMis.Frame.Model.Excel.CellDataType,MangoMis.Frame.Model.Excel.GetExcelValue)">
            <summary>
            添加一个字段
            </summary>
            <param name="columnName">字段名</param>
            <param name="dataType">数据格式</param>
            <param name="onGetExcelSytleId">取得样式的事件</param>
        </member>
        <member name="T:MangoMis.Frame.Model.Excel.ExcelStyle">
            <summary>
            Excel的样式
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.Excel.ExcelStyle.Alignment">
            <summary>
            内容位置
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Model.Excel.ExcelStyle.Border">
            <summary>
            单元格边框
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Excel.ExcelStyle.Font">
            <summary>
            内容字体
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Excel.ExcelStyle.Interior">
            <summary>
            单元格背景
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Excel.ExcelStyle.Id">
            <summary>
            当前StyleId,主键,此Id用于单元格的列或者默认样式
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelStyle.#ctor">
            <summary>
            实体化样式
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelStyle.DTitleStyle">
            <summary>
            通用标题样式
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelStyle.DStyle">
            <summary>
            通用标题样式
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Excel.ExcelStyle.ToString">
            <summary>
            返回表示当前 <see cref="T:System.Object"/> 的 <see cref="T:System.String"/>。
            </summary>
            <returns>
            <see cref="T:System.String"/>，表示当前的 <see cref="T:System.Object"/>。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:MangoMis.Frame.Model.Excel.GetExcelValue">
            <summary>
            取得Excel的ID事件
            </summary>
            <param name="value">当前单元格的值</param>
            <param name="dataRow">当前行的值</param>
            <param name="dataType">当前单元格数据类型</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Model.FrameInfo">
            <summary>
            用于记录页面以及Handler中需要记录的信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.FrameInfo.#ctor">
            <summary>
            初始化一个记录信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.FrameInfo.#ctor(System.Boolean)">
            <summary>
            初始化一个记录信息
            </summary>
            <param name="isDebug">是否有Debug(无Debug则不记录)</param>
        </member>
        <member name="P:MangoMis.Frame.Model.FrameInfo.IfRoles">
            <summary>
            从页面判断过的角色
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.FrameInfo.GetKeys">
            <summary>
            从页面运行的取得过的参数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.FrameInfo.AppendGetKey(System.String,System.String)">
            <summary>
            添加一个页面获取过的参数
            </summary>
            <param name="key">参数Key</param>
            <param name="getType">参数类型</param>
        </member>
        <member name="M:MangoMis.Frame.Model.FrameInfo.AppendIfRole(System.Int32)">
            <summary>
            添加一个页面判断过的角色
            </summary>
            <param name="roleid">要添加的判断角色ID</param>
        </member>
        <member name="T:MangoMis.Frame.Model.LoginFromType">
            <summary>
            登陆来源类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.LoginFromType.Common">
            <summary>
            正常登陆
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.LoginFromType.Qr">
            <summary>
            二维码扫描登陆
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.LoginFromType.Auto">
            <summary>
            自动登陆(通过可以识别登陆状态的APP自动登陆)
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.ILoginLogInterface">
            <summary>
            登陆时使用日志
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ILoginLogInterface.LogAfterLoginSuccess(System.Int32,MangoMis.Frame.Model.LoginFromType,System.Int32)">
            <summary>
            登陆成功后记录日志
            </summary>
            <param name="logPathType">登陆的路径类型</param>
            <param name="logType">当前登陆类型(1:QR,0:正常,2:自动)</param>
            <param name="userid">登陆人编号</param>
        </member>
        <member name="M:MangoMis.Frame.Model.ILoginLogInterface.LogBeforeChangeUser(System.Int32,MangoMis.Frame.Model.LoginFromType,System.Int32,System.Int32)">
            <summary>
            切换用户前记录日志
            </summary>
            <param name="logPathType">登陆的路径类型</param>
            <param name="logType">当前登陆类型(1:QR,0:正常,2:自动)</param>
            <param name="oldUserid">原登陆人编号(如果原登陆人编号为0.则表示是其它站点已经登陆.本站没登录时切换用户)</param>
            <param name="newUserId">变更后登陆人编号</param>
        </member>
        <member name="M:MangoMis.Frame.Model.ILoginLogInterface.LogAfterLoginFailed(System.Int32,MangoMis.Frame.Model.LoginFromType,System.Int32)">
            <summary>
            登陆失败后记录日志
            </summary>
            <param name="logPathType">登陆的路径类型</param>
            <param name="logType">当前登陆类型(1:QR,0:正常,2:自动)</param>
            <param name="userid">登陆人编号</param>
        </member>
        <member name="M:MangoMis.Frame.Model.ILoginLogInterface.LogAfterLogout">
            <summary>
            退出登陆后日志
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ILoginLogInterface.LogAfterNoUser">
            <summary>
            试图访问页面但是无用户的日志
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.IAutoInterface">
            <summary>
            用于加载的程序集的接口基类,动态接口的接口规则是不需要返回值的.如果需要返回值.那么请使用引用类型来进行返回数据
            比如void GetResult(int param1,string param2,List[object] result) PS:或者可以尝试使用Ref来进行取返回值,但是由于制作方较懒未进行详细测试,不保证Ref可用
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.AutoInterfaceUsed">
            <summary>
            自动加载接口是否在使用(XMLStore)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.AutoInterfaceUsed.InterfaceKey">
            <summary>
            接口类型全名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.AutoInterfaceUsed.IsUsed">
            <summary>
            是否在使用(1使用)(默认为0,默认使用)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.AutoInterfaceUsed.LastEditUserId">
            <summary>
            最后修改人
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.AutoInterfaceUsed.LastEditTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.AutoInterfaceRealizeUsed">
            <summary>
            自动加载接口实现是否在使用(XMLStore)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.AutoInterfaceRealizeUsed.ClassKey">
            <summary>
            实现类的类型命名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.AutoInterfaceRealizeUsed.IsUsed">
            <summary>
            是否在使用(1使用)(默认为0,默认不使用)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.AutoInterfaceRealizeUsed.LastEditUserId">
            <summary>
            最后修改人
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.AutoInterfaceRealizeUsed.LastEditTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.AutoInterfaceRealize">
            <summary>
            自动加载接口的实现(RedisStore)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.AutoInterfaceRealize.AssemblyKey">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.AutoInterfaceRealize.InterfaceKey">
            <summary>
            接口类型全名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.AutoInterfaceRealize.ClassKey">
            <summary>
            实现类的类型命名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.AutoInterfaceRealize.AddUserId">
            <summary>
            添加人
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.AutoInterfaceRealize.AddTime">
            <summary>
            添加时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.AutoInterfaceRealize.LastEditUserId">
            <summary>
            最后修改人
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.AutoInterfaceRealize.LastEditTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.AutoInterfaceRealize.IsUsed">
            <summary>
            是否在使用(1使用)(默认为0,默认使用)
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.AutoInterfaceInfo">
            <summary>
            自动加载的接口信息
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.AutoInterfaceInfo.InterfaceType">
            <summary>
            接口类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.AutoInterfaceInfo.InterfaceKey">
            <summary>
            接口类型全名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.AutoInterfaceInfo.InterfaceDescription">
            <summary>
            接口说明
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.AutoInterfaceInfo.Items">
            <summary>
            接口内部函数 
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.AutoInterfaceMethod">
            <summary>
            自动加载接口的内部函数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.AutoInterfaceMethod.MethodName">
            <summary>
            函数名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.AutoInterfaceMethod.MethodDescription">
            <summary>
            函数说明
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.AutoInterfaceMethod.MethodReturnType">
            <summary>
            函数返回值
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.SessionData">
            <summary>
            内存Session存储数据
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.SessionData.CommonSessionOutOfTimeMinutes">
            <summary>
            默认Session超时时间
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.SessionData.#ctor">
            <summary>
            初始化SessionData
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.SessionData.#ctor(System.Int32)">
            <summary>
            初始化SessionData
            </summary>
            <param name="outOfTimeMinutes">超时分钟数</param>
        </member>
        <member name="M:MangoMis.Frame.Model.SessionData.#ctor(System.Object)">
            <summary>
            初始化SessionData
            </summary>
            <param name="data">存储数据</param>
        </member>
        <member name="M:MangoMis.Frame.Model.SessionData.#ctor(System.Object,System.Int32)">
            <summary>
            初始化SessionData
            </summary>
            <param name="data">存储数据</param>
            <param name="outOfTimeMinutes">超时分钟数</param>
        </member>
        <member name="P:MangoMis.Frame.Model.SessionData.AddTime">
            <summary>
            Session添加时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.SessionData.VisitTime">
            <summary>
            Session超时时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.SessionData.IsOutOfTime">
            <summary>
            当前的Session是否超时
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.SessionData.Data">
            <summary>
            当前存储数据
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.SessionDataCollection">
            <summary>
            Session集合
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.SessionDataCollection.BindUserId">
            <summary>
            绑定的员工编号
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.SessionDataCollection.OutOfTimeMinutes">
            <summary>
            Session超时时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.SessionDataCollection.AddTime">
            <summary>
            Session添加时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.SessionDataCollection.VisitTime">
            <summary>
            Session超时时间
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.SessionDataCollection.#ctor">
            <summary>
            实例化默认的Session集合
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.SessionDataCollection.#ctor(System.Int32)">
            <summary>
            实例化默认的Session集合
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.SessionDataCollection.Remove(System.String)">
            <summary>
            移除对应的Session
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Model.SessionDataCollection.IsOutOfTime">
            <summary>
            当前的Session是否超时
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.SessionDataCollection.Item(System.String)">
            <summary>
            取得对应的Session数据
            </summary>
            <param name="key"></param>
        </member>
        <member name="T:MangoMis.Frame.Model.SimpleParamType">
            <summary>
            简易WCF的类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.SimpleParamType.Table">
            <summary>
            需要定义取数据的表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.SimpleParamType.ConnKey">
            <summary>
            需要定义连接字符
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.SimpleParamType.None">
            <summary>
            正常取数据(对应表.连接字符串用默认)
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.SimpleWCFParamInfoItemType">
            <summary>
            简易WCF的参数的类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.SimpleWCFParamInfoItemType.List">
            <summary>
            列表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.SimpleWCFParamInfoItemType.String">
            <summary>
            字符串
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.ISimpleWCFParamInfo`1">
            <summary>
            自动实现的WCF的参数的基类.所有不同的参数都继承于此类
            </summary>
            <typeparam name="T">WCF返回Model的类型</typeparam>
        </member>
        <member name="P:MangoMis.Frame.Model.ISimpleWCFParamInfo`1.CurrentType">
            <summary>
            当前WCF类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ISimpleWCFParamInfo`1.Param(MangoMis.Frame.Model.SimpleParamType)">
            <summary>
            取按类型取得参数
            </summary>
            <param name="paramType">参数类型</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Model.SimpleWCFParamInfoItem">
            <summary>
            简易WCF参数的项
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.SimpleWCFParamInfoItem.#ctor(System.Object,MangoMis.Frame.Model.SimpleWCFParamInfoItemType)">
            <summary>
            初始化一个参数项
            </summary>
            <param name="value">参数项的值</param>
            <param name="itemValueType">参数值的类型</param>
        </member>
        <member name="P:MangoMis.Frame.Model.SimpleWCFParamInfoItem.Value">
            <summary>
            参数项的值
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.SimpleWCFParamInfoItem.ItemValueType">
            <summary>
            参数值的类型
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.SimpleWCFParamInfo`1">
            <summary>
            当前系统中的默认WCF参数
            </summary>
            <typeparam name="T">WCF返回Model的类型</typeparam>
        </member>
        <member name="P:MangoMis.Frame.Model.SimpleWCFParamInfo`1.CurrentType">
            <summary>
            当前WCF类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.SimpleWCFParamInfo`1.Add(MangoMis.Frame.Model.SimpleParamType,System.String)">
            <summary>
            添加一个字符串类型的参数
            </summary>
            <param name="paramType">参数类型</param>
            <param name="paramValue">参数值</param>
        </member>
        <member name="M:MangoMis.Frame.Model.SimpleWCFParamInfo`1.Add(MangoMis.Frame.Model.SimpleParamType,System.Collections.Generic.List{System.String})">
            <summary>
            添加一个List类型的参数
            </summary>
            <param name="paramType">参数类型</param>
            <param name="paramValue">参数值</param>
        </member>
        <member name="M:MangoMis.Frame.Model.SimpleWCFParamInfo`1.Remove(MangoMis.Frame.Model.SimpleParamType)">
            <summary>
            移除一个参数
            </summary>
            <param name="paramType">参数类型</param>
        </member>
        <member name="M:MangoMis.Frame.Model.SimpleWCFParamInfo`1.Param(MangoMis.Frame.Model.SimpleParamType)">
            <summary>
            取按类型取得参数
            </summary>
            <param name="paramType">参数类型</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Model.OnceLocker">
            <summary>
            单例模式锁定.防止实例化两次
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.OnceLocker.#ctor(System.Action)">
            <summary>
            锁定初始化建立
            </summary>
            <param name="init">初始化函数</param>
        </member>
        <member name="M:MangoMis.Frame.Model.OnceLocker.TryInit">
            <summary>
            尝试初始化
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.IDoLockEntity">
            <summary>
            锁定对象的基础接口,只定义接口没有相关内容
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.DoLockEntity`1">
            <summary>
            锁定对象的内容
            </summary>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="F:MangoMis.Frame.Model.DoLockEntity`1._lockerObjectDictionary">
            <summary>
            当前正常锁定对象列表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.DoLockEntity`1.DoLocker(`0,System.String,System.Action,System.Func{System.Boolean})">
            <summary>
            操作一个锁定.可以传入IsReady函数.来判断是否不需要再次运行
            </summary>
            <param name="key">当前锁定的主键(全局唯一)</param>
            <param name="lockTitle">锁的内容的标题</param>
            <param name="lockAction">此事件需要是Void最好不要是匿名函数</param>
            <param name="checkIsReady">检查是否已经运行过(函数返回True则是已经初始化过不需要再次运行)</param>
        </member>
        <member name="T:MangoMis.Frame.Model.LockerHelper">
            <summary>
            Locker帮助类...不知道有没有用
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.LockerHelper.DoLocker(System.Object,System.String,System.Action,System.Func{System.Boolean})">
            <summary>
            操作一个锁定.可以传入IsReady函数.来判断是否不需要再次运行
            </summary>
            <param name="key">当前锁定的主键(全局唯一)</param>
            <param name="lockAction">此事件需要是Void最好不要是匿名函数</param>
            <param name="isReady">是否已经运行结束</param>
            <param name="title">锁的内容的标题</param>
        </member>
        <member name="F:MangoMis.Frame.Model.LockerHelper.DoLockWithTypeItem">
            <summary>
            当前正常锁定对象列表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.LockerHelper.DoLocker(System.Type,MangoMis.Frame.Model.InitEventAction,MangoMis.Frame.Model.IsReadyEvent)">
            <summary>
            操作一个锁定.可以传入IsReady函数.来判断是否不需要再次运行
            </summary>
            <param name="key">当前锁定的主键(全局唯一)</param>
            <param name="lockAction">此事件需要是Void最好不要是匿名函数</param>
            <param name="isReady">是否已经运行结束</param>
        </member>
        <member name="P:MangoMis.Frame.Model.LockerHelper.CurrentLocker">
            <summary>
            当前锁定对象列表
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.LockerHelper.DoLockItem">
            <summary>
            当前正常锁定对象列表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.LockerHelper.DoLockerNoLog(System.String,MangoMis.Frame.Model.InitEventAction,MangoMis.Frame.Model.IsReadyEvent)">
            <summary>
            操作一个锁定.可以传入IsReady函数.来判断是否不需要再次运行(无日志版)
            </summary>
            <param name="key">当前锁定的主键(全局唯一)</param>
            <param name="lockAction">此事件需要是Void最好不要是匿名函数</param>
            <param name="isReady">是否已经运行结束</param>
        </member>
        <member name="M:MangoMis.Frame.Model.LockerHelper.DoLocker(System.String,MangoMis.Frame.Model.InitEventAction,MangoMis.Frame.Model.IsReadyEvent)">
            <summary>
            操作一个锁定.可以传入IsReady函数.来判断是否不需要再次运行
            </summary>
            <param name="key">当前锁定的主键(全局唯一)</param>
            <param name="lockAction">此事件需要是Void最好不要是匿名函数</param>
            <param name="isReady">是否已经运行结束[返回True是运行结束,返回False是运行未结束]</param>
        </member>
        <member name="M:MangoMis.Frame.Model.LockerHelper.DoLocker(System.String,MangoMis.Frame.Model.InitEventAction)">
            <summary>
            操作一个锁定的初始化,一般用于只初始化一次的地方(再次调用也不会运行,如果想再次运行,可以设置DoAgain)
            </summary>
            <param name="key">当前锁定的主键(全局唯一)</param>
            <param name="lockAction">此事件需要是Void最好不要是匿名函数</param>
        </member>
        <member name="M:MangoMis.Frame.Model.LockerHelper.DoLockerInit(System.String,MangoMis.Frame.Model.InitEventAction)">
            <summary>
            操作一个锁定的初始化,一般用于只初始化一次的地方(再次调用也不会运行,如果想再次运行,可以设置DoAgain)
            </summary>
            <param name="key">当前锁定的主键(全局唯一)</param>
            <param name="initEventAction">此事件需要是Void最好不要是匿名函数</param>
        </member>
        <member name="M:MangoMis.Frame.Model.LockerHelper.SetDoAgain(System.String)">
            <summary>
            对已经运行过的初始化锁定,设置为可以再运行一次.如果不存在就不设置.所以需要运行过至少一次之后才能设置成功
            </summary>
            <param name="key">当前锁定的主键(全局唯一)</param>
        </member>
        <member name="M:MangoMis.Frame.Model.LockerHelper.SetDoAgainAndDoAtOnce(System.String)">
            <summary>
            对已经运行过的初始化锁定,设置呆以再运行一次,并立即重运行.如果不存在就不设置.所以需要运行过至少一次之后才能设置成功
            </summary>
            <param name="key">当前锁定的主键(全局唯一)</param>
        </member>
        <member name="T:MangoMis.Frame.Model.LockerItemObject">
            <summary>
            用于锁定的对象....第三次建立锁定对象了
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.LockerItemObject.#ctor(System.String,MangoMis.Frame.Model.InitEventAction)">
            <summary>
            用于锁定的对象....第三次建立锁定对象了
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.LockerItemObject.Do">
            <summary>
            开始运行初始化Locker
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.LockerItemObject.SetDoAgain">
            <summary>
            设置可以再次初始化
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.LockerItemObject.LockerKey">
            <summary>
            当前锁定的主键(全局唯一)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.LockerItemObject.LockerObject">
            <summary>
            此主键锁定的对象
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Model.LockerItemObject.EventAction">
            <summary>
            此锁要运行的事件(因为参数函数等不同.所以这里就根本不定义函数了.直接一个Action得了)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.LockerItemObject.IsInited">
            <summary>
            是否已经初始化过(LockerAction运行结束)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.LockerItemObject.DoAgain">
            <summary>
            重新再来一次.这个值为True的时候就再初始化一次
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.LockerItemObject.AddTime">
            <summary>
            实例化的时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.LockerItemObject.InitBeginTime">
            <summary>
            实例化的时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.LockerItemObject.InitEndTime">
            <summary>
            实例化的时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.LockerItemObject.LastActionBeginTime">
            <summary>
            最后一次运行Init的开始时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.LockerItemObject.LastActionEndTime">
            <summary>
            最后一次运行Init的结束时间
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.SingleLocker`1">
            <summary>
            单例模式锁定.防止实例化两次
            </summary>
            <typeparam name="MT"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.SingleLocker`1.#ctor(System.Func{`0})">
            <summary>
            锁定初始化建立
            </summary>
            <param name="init">初始化函数</param>
        </member>
        <member name="M:MangoMis.Frame.Model.SingleLocker`1.#ctor(System.Func{`0},System.String)">
            <summary>
            锁定初始化建立
            </summary>
            <param name="init">初始化函数</param>
            <param name="key">定义一个日志名</param>
        </member>
        <member name="M:MangoMis.Frame.Model.SingleLocker`1.SetValue(`0)">
            <summary>
            设置值 
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:MangoMis.Frame.Model.SingleLocker`1.Entity">
            <summary>
            取得对应的实体
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.ICacheLoader">
            <summary>
            基础缓存接口.包括清空以及重读
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.ICacheLoader.ObjVistor">
            <summary>
            当前数据类型OBJ
            </summary>
            <value>The object vistor.</value>
        </member>
        <member name="M:MangoMis.Frame.Model.ICacheLoader.DeleteAndClear">
            <summary>
            清空本地缓存
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ICacheLoader.ReloadFromWcfByIds(System.Collections.Generic.List{System.Int32})">
            <summary>
            从WCF重读取数据
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.ICacheLoader.ReloadByIdsNoUpdata(System.Collections.Generic.List{System.Int32})">
            <summary>
            从WCF重读取数据
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.ICacheLoader.GetFileInfo">
            <summary>
            取得文件信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ICacheLoader.Write">
            <summary>
            写入本地缓存
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ICacheLoader.GetObjectFromCache(System.Collections.Generic.List{System.Int32})">
            <summary>
            从缓存中取数据
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="T:MangoMis.Frame.Model.ICacheQuery">
            <summary>
            用于缓存查询
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ICacheQuery.QueryCount(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.ICacheQuery.Query(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.ICacheQuery.Query(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="T:MangoMis.Frame.Model.ICacheQuery`1">
            <summary>
            用于缓存查询
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ICacheQuery`1.Query(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.ICacheQuery`1.Query(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="T:MangoMis.Frame.Model.TimerMeter">
            <summary>
            计时器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.TimerMeter.#ctor">
            <summary>
            初始化一个默认的计时器[名称为Guid值][等级为默认等级Counter.DefaultMaxLevel](计数器等级是指满值之后可以进位的次数.也就是SingleLevelMaxCount的多少次幂)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.TimerMeter.#ctor(System.String)">
            <summary>
            初始化一个算定义名称,默认等级的计时器[等级为默认等级Counter.DefaultMaxLevel](计数器等级是指满值之后可以进位的次数.也就是SingleLevelMaxCount的多少次幂)
            </summary>
            <param name="name">计数器命名</param>
        </member>
        <member name="M:MangoMis.Frame.Model.TimerMeter.#ctor(System.Int32)">
            <summary>
            初始化一个自定义等级默认名称的计时器[名称为Guid值]
            </summary>
            <param name="maxLevel">计数器等级(计数器等级是指满值之后可以进位的次数.也就是SingleLevelMaxCount的多少次幂)</param>
        </member>
        <member name="M:MangoMis.Frame.Model.TimerMeter.#ctor(System.Int32,System.String)">
            <summary>
            初始化一个计时器
            </summary>
            <param name="maxLevel">计时器等级(计数器等级是指满值之后可以进位的次数.也就是SingleLevelMaxCount的多少次幂)</param>
            <param name="name">计数器名</param>
        </member>
        <member name="M:MangoMis.Frame.Model.TimerMeter.Add">
            <summary>
            在计数器累加
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.TimerMeter.Add(System.Int64)">
            <summary>
            向计数器累加指定数值
            </summary>
            <param name="appendTime">要添加的数值.必须小于SingleLevelMaxCount</param>
        </member>
        <member name="T:MangoMis.Frame.Model.TimerMeterCollection">
            <summary>
            计时器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.TimerMeterCollection.New``1">
            <summary>
            实例化一个新的计时器
            </summary>
            <typeparam name="TEnumType"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.TimerMeterCollection.#ctor(System.Type)">
            <summary>
            实例化一个计时器集合
            </summary>
            <param name="enumType">指定一个枚举类型.为此类型中所有的枚举项添加一个计时器</param>
        </member>
        <member name="M:MangoMis.Frame.Model.TimerMeterCollection.#ctor(System.Int32,System.Type)">
            <summary>
            实例化一个计时器集合
            </summary>
            <param name="maxLevel">此计数器最多等级</param>
            <param name="enumType">指定一个枚举类型.为此类型中所有的枚举项添加一个计时器</param>
        </member>
        <member name="M:MangoMis.Frame.Model.TimerMeterCollection.GetCountDictionary(System.Int64,System.String)">
            <summary>
            取得计数计统计数量的字典
            </summary>
            <param name="xishu">显示系数(/多少.)时间的话会显示太多</param>
            <param name="danwei">显示单位</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.TimerMeterCollection.GetCountDictionary">
            <summary>
            取得计数计统计数量的字典
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.TimerMeterCollection.GetCount(System.String)">
            <summary>
            取得间个计数器的计数情况 
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.TimerMeterCollection.GetCount(System.Enum)">
            <summary>
            取得单个计数器的计数情况 
            </summary>
            <param name="name">计数器的枚举类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.TimerMeterCollection.Add(System.Enum)">
            <summary>
            为计数器累加
            </summary>
            <param name="name">计数器的枚举类型</param>
        </member>
        <member name="T:MangoMis.Frame.Model.CompareEntity">
            <summary>
            用于对比实体的类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.CompareEntity.#ctor(System.String,System.Object)">
            <summary>
            初始化一个对比实体的类
            </summary>
            <param name="fromSource">实体数据来源</param>
            <param name="currentEntity">当前实体</param>
        </member>
        <member name="M:MangoMis.Frame.Model.CompareEntity.#ctor">
            <summary>
            初始化一个对比实体的类
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CompareEntity.Properties">
            <summary>
            当前实体中的属性
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.CompareEntity._entity">
            <summary>
            实体的实例
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.CompareEntity.DifferenceColumnNameList">
            <summary>
            不相同的字段名列表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.CompareEntity.CompareTo(System.Object,System.String)">
            <summary>
            对比另一个实体,并返回对比信息实例
            </summary>
            <param name="compareToEntity">要对比的实体</param>
            <param name="compareToSource">对比实体的数据来源</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.CompareEntity.AddProperty(System.String,System.Object,System.Boolean)">
            <summary>
            添加一个属性
            </summary>
            <param name="name">属性名</param>
            <param name="value">属性值</param>
            <param name="isDifference">是否不同</param>
        </member>
        <member name="P:MangoMis.Frame.Model.CompareEntity.HasDifference">
            <summary>
            是否有不同
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CompareEntity.FromSource">
            <summary>
            数据的来源
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CompareEntity.Data">
            <summary>
            当前的属性列表
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CompareEntity.Item(System.String)">
            <summary>
            返回内部对比属性
            </summary>
            <param name="propertyName">属性名</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Model.CompareProperty">
            <summary>
            用于对比的属性
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CompareProperty.Name">
            <summary>
            属性名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CompareProperty.IsDifference">
            <summary>
            是否不同
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CompareProperty.Value">
            <summary>
            属性值
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.Update_Config_Event">
            <summary>
            更新配置的事件代理
            </summary>
            <param name="sender">事件发送方</param>
            <param name="args">事件参数</param>
            <param name="msg">返回值</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Model.Update_Config_Arg">
            <summary>
            更新倒置的对象
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Update_Config_Arg.Key">
            <summary>
            修改的配置
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Update_Config_Arg.Old_Value">
            <summary>
            修改之前的值
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Update_Config_Arg.New_Value">
            <summary>
            修改之后的值
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.OtherConfigParam">
            <summary>
            自定义的配置.因为上传问题.所以自定义配置只有在调用时才会添加进去
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam.#ctor(System.String,System.String,System.String,MangoMis.Frame.Model.OtherConfigParam_Item[])">
            <summary>
            通过文件路径(文件名) 以及配置进行初始化
            </summary>
            <param name="basePath">基础路径</param>
            <param name="path">The path.</param>
            <param name="name">The name.</param>
            <param name="configs">The configs.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam.#ctor(System.String,System.String,MangoMis.Frame.Model.OtherConfigParam_Item[])">
            <summary>
            通过文件路径(文件名) 以及配置进行初始化
            </summary>
            <param name="path">The path.</param>
            <param name="name">The name.</param>
            <param name="configs">The configs.</param>
        </member>
        <member name="T:MangoMis.Frame.Model.Sys_OtherConfigParam">
            <summary>
            其它配置文件使用基类
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Sys_OtherConfigParam.is_system_config">
            <summary>
            是否系统配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.#ctor(System.String,System.String,System.String,MangoMis.Frame.Model.OtherConfigParam_Item[])">
            <summary>
            通过文件路径(文件名) 以及配置进行初始化
            </summary>
            <param name="basePath">基础路径</param>
            <param name="path">The path.</param>
            <param name="name">The name.</param>
            <param name="configs">The configs.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.#ctor(System.String,System.String,MangoMis.Frame.Model.OtherConfigParam_Item[])">
            <summary>
            通过文件路径(文件名) 以及配置进行初始化
            </summary>
            <param name="path">The path.</param>
            <param name="name">The name.</param>
            <param name="configs">The configs.</param>
        </member>
        <member name="P:MangoMis.Frame.Model.Sys_OtherConfigParam.Store">
            <summary>
            存储器
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Sys_OtherConfigParam.ConfigName">
            <summary>
            显示文本
            </summary>
            <value>The config text.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Sys_OtherConfigParam.ConfigText">
            <summary>
            显示文本
            </summary>
            <value>The config text.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Sys_OtherConfigParam.DescText">
            <summary>
            显示文本
            </summary>
            <value>The config text.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.Sys_OtherConfigParam.default_memo_child_margin_left">
            <summary>
            默认的配置子集的左侧边距
            </summary>
            TODO 这里需要做成可配置项目
        </member>
        <member name="F:MangoMis.Frame.Model.Sys_OtherConfigParam._nodeMemoControl">
            <summary>
            当前添加的备注控件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.AppendMemo(MangoMis.Frame.Helper.TT_H_Generic,System.Int32,System.Boolean)">
            <summary>
            在当前(或第{N}层父级)级别添加备注控件.
            </summary>
            <param name="memoControlContext">备注的控件</param>
            <param name="nodeBackLevel">需要向上查找的级别</param>
            <param name="isNode">是否做为当前节点添加</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.AppendMemo(MangoMis.Frame.Helper.TT_H_Generic,System.Int32)">
            <summary>
            在当前(或第{N}层父级)级别添加备注控件.不设置为当前节点
            </summary>
            <param name="memoControl">备注的控件</param>
            <param name="nodeBackLevel">需要向上查找的级别</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.AppendMemoNode(MangoMis.Frame.Helper.TT_H_Generic,System.Int32)">
            <summary>
            在当前(或第{N}层父级)级别添加备注控件.并设置为当前节点.不设置为当前节点
            </summary>
            <param name="memoControl">备注的控件</param>
            <param name="nodeBackLevel">需要向上查找的级别</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.AddMemo(System.String,System.Boolean,System.String,System.Int32,System.Int32)">
            <summary>
            添加一个备注
            </summary>
            <param name="text">备注文本</param>
            <param name="isnode">是否设置为节点</param>
            <param name="color">文本颜色</param>
            <param name="size">文字大小</param>
            <param name="nodeBackLevel">需要向上查找的级别</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.AddMemo(System.String,System.Int32,System.String,System.Int32)">
            <summary>
            添加一个备注.不设置为当前节点
            </summary>
            <param name="text">备注文本</param>
            <param name="nodeBackLevel">需要向上查找的级别</param>
            <param name="color">文本颜色</param>
            <param name="size">文字大小</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.AddMemoNode(System.String,System.Int32,System.String,System.Int32)">
            <summary>
            添加一个备注.并设置为当前节点
            </summary>
            <param name="text">备注文本</param>
            <param name="nodeBackLevel">需要向上查找的级别</param>
            <param name="color">文本颜色</param>
            <param name="size">文字大小</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.AddMemo(System.String,System.String,System.Int32)">
            <summary>
            添加一个备注.不设置为当前节点
            </summary>
            <param name="text">备注文本</param>
            <param name="color">文本颜色</param>
            <param name="size">文字大小</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.AddMemoNode(System.String,System.String,System.Int32)">
            <summary>
            添加一个备注.并设置为当前节点
            </summary>
            <param name="text">备注文本</param>
            <param name="color">文本颜色</param>
            <param name="size">文字大小</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.Memo_Back_To_Level_Parent(System.Int32)">
            <summary>
            向上查找对应级别的MEMO
            </summary>
            <param name="level">查找几级</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.AppendMemo(System.String,System.Int32,System.String,System.Int32)">
            <summary>
            添加一个备注
            </summary>
            <param name="text">The text.</param>
            <param name="level">The level.</param>
            <param name="color">The color.</param>
            <param name="size">The size.</param>
        </member>
        <member name="E:MangoMis.Frame.Model.Sys_OtherConfigParam.OnChangeBoolStatus">
            <summary>
            变更状态时发生事件
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Sys_OtherConfigParam._isInit">
            <summary>
            是否初始化
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Sys_OtherConfigParam._path">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Sys_OtherConfigParam.ThisConfigs">
            <summary>
            本配置项配置
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Sys_OtherConfigParam.ConfigValues">
            <summary>
            本配置项值
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Sys_OtherConfigParam.Item(System.String)">
            <summary>
            可继承的取值
            </summary>
            <param name="index">The index.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.StringValue(System.String)">
            <summary>
            取得字符串值
            </summary>
            <param name="key">The key.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.BoolValue(System.String)">
            <summary>
            Bool取值
            </summary>
            <param name="key">The key.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.IntValue(System.String)">
            <summary>
            数值取值
            </summary>
            <param name="key">The key.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="F:MangoMis.Frame.Model.Sys_OtherConfigParam._editMsg">
            <summary>
            编辑内容
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.SetValue(System.String,System.Object)">
            <summary>
            设置值
            </summary>
            <param name="key">键</param>
            <param name="val">值</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.Read">
            <summary>
            重读配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.Write">
            <summary>
            写入配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.GetValue(MangoMis.Frame.Model.OtherConfigParam_Item,System.String)">
            <summary>
            取值方法
            </summary>
            <param name="item">The item.</param>
            <param name="value">The value.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.AfterSave(System.Collections.Generic.Dictionary{System.String,MangoMis.Frame.Model.OtherConfigParam_Item})">
            <summary>
            更新之后事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.Save">
            <summary>
            保存配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.Init">
            <summary>
            初始化方法
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Sys_OtherConfigParam.BtnColor">
            <summary>
            当前的列表页面按钮颜色
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.GetDescription">
            <summary>
            取得此配置项描述
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.GetConfigChildItemKeys">
            <summary>
            取得此配置所有项目的Key
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.GetConfigChildStringValue(System.String)">
            <summary>
            取得单项配置的内容
            </summary>
            <param name="configChildKey">配置Key</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.GetConfigChildEditName(System.String)">
            <summary>
            取得单项配置的名称
            </summary>
            <param name="configChildKey">配置Key</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.SettingButton(System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            初始化时按键
            </summary>
            <param name="form">The form.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.OtherEditButtonAction(System.String,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            子类重写其它编辑.如果有的时候要返回True
            </summary>
            <param name="action">The action.</param>
            <param name="form">The form.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.BuildSetting(System.String,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            编辑按钮设置
            </summary>
            <param name="action">The action.</param>
            <param name="form">The form.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.SetInputConfig(MangoMis.Frame.Model.OtherConfigParam_Item,System.String)">
            <summary>
            设置文本内容
            </summary>
            <param name="item">The item.</param>
            <param name="formId">The form identifier.</param>
            <returns>TT_H_Generic.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.SetIsOnConfig(MangoMis.Frame.Model.OtherConfigParam_Item,System.String)">
            <summary>
            取得Bool类的控件
            </summary>
            <param name="item">The item.</param>
            <param name="formId">The form id.</param>
            <returns>TT_H_Generic.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.SetTextConfig(MangoMis.Frame.Model.OtherConfigParam_Item)">
            <summary>
            设置文本内容
            </summary>
            <param name="item">The item.</param>
            <returns>TT_H_Generic.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.Sys_OtherConfigParam.BuildEditButton(MangoMis.Frame.Model.OtherConfigParam_Item,System.String,System.String,System.String,System.String)">
            <summary>
            取得编辑按键
            </summary>
            <param name="item">The item.</param>
            <param name="buttonText">The button text.</param>
            <param name="formId">The form id.</param>
            <param name="editid">The editid.</param>
            <param name="btnClass">按钮的样式,默认buttonSta02</param>
            <returns>HtmlButton.</returns>
        </member>
        <member name="T:MangoMis.Frame.Model.OtherConfigParam_BaseOther">
            <summary>
            站点其它配置. 包括 是否提交City.默认CSS名 是否自动下载
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_BaseOther.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.OtherConfigParam_BaseOther"/> class.
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_BaseOther.SiteNamespace">
            <summary>
            站点的命名空间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_BaseOther.DefaultCssUrl">
            <summary>
            站点默认样式路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_BaseOther.Other_NotWriteVisitNow">
            <summary>
            不参与记录页面(|分割)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_BaseOther.IsAutoDefaultCss">
            <summary>
            自动引用默认CSS
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_BaseOther.IsUseOldQueryActionName">
            <summary>
            是否使用旧版的方法名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_BaseOther.Default_SiteCoder">
            <summary>
            本站使用的编码(日志等)
            </summary>
            <value>The default global CSS URL.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_BaseOther.Default_VisitIncludeFiles">
            <summary>
            IP记录查看用户的引入文件
            </summary>
            <value>The default global CSS URL.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_BaseOther.IsOpenIPRecord">
            <summary>
            开启IP记录
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_BaseOther.WriteIpVistorTime">
            <summary>
            自动写入访问记录
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_BaseOther.DefaultGlobalCssUrl">
            <summary>
            默认的样式
            </summary>
            <value>The default global CSS URL.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_BaseOther.DefalutAppErrorMsg">
            <summary>
            站点默认错误消息
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_BaseOther.IsAutoDownloadDll">
            <summary>
            是否自动下载DLL
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_BaseOther.IsOpenRequestRecord">
            <summary>
            开启请求时间记录
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_BaseOther.IsOpenSysIcon">
            <summary>
            开启系统自动Mis图标
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_BaseOther.IsOpenErrorThrow">
            <summary>
            显示错误页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_BaseOther.AutoDownloadTimeSpan">
            <summary>
            自动下载时间间隔(分钟)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_BaseOther.SettingPageName">
            <summary>
            站点设置页面名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_BaseOther.OtherEditButtonAction(System.String,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            子类重写其它编辑.如果有的时候要返回True
            </summary>
            <param name="action">The action.</param>
            <param name="form">The form.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="T:MangoMis.Frame.Model.OtherConfigParam_CustomParams">
            <summary>
            登陆使用的配置类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_CustomParams.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.OtherConfigParam_Login"/> class.
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.OtherConfigParam_CustomTitles">
            <summary>
            登陆使用的配置类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_CustomTitles.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.OtherConfigParam_Login"/> class.
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.OtherConfigParam_Dirs">
            <summary>
            站点路径配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_Dirs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.OtherConfigParam_Dirs"/> class.
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Dirs.new_site_cache_path">
            <summary>
            新版本缓存存放路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Dirs.EntityCacheDir">
            <summary>
            EntityCache路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Dirs.WriteDir">
            <summary>
            基础本站写入路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Dirs.IpVisitDir">
            <summary>
            本站点日志路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Dirs.LogDir">
            <summary>
            本站点日志路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Dirs.XMLDir">
            <summary>
            本站点日志路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Dirs.DownloadAssemblysDir">
            <summary>
            下载程序配置路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Dirs.PowerCacheDir">
            <summary>
            权限缓存路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Dirs.Dir_PagePower">
            <summary>
            页面权限配置
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Dirs.Dir_UserSetting">
            <summary>
            用户个人配置
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.OtherConfigParam_Inculde">
            <summary>
            站内公用引用的JS与CSS文件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_Inculde.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.OtherConfigParam_Inculde"/> class.
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Inculde.HelpScript">
            <summary>
            在配置页面中显示Help的代码
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Inculde.InculdeBaseUrl">
            <summary>
            站内公用引用的JS与CSS文件基础路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Inculde.InculdeJSExtLib">
            <summary>
            基础JS扩展库路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Inculde.InculdeUrlBase">
            <summary>
            引用的UrlBase
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Inculde.InculdeCSSExtLib">
            <summary>
            基础JS扩展样式路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Inculde.IsAutoInculdeExtLib">
            <summary>
            自动引用[基础库]
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.OtherConfigParam_Item">
            <summary>
            配置的参数 
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_Item.#ctor(System.String,System.String,System.String,MangoMis.Frame.Model.OtherConfigParam_Type)">
            <summary>
            初始化
            </summary>
            <param name="_defalut">The _defalut.</param>
            <param name="_name">The _name.</param>
            <param name="_editName">Name of the _edit.</param>
            <param name="_type">The _type.</param>
        </member>
        <member name="F:MangoMis.Frame.Model.OtherConfigParam_Item.defalueValue">
            <summary>
            默认值
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.OtherConfigParam_Item.configName">
            <summary>
            配置名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.OtherConfigParam_Item.editName">
            <summary>
            编辑名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.OtherConfigParam_Item.type">
            <summary>
            配置的数据类型
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.OtherConfigParam_Login">
            <summary>
            登陆使用的配置类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_Login.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.OtherConfigParam_Login"/> class.
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Login.othersitenoapicard">
            <summary>
            不用APICard采用第三方登陆的路径
            </summary>
            <value>The login turn page for SSO.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Login.IsLoginSSOByIFrame">
            <summary>
            是否启用Iframe的方法实现单点登陆
            </summary>
            <value><c>true</c> if this instance is login SSO by I frame; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Login.Post_Card_Service">
            <summary>
            Card的API
            </summary>
            <value>The login turn page for SSO.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Login.Post_Card_API">
            <summary>
            Card的API
            </summary>
            <value>The login turn page for SSO.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Login.IsUseCardFromWebGet">
            <summary>
            是否使用网络取得的Card地址
            </summary>
            <value><c>true</c> if this instance is login SSO by I frame; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Login.IsNeverGetUrlFromWeb">
            <summary>
            是否使用网络取得的Card地址
            </summary>
            <value><c>true</c> if this instance is login SSO by I frame; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Login.IsNeverGetBaseUrlFromWeb">
            <summary>
            是否从来不去网上取得基础缓存地址
            </summary>
            <value><c>true</c> if this instance is login SSO by I frame; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Login.LoginTurnPageForSSO">
            <summary>
            登陆的服务端跳转页面
            </summary>
            <value>The login turn page for SSO.</value>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_Login.Save">
            <summary>
            保存配置
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.OtherConfigParam_Logs">
            <summary>
            站点日志配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_Logs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.OtherConfigParam_Logs"/> class.
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Logs.IsOpenCacheUpdatedLog">
            <summary>
            缓存被更新的日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Logs.IsOpenLog">
            <summary>
            是否开启日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Logs.isopenwcflog">
            <summary>
            是否开启WCF访问次数日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Logs.IsUseLog4Net">
            <summary>
            是否开启网上日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Logs.Log4NetToken">
            <summary>
            Log4Net的Token
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Logs.Log4NetName">
            <summary>
            Log4Net日志名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Logs.ErrorLogPath">
            <summary>
            错误日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Logs.AppErrorLogPath">
            <summary>
            站点错误日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Logs.CatchErrorLogPath">
            <summary>
            捕获错误日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Logs.CacheLogPath">
            <summary>
            缓存日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Logs.AppStartLogPath">
            <summary>
            站点
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Logs.DownloadLogPath">
            <summary>
            自动下载日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Logs.LogoutPath">
            <summary>
            登出日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Logs.IsLogout">
            <summary>
            开启登出日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Logs.CommonLogPath">
            <summary>
            其它通用日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Logs.SysRunningLogPath">
            <summary>
            系统运行日志
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_Logs.OtherEditButtonAction(System.String,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            子类重写其它编辑.如果有的时候要返回True
            </summary>
            <param name="action">The action.</param>
            <param name="form">The form.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="T:MangoMis.Frame.Model.OtherConfigParam_Redis">
            <summary>
            登陆使用的配置类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_Redis.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.OtherConfigParam_Login"/> class.
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Redis.Redis_ServerPath">
            <summary>
            Redis服务地址:端口号
            </summary>
            <value><c>true</c> if this instance is login SSO by I frame; otherwise, <c>false</c>.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Redis.Redis_NameBefore">
            <summary>
            加入缓存的表名前缀.以防键重复.建立用英文.不建议太长
            </summary>
            <value>The redis_ name before.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Redis.Redis_IsUseRedis">
            <summary>
            是否启用Redis
            </summary>
            <value>The redis_ name before.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Model.OtherConfigParam_SysManager">
            <summary>
            虚拟页面使用权限
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_SysManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.OtherConfigParam_SysManager"/> class.
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_SysManager.Sys_IsOpenPageId0NoPower">
            <summary>
            开启PageId0无权限
            </summary>
            <value><c>true</c> if this instance is login SSO by I frame; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_SysManager.Sys_ApiStaticUrl">
            <summary>
            是否启用Iframe的方法实现单点登陆
            </summary>
            <value><c>true</c> if this instance is login SSO by I frame; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_SysManager.Sys_IsOpenEverySetting">
            <summary>
            是否启用Iframe的方法实现单点登陆
            </summary>
            <value><c>true</c> if this instance is login SSO by I frame; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_SysManager.Sys_IsOpenApistatic">
            <summary>
            开启使用ApiStatic
            </summary>
            <value><c>true</c> if this instance is login SSO by I frame; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_SysManager.PowerUserIds">
            <summary>
            有配置权限的用户编号
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_SysManager.Saved">
            <summary>
            保存
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.OtherConfigParam_WCFUrl">
            <summary>
            WCF提交密钥配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.OtherConfigParam_WCFUrl"/> class.
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.local_wcfurl_config_path">
            <summary>
            本地WCF配置的文件路径
            </summary>
            <value>The poser url_ view org.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.IsOpenWcfEmptyLog">
            <summary>
            WCF解出Data是NULL的日志开启
            </summary>
            <value>The poser url_ view org.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.BaseFiveWcfUrl">
            <summary>
            Gets or sets the poser url_ view org.
            </summary>
            <value>The poser url_ view org.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.DllDownloadService">
            <summary>
            Gets or sets the poser url_ view org.
            </summary>
            <value>The poser url_ view org.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.PowerUrl_ViewOrg">
            <summary>
            Gets or sets the poser url_ view org.
            </summary>
            <value>The poser url_ view org.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.PowerUrl_Role">
            <summary>
            Gets or sets the poser url_ role.
            </summary>
            <value>The poser url_ role.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.PowerUrl_Responsibility">
            <summary>
            Gets or sets the poser url_ responsibility.
            </summary>
            <value>The poser url_ responsibility.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.PowerUrl_Permission">
            <summary>
            Gets or sets the poser url_ permission.
            </summary>
            <value>The poser url_ permission.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.PowerUrl_UserPermission">
            <summary>
            Gets or sets the poser url_ permission.
            </summary>
            <value>The poser url_ permission.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.PowerUrl_Module">
            <summary>
            Gets or sets the poser url_ module.
            </summary>
            <value>The poser url_ module.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.PowerUrl_OrgCanSee">
            <summary>
            Gets or sets the poser url_ module.
            </summary>
            <value>The poser url_ module.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.BaseUrl_Dict">
            <summary>
            Gets or sets the WCF url_ dict.
            </summary>
            <value>The WCF url_ dict.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.BaseUrl_Area">
            <summary>
            Gets or sets the WCF url_ area.
            </summary>
            <value>The WCF url_ area.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.BaseUrl_City">
            <summary>
            Gets or sets the WCF url_ city.
            </summary>
            <value>The WCF url_ city.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.BaseUrl_OrgShow">
            <summary>
            Gets or sets the WCF url_ org show.
            </summary>
            <value>The WCF url_ org show.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.BaseUrl_OrgCW">
            <summary>
            Gets or sets the WCF url_ org show.
            </summary>
            <value>The WCF url_ org show.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.BaseUrl_OrgList">
            <summary>
            Gets or sets the WCF url_ org list.
            </summary>
            <value>The WCF url_ org list.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.BaseUrl_OrgJobInfo">
            <summary>
            Gets or sets the WCF url_ org list.
            </summary>
            <value>The WCF url_ org list.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.BaseUrl_UserBase">
            <summary>
            Gets or sets the WCF url_ user base.
            </summary>
            <value>The WCF url_ user base.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.BaseUrl_UserShow">
            <summary>
            Gets or sets the userlisturl.
            </summary>
            <value>The userlisturl.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.BaseUrl_MapType_Link">
            <summary>
            Gets or sets the userlisturl.
            </summary>
            <value>The userlisturl.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.BaseUrl_UserList">
            <summary>
            Gets or sets the userlisturl.
            </summary>
            <value>The userlisturl.</value>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.OtherEditButtonAction(System.String,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            子类重写其它编辑.如果有的时候要返回True
            </summary>
            <param name="action">The action.</param>
            <param name="form">The form.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_WCFUrl.InitAtAppStart">
            <summary>
            在程序启动第一次取缓存数据前初始化
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.OtherConfigParam_WebGetCard">
            <summary>
            网络取得数据
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_WebGetCard.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.OtherConfigParam_WebGetCard"/> class.
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.OtherConfigParam_WebGetCard.updateLog">
            <summary>
            The update log
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WebGetCard.SiteRootName">
            <summary>
            相对域名的路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WebGetCard.Post_ApistaticName">
            <summary>
            项目名
            </summary>
            <value>The login turn page for SSO.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WebGetCard.Post_ProName">
            <summary>
            项目名
            </summary>
            <value>The login turn page for SSO.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WebGetCard.Post_AddressName">
            <summary>
            服务器名
            </summary>
            <value>The login turn page for SSO.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WebGetCard.Post_LocalName">
            <summary>
            本地站点名
            </summary>
            <value>The login turn page for SSO.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WebGetCard.IsPostedToWeb">
            <summary>
            是否已经提交过申请
            </summary>
            <value><c>true</c> if this instance is login SSO by I frame; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WebGetCard.IsWebSite">
            <summary>
            是否使用站点(否是测试站点)
            </summary>
            <value><c>true</c> if this instance is login SSO by I frame; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WebGetCard.PostSiteName">
            <summary>
            提交的站点名
            </summary>
            <value>The login turn page for SSO.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_WebGetCard.UpdateCacheUrl">
            <summary>
            更新的地址
            </summary>
            <value>The login turn page for SSO.</value>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_WebGetCard.SetTextConfig(MangoMis.Frame.Model.OtherConfigParam_Item)">
            <summary>
            设置文本内容
            </summary>
            <param name="item">The item.</param>
            <returns>TT_H_Generic.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_WebGetCard.BuildEditButton(MangoMis.Frame.Model.OtherConfigParam_Item,System.String,System.String,System.String)">
            <summary>
            取得编辑按键
            </summary>
            <param name="item">The item.</param>
            <param name="buttonText">The button text.</param>
            <param name="formId">The form id.</param>
            <param name="editid">The editid.</param>
            <returns>HtmlButton.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_WebGetCard.SetButton(MangoMis.Frame.Model.OtherConfigParam_Item,System.String)">
            <summary>
            按钮设置
            </summary>
            <param name="item">The item.</param>
            <param name="formId">The form id.</param>
            <returns>TT_H_Generic.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_WebGetCard.Save">
            <summary>
            保存配置
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.ConfigParam_ItemString">
            <summary>
            WebConfig中的配置参数(String类型)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ConfigParam_ItemString.#ctor(System.String,System.String)">
            <summary>
            根据初始化的时候提交配置名,以及默认值
            </summary>
            <param name="configName">配置名</param>
            <param name="defalutValue">默认值</param>
        </member>
        <member name="P:MangoMis.Frame.Model.ConfigParam_ItemString.Value">
            <summary>
            配置的值
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:MangoMis.Frame.Model.ConfigParam_ItemBool">
            <summary>
            WebConfig中的配置参数(bool类型)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ConfigParam_ItemBool.#ctor(System.String,System.String)">
            <summary>
            根据初始化的时候提交配置名,以及默认值
            </summary>
            <param name="configName">配置名</param>
            <param name="defalutValue">默认值</param>
        </member>
        <member name="P:MangoMis.Frame.Model.ConfigParam_ItemBool.Value">
            <summary>
            配置的值
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:MangoMis.Frame.Model.ConfigParam_ItemInt">
            <summary>
            WebConfig中的配置参数(int类型)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ConfigParam_ItemInt.#ctor(System.String,System.String)">
            <summary>
            根据初始化的时候提交配置名,以及默认值
            </summary>
            <param name="configName">配置名</param>
            <param name="defalutValue">默认值</param>
        </member>
        <member name="P:MangoMis.Frame.Model.ConfigParam_ItemInt.Value">
            <summary>
            配置的值
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:MangoMis.Frame.Model.ConfigParam_Item">
            <summary>
            WebConfig中的配置参数基类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ConfigParam_Item.#ctor(System.String,System.String)">
            <summary>
            根据初始化的时候提交配置名,以及默认值
            </summary>
            <param name="configName">配置名</param>
            <param name="defalutValue">默认值</param>
        </member>
        <member name="F:MangoMis.Frame.Model.ConfigParam_Item._configName">
            <summary>
            配置名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.ConfigParam_Item._defaultValue">
            <summary>
            默认值
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.ConfigParam_Item._Value">
            <summary>
            返回值
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.ConfigParam_Item.BaseValue">
            <summary>
            配置的值
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:MangoMis.Frame.Model.XMLConfigParam">
            <summary>
            XML使用的配置基类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.XMLConfigParam.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.XMLConfigParam" /> class.
            </summary>
            <param name="name">The name.</param>
            <param name="text">The text.</param>
            <param name="defaultPath">The default path.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.XMLConfigParam.Init">
            <summary>
            初始化XML地址版本
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.XMLConfigParam.Helper">
            <summary>
            本配置的帮助信息
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.XMLConfigParam.ConfigName">
            <summary>
            显示文本
            </summary>
            <value>The config text.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.XMLConfigParam.ConfigText">
            <summary>
            显示文本
            </summary>
            <value>The config text.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.XMLConfigParam.DescText">
            <summary>
            显示文本
            </summary>
            <value>The config text.</value>
        </member>
        <member name="F:MangoMis.Frame.Model.XMLConfigParam.XMLPath">
            <summary>
            The XML path
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.XMLConfigParam.CId">
            <summary>
            ID
            </summary>
            <value>The vir action.</value>
        </member>
        <member name="M:MangoMis.Frame.Model.XMLConfigParam.SettingButton(System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            初始化时按键
            </summary>
            <param name="form">The form.</param>
        </member>
        <member name="P:MangoMis.Frame.Model.XMLConfigParam.BtnColor">
            <summary>
            当前的列表页面按钮颜色
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.XMLConfigParam.GetDescription">
            <summary>
            取得此配置项描述
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.XMLConfigParam.GetConfigChildItemKeys">
            <summary>
            取得此配置所有项目的Key
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.XMLConfigParam.GetConfigChildStringValue(System.String)">
            <summary>
            取得单项配置的内容
            </summary>
            <param name="configChildKey">配置Key</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.XMLConfigParam.GetConfigChildEditName(System.String)">
            <summary>
            取得单项配置的名称
            </summary>
            <param name="configChildKey">配置Key</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.XMLConfigParam.BuildSetting(System.String,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            编辑按钮设置
            </summary>
            <param name="action">The action.</param>
            <param name="form">The form.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.XMLConfigParam.GetPath">
            <summary>
            取得当前路径
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.XMLConfigParam.BuildEditButton(System.String,System.String,System.String,System.String)">
            <summary>
            取得编辑按键
            </summary>
            <param name="action">The action.</param>
            <param name="buttonText">The button text.</param>
            <param name="formId">The form id.</param>
            <param name="editid">The editid.</param>
            <returns>HtmlButton.</returns>
        </member>
        <member name="P:MangoMis.Frame.Model.XMLConfigParam.ohterButtons">
            <summary>
            其它 的按键(按钮的Action,按钮名)
            </summary>
            <value>The ohter button.</value>
        </member>
        <member name="M:MangoMis.Frame.Model.XMLConfigParam.OtherEditButtonAction(System.String,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            子类重写其它编辑.如果有的时候要返回True
            </summary>
            <param name="action">The action.</param>
            <param name="form">The form.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.XMLConfigParam.ReLoadXMLConfig">
            <summary>
            子类重写.重新读取当前的XML配置
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.XMLConfigParam_PassKey">
            <summary>
            Class XMLConfigParam_PassKey.
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.XMLConfigParam_PassKey.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.XMLConfigParam" /> class.
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.XMLConfigParam_PassKey.PassKey">
            <summary>
            WCF路径配置
            </summary>
            <value>The WCF mapping.</value>
        </member>
        <member name="M:MangoMis.Frame.Model.XMLConfigParam_PassKey.InitWCF">
            <summary>
            初始化
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.XMLConfigParam_PassKey.ohterButtons">
            <summary>
            其它 的按键(按钮的Action,按钮名)
            </summary>
            <value>The ohter button.</value>
        </member>
        <member name="M:MangoMis.Frame.Model.XMLConfigParam_PassKey.OtherEditButtonAction(System.String,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            子类重写其它编辑.如果有的时候要返回True
            </summary>
            <param name="action">The action.</param>
            <param name="form">The form.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.XMLConfigParam_PassKey.ReLoadXMLConfig">
            <summary>
            子类重写.重新读取当前的XML配置
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.XMLConfigParam_WCFApp">
            <summary>
            Class XMLConfigParam_WCFApp
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.XMLConfigParam_WCFApp.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.XMLConfigParam" /> class.
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.XMLConfigParam_WCFApp.ohterButtons">
            <summary>
            其它 的按键(按钮的Action,按钮名)
            </summary>
            <value>The ohter button.</value>
        </member>
        <member name="M:MangoMis.Frame.Model.XMLConfigParam_WCFApp.OtherEditButtonAction(System.String,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            子类重写其它编辑.如果有的时候要返回True
            </summary>
            <param name="action">The action.</param>
            <param name="form">The form.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.XMLConfigParam_WCFApp.LogConfig(System.String)">
            <summary>
            Logs the configuration.
            </summary>
            <param name="tmpPath">The temporary path.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.XMLConfigParam_WCFApp.ReLoadXMLConfig">
            <summary>
            子类重写.重新读取当前的XML配置
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.OtherConfigParam_Debug">
            <summary>
            站点使用Debug的相关配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_Debug.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.OtherConfigParam_Debug"/> class.
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_Debug.AfterSave(System.Collections.Generic.Dictionary{System.String,MangoMis.Frame.Model.OtherConfigParam_Item})">
            <summary>
            更新之后事件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Debug.NoMangerPanelUserIds">
            <summary>
            不显示管理Panel的用户(优先级高)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Debug.NoMangerPanelUsers">
            <summary>
            不显示管理Panel的用户(优先级高)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Debug.NoDebugUserIds">
            <summary>
            不显示Debug的用户(优先级高)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Debug.NoDebugUsers">
            <summary>
            不显示Debug的用户(优先级高)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Debug.IsOpenAssemblyVersion">
            <summary>
            是否开启在Debug中显示程序集版本号
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Debug.IsOpenTest">
            <summary>
            是否开启测试模式
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_Debug.OtherEditButtonAction(System.String,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            子类重写其它编辑.如果有的时候要返回True
            </summary>
            <param name="action">The action.</param>
            <param name="form">The form.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Debug.Is_Open_Sys_RunLog">
            <summary>
            WCFDebug是否启用
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Debug.IsOpenDebugForWCF">
            <summary>
            WCFDebug是否启用
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Debug.IsOpenLoginDebug">
            <summary>
            是否启用登陆时Debug
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Debug.IsOpenGetDebug">
            <summary>
            是否允许加载Debug
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Debug.IsOpenShowDebug">
            <summary>
            是否允许显示Debug
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Debug.DebugMaxStep">
            <summary>
            是否允许显示Debug
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Debug.ShowDebugUsers">
            <summary>
            默认使用的Debug用到的CSS文件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Debug.DebugCssPath">
            <summary>
            默认使用的Debug用到的CSS文件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Debug.DebugJsPath">
            <summary>
            默认使用的Debug用到的JS文件
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.OtherConfigParam_PassKey">
            <summary>
            WCF提交密钥配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_PassKey.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.OtherConfigParam_PassKey"/> class.
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_PassKey.is_open_xml_wcf_url">
            <summary>
            开启使用本地WCF地址配置
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_PassKey.WCFReloadTimeSpan">
            <summary>
            WCF缓存后重读取的时间间隔
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_PassKey.WCFLoadingStatus">
            <summary>
            WCF自身缓存的状态
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_PassKey.PassKeyPath">
            <summary>
            本地密钥文件的路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_PassKey.WCFConns">
            <summary>
            本地密钥文件的路径
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_PassKey.AfterSave(System.Collections.Generic.Dictionary{System.String,MangoMis.Frame.Model.OtherConfigParam_Item})">
            <summary>
            更新之后事件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_PassKey.WCFRewrites">
            <summary>
            重载过的方法名(需要提交参数)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_PassKey.DefautPassKey">
            <summary>
            本地默认提交使用的密钥
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_PassKey.IsPostCityId">
            <summary>
            是否向WCF提交CityID
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.OtherConfigParam_Site">
            <summary>
            站点相关配置(站点名.站点编号)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_Site.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.OtherConfigParam_Site"/> class.
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Site.Protocol">
            <summary>
            站点协议HTTP
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Site.SiteType">
            <summary>
            类型[mis,jm,www,dev]
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Site.CookiePath">
            <summary>
            Cookie路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Site.SiteName">
            <summary>
            站点名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Site.DBsource">
            <summary>
            站点DBSource
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Site.SiteId">
            <summary>
            站点编号
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.OtherConfigParam_Site.Site_IsmanagerOpen">
            <summary>
            功能不可视时.管理员可视
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.OtherConfigParam_Site.Save">
            <summary>
            保存配置
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.Api_Static_Support">
            <summary>
            ApiStatic提供的服务
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Api_Static_Support.card">
            <summary>
            单点登陆Card的取得
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Api_Static_Support.site">
            <summary>
            站点数据的获取
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Api_Static_Support.wcf_interface">
            <summary>
            WCF接口获取
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.Api_Static_Support.data_interface">
            <summary>
            Data_Interface映射获取
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.DataMappingAction">
            <summary>
            DataInterface的映射关系操作
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.DataMappingAction.Get_Mapping">
            <summary>
            取得映射列表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.DataMappingAction.Add">
            <summary>
            添加映射
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.DataMappingAction.Get_Log">
            <summary>
            取得日志
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.api_static">
            <summary>
            接口服务器操作类(ApiStatic.517.cn)用于获取通用信息
            Card
            WCF等
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.api_static.action_length">
            <summary>
            函数的长度
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.api_static.action_pages">
            <summary>
            可以操作的页面(与Api_Static_Support类型对应)
            </summary>
            <value>The action_pages.</value>
        </member>
        <member name="T:MangoMis.Frame.Model.CmdExec">
            <summary>
            运行一个CMD
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.CmdExec.#ctor(System.String)">
            <summary>
            初始化CMD运行
            </summary>
            <param name="param">The parameter.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.CmdExec.Line(System.String)">
            <summary>
            写入一行命令
            </summary>
            <param name="cmd">The command.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.CmdExec.Lines(System.Collections.Generic.List{System.String})">
            <summary>
            写入一行命令
            </summary>
            <param name="cmds">The CMDS.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.CmdExec.Exec(System.String)">
            <summary>
            写入一行命令
            </summary>
            <param name="cmd">The command.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.CmdExec.End(System.Collections.Generic.List{System.String})">
            <summary>
            写入一行命令
            </summary>
            <param name="cmds">The CMDS.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.CmdExec.End">
            <summary>
            结束运行并返回消息
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="T:MangoMis.Frame.Model.EntityCache`1">
            <summary>
            [过时掉所有除Store外的缓存方式]实体缓存一些对象
            </summary>
            <typeparam name="MT">缓存对象的实体</typeparam>
        </member>
        <member name="F:MangoMis.Frame.Model.EntityCache`1._valueobj">
            <summary>
            本地锁数据.暂时没用上
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.EntityCache`1._values">
            <summary>
            本地值保存位置
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.EntityCache`1.Values">
            <summary>
            本地值保存位置
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.EntityCache`1._next_get_times">
            <summary>
            下次取值时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.EntityCache`1._name">
            <summary>
            本地实体名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.EntityCache`1._getFunction">
            <summary>
            取数据方法
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.EntityCache`1.#ctor(System.String,System.Func{System.Collections.Generic.List{System.Int32},System.Collections.Generic.Dictionary{System.Int32,`0}})">
            <summary>
            初始化类型 <see cref="T:MangoMis.Frame.Model.EntityCache`1"/> class.
            </summary>
            <param name="name">本缓存使用的名称</param>
            <param name="getfunction">取数据委托</param>
        </member>
        <member name="M:MangoMis.Frame.Model.EntityCache`1.get_from_function(System.Collections.Generic.List{System.Int32})">
            <summary>
            直接取得真实数据的方法
            </summary>
            <param name="keys">The keys.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.EntityCache`1.getValuesByKeys(System.Collections.Generic.List{System.Int32})">
            <summary>
            取得数据基础方法
            </summary>
            <param name="keys">The keys.</param>
            <returns>Dictionary{System.Int32`0}.</returns>
        </member>
        <member name="P:MangoMis.Frame.Model.EntityCache`1.Name">
            <summary>
            本缓存使用的名称
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.EntityCache`1.Item(System.Int32)">
            <summary>
            Gets the <see>
                    <cref>`0</cref>
                </see>
                with the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>`0.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.EntityCache`1.GetValues(System.Collections.Generic.List{System.Int32})">
            <summary>
            取得多值列表
            </summary>
            <param name="keys">索引列表</param>
            <returns>List{`0}.</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:MangoMis.Frame.Model.EntityCache`1.Reload(System.Int32)">
            <summary>
            通过服务器重新读取一条缓存
            </summary>
            <param name="key">The key.</param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:MangoMis.Frame.Model.EntityCache`1.Reload(System.Collections.Generic.List{System.Int32})">
            <summary>
            通过服务器重新读取多条缓存
            </summary>
            <param name="keys">The keys.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.EntityCache`1.ReloadAll">
            <summary>
            通过服务器重新读取全部缓存
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.FileCache_KeyValue_Model">
            <summary>
            用于保存成文件的类弄(键.值)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.FileCache_KeyValue_Model.#ctor(System.String,System.Object)">
            <summary>
            用于保存成文件的类弄(键.值)
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.FileCache_KeyValue_Model.#ctor(System.String,System.Object,System.DateTime)">
            <summary>
            用于保存成文件的类弄(键.值)
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="addtime">The addtime.</param>
        </member>
        <member name="P:MangoMis.Frame.Model.FileCache_KeyValue_Model.Key">
            <summary>
            保存的键
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.FileCache_KeyValue_Model.Value">
            <summary>
            保存的值
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.FileCache_KeyValue_Model.Addtime">
            <summary>
            添加时间
            </summary>
            <value>The addtime.</value>
        </member>
        <member name="T:MangoMis.Frame.Model.FileCacheByKeyDate_Item">
            <summary>
            FileCacheByKeyDate的存储项目
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.FileCacheByKeyDate_Item.#ctor(System.String,System.DateTime)">
            <summary>
            实例化存储项目
            </summary>
            <param name="name">名称</param>
            <param name="date">记录日志</param>
        </member>
        <member name="F:MangoMis.Frame.Model.FileCacheByKeyDate_Item.key">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.FileCacheByKeyDate_Item.save_time">
            <summary>
            上次保存时间(默认为初始化时间)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.FileCacheByKeyDate_Item.at_date_int">
            <summary>
            存储内容的所在日期
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.FileCacheByKeyDate_Item.records">
            <summary>
            当天的所有记录
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.FileCacheByKeyDate">
            <summary>
            缓存成文件的操作实例
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.FileCacheByKeyDate.Get_Date_Int(System.DateTime)">
            <summary>
            取得用于判断的日期格式
            </summary>
            <param name="date">The date.</param>
            <returns>System.String.</returns>
        </member>
        <member name="F:MangoMis.Frame.Model.FileCacheByKeyDate.auto_save_second">
            <summary>
            自动保存的间隔时间
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.FileCacheByKeyDate.#ctor(System.String,System.String)">
            <summary>
            创建一个按日期,项目缓存的实例
            </summary>
            <param name="cachename">缓存名(用于展示)</param>
            <param name="file_path">缓存文件路径(基于WriteDir)</param>
        </member>
        <member name="F:MangoMis.Frame.Model.FileCacheByKeyDate.split_row">
            <summary>
            保存文本文件时的行分隔符
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.FileCacheByKeyDate.split_col">
            <summary>
            保存文本文件时的列分隔符
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.FileCacheByKeyDate._list">
            <summary>
            当前缓存内容
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.FileCacheByKeyDate._path">
            <summary>
            文件保存路径 
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.FileCacheByKeyDate.cache_name">
            <summary>
            缓存名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.FileCacheByKeyDate.path">
            <summary>
            文件保存路径
            </summary>
            <value>The key.</value>
        </member>
        <member name="M:MangoMis.Frame.Model.FileCacheByKeyDate.Save">
            <summary>
            保存所有文件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.FileCacheByKeyDate.Read_By_Key_And_Date(System.String,System.Nullable{System.DateTime})">
            <summary>
            读取某天,某项的内容(只读取当前内容.不读取缓存文件)
            </summary>
            <param name="key">项目名</param>
            <param name="read_date">读取的日期</param>
            <returns>List{FileCache_KeyValue_Model}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.FileCacheByKeyDate.Read_File_By_Key_And_Date(System.String,System.Nullable{System.DateTime})">
            <summary>
            读取某天,某项的内容(总会读取缓存文件内容.然后加载进去)
            </summary>
            <param name="key">项目名</param>
            <param name="read_date">读取的日期</param>
            <returns>List{FileCache_KeyValue_Model}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.FileCacheByKeyDate.find_index(System.String,System.DateTime)">
            <summary>
            查找某项目某天的内容索引
            </summary>
            <param name="key">项目名</param>
            <param name="date">读取的日期</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.FileCacheByKeyDate.Append(System.String,System.Object)">
            <summary>
            添加一条记录
            </summary>
            <param name="key">项目名</param>
            <param name="value">项目值</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.FileCacheByKeyDate.auto_save">
            <summary>
            自动保存事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.FileCacheByKeyDate.save_file(System.String,System.Nullable{System.DateTime})">
            <summary>
            保存成实体文件
            </summary>
            <param name="key">要保存的项目名</param>
            <param name="save_date">保存的日期</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:MangoMis.Frame.Model.GetIdListFilterModel">
            <summary>
            Class GetIdListFilterModel.
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.GetIdListFilterModel.lasttime">
            <summary>
            Gets or sets the lasttime.
            </summary>
            <value>The lasttime.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Model.CacheLoadModelFrame`4">
            <summary>
            已经过时,请尽量使用IStore建立缓存.建立方式为MangoMis.Frame.DataSource.Simple.SimpleStore.*
            </summary>
            <typeparam name="MT">The type of the MT.</typeparam>
            <typeparam name="Rewrite">The type of the rewrite.</typeparam>
            <typeparam name="WCFMT">The type of the WCFMT.</typeparam>
            <typeparam name="WCFVistor">The type of the WCF vistor.</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.#ctor(System.String,System.String,System.String,System.String,System.Boolean,System.Func{`0,System.Nullable{System.Int32}},System.Func{System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.Dictionary{System.Int32,`0}},System.Func{System.Collections.Generic.List{`0},System.Object},System.Func{MangoMis.Frame.Helper.ClientHelper{`2,`3}},System.Func{MangoMis.Frame.Model.GetIdListFilterModel,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel}})">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.CacheLoadModelFrame`4" /> class.
            </summary>
            <param name="_DataName">Name of the _ data.</param>
            <param name="_PKid">The _ p kid.</param>
            <param name="_CacheName">Name of the _ cache.</param>
            <param name="_Path">The _ path.</param>
            <param name="_IsOpenFileCache">if set to <c>true</c> [_ is open file cache].</param>
            <param name="getId">The get id.</param>
            <param name="getListByFilter">The get list by filter.</param>
            <param name="getNewData">The get new data.</param>
            <param name="getIdsVistor">The get ids vistor.</param>
            <param name="getIdsFilter">The get ids filter.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.CacheLoadModelFrame`4.IsUseStore">
            <summary>
            用于子集确定此实例是否使用Store
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.InitStore">
            <summary>
            用于子集初始化Store
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.Find(System.Object)">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.Find(System.Collections.Generic.List{System.Object})">
            <summary>
            按主键(唯一键)取得实体
            </summary>
            <param name="objectKey">唯一键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.QueryStore">
            <summary>
            取得全部列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.CountStore(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.QueryStore(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.QueryStore(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="P:MangoMis.Frame.Model.CacheLoadModelFrame`4.CurrentType">
            <summary>
            当前缓存类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.CacheLoadModelFrame`4.GetId">
            <summary>
            The get identifier
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.CacheLoadModelFrame`4.GetNewData">
            <summary>
            The get new data
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.CacheLoadModelFrame`4.GetListByFilter">
            <summary>
            The get list by filter
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.CacheLoadModelFrame`4.lockObj">
            <summary>
            The lock object
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.CacheLoadModelFrame`4.GetIdsVistor">
            <summary>
            The get ids vistor
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.CacheLoadModelFrame`4.GetIdsFilter">
            <summary>
            The get ids filter
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.CacheLoadModelFrame`4.IsOpenFileCache">
            <summary>
            缓存名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.CacheLoadModelFrame`4.DataName">
            <summary>
            缓存名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.CacheLoadModelFrame`4.PkId">
            <summary>
            主键
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.CacheLoadModelFrame`4.CacheName">
            <summary>
            缓存保存名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.CacheLoadModelFrame`4.path">
            <summary>
            缓存路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CacheLoadModelFrame`4.RewriteItem">
            <summary>
            重写的缓存实体
            </summary>
            <value>The user list items.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.CacheLoadModelFrame`4.ItemList">
            <summary>
            用户列表(能调用字典尽量调用字典)
            </summary>
            <value>The users.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.CacheLoadModelFrame`4.ItemDict">
            <summary>
            字典(能调用字典尽量调用字典)[已经过期.如果可能.可以尝试将缓存改为Store:可以在MangoMis.Frame.DataSource.Simple.SimpleStore. 里面找合适的进行实例化缓存]
            </summary>
            <value>The user dict.</value>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.Clear">
            <summary>
            清空缓存.
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/22 13:08:45
            ************************************************************
        </member>
        <member name="E:MangoMis.Frame.Model.CacheLoadModelFrame`4.onAfterReloadFromWcf">
            <summary>
            重新从WCF重读取之后的事件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.CacheLoadModelFrame`4.ObjVistor">
            <summary>
            当前数据类型OBJ
            </summary>
            <value>The object vistor.</value>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.DeleteAndClear">
            <summary>
            删除缓存
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.RefreshFromSource(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            从WCF刷新数据
            </summary>
            <param name="filters"></param>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.ReloadFromWcfByIds(System.Collections.Generic.List{System.Int32})">
            <summary>
            从WCF重读取数据[使用RefreshFromWCF(PS:使用RefreshFromWCF需要事先开通.使用前请与作者联系)]
            </summary>
            <param name="ids">The ids.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.ReloadByIdsNoUpdata(System.Collections.Generic.List{System.Int32})">
            <summary>
            从WCF重读取数据[使用RefreshFromWCF(PS:使用RefreshFromWCF需要事先开通.使用前请与作者联系)]
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.GetFileInfo">
            <summary>
            取得文件信息
            </summary>
            <returns>FileInfo.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.GetObjectFromCache(System.Collections.Generic.List{System.Int32})">
            <summary>
            从缓存中取数据(请尝试使用[Store的Query等].如果有什么疑问,请咨询DNZxf)
            </summary>
            <param name="ids">The ids.</param>
            <returns>List{System.Object}.</returns>
        </member>
        <member name="F:MangoMis.Frame.Model.CacheLoadModelFrame`4.log_text_builder">
            <summary>
            The log_text_builder
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.CacheLoadModelFrame`4.log_text_time">
            <summary>
            日志添加时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.CacheLoadModelFrame`4.log_text_index">
            <summary>
            当前是第几条日志
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.CacheLoadModelFrame`4.log_text_is_end">
            <summary>
            日志是否已经结束
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.BeginLogTextBuilder">
            <summary>
            开始一个记录
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.AppendLogText(System.String)">
            <summary>
            添加日志记录文本
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.ReadLogText">
            <summary>
            读取日志记录文本
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.CacheLoadModelFrame`4.setLocalCacheInterfaceLocker">
            <summary>
            
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Model.CacheLoadModelFrame`4.onBeforeInit">
            <summary>
            Init开始前事件
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Model.CacheLoadModelFrame`4.onAfterInit">
            <summary>
            Init结束后事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.Init">
            <summary>
            初始化用户
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/22 13:03:58
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.GetListFromWCF(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            从WCF取得数据
            </summary>
            <param name="filters"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.RefreshCacheFromWCFByTime(System.DateTime)">
            <summary>
            从WCF更新所有缓存
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.RefreshCacheFromWCF">
            <summary>
            从WCF更新所有缓存
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.LoadListFromStore">
            <summary>
            从持久化缓存中取得数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.GetLastReadDataFromWCFTime">
            <summary>
            取得上次去WCF刷新缓存的时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.GetMergeListToCache(System.Collections.Generic.Dictionary{System.Int32,`0})">
            <summary>
            向缓存中合并新数据(需要先有RewriteItem)
            </summary>
            <param name="newData"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.SaveDataToCache(System.Collections.Generic.List{`0})">
            <summary>
            净数据保存进缓存中
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.SaveAndWriteDataToStore(System.Collections.Generic.List{`0})">
            <summary>
            将数据存储进缓存(需要先有RewriteItem)并且写入持久化
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.GetRefreshStoreList(System.DateTime)">
            <summary>
            从WCF取得更新的数据
            </summary>
            <param name="getFromTime"></param>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.Update(System.Collections.Generic.List{`0})">
            <summary>
            更新信息
            </summary>
            <param name="entitys">The entitys.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.Update(`0)">
            <summary>
            更新信息
            </summary>
            <param name="entity">The entity.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.ReLoadByIds(System.Collections.Generic.List{System.Int32})">
            <summary>
            重读信息(请尝试使用[Store].如果有什么疑问,请咨询DNZxf)
            </summary>
            <param name="ids">The ids.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.Append(System.Collections.Generic.List{`0})">
            <summary>
            添加新的实体
            </summary>
            <param name="entitys">The entitys.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.FindByIds(System.Collections.Generic.List{System.Nullable{System.Int32}})">
            <summary>
            通过ID列表查找对象(请尝试使用[Store].如果有什么疑问,请咨询DNZxf)
            </summary>
            <param name="ids">The ids.</param>
            <returns>List{`0}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.QueryCount(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得记录数
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.Query(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得列表
            </summary>
            <param name="filters">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.Query(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">每页数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.FindByIds(System.Collections.Generic.List{System.Int32})">
            <summary>
            通过ID列表查找对象
            </summary>
            <param name="ids">The ids.</param>
            <returns>List{`0}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.FindById(System.Nullable{System.Int32})">
            <summary>
            通过ID查找对象
            </summary>
            <param name="id">The id.</param>
            <returns>`0.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.CacheLoadModelFrame`4.Write">
            <summary>
            写入缓存
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Model.TopCacheLoadModelFrame`2">
            <summary>
            已经过时,请尽量使用IStore建立缓存.建立方式为MangoMis.Frame.DataSource.Simple.SimpleStore.*
            </summary>
            <typeparam name="MT">The type of the mt.</typeparam>
            <typeparam name="Rewiter">The type of the rewiter.</typeparam>
        </member>
        <member name="F:MangoMis.Frame.Model.TopCacheLoadModelFrame`2.log_text_builder">
            <summary>
            The log_text_builder
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.TopCacheLoadModelFrame`2.log_text_time">
            <summary>
            日志添加时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.TopCacheLoadModelFrame`2.log_text_index">
            <summary>
            当前是第几条日志
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.TopCacheLoadModelFrame`2.log_text_is_end">
            <summary>
            日志是否已经结束
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.TopCacheLoadModelFrame`2.BeginLogTextBuilder">
            <summary>
            开始一个记录
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.TopCacheLoadModelFrame`2.AppendLogText(System.String)">
            <summary>
            添加日志记录文本
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.TopCacheLoadModelFrame`2.ReadLogText">
            <summary>
            读取日志记录文本
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.TopCacheLoadModelFrame`2.#ctor(System.String,System.String,System.String,System.Boolean,System.Func{`0,System.Nullable{System.Int32}},System.Func{System.Collections.Generic.List{`0}},System.Func{System.Collections.Generic.List{`0},`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.TopCacheLoadModelFrame`2"/> class.
            </summary>
            <param name="_DataName">Name of the _ data.</param>
            <param name="_CacheName">Name of the _ cache.</param>
            <param name="_Path">The _ path.</param>
            <param name="_IsOpenFileCache">if set to <c>true</c> [_ is open file cache].</param>
            <param name="getId">The get identifier.</param>
            <param name="getListByFilter">The get list by filter.</param>
            <param name="getNewData">The get new data.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.TopCacheLoadModelFrame`2.Append(System.Collections.Generic.List{`0})">
            <summary>
            Appends the specified entitys.
            </summary>
            <param name="entitys">The entitys.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.TopCacheLoadModelFrame`2.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.TopCacheLoadModelFrame`2.DeleteAndClear">
            <summary>
            Deletes the and clear.
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.TopCacheLoadModelFrame`2.FindById(System.Nullable{System.Int32})">
            <summary>
            Finds the by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>`0.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.TopCacheLoadModelFrame`2.FindByIds(System.Collections.Generic.List{System.Int32})">
            <summary>
            Finds the by ids.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List{`0}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.TopCacheLoadModelFrame`2.FindByIds(System.Collections.Generic.List{System.Nullable{System.Int32}})">
            <summary>
            Finds the by ids.
            </summary>
            <param name="ids">The ids.</param>
            <returns>List{`0}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.TopCacheLoadModelFrame`2.Init">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.TopCacheLoadModelFrame`2.Update(System.Collections.Generic.List{`0})">
            <summary>
            
            </summary>
            <param name="entitys"></param>
        </member>
        <member name="M:MangoMis.Frame.Model.TopCacheLoadModelFrame`2.Update(`0)">
            <summary>
            Updates the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.TopCacheLoadModelFrame`2.Write">
            <summary>
            Writes this instance.
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.TopCacheLoadModelFrame`2.ItemDict">
            <summary>
            [已放弃]字典(能调用字典尽量调用字典)[已经过期.如果可能.可以尝试将缓存改为Store:可以在MangoMis.Frame.DataSource.Simple.SimpleStore. 里面找合适的进行实例化缓存]
            </summary>
            <value>The item dictionary.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.TopCacheLoadModelFrame`2.ItemList">
            <summary>
            [已放弃]请尽量使用IStoreCache[EGSimpleStore.Memory,SimpleStore.WCF]
            </summary>
            <value>The item list.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.TopCacheLoadModelFrame`2.RewriteItem">
            <summary>
            [已放弃]请尽量使用IStoreCache[EGSimpleStore.Memory,SimpleStore.WCF]
            </summary>
            <value>The rewrite item.</value>
        </member>
        <member name="T:MangoMis.Frame.Model.FTPClient">
            <summary>
            FTP操作类
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.FTPClient.StatusMessage">
            <summary>
            The RNM old name
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.FTPClient.Result">
            <summary>
            The RNM old name
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.FTPClient.Path">
            <summary>
            The RNM old name
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.FTPClient.Buffer">
            <summary>
            The buffer
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.FTPClient.StatusCode">
            <summary>
            
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.FTPClient.Bytes">
            <summary>
            
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.FTPClient.Port">
            <summary>
            
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.FTPClient.Binary">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.FTPClient.RemoveDirectory(System.String)">
            <summary>
            删除文件夹
            </summary>
            <param name="DirPath">The dir path.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.FTPClient.CreateDirectory(System.String,System.Int32)">
            <summary>
            创建文件夹
            </summary>
            <param name="DirPath">The dir path.</param>
            <param name="DirIndex">Index of the dir.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.FTPClient.RenameFile(System.String,System.String)">
            <summary>
            移动文件(重命名)
            </summary>
            <param name="oldName">The old name.</param>
            <param name="newName">The new name.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.FTPClient.DeleteFile(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.FTPClient.UploadFile(System.String,System.String)">
            <summary>
            通过文件路径上传文件
            </summary>
            <param name="local_file_path">本地文件路径</param>
            <param name="ftp_save_path">Ftp文件路径</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.FTPClient.UploadFile(System.String,System.IO.Stream)">
            <summary>
            上传文件
            </summary>
            <param name="save_path">The save_path.</param>
            <param name="fileStream">The file stream.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.FTPClient.DownloadFile(System.String,System.String)">
            <summary>
            下载文件
            </summary>
            <param name="FtpPath">The FTP path.</param>
            <param name="LocalPath">The local path.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.FTPClient.FileSize(System.String)">
            <summary>
            取得文件大小
            </summary>
            <param name="FileName">Name of the file.</param>
            <returns>System.Int64.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.FTPClient.SendCommand(System.String)">
            <summary>
            直接发FTP命令
            </summary>
            <param name="msg">The MSG.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.FTPClient.ReadResponse">
            <summary>
            Reads the response.
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.FTPClient.SplitResponse">
            <summary>
            Splits the response.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.FTPClient.FtpLogin(System.String,System.Int32,System.String,System.String)">
            <summary>
            登陆
            </summary>
            <param name="address">FTP地址(EG:192.168.3.200)</param>
            <param name="port">端口号</param>
            <param name="username">用户名</param>
            <param name="pwd">密码</param>
        </member>
        <member name="M:MangoMis.Frame.Model.FTPClient.ChangeWorkingDirectory(System.String)">
            <summary>
            变更当前目录
            </summary>
            <param name="work_path">The work_path.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.FTPClient.CloseConnection">
            <summary>
            关闭连接
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.FTPClient.LogOut">
            <summary>
            退出登陆
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.FTPClient.GetListFiles">
            <summary>
            取得文件列表
            </summary>
            <returns>System.String[][].</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.FTPClient.OpenSocketForTransferByIP">
            <summary>
            
            </summary>
            <returns>Socket.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.FTPClient.OpenSocketForTransfer">
            <summary>
            
            </summary>
            <returns>Socket.</returns>
        </member>
        <member name="T:MangoMis.Frame.Model.HelperHtml">
            <summary>
            用于帮助的HTML
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.HelperHtml.GetHtmlText(System.String)">
            <summary>
            取得HTML标记对(拿编码替换)
            </summary>
            <param name="inString">The in string.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.HelperHtml.WordTypeClass(System.Int32)">
            <summary>
            取得文本样式类型 1 是代码  2 是文本
            </summary>
            <param name="type">The type.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.HelperHtml.GetWordDom(System.String,System.Int32,System.String)">
            <summary>
            取得帮助页面的文本
            </summary>
            <param name="text">内容</param>
            <param name="space">前面空几个Tab.</param>
            <param name="type">类型</param>
            <returns>TT_H_Generic.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.HelperHtml.GetHelperHtml(System.Collections.Generic.List{MangoMis.Frame.Model.HelperHtmlModel},System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            取得虚拟的帮助页面
            </summary>
            <param name="helperHtmls">帮助页面内容实例列表</param>
            <param name="form">内容的Form</param>
        </member>
        <member name="T:MangoMis.Frame.Model.HelperHtmlModel">
            <summary>
            HTML帮助信息模型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.HelperHtmlModel.#ctor(System.String,MangoMis.Frame.Model.HelperHtmlModel_Item[])">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.HelperHtmlModel"/> class.
            </summary>
            <param name="title">标题</param>
            <param name="items">内容列表</param>
        </member>
        <member name="F:MangoMis.Frame.Model.HelperHtmlModel.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.HelperHtmlModel.Items">
            <summary>
            内容
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.HelperHtmlModel_Item">
            <summary>
            Html帮助信息的条目
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.HelperHtmlModel_Item.#ctor(System.String,MangoMis.Frame.Model.HelperHtmlModel_CodeWord[])">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.HelperHtmlModel_Item"/> class.
            </summary>
            <param name="word">条目文本</param>
            <param name="words">内容文本行</param>
        </member>
        <member name="F:MangoMis.Frame.Model.HelperHtmlModel_Item.Word">
            <summary>
            条目文本
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.HelperHtmlModel_Item.Words">
            <summary>
            内容文本行
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.HelperHtmlModel_CodeWord">
            <summary>
            HTML帮助信息文本
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.HelperHtmlModel_CodeWord.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.HelperHtmlModel_CodeWord"/> class.
            </summary>
            <param name="word">文本</param>
            <param name="space">空白Tab数目</param>
            <param name="type">类型(1 代码 , 2 文本)</param>
        </member>
        <member name="F:MangoMis.Frame.Model.HelperHtmlModel_CodeWord.Word">
            <summary>
            文本
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.HelperHtmlModel_CodeWord.WordType">
            <summary>
            空白Tab数目
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.HelperHtmlModel_CodeWord.WordSpace">
            <summary>
            类型(1 代码 , 2 文本)
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.IPVisitRecordHelper">
            <summary>
            Class IPVisitRecordHelper.
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="F:MangoMis.Frame.Model.IPVisitRecordHelper._Records">
            <summary>
            The _ records
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.IPVisitRecordHelper.recordlocker">
            <summary>
            The recordlocker
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.IPVisitRecordHelper.Records">
            <summary>
            The records
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.IPVisitRecordHelper.urllocker">
            <summary>
            The recordlocker
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.IPVisitRecordHelper._UrlList">
            <summary>
            The _ records
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.IPVisitRecordHelper.UrlList">
            <summary>
            The URL list
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.IPVisitRecordHelper.LastWriteTime">
            <summary>
            上次写入时间
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.IPVisitRecordHelper.Write">
            <summary>
            Writes this instance.
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Model.IPVisitRecordHelper.Append(System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            Appends this instance.
            </summary>
            <returns>System.String.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Model.IPVisitRecord">
            <summary>
            记录IP访问记录
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.IPVisitRecord.UserID">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>The user identifier.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.IPVisitRecord.Guid">
            <summary>
            访问的键
            </summary>
            <value>The unique identifier.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.IPVisitRecord.IP">
            <summary>
            IP地址
            </summary>
            <value>The ip.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="F:MangoMis.Frame.Model.IPVisitRecord.Visits">
            <summary>
            访问
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.IPVisitRecord.ReadTable">
            <summary>
            读取显示情况
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="T:MangoMis.Frame.Model.IPVisitRecordItem">
            <summary>
            记录IP访问记录成员
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.IPVisitRecordItem.UserID">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>The user identifier.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.IPVisitRecordItem.BeginTime">
            <summary>
            开始访问时间
            </summary>
            <value>The begin time.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.IPVisitRecordItem.EndTime">
            <summary>
            结束访问时间
            </summary>
            <value>The end time.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.IPVisitRecordItem.PageId">
            <summary>
            页面编号
            </summary>
            <value>The page identifier.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.IPVisitRecordItem.LastPageId">
            <summary>
            上次访问页面编号
            </summary>
            <value>The last page identifier.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.IPVisitRecordItem.LastPageName">
            <summary>
            上次访问页面名
            </summary>
            <value>The last name of the page.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Model.IRewriteModel`1">
            <summary>
            重写的Model中要有Append
            </summary>
            <typeparam name="MT">The type of the MT.</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.IRewriteModel`1.Append(`0)">
            <summary>
            添加一个实体
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="T:MangoMis.Frame.Model.Old_Site_Cache_Model`1">
            <summary>
            重写内存缓存实体的类型
            </summary>
            <typeparam name="MT">The type of the MT.</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.Old_Site_Cache_Model`1.#ctor(System.Collections.Generic.Dictionary{System.Int32,`0})">
            <summary>
            初始化
            </summary>
            <param name="entitys">The entitys.</param>
        </member>
        <member name="P:MangoMis.Frame.Model.Old_Site_Cache_Model`1.Items">
            <summary>
            字典集合
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.Old_Site_Cache_Model`1.List">
            <summary>
            列表集合
            </summary>
            <value>The list.</value>
        </member>
        <member name="M:MangoMis.Frame.Model.Old_Site_Cache_Model`1.Append(`0)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="T:MangoMis.Frame.Model.RewriteModel`1">
            <summary>
            重写内存缓存实体的类型
            </summary>
            <typeparam name="MT">The type of the MT.</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Model.RewriteModel`1.#ctor(System.Collections.Generic.List{`0},System.Func{`0,System.Nullable{System.Int32}},System.Func{`0,System.String})">
            <summary>
            初始化
            </summary>
            <param name="entitys">The entitys.</param>
            <param name="getId">The get id.</param>
            <param name="getName">Name of the get.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.RewriteModel`1.DefaultRemove(System.Int32,System.String)">
            <summary>
            Defaults the remove.
            </summary>
            <param name="id">The identifier.</param>
            <param name="name">The name.</param>
        </member>
        <member name="P:MangoMis.Frame.Model.RewriteModel`1.vistors">
            <summary>
            没啥用
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.RewriteModel`1.GetName">
            <summary>
            取得本类的名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.RewriteModel`1.GetId">
            <summary>
            取得主键编号
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.RewriteModel`1.Append(`0)">
            <summary>
            添加一个对象(可扩展)
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.RewriteModel`1.ExtendAppend(`0,System.Int32,System.String)">
            <summary>
            添加对象的扩展方法
            </summary>
            <param name="item">对象</param>
            <param name="id">编号</param>
            <param name="name">名称</param>
        </member>
        <member name="P:MangoMis.Frame.Model.RewriteModel`1.Names">
            <summary>
            名称集合
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.RewriteModel`1.DictNames">
            <summary>
            名称及关联的ID集合
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.RewriteModel`1._Names">
            <summary>
            名称集合
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.RewriteModel`1.Items">
            <summary>
            字典集合
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.RewriteModel`1.List">
            <summary>
            列表集合
            </summary>
            <value>The list.</value>
        </member>
        <member name="T:MangoMis.Frame.Model.EnumOfLockType">
            <summary>
            Enum EnumOfLockType
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.EnumOfLockType.Cache">
            <summary>
            Cache保存
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.EnumOfLockType.Session">
            <summary>
            Session保存
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.EnumOfLockType.Variable">
            <summary>
            变量保存
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.LockBool">
            <summary>
            一般用于初始化时配置的锁定,防止多次初始化[如果需要使用.请尝试使用LockerHelper.DoLockerInit(),如有疑问,请咨询DNZxf]
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.LockBool.isInit">
            <summary>
            是否已经初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.LockBool.#ctor(System.Action)">
            <summary>
            创建一个配置初始化类
            </summary>
            <param name="InitFunction">初始化的函数</param>
        </member>
        <member name="M:MangoMis.Frame.Model.LockBool.Init">
            <summary>
            初始化.如果已经初始化则不会再次初始化
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.DNZxf_Locker">
            <summary>
            [已过时]新版本的读取锁[如果需要使用.请尝试使用LockerHelper.DoLockerInit(),如有疑问,请咨询DNZxf]
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.DNZxf_Locker.remove(System.String)">
            <summary>
            移除已经无用的KEY
            </summary>
            <param name="load_key"></param>
        </member>
        <member name="P:MangoMis.Frame.Model.DNZxf_Locker.Item(System.String)">
            <summary>
            取得当前的读取对象
            </summary>
            <param name="load_key">当前读取的索引.全局唯一</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Model.locker_getter_event`1">
            <summary>
            锁事件的取值方法
            </summary>
            <typeparam name="MT"></typeparam>
        </member>
        <member name="T:MangoMis.Frame.Model.LockObj`1">
            <summary>
            锁对象
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.LockObj`1.#ctor(MangoMis.Frame.Model.locker_getter_event{`0},MangoMis.Frame.Model.EnumOfLockType)">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.LockObj`1" /> class.
            </summary>
            <param name="getFunction">The get function.</param>
            <param name="type">The type.</param>
        </member>
        <member name="F:MangoMis.Frame.Model.LockObj`1.saveType">
            <summary>
            保存类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.LockObj`1.lockObj">
            <summary>
            锁定项目
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.LockObj`1._saved">
            <summary>
            本地保存值
            </summary>
            <value>The _saved.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.LockObj`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:MangoMis.Frame.Model.ApiStaticGetType">
            <summary>
            ApiStatic调用类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.ApiStaticGetType.MisSite">
            <summary>
            Mis站点列表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.ApiStaticGetType.SiteAddressList">
            <summary>
            站点地址列表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.ApiStaticGetType.ProjectNames">
            <summary>
            项目名列表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.ApiStaticGetType.LocalNames">
            <summary>
            本地主机名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.ApiStaticGetType.ApiSites">
            <summary>
            Api接口站点列表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.ApiStaticGetType.AllApiList">
            <summary>
            所有Api接口的路径
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.ApiStaticGetType.myApiList">
            <summary>
            本机API列表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.ApiStaticGetType.ApiTypes">
            <summary>
            Api类型
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.ApiConfigs">
            <summary>
            所有的接口配置
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Model.ApiConfigs.GetForeach(System.String,System.Int32,System.Action{System.Collections.Generic.List{System.String}})">
            <summary>
            循环
            </summary>
            <param name="siteList">The site list.</param>
            <param name="length">The length.</param>
            <param name="action">The action.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.ApiConfigs.DefaultApiList">
            <summary>
            Gets the default API list.
            </summary>
            <value>The default API list.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="F:MangoMis.Frame.Model.ApiConfigs.CacheInterfaceList">
             <summary>
            基础缓存
             </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.ApiConfigs.LocalCacheInterfaces">
            <summary>
            基础缓存,改为使用Site_Cache_Intefaces
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.ApiConfigs.Site_Cache_Intefaces">
            <summary>
            新版本基础缓存
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.ApiConfigs.NoCacheInterfaceList">
            <summary>
            不缓存的接口
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.MisSite">
            <summary>
            相关Mis的站点
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.MisSite.SiteName">
            <summary>
            站点名
            </summary>
            <value>The name of the site.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.MisSite.SiteUrl">
            <summary>
            站点地址
            </summary>
            <value>The site URL.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.MisSite.UpdateCacheUrl">
            <summary>
            站点更新地址
            </summary>
            <value>The update cache URL.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Model.ApiSite">
            <summary>
            相关Api站点
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.ApiSite.SiteName">
            <summary>
            站点名
            </summary>
            <value>The name of the site.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.ApiSite.SiteUrl">
            <summary>
            站点地址
            </summary>
            <value>The site URL.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Model.ApiItem">
            <summary>
            相关Api站点
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Model.ApiItem.#ctor">
            <summary>
            初始化ApiItem
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.ApiItem.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.ApiItem" /> class.
            </summary>
            <param name="site">站点名</param>
            <param name="typename">类型名</param>
            <param name="version">版本号</param>
            <param name="inter">接口</param>
            <param name="iscache">是否缓存</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Model.ApiItem.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.ApiItem"/> class.
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Model.ApiItem.InterfaceUrl(System.String)">
            <summary>
            接口地址
            </summary>
            <value>The interface URL.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.ApiItem.DefaultInterfaceUrl">
            <summary>
            接口地址
            </summary>
            <value>The interface URL.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.ApiItem.SiteName">
            <summary>
            站点名
            </summary>
            <value>The name of the site.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.ApiItem.TypeName">
            <summary>
            接口站点名站点名
            </summary>
            <value>The name of the site.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.ApiItem.versions">
            <summary>
            版本号
            </summary>
            <value>The name of the site.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="F:MangoMis.Frame.Model.ApiItem.Versions">
            <summary>
            版本号
            </summary>
            <value>The name of the site.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.ApiItem.CacheSites">
            <summary>
            缓存了的站点
            </summary>
            <value>The name of the site.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.ApiItem.Interface">
            <summary>
            接口名
            </summary>
            <value>The name of the site.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.ApiItem.iscache">
            <summary>
            是否缓存
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.ApiItem.IsCache">
            <summary>
            是否缓存
            </summary>
            <value>The name of the site.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Model.ApiItem.SiteUrl">
            <summary>
            站点地址
            </summary>
            <value>The site URL.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Model.RequestRecord">
            <summary>
            请求记录器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.RequestRecord.#ctor(System.String,System.Double)">
            <summary>
            初始化
            </summary>
            <param name="url">请求地址不带域名</param>
            <param name="timeSpan">请求时间</param>
        </member>
        <member name="F:MangoMis.Frame.Model.RequestRecord.Url">
            <summary>
            请求路径
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.RequestRecord.Times">
            <summary>
            请求时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.RequestRecord.MaxTime">
            <summary>
            最大请求时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.RequestRecord.MinTime">
            <summary>
            最小请求时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.RequestRecord.TimeSpan">
            <summary>
            请求总时间
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Model.UrlRequestRecord">
            <summary>
            URL记录的处理类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.UrlRequestRecord.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.UrlRequestRecord.AddRequest(System.String,System.Double)">
            <summary>
            添加一个请求
            </summary>
            <param name="url">The URL.</param>
            <param name="timeSpan">The time span.</param>
        </member>
        <member name="F:MangoMis.Frame.Model.UrlRequestRecord.Records">
            <summary>
            请求记录
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.UrlRequestRecord.ReadTable(System.String)">
            <summary>
            读取显示情况
            </summary>
            <param name="Title">The title.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.UrlRequestRecord.Clear">
            <summary>
            清空
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.UrlRequestRecord.ChuFa(System.Double,System.Double)">
            <summary>
            计算除法
            </summary>
            <param name="peiNumber">The pei number.</param>
            <param name="chuNumber">The chu number.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.UrlRequestRecord.BuildTimeColorString(System.Double)">
            <summary>
            建立时间字符串
            </summary>
            <param name="times">The times.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:MangoMis.Frame.Model.VirtualPage">
            <summary>
            虚拟页面
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.VirtualPage.form">
            <summary>
            基础的提交Form
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.VirtualPage.div">
            <summary>
            基础的显示Div
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.VirtualPage.page">
            <summary>
            基础页面
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Model.VirtualPage.page_Name">
            <summary>
            The page_ name
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.VirtualPage.#ctor(System.String)">
            <summary>
            创建虚拟页面.需要填写页面名
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:MangoMis.Frame.Model.VirtualPage.FormID">
            <summary>
            Form的ID
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.VirtualPage.Mesaage(System.String)">
            <summary>
            显示提示消息
            </summary>
            <param name="msg">The MSG.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.VirtualPage.ErrorMesaage(System.String)">
            <summary>
            显示错误提示消息(目前只是颜色变成Brown)
            </summary>
            <param name="msg">The MSG.</param>
        </member>
        <member name="M:MangoMis.Frame.Model.VirtualPage.NewButton(System.String,System.String)">
            <summary>
            创建新的按钮
            </summary>
            <param name="text">显示文本</param>
            <param name="action">运行函数(VirPageHelper.VirBaseAction取得)</param>
            <returns>HtmlButton.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.VirtualPage.NewText(System.String)">
            <summary>
            创建新的文本框
            </summary>
            <param name="id">The identifier.</param>
            <returns>HtmlButton.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.VirtualPage.NewContaint">
            <summary>
            返回一个新的容器(目前是DIV)
            </summary>
            <returns>HtmlGenericControl.</returns>
        </member>
        <member name="T:MangoMis.Frame.Model.WCF_Cache_Action_Model_Helper">
            <summary>
            使用ApiStatic回调更新的.WCF回调帮助
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Model.WCF_Cache_Action_Model_Helper.LockObjects">
            <summary>
            用于锁定添加.防止添加重复
            </summary>
            <value>The lock_ objects.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.WCF_Cache_Action_Model_Helper.Keys">
            <summary>
            取得所有当前已经有缓存的键
            </summary>
            <value>The keys.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.WCF_Cache_Action_Model_Helper.Actions">
            <summary>
            用于记录实际更新方法
            </summary>
            <value>The actions.</value>
        </member>
        <member name="M:MangoMis.Frame.Model.WCF_Cache_Action_Model_Helper.Add_Interface(System.String,System.Action{System.String})">
            <summary>
            添加接口的回调,如果已经包括此接口,则不会更新
            </summary>
            <param name="key">索引(接口名)</param>
            <param name="update_callback">更新的回调函数</param>
        </member>
        <member name="M:MangoMis.Frame.Model.WCF_Cache_Action_Model_Helper.Add_Event(System.String,System.String,MangoMis.Frame.Model.WCF_Cache_Action_Model_After_Update)">
            <summary>
            为接口回调添加事件,必须先有此接口才能添加事件,否则添加不成功
            </summary>
            <param name="key">索引(接口名)</param>
            <param name="event_key">事件名.用于判断事件是否添加过</param>
            <param name="action">要添加的事件</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:MangoMis.Frame.Model.WCF_Cache_Action_Model_Helper.Update_Callback(System.String,System.Object)">
            <summary>
            WCF的回调函数
            </summary>
            <param name="key">索引(接口名)</param>
            <param name="data">传入的更新数据</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:MangoMis.Frame.Model.WCF_Cache_Action_Model_After_Update">
            <summary>
            用于更新后回调的事件
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="T:MangoMis.Frame.Model.WCF_Cache_Action_Model">
            <summary>
            WCF调用的回调类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Model.WCF_Cache_Action_Model.update(System.Object)">
            <summary>
            接收到更新之后的处理
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="P:MangoMis.Frame.Model.WCF_Cache_Action_Model.Event_Keys">
            <summary>
            事件索引
            </summary>
            <value>The event_ keys.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.WCF_Cache_Action_Model.Key">
            <summary>
            当前Key(一般为Interface名.唯一)
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:MangoMis.Frame.Model.WCF_Cache_Action_Model.Update_Callback">
            <summary>
            接收到更新之后调用
            </summary>
            <value>The update_callback.</value>
        </member>
        <member name="E:MangoMis.Frame.Model.WCF_Cache_Action_Model.After_Update">
            <summary>
            Occurs when [after_ update].
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.WebHelper">
            <summary>
            站点WEB帮助函数
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.WebHelper.MD5Type">
            <summary>
            MD5加密类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WebHelper.MD5Type.Len16">
            <summary>
            The len16
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WebHelper.MD5Type.Len32">
            <summary>
            The len32
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.WebHelper.UserAgentStatus">
            <summary>
            当前用户通过UseAgent取得的状态
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.WebHelper.URL_Site_Root">
            <summary>
            当前站点相对IIS路径(计算子站点)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.JS_Load_Control(System.String)">
            <summary>
            建立一个页面引用JS的控件
            </summary>
            <param name="url">JS地址</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.JS_Run_Control(System.String)">
            <summary>
            建立一个页面运行JS的控件
            </summary>
            <param name="js">JS内容</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.LoadUrlBaseScript(System.Web.UI.Page)">
            <summary>
            向页面Header中加载URLBase的脚本
            </summary>
            <param name="page">页面</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.LoadScriptWithJSUrlBasse(System.Web.UI.Page,System.String)">
            <summary>
            向页面中加载通过URLBase引用的脚本
            </summary>
            <param name="page">页面</param>
            <param name="jsListString">JS列表,使用逗号分割</param>
        </member>
        <member name="P:MangoMis.Frame.Helper.WebHelper.Current">
            <summary>
            Session
            </summary>
            <value>The request.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.WebHelper.Cookie_SessionId">
            <summary>
            cookie中记录的SessionID
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WebHelper.CurrentStorage">
            <summary>
            当前系统中的Debug.通过SessionID记录没有SessionID则没有Debug
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.WebHelper.UserSessionKeys">
            <summary>
            用户SessionKey列表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.IsMobile">
            <summary>
             根据 Agent 判断是否是智能手机
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Helper.WebHelper.Session">
            <summary>
            Session
            </summary>
            <value>The request.</value>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.GetSessionValue(System.String,System.String)">
            <summary>
            [Handler里已经全线放弃Session如果有临时存储需求,请使用MangoMis.Frame.Helper.RedisV2.RedisStorage.Set/Get][此函数尽量不要调用,调用另一个只有一个参数的函数]取得Session无值.或无Session的时候返回Null
            </summary>
            <returns>System.Object.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.GetCustomSession(System.String,System.String)">
            <summary>
            [此函数尽量不要调用,调用另一个只有一个参数的函数]取得Session无值.或无Session的时候返回Null
            </summary>
            <returns>System.Object.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.SetCustomSession(System.String,System.String,System.Object)">
            <summary>
            [此函数尽量不要调用,调用另一个只有两个参数的函数]设置Session的值(值是Null或者不写的时候就是清空Session)
            </summary>
            <param name="sessionKey">要设置的SessionKey</param>
            <param name="key">名称</param>
            <param name="value">值</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.GetCustomSession(System.String)">
            <summary>
            使用内部变量记录缓存信息不通过Session
            </summary>
            <returns>System.Object.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.SetCustomSession(System.String,System.Object)">
            <summary>
            使用内部变量记录缓存信息不通过Session设置Session的值(值是Null或者不写的时候就是清空Session)
            </summary>
            <param name="key">名称</param>
            <param name="value">值</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.SetSessionValue(System.String,System.String,System.Object)">
            <summary>
            [Handler里已经全线放弃Session如果有临时存储需求,请使用MangoMis.Frame.Helper.RedisV2.RedisStorage.Set/Get][此函数尽量不要调用,调用另一个只有两个参数的函数]设置Session的值(值是Null或者不写的时候就是清空Session)
            </summary>
            <param name="sessionKey">要设置的SessionKey</param>
            <param name="key">名称</param>
            <param name="value">值</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.GetSessionValue(System.String)">
            <summary>
            [Handler里已经全线放弃Session如果有临时存储需求,请使用MangoMis.Frame.Helper.RedisV2.RedisStorage.Set/Get]取得Session无值.或无Session的时候返回Null
            </summary>
            <returns>System.Object.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.SetSessionValue(System.String,System.Object)">
            <summary>
            [Handler里已经全线放弃Session如果有临时存储需求,请使用MangoMis.Frame.Helper.RedisV2.RedisStorage.Set/Get]设置Session的值(值是Null或者不写的时候就是清空Session)
            </summary>
            <param name="key">名称</param>
            <param name="value">值</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.unExcString(System.String)">
            <summary>
            解码操作
            </summary>
            <param name="instring">解码字符串</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.ExcString(System.String)">
            <summary>
            解码操作
            </summary>
            <param name="instring">加密字符串</param>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Helper.WebHelper.Response">
            <summary>
            Response
            </summary>
            <value>The request.</value>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.EndResponse">
            <summary>
            结束Response
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.Json(System.Object)">
            <summary>
            将Object做为Json输出
            </summary>
            <param name="data">要转成Json的ObjectData</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.JsonNoNull(System.Object)">
            <summary>
            将Object做为Json输出(为Null的对象不返回),只能返回属性不能返回字段
            </summary>
            <param name="data">要转成Json的ObjectData</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.JsonNoNullAndEmpty(System.Object)">
            <summary>
            将Object做为Json输出(为Null的对象或者空字符串不返回),只能返回属性不能返回字段
            </summary>
            <param name="data">要转成Json的ObjectData</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.JsonNoNullString(System.Object)">
            <summary>
            将Object做为Json输出(不再输出带双引号的Null,直接输出null),只能返回属性不能返回字段
            </summary>
            <param name="data">要转成Json的ObjectData</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.Json(System.Object,MangoMis.Frame.Helper.Json.JsonReturnType)">
            <summary>
            将Object做为Json输出,只能返回属性不能返回字段
            </summary>
            <param name="data">要转成Json的ObjectData</param>
            <param name="responseType">Response的类型</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.Json(System.Object,System.Web.HttpResponse)">
            <summary>
            将Object做为Json输出,只能返回属性不能返回字段
            </summary>
            <param name="data">要转成Json的ObjectData</param>
            <param name="response">输出的HttpResponse</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.Json(System.Object,System.Web.HttpResponse,MangoMis.Frame.Helper.Json.JsonReturnType)">
            <summary>
            将Object做为Json输出
            </summary>
            <param name="data">要转成Json的ObjectData</param>
            <param name="response">输出的HttpResponse</param>
            <param name="responseType">Response的类型</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.Json(System.String)">
            <summary>
            将文本做为Json输出
            </summary>
            <param name="responseText">输出文本</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.Json(System.String,MangoMis.Frame.Helper.Json.JsonReturnType)">
            <summary>
            将文本做为Json输出
            </summary>
            <param name="responseText">输出文本</param>
            <param name="responseType">Response的类型</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.Json(System.String,System.Web.HttpResponse)">
            <summary>
            将文本做为Json输出
            </summary>
            <param name="responseText">输出文本</param>
            <param name="response">输出的HttpResponse</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.Json(System.String,System.Web.HttpResponse,MangoMis.Frame.Helper.Json.JsonReturnType)">
            <summary>
            将文本做为Json输出
            </summary>
            <param name="responseText">输出文本</param>
            <param name="response">输出的HttpResponse</param>
            <param name="responseType">Response的类型</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.JsonResponse(System.Object,System.Web.HttpResponse)">
            <summary>
            将对象输出JSON至HttpResponse
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-16-2013
            ************************************************************
            <param name="data">The data.</param>
            <param name="response">The response.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.XmlResponse(System.Xml.Linq.XDocument)">
            <summary>
            将对象输出XML至HttpResponse
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:04-13-2017
            ************************************************************
            <param name="data">The data.</param>
        </member>
        <member name="P:MangoMis.Frame.Helper.WebHelper.QueryStringDictionary">
            <summary>
            当前QueryString的字典
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.WebHelper.Request">
            <summary>
            Request
            </summary>
            <value>The request.</value>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.GetHeader(System.String)">
            <summary>
            从Request的头部信息中获取得一个值<br/>
            常见的Key有AppID,signature<br/>
            Chrome=>NetWork=>选中请求=>Headers=>Request Headers
            </summary>
            <param name="headerKey">要获取的索引</param>
            <returns>返回头信息的值,如果当前并没有Request,返回null,允许返回null</returns>
        </member>
        <member name="P:MangoMis.Frame.Helper.WebHelper.CurrentProtocol">
            <summary>
            当前站点的协议(Http/Https)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.GetKeyUnDecode(System.String,System.Web.HttpRequest)">
            <summary>
            取得QueryString(不进行解码.某些特殊操作,如检验公钥私钥时会用到)
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-16-2013
            ************************************************************
            <param name="key">索引</param>
            <param name="request">Request</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.GetKey(System.String,System.Web.HttpRequest)">
            <summary>
            取得QueryString
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-16-2013
            ************************************************************
            <param name="key">索引</param>
            <param name="request">Request</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.GetKeyInt(System.String,System.Web.HttpRequest)">
            <summary>
            取得Int的Key
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-16-2013
            ************************************************************
            <param name="key">索引</param>
            <param name="request">Request</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="P:MangoMis.Frame.Helper.WebHelper.Ip">
            <summary>
            当前IP
            </summary>
            <value>The ip.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.WebHelper.LtctraId">
            <summary>
            追踪Id,由初始调用方生成,在单次请求链路中唯一,一直携带
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.Run_Script(System.String,System.String)">
            <summary>
            运行JS
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/22 14:10:30
            ************************************************************
            <param name="jstext">The jstext.</param>
            <param name="jsname">The jsname.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.alert(System.String,System.String)">
            <summary>
            用JS弹出消息
            </summary>
            <param name="message">The message.</param>
            <param name="title">The title.</param>
        </member>
        <member name="P:MangoMis.Frame.Helper.WebHelper.CurrentClientUrl">
            <summary>
            取得当前页面的客户端地址栏看到的URL
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.IndexOfProtocolEnd(System.String)">
            <summary>
            取得协议结束的字符.没有协议返回-1:eg.http:// 返回7 www.517.cn 返回-1
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.GetCurrentSiteClientUrl(System.String)">
            <summary>
            取得当前页面的客户端地址栏看到的URL
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.Cache(System.String,System.Object)">
            <summary>
            操作缓存.第二个参数不传.则是取得
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/22 16:35:52
            ************************************************************
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.RemoveCache(System.String)">
            <summary>
            移除缓存
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/22 16:37:00
            ************************************************************
            <param name="key">The key.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.GetConfig(System.String)">
            <summary>
            取得配置键值
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 14:42:35
            ************************************************************
            <param name="key">键名</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.GetMapPath(System.String)">
            <summary>
            获得当前绝对路径,请使用FileHelper.GetPath
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 14:42:33
            ************************************************************
            <param name="strPath">指定的路径</param>
            <returns>绝对路径</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.HttpType(System.String)">
            <summary>
            BMP 返回文件类型对应的Http头信息
            </summary>
            <param name="extname">文件类型</param>
            <returns>对应Http头</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.SetCookie(System.String,System.DateTime,System.String,System.String)">
            <summary>
            写入Cookie(包含生效时间)
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 14:33:34
            ************************************************************
            <param name="key">索引</param>
            <param name="end">结束时间</param>
            <param name="value">值</param>
            <param name="domain"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.SetHttpOnlyCookie(System.String,System.DateTime,System.String,System.String)">
            <summary>
            写入HttpOnly的Cookie(包含生效时间)
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 14:33:34
            ************************************************************
            <param name="key">索引</param>
            <param name="end">结束时间</param>
            <param name="value">值</param>
            <param name="domain"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.SetCookie(System.String,System.DateTime,System.String)">
            <summary>
            写入Cookie(包含生效时间)
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 14:33:34
            ************************************************************
            <param name="key">索引</param>
            <param name="end">结束时间</param>
            <param name="value">值</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.SetHttpOnlyCookie(System.String,System.DateTime,System.String)">
            <summary>
            写入HttpOnly的Cookie(包含生效时间)
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 14:33:34
            ************************************************************
            <param name="key">索引</param>
            <param name="end">结束时间</param>
            <param name="value">值</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.SetHttpOnlyCookie(System.String,System.String)">
            <summary>
            写入HttpOnly的Cookie(浏览器进程活动周期内生效)
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 14:34:58
            ************************************************************
            <param name="key">索引</param>
            <param name="value">值</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.SetCookie(System.String,System.String)">
            <summary>
            写入Cookie(浏览器进程活动周期内生效)
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 14:34:58
            ************************************************************
            <param name="key">索引</param>
            <param name="value">值</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.GetCookie(System.String)">
            <summary>
            取得Cookie
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.DeleteCookie(System.String)">
            <summary>
            移除Cookie
            </summary>
            <param name="key">指定Cookie</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.DeleteCookie(System.String[])">
            <summary>
            批量删除Cookie
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 14:39:56
            ************************************************************
            <param name="keys">The keys.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.MD5(System.String)">
            <summary>
            MD5加密
            </summary>
            <param name="inString"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.MD5(System.String,MangoMis.Frame.Helper.WebHelper.MD5Type)">
             <summary>
            MD5 加密 可选 16位与32位
             </summary>
             ************************************************************
             Create By  :Mr.zxf
             Create Date:2013/3/20 14:44:30
             ************************************************************
             <param name="md5Str">The MD5STR.</param>
             <param name="type">The type.</param>
             <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.RandomString(System.Int32,System.String)">
            <summary>
            按指定的字符串.指定的长度取出一个随机字符
            </summary>
            <param name="length">生成长度</param>
            <param name="baseString">基础字符串</param>
            <returns></returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/11/1
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.TurnStringCode(System.String,System.Text.Encoding,System.Text.Encoding)">
            <summary>
            按指定的编码进行转码操作
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 14:46:32
            ************************************************************
            <param name="str">转码字符串</param>
            <param name="turnCode">原编码</param>
            <param name="toCode">新编码</param>
            <returns>转码后字符串</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.WritePage(System.Web.UI.Page)">
            <summary>
            将一个页面直接输出
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="P:MangoMis.Frame.Helper.WebHelper.PageType">
            <summary>
            页面的类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebHelper.WritePage2015(System.Web.UI.Page)">
            <summary>
            将一个页面直接输出
            </summary>
            <param name="page">写入的页面</param>
        </member>
        <member name="T:MangoMis.Frame.Helper.AgentStatus">
            <summary>
            UserAgent的状态
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.AgentStatus.Mobile">
            <summary>
            移动端
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.AgentStatus.DingDing">
            <summary>
            钉钉
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.AgentStatus.Wechat">
            <summary>
            微信 
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.AgentStatus.Android">
            <summary>
            安卓
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.AgentStatus.Iphone">
            <summary>
            Iphone
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.AgentStatus.Ipad">
            <summary>
            IPad
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.AgentStatus.WindowPhone">
            <summary>
            WindowPhone
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.AgentStatus.WindowNt">
            <summary>
            Window系统
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.AgentStatus.Macintosh">
            <summary>
            苹果系统
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.AgentStatus.Chrome">
            <summary>
            谷歌浏览器
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.AgentStatus.DingDingPc">
            <summary>
            钉钉电脑端
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClientCustom.ApiIndexColumn">
            <summary>
            索引库字段
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClientCustom.ApiIndexDataEntity">
            <summary>
            索引库实体存储
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ApiIndexDataEntity.String(System.String)">
            <summary>
            取得一个字符串格式的值
            </summary>
            <param name="columnName">字段名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ApiIndexDataEntity.Int(System.String)">
            <summary>
            取得Int格式的值
            </summary>
            <param name="columnName">字段名</param>
            <returns>如果没有值返回Null有值不正确返回0</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ApiIndexDataEntity.Double(System.String)">
            <summary>
            取得double格式的值
            </summary>
            <param name="columnName">字段名</param>
            <returns>如果没有值返回Null有值不正确返回0</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ApiIndexDataEntity.Time(System.String)">
            <summary>
            取得DateTime格式的值
            </summary>
            <param name="columnName">字段名</param>
            <returns>如果没有值返回Null有值不正确返回0</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ApiIndexDataEntity.Decimal(System.String)">
            <summary>
            取得Decimal格式的值
            </summary>
            <param name="columnName">字段名</param>
            <returns>如果没有值返回Null有值不正确返回0</returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClientCustom.ApiIndexMain">
            <summary>
            
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClientCustom.ApiIndexSource">
            <summary>
            
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex">
            <summary>
            索引库查询客户端
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex.#ctor(MangoMis.Frame.Helper.ApiClientCustom.IndexViewInfo)">
            <summary>
            初始化一个V3版本客户端
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex.GetList(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex.GetList(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="skipNumber">需要跳过几条记录</param>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex.GetList(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            按条件取得所有列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <param name="filters">条件</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex.GetTotalIdByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            分页取得条件下的所有数据,默认每页200条
            </summary>
            <param name="filters">条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex.GetTotalIdByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex.GetTotalListByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            分页取得条件下的所有数据,默认每页200条
            </summary>
            <param name="filters">条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex.GetTotalListByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex.GetTotalColumnByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String})">
            <summary>
            分页取得条件下的所有数据,默认每页200条
            </summary>
            <param name="filters">条件</param>
            <param name="columns">需要查询的字段列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex.GetTotalColumnByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="columns">需要查询的字段列表</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex.Columns(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得版本列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">The columns.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex.GroupBy(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得可分页的统计数据
            </summary>
            <param name="page">页数</param>
            <param name="size">每页条目数</param>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="orders">The orders.</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex.GetCount(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得符合条件的记录总数
            </summary>
            <param name="filters">条件</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex.GroupBy(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得当前条件下的统计数据
            </summary>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex.GetIds(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得ID列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex.GetModelByIds(System.Collections.Generic.List{System.Int32})">
            <summary>
            通过ID列表取得实体列表
            </summary>
            <param name="ids">The id.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex.GetModel(System.Int32)">
            <summary>
            取得一个对象的实体
            </summary>
            <param name="id">The id.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex.GetColumnsNoCount(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得版本列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">The columns.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex`1">
            <summary>
            索引库查询客户端
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex`1.#ctor(MangoMis.Frame.Helper.ApiClientCustom.IndexViewInfo)">
            <summary>
            初始化一个V3版本客户端
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex`1.GetList(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex`1.GetList(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="skipNumber">需要跳过几条记录</param>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex`1.GetList(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            按条件取得所有列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <param name="filters">条件</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex`1.GetTotalIdByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            分页取得条件下的所有数据,默认每页200条
            </summary>
            <param name="filters">条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex`1.GetTotalIdByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex`1.GetTotalListByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            分页取得条件下的所有数据,默认每页200条
            </summary>
            <param name="filters">条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex`1.GetTotalListByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex`1.GetTotalColumnByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String})">
            <summary>
            分页取得条件下的所有数据,默认每页200条
            </summary>
            <param name="filters">条件</param>
            <param name="columns">需要查询的字段列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex`1.GetTotalColumnByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="columns">需要查询的字段列表</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex`1.Columns(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得版本列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">The columns.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex`1.GroupBy(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得可分页的统计数据
            </summary>
            <param name="page">页数</param>
            <param name="size">每页条目数</param>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="orders">The orders.</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex`1.GetCount(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得符合条件的记录总数
            </summary>
            <param name="filters">条件</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex`1.GroupBy(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得当前条件下的统计数据
            </summary>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex`1.GetIds(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得ID列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex`1.GetModelByIds(System.Collections.Generic.List{System.Int32})">
            <summary>
            通过ID列表取得实体列表
            </summary>
            <param name="ids">The id.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex`1.GetModel(System.Int32)">
            <summary>
            取得一个对象的实体
            </summary>
            <param name="id">The id.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ClientForIndex`1.GetColumnsNoCount(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得版本列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">The columns.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClientCustom.IndexColumnMappingInfo">
            <summary>
            索引库字段名映射关系
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.IndexColumnMappingInfo.#ctor(System.String)">
            <summary>
            初始化主键的字段映射
            </summary>
            <param name="identityKeyUseColumnName">实体表中的主键名</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.IndexColumnMappingInfo.#ctor(MangoMis.Frame.Helper.ApiClientCustom.ApiIndexColumn)">
            <summary>
            初始化字段映射
            </summary>
            <param name="column">索引库字段表数据</param>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClientCustom.IndexColumnMappingInfo.DbColumnName">
            <summary>
            数据库中使用的字段名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClientCustom.IndexColumnMappingInfo.UseColumnName">
            <summary>
            在程序中要使用的字段名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.IndexColumnMappingInfo.IsUseColumn(System.String)">
            <summary>
            判断一个字符串是否是程序中要使用的字段名(忽略大小写)
            </summary>
            <param name="useColumnName">要验证的字段名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.IndexColumnMappingInfo.IsDbColumnName(System.String)">
            <summary>
            判断一个字符串是否是数据库中使用的字段(忽略大小写)
            </summary>
            <param name="dbColumnName">要验证的字段名</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClientCustom.IndexDataHelper">
            <summary>
            索引库帮助类
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClientCustom.IndexDataHelper.ConnKey">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.IndexDataHelper.GetMain(System.Int32)">
            <summary>
            通过mainId取得Main
            </summary>
            <param name="mainId">主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.IndexDataHelper.GetMain(System.String)">
            <summary>
            通过TableKey取得Main
            </summary>
            <param name="tableKey">用于展示的表名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.IndexDataHelper.GetColumns(System.Int32)">
            <summary>
            按MainId取得所有的列
            </summary>
            <param name="mainId">主键MainId</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.IndexDataHelper.GetSources(System.Int32)">
            <summary>
            按MainId取得所有的数据源表
            </summary>
            <param name="mainId">主键MainId</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.IndexDataHelper.GetMainInfo(System.String)">
            <summary>
            根据使用表名得到对应的索引Main信息
            </summary>
            <param name="tableKey">使用的表名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.IndexDataHelper.ObjectClient(System.String)">
            <summary>
            取得一个客户端
            </summary>
            <param name="tableKey">要取得的TableKey</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.IndexDataHelper.EntityClient``1(System.String)">
            <summary>
            取得一个客户端
            </summary>
            <param name="tableKey">要取得的TableKey</param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClientCustom.IndexDataHelper.IdentityIdName">
            <summary>
            View的主键字符名
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClientCustom.IndexViewInfo">
            <summary>
            索引库View的信息
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClientCustom.IndexViewInfo.TableName">
            <summary>
            View表名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClientCustom.IndexViewInfo.IdentityColumnName">
            <summary>
            主键名(指在实体表中的主键名.在View中是对应的字段是IdentityId)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClientCustom.IndexViewInfo.ColumnMapping">
            <summary>
            数据库存储字段名和程序中要使用的字段名的映射关系
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.IndexViewInfo.GetDbColumnName(System.String)">
            <summary>
            通过程序字段名取得在数据库字段名
            </summary>
            <param name="useColumnName">程序中使用字段名</param>
            <returns>数据库字段名</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.IndexViewInfo.GetUseColumnName(System.String)">
            <summary>
            通过数据库字段名取得在程序中使用的字段名
            </summary>
            <param name="dbColumnName">数据库字段名</param>
            <returns>程序中使用的字段名</returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClientCustom.SysSystemParam">
            <summary>
            系统参数
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1">
            <summary>
            索引库查询客户端
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.#ctor">
            <summary>
            初始化一个V3版本客户端
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.#ctor(System.String)">
            <summary>
            初始化一个V3版本客户端
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.#ctor(System.String,System.String)">
            <summary>
            初始化一个V3版本客户端
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.Init(System.String,System.String)">
            <summary>
            初始化当前链接
            2020年1月19日 18:23:39
            </summary>
            <param name="tableName">表名</param>
            <param name="connKey">连接字符串</param>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.ClientUrl">
            <summary>
            提交WCF的Url
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.ConnKey(System.String)">
            <summary>
            设置ConnKey(默认为配置中的ConnKey)
            </summary>
            <param name="setConnKey"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.PageName(System.String)">
            <summary>
            设置PageName(如果页面或者Handler继承于IFrameHandler则默认为PageName属性)(默认值是CommonFrame.CurrentFrameHandler?.PageName ?? "NoPage")
            </summary>
            <param name="setPageName"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.PassKey(System.String)">
            <summary>
            设置密钥字符串(默认为配置中UsePassKey)
            </summary>
            <param name="setPassKey"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.NoDebug">
            <summary>
            设置为不取得Service的Debug(默认取得)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.NoPass">
            <summary>
            设置为不进行加密操作
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.HasPass">
            <summary>
            设置为进行加密操作
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.TableName(System.String)">
            <summary>
            设置要查询的表名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.GetList(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.GetList(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="skipNumber">需要跳过几条记录</param>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.GetList(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            按条件取得所有列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <param name="filters">条件</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.GetTotalIdByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            分页取得条件下的所有数据,默认每页200条
            </summary>
            <param name="filters">条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.GetTotalIdByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.GetTotalListByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            分页取得条件下的所有数据,默认每页200条
            </summary>
            <param name="filters">条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.GetTotalListByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.GetTotalColumnByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String})">
            <summary>
            分页取得条件下的所有数据,默认每页200条
            </summary>
            <param name="filters">条件</param>
            <param name="columns">需要查询的字段列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.GetTotalColumnByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="columns">需要查询的字段列表</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.Columns(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得版本列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">The columns.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.GroupBy(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得可分页的统计数据
            </summary>
            <param name="page">页数</param>
            <param name="size">每页条目数</param>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="orders">The orders.</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.GetCount(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得符合条件的记录总数
            </summary>
            <param name="filters">条件</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.GroupBy(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得当前条件下的统计数据
            </summary>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.GetIds(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得ID列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.GetTotalIDByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.Update(`0)">
            <summary>
            更新条目
            </summary>
            <param name="entity">提交更新的实体</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.Delete(`0)">
            <summary>
            删除一条记录
            </summary>
            <param name="entity">删除的实体(必须实例化主键)</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.Add(`0)">
            <summary>
            新增条目
            </summary>
            <param name="entity">提交更新的实体</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.GetModelByIds(System.Collections.Generic.List{System.Int32})">
            <summary>
            通过ID列表取得实体列表
            </summary>
            <param name="ids">The id.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.GetModel(System.Int32)">
            <summary>
            取得一个对象的实体
            </summary>
            <param name="id">The id.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient`1.GetColumnsNoCount(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得版本列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">The columns.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient">
            <summary>
            V3版本的客户端实例
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.#ctor(System.String,System.String)">
            <summary>
            初始化一个V3版本客户端
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.#ctor(System.String)">
            <summary>
            初始化一个V3版本客户端
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient._ServiceHost">
            <summary>
            当前WCF路径,如果是Null那就用正常的默认路径
            2020年1月19日 18:09:05
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.SetAtModule(System.String)">
            <summary>
            2020年1月19日 18:08:43
            用于设置所在的Module(具体调用Wcf的路径)
            </summary>
            <param name="moduleName">一般为所在的程序集.比如OrgModel,那就是Org</param>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.ClientUrl">
            <summary>
            提交WCF的Url
            修改Module部分2020年1月19日 18:11:57 
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.ConnKey(System.String)">
            <summary>
            设置ConnKey(默认为配置中的ConnKey)
            </summary>
            <param name="setConnKey"></param>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient._connKey">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.PageName(System.String)">
            <summary>
            设置PageName(如果页面或者Handler继承于IFrameHandler则默认为PageName属性)(默认值是CommonFrame.CurrentFrameHandler?.PageName ?? "NoPage")
            </summary>
            <param name="setPageName"></param>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient._pageName">
            <summary>
            页面名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.PassKey(System.String)">
            <summary>
            设置密钥字符串(默认为配置中UsePassKey)
            </summary>
            <param name="setPassKey"></param>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient._passKey">
            <summary>
            密钥字符串
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.NoDebug">
            <summary>
            设置为不取得Service的Debug(默认取得)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient._isNoDebug">
            <summary>
            是否没有Debug
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.NoPass">
            <summary>
            设置为不进行加密操作
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.HasPass">
            <summary>
            设置为进行加密操作
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient._isNoPass">
            <summary>
            不进行加密操作
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.TableName(System.String)">
            <summary>
            设置要查询的表名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient._tableName">
            <summary>
            要查询的表名(用于同样结构的多张表)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient._apiClientParam">
            <summary>
            当前实例的参数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.GetList(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.GetList(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="skipNumber">需要跳过几条记录</param>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.GetList(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            按条件取得所有列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <param name="filters">条件</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.GetTotalByPageSize``1(System.String,System.Func{System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},TT.Common.Frame.Model.DefaultResult{System.Collections.Generic.List{``0}}},System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="gettter">取数据函数</param>
            <param name="filters">条件</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <param name="action">函数名称</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.GetTotalIdByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            分页取得条件下的所有数据,默认每页200条
            </summary>
            <param name="filters">条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.GetTotalIdByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.GetTotalListByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            分页取得条件下的所有数据,默认每页200条
            </summary>
            <param name="filters">条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.GetTotalListByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.Columns(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得版本列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">The columns.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.GetTotalColumnByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String})">
            <summary>
            分页取得条件下的所有数据,默认每页200条
            </summary>
            <param name="filters">条件</param>
            <param name="columns">需要查询的字段列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.GetTotalColumnByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="columns">需要查询的字段列表</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.GroupBy(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得可分页的统计数据
            </summary>
            <param name="page">页数</param>
            <param name="size">每页条目数</param>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="orders">The orders.</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.GetCount(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得符合条件的记录总数
            </summary>
            <param name="filters">条件</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.GroupBy(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得当前条件下的统计数据
            </summary>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.GetIds(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得ID列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.Update(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            更新条目
            </summary>
            <param name="entity">提交更新的实体</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.Delete(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            删除一条记录
            </summary>
            <param name="entity">删除的实体(必须实例化主键)</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.Add(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            新增条目
            </summary>
            <param name="entity">提交更新的实体</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.GetModelByIds(System.Collections.Generic.List{System.Int32})">
            <summary>
            通过ID列表取得实体列表
            </summary>
            <param name="ids">The id.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.GetModel(System.Int32)">
            <summary>
            取得一个对象的实体
            </summary>
            <param name="id">The id.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.GetColumnsNoCount(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得版本列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">The columns.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.XmlReleaseEntityList(MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.XmlResult)">
            <summary>
            解析成实体字典的列表
            </summary>
            <param name="xmlResult">解析后的XML节点</param>
            <returns>返回字段和值的字典List</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.XmlReleaseEntity(MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.XmlResult)">
            <summary>
            解析成实体的字典
            </summary>
            <param name="xmlResult">解析后的XML节点</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.XmlReleaseIntList(MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.XmlResult)">
            <summary>
            解析成Int列表
            </summary>
            <param name="xmlResult">解析后的XML节点</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.XmlReleaseInt(MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.XmlResult)">
            <summary>
            解析成Int
            </summary>
            <param name="xmlResult">解析后的XML节点</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.XmlReleaseStringList(MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.XmlResult)">
            <summary>
            解析成实体字段的字符串列表(暂时没用)
            </summary>
            <param name="xmlResult">解析后的XML节点</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.XmlResult">
            <summary>
            解析返回XML的中间类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.XmlResult.Status">
            <summary>
            状态200为正常
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.XmlResult.DataNode">
            <summary>
            数据XML节点
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.XmlResult.MappdingNode">
            <summary>
            如果有映射关系.这个是节点名的映射关系.存储内容为,[简化的字段名,原字段名]
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.XmlResult.Debug">
            <summary>
            Debug信息
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.XmlResult.RetInt">
            <summary>
            返回数量
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.XmlResult.RunTime">
            <summary>
            运行时间
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.ReleaseReturn`1">
            <summary>
            解析返回值的委托
            </summary>
            <typeparam name="TReturn">返回类型</typeparam>
            <param name="result">解析中间实例,包含数据节点和映射关系</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.GetResult(System.String)">
            <summary>
            从本身的XML中取得返回值
            </summary>
            <param name="xmlString">获取的XML文档</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.PostWcf``1(System.String,MangoMis.Frame.Helper.ApiClientCustom.ServiceV3XmlBuilder,MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.ReleaseReturn{``0})">
            <summary>
            向Wcf提交XML数据,并取得返回值
            </summary>
            <typeparam name="TReturn">返回值类型</typeparam>
            <param name="action">调用函数</param>
            <param name="xmlBody">要提交的XML内容</param>
            <param name="release">解析返回值的委托</param>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.OtherString">
            <summary>
            当前实例的OtherString
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.XmlToDouble(System.Xml.XmlElement)">
            <summary>
            取得XML节点中的Double数据
            </summary>
            <param name="xmlNode"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.XmlToInt(System.Xml.XmlElement)">
            <summary>
            取得XML节点中的INT数据
            </summary>
            <param name="xmlNode"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.PostXmlClient.XmlToString(System.Xml.XmlElement)">
            <summary>
            取得XML节点中的String数据
            </summary>
            <param name="xmlNode"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClientCustom.ServiceV3XmlBuilder">
            <summary>
            在调用V3版本的WCF时,创建用于Post时使用的XML文档
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ServiceV3XmlBuilder.AppendEmptyNode(System.String)">
            <summary>
            添加一个无值的空节点
            </summary>
            <param name="nodeName">节点名</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ServiceV3XmlBuilder.CreateNode(System.String,System.String[])">
            <summary>
            [当节点里面还有子节点的情况下使用]添加一个节点的起始XML标记,一定要通过CloseNode添加结束标记[CreateNode/CloseNode的引用次数必需要一致]
            </summary>
            <param name="nodeName">节点名</param>
            <param name="attrStrings">节点的特性(字符串前需要一个空格)</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ServiceV3XmlBuilder.CloseNode(System.String)">
            <summary>
            [当节点里面还有子节点的情况下使用]添加一个节点的结束标记.必须要先使用CreateNode创建标记才可以关闭.[CreateNode/CloseNode的引用次数必需要一致]
            </summary>
            <param name="nodeName"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ServiceV3XmlBuilder.InternalAppendNode(System.String,System.String)">
            <summary>
            [节点内没有子节点的情况下使用][类内部使用]直接添加一个XML节点
            </summary>
            <param name="nodeName"></param>
            <param name="innerText"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ServiceV3XmlBuilder.BuildList``1(System.String,System.String,System.Collections.Generic.List{``0},MangoMis.Frame.Helper.ApiClientCustom.ServiceV3XmlBuilder.CreateEntityXmlNode{``0},System.String[])">
            <summary>
            为列表类型创建XML文档
            </summary>
            <typeparam name="T">列表的实体的列表</typeparam>
            <param name="parentNodeName">列表级XML节点名</param>
            <param name="childNodeName">列表中的项的XML节点名</param>
            <param name="list">列表</param>
            <param name="nodeBuilder">列表项的建立函数</param>
            <param name="attrStrings">列表级的节点的XML特性</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ServiceV3XmlBuilder.AppendStringList(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            创建一个String数据列表的XML文档
            </summary>
            <param name="nodeName"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ServiceV3XmlBuilder.AppendIntList(System.String,System.Collections.Generic.List{System.Int32})">
            <summary>
            创建一个Int数据列表的XML文档
            </summary>
            <param name="nodeName"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ServiceV3XmlBuilder.AppendFilters(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            创建筛选条件的XML文档
            </summary>
            <param name="filters"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ServiceV3XmlBuilder.AppendOrders(System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            创建排序条件的XML文档
            </summary>
            <param name="orders"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ServiceV3XmlBuilder.AppendId(System.String)">
            <summary>
            向文档中插入主键条件(id)
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ServiceV3XmlBuilder.AppendPage(System.String)">
            <summary>
            向文档中插入要查询页码(page)
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ServiceV3XmlBuilder.AppendPageSize(System.String)">
            <summary>
            向文档中插入要每页查询条目数(pageSize)
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ServiceV3XmlBuilder.AppendSkipNumber(System.String)">
            <summary>
            向文档中插入跳过的条目数(skipNumber),有排除前几条不进行查询的需求时使用
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ServiceV3XmlBuilder.AppendIds(System.Collections.Generic.List{System.Int32})">
            <summary>
            向文档中插入要查询的ID列表(idList)
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ServiceV3XmlBuilder.AppendColumns(System.Collections.Generic.List{System.String})">
            <summary>
            向文档中插入要查询的列名称(columns)
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ServiceV3XmlBuilder.AppendGroups(System.Collections.Generic.List{System.String})">
            <summary>
            向文档中插入要分组的列名称(groups)
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ServiceV3XmlBuilder.AppendEntity(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            创建带属性的XML节点文档
            </summary>
            <param name="entityDictionary"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClientCustom.ServiceV3XmlBuilder.EndXml(System.String)">
            <summary>
            封闭XML并获取XML内容(只能获取一次)
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClient.ClientV2ConnectionStore">
            <summary>
            简易WCF连接的仓储管理
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ClientV2ConnectionStore.StoreName">
            <summary>
            当前仓储名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ClientV2ConnectionStore.DefaultConnectionInfo">
            <summary>
            默认连接参数
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ClientV2ConnectionStore.DefaultConfigKey">
            <summary>
            默认配置的键
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ClientV2ConnectionStore.ModuleClientInfos">
            <summary>
            当前模块对应的默认连接配置(Model)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ClientV2ConnectionStore.TypeClientInfos">
            <summary>
            当前类型对应的默认连接配置(实体)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV2ConnectionStore.GetAllConnectionInfos">
            <summary>
            取得当前所有连接内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV2ConnectionStore.GetConnectionConfig(System.Type)">
            <summary>
            取得当前的连接参数
            </summary>
            <param name="entityType">Service实体</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1">
            <summary>
            <para>基于PostXmlClient进行二次封装的ClientV4的扩展程序.用于数据库操作</para>
            <para>新增函数 InsertWithLog,UpdateWithLog,GetFirst,GetList,GetGroupByList 用于实现添加修改查询分组4个操作 其他方法跟ClientV3无区别</para>
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.Client">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.#ctor(System.Boolean)">
            <summary>
            实例化DBHelper 用于自定义查询
            </summary>
            <param name="_QueryNotDeleteData">是否只查询未删除数据,默认否(字段名字必须是isdel,否则请不要使用当前构造参数,会造成字段无效的sql错误)</param>
            <exception cref="!:泛型T必须是数据库表结构,使用自定义Class或者DTO可能会导致查询失败"></exception>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.#ctor(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            实例化DBHelper 用于创页通用查询
            </summary>
            <param name="_Flters"></param>
            <param name="_Orders"></param>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.Flters">
            <summary>
            条件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.Orders">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.SelectColumns">
            <summary>
            字段
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.QueryNotDeleteData">
            <summary>
            是否查询未删除数据 默认否
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.InsertWithLog(`0,System.Int32,System.Int32)">
            <summary>
            添加 
            <para>注:********************</para>
            <para>此方法不在记录操作日志,如果要记录操作日志请使用MangoMis.MisFrame.Helper.OperateLogHelper.AddInsertLog</para>
            </summary>
            <param name="entity">实体对象</param>
            <param name="LogClassID">大类型(决定向哪个日志表插入)</param>
            <param name="LogTypeId">子类型</param>
            <returns>返回主键</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.UpdateWithLog(`0,`0,System.Int32,System.Int32,System.Int32)">
            <summary>
            更新
            <para>注:********************</para>
            <para>此方法不在记录操作日志,如果要记录操作日志请使用MangoMis.MisFrame.Helper.OperateLogHelper.AddUpdateLog</para>
            </summary>
            <param name="NewEntity">实体对象</param>
            <param name="OldEntity">历史实体对象,用于记录数据库更新的东西</param>
            <param name="IdentityID">实体唯一ID</param>
            <param name="LogClassID">大类型(决定向哪个日志表插入)</param>
            <param name="LogTypeId">子类型</param>
            <returns>成功或者失败</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.GetFirst">
            <summary>
            <para>***************************</para>
            <para>***该方法属于新版查询***</para>
            <para>***************************</para>
            查询单条记录
            </summary>
            <returns>T</returns>
            <exception cref="!:查询不到数据会返回空,请自行判断处理"></exception>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.GetList(System.Int32,System.Int32)">
            <summary>
            <para>***************************</para>
            <para>***该方法属于新版查询***</para>
            <para>***************************</para>
            <para>查询结果集 默认查询全部 不分页,如果需要分页,请参参数page以及size</para>  
            <para>只有使用当前方法返回的结果集,才会应用到新版的查询方式,使用其他GetList需要自己构造条件</para>  
            <para>当然你也可以使用新版构造条件,然后将条件传到其他GetList方法中,如下</para>
            <code>var Handler=new ClientV4ExtendHelper&lt;Model&gt;();</code>
            <code>Handler.FlterEq(d=>d.age==18).FlterLike(d=>d.name,"王");</code>
            <code>var filters=Handler.Flters;//表示你上面构造的条件</code>
            <code>var list=Handler.GetList(filters);</code>
            </summary>
            <param name="page">当前页码</param>
            <param name="size">每页数量</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.GetGroupByList(System.String)">
            <summary>
            <para>***************************</para>
            <para>***该方法属于新版查询***</para>
            <para>***************************</para>
            分组查询,使用当前方法必须手动构造SelectColums聚合函数对象,比如 client.SetSelectColums("sum(money) as money").GetGroupByList("money")
            </summary>
            <param name="col">分组的字段</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.ConnKey(System.String)">
            <summary>
            设置ConnKey(默认为配置中的ConnKey)
            </summary>
            <param name="setConnKey"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.TableName(System.String)">
            <summary>
            设置要查询的表名
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.GetList(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.GetList(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="skipNumber">需要跳过几条记录</param>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.GetList(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            按条件取得所有列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <param name="filters">条件</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.GetTotalIdByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            分页取得条件下的所有数据,默认每页200条
            </summary>
            <param name="filters">条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.GetTotalIdByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.GetTotalListByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            分页取得条件下的所有数据,默认每页200条
            </summary>
            <param name="filters">条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.GetTotalListByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.GetTotalColumnByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String})">
            <summary>
            分页取得条件下的所有数据,默认每页200条
            </summary>
            <param name="filters">条件</param>
            <param name="columns">需要查询的字段列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.GetTotalColumnByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="columns">需要查询的字段列表</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.Columns(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得版本列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">The columns.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.GroupBy(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得可分页的统计数据
            </summary>
            <param name="page">页数</param>
            <param name="size">每页条目数</param>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="orders">The orders.</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.GetCount(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得符合条件的记录总数
            </summary>
            <param name="filters">条件</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.GroupBy(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得当前条件下的统计数据
            </summary>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.GetIds(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得ID列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.GetTotalIDByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.Update(`0)">
            <summary>
            更新条目
            </summary>
            <param name="entity">提交更新的实体</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.Delete(`0)">
            <summary>
            删除一条记录
            </summary>
            <param name="entity">删除的实体(必须实例化主键)</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.Add(`0)">
            <summary>
            新增条目
            </summary>
            <param name="entity">提交更新的实体</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.GetModelByIds(System.Collections.Generic.List{System.Int32})">
            <summary>
            通过ID列表取得实体列表
            </summary>
            <param name="ids">The id.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.GetModel(System.Int32)">
            <summary>
            取得一个对象的实体
            </summary>
            <param name="id">The id.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.GetColumnsNoCount(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得版本列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">The columns.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.SetSelectColums(System.String)">
            <summary>
            设置要查询的字段,多个字段多个用|分割 如果不执行当前方法会根据model反射构造字段
            </summary>
            <param name="col">字段(id|name|age|sex)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.SetOrderAsc(System.String)">
            <summary>
            按照字段asc排序
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.SetOrderAsc(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            按照字段asc排序
            </summary>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.SetOrderDesc(System.String)">
            <summary>
            按照字段desc排序
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.SetOrderDesc(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            按照字段desc排序
            </summary>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.FlterEq(System.String,System.Object)">
            <summary>
            字段等于(=)
            </summary>
            <param name="col">字段名</param>
            <param name="val">值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.FlterEq(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object)">
            <summary>
            字段等于(=)
            </summary>
            <param name="expr">d=>d.name这种格式,不用手写字符串了</param>
            <param name="val">值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.FlterNotEq(System.String,System.Object)">
            <summary>
            字段不等于(!=)
            </summary>
            <param name="col"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.FlterNotEq(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object)">
            <summary>
            字段不等于(!=)
            </summary>
            <param name="expr"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.FlterIn(System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            字段in
            </summary>
            <param name="col"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.FlterIn(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            字段in
            </summary>
            <param name="expr"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.FlterNotIn(System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            字段not in
            </summary>
            <param name="col"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.FlterNotIn(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            字段not in
            </summary>
            <param name="expr"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.FlterLike(System.String,System.Object)">
            <summary>
            字段like
            </summary>
            <param name="col"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.FlterLike(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object)">
            <summary>
            字段like
            </summary>
            <param name="expr"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.FlterGt(System.String,System.Object)">
            <summary>
            字段大于
            </summary>
            <param name="col"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.FlterGt(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object)">
            <summary>
            字段大于
            </summary>
            <param name="expr"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.FlterGtEq(System.String,System.Object)">
            <summary>
            字段大于等于
            </summary>
            <param name="col"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.FlterGtEq(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object)">
            <summary>
            字段大于等于
            </summary>
            <param name="expr"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.FlterLt(System.String,System.Object)">
            <summary>
            字段小于
            </summary>
            <param name="col"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.FlterLt(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object)">
            <summary>
            字段小于
            </summary>
            <param name="expr"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.FlterLtEq(System.String,System.Object)">
            <summary>
            字段小于等于
            </summary>
            <param name="col"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.FlterLtEq(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object)">
            <summary>
            字段小于等于
            </summary>
            <param name="expr"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.FlterBetween(System.String,System.Object,System.Object)">
            <summary>
             字段在....区间 用于时间
            </summary>
            <param name="col"></param>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.FlterBetween(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object,System.Object)">
            <summary>
            字段在....区间 用于时间
            </summary>
            <param name="expr"></param>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
             <summary>
             where扩展查询,支持如下拉姆达方式
             <para>var handle = new ClientV4ExtendHelper&lt;Model&gt;();</para>
             <example>等于查询</example>
             <code>handle.Where(d=>d.id==123);</code>
             <example>不等于查询</example>
             <code>handle.Where(d=>d.sex!=1);</code>
             <example>like查询</example>
             <code>handle.Where(d=>d.name.Like("王"));</code>
             <example>in查询方式1</example>
             <code>var ar=new int[3]{1,2,3};</code>
             <code>handle.Where(d=>d.adduserid.In(ar));</code>
             <example>in查询方式2</example>
             <code>handle.Where(d=>d.adduserid.In("1,2,3"));</code>
             <example>not in查询方式1</example>
             <code>var ar=new int[3]{1,2,3};</code>
             <code>handle.Where(d=>d.adduserid.NotIn(ar));</code>
             <example>Not in查询方式2</example>
             <code>handle.Where(d=>d.adduserid.NotIn("1,2,3"));</code>
             <example>大于查询</example>
             <code>handle.Where(d=>d.age>18);</code>
             <example>大于等于查询</example>
             <code>handle.Where(d=>d.age=>18);</code>
             <example>小于查询</example>
             <code>handle.Where(d=>d.age&lt;25);</code>
             <example>小于等于查询</example>
             <code>handle.Where(d=>d.age&lt;=25);</code>
             </summary>
             <param name="expr"></param>
             <returns></returns>
            <exception cref="!:除了上面的写法,表达式里面无法嵌入更多表达式,都会导致异常或者无法查询数据."></exception>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.RemoveFilter(System.String)">
            <summary>
            移除某个条件
            </summary>
            <param name="FilterName"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.RemoveFilter(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
             <summary>
            移除某个条件 
             </summary>
             <param name="expr"></param>
             <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.RemoveAllFilter">
            <summary>
            清空查询条件
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.RemoveOrder(System.String)">
            <summary>
            移除某个排序
            </summary>
            <param name="OrderName"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.RemoveOrder(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            移除某个排序
            </summary>
            <param name="expr"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.RemoveAllOrder">
            <summary>
            清空排序
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.GetDescription(MangoMis.Frame.MangoApi.TypeDescription,System.String)">
            <summary>
            获取字段描述,用于生成操作日志,内部使用
            </summary>
            <param name="doc"></param>
            <param name="filed">字段名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.GetFlters">
            <summary>
            想调试一下自己都添加了什么条件,可调用当前方法 返回where后面的条件
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV4ExtendHelper`1.DeepCloneObject``1(``0)">
            <summary>
            深度拷贝.用于在更新的时候 传历史对象,记录操作日志用
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionInfo">
            <summary>
            连接接口的信息
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionInfo.Info">
            <summary>
            当前内部配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionInfo.#ctor(MangoMis.Frame.Helper.ApiClient.ApiClientConnectionSerializableInfo)">
            <summary>
            
            </summary>
            <param name="info"></param>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionInfo.Url">
            <summary>
            当前接口地址
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionInfo.BuildUrl">
            <summary>
            得到服务地址
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionInfo.UsePassKey">
            <summary>
            firstKey,thirdKey
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionInfo.ConnKey">
            <summary>
            new,old,......
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionInfo.ServerDomain">
            <summary>
            http://apicache248.517.cn:51707(包含Http)(结尾无/)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionInfo.UseServiceVersion">
             <summary>
            默认为  v2.0
             </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionInfo.ServiceSuffix">
             <summary>
            默认为  .svc
             </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionInfo.ModulePrefix">
            <summary>
            Pub
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionInfo.ServiceUrlPath">
            <summary>
            默认为 NetService
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionInfo.EntityUrlName">
            <summary>
            Pub_DicExtendTypeService(默认为entity.GetType().Name+"Service")
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionInfo.PassKey">
            <summary>
            使用的密钥
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionSerializableInfo">
            <summary>
            连接接口的信息(不用于调用.只用于初始化本地连接参数)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionSerializableInfo.Clone">
            <summary>
            复制
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionSerializableInfo.Key">
            <summary>
            索引
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionSerializableInfo.UsePassKey">
            <summary>
            firstKey,thirdKey
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionSerializableInfo.ConnKey">
            <summary>
            new,old,......
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionSerializableInfo.ServerDomain">
            <summary>
            http://apicache248.517.cn:51707(包含Http)(结尾无/)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionSerializableInfo.UseServiceVersion">
             <summary>
            默认为  v2.0
             </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionSerializableInfo.ServiceSuffix">
             <summary>
            默认为  .svc
             </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionSerializableInfo.ModulePrefix">
            <summary>
            Pub
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionSerializableInfo.ServiceUrlPath">
            <summary>
            默认为 NetService
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionSerializableInfo.EntityUrlName">
            <summary>
            Pub_DicExtendTypeService(默认为entity.GetType().Name+"Service")
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ApiClientConnectionSerializableInfo.IsModule">
            <summary>
            是否是模块
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClient.ClientConnectionStore">
            <summary>
            简易WCF连接的仓储管理
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ClientConnectionStore.StoreName">
            <summary>
            当前仓储名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ClientConnectionStore.DefaultConnectionInfo">
            <summary>
            默认连接参数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientConnectionStore.LoadFromLocal">
            <summary>
            20190222因为CCV1禁用基础数据源,所以临时使用webconfig
            </summary>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ClientConnectionStore.DefaultConfigKey">
            <summary>
            默认配置的键
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ClientConnectionStore.DefaultClientConnectionSerializableInfoConfig">
            <summary>
            当前的默认配置
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ClientConnectionStore.ModuleClientInfos">
            <summary>
            当前模块对应的默认连接配置(Model)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ClientConnectionStore.TypeClientInfos">
            <summary>
            当前类型对应的默认连接配置(实体)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientConnectionStore.GetCurrentConnectionTypeList">
            <summary>
            取得当前已经存在的连接字符串的主体Model类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientConnectionStore.GetConnectionConfig(System.Type)">
            <summary>
            取得当前的连接参数
            </summary>
            <param name="entityType">Service实体</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClient.ClientV3`1">
            <summary>
            V3版本的客户端实例
            </summary>
            <typeparam name="TEntity">WCF实体类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.#ctor">
            <summary>
            初始化一个V3版本客户端
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.ConnKey(System.String)">
            <summary>
            设置ConnKey(默认为配置中的ConnKey)
            </summary>
            <param name="setConnKey"></param>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ClientV3`1._connKey">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.PageName(System.String)">
            <summary>
            设置PageName(如果页面或者Handler继承于IFrameHandler则默认为PageName属性)
            </summary>
            <param name="setPageName"></param>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ClientV3`1._pageName">
            <summary>
            页面名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.SiteName(System.String)">
            <summary>
            设置站点名(默认为Configs.SiteName)
            </summary>
            <param name="setSiteName"></param>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ClientV3`1._siteName">
            <summary>
            站点名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.PassKey(System.String)">
            <summary>
            设置密钥字符串(默认为配置中UsePassKey)
            </summary>
            <param name="setPassKey"></param>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ClientV3`1._passKey">
            <summary>
            密钥字符串
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.CityId(System.Int32)">
            <summary>
            设置所在城市(默认为PersonalFrame.CityId)
            </summary>
            <param name="setCityId"></param>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ClientV3`1._cityId">
            <summary>
            密钥字符串
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.NoDebug">
            <summary>
            设置为不取得Service的Debug(默认取得)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ClientV3`1._isNoDebug">
            <summary>
            是否没有Debug
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.TableName(System.String)">
            <summary>
            要查询的表名(用于同样结构的多张表)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ClientV3`1._tableName">
            <summary>
            要查询的表名(用于同样结构的多张表)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ClientV3`1._clientDecrypt">
            <summary>
            当前解密程序
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ClientV3`1.ClientDecrypt">
            <summary>
            当前解密程序
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ClientV3`1._entityType">
            <summary>
            当前实体类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ClientV3`1._connectionConfig">
            <summary>
            连接配置 
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ClientV3`1._apiClientParam">
            <summary>
            当前实例的参数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.GetList(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.GetList(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="skipNumber">需要跳过几条记录</param>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.GetList(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            按条件取得所有列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <param name="filters">条件</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.GetTotalByPageSize``1(System.String,System.Func{System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},TT.Common.Frame.Model.DefaultResult{System.Collections.Generic.List{``0}}},System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="gettter">取数据函数</param>
            <param name="filters">条件</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <param name="action">函数名称</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.GetTotalIdByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            分页取得条件下的所有数据,默认每页200条
            </summary>
            <param name="filters">条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.GetTotalIdByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.GetTotalListByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            分页取得条件下的所有数据,默认每页200条
            </summary>
            <param name="filters">条件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.GetTotalListByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.GetTotalColumnByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String})">
            <summary>
            分页取得条件下的所有数据,默认每页200条
            </summary>
            <param name="filters">条件</param>
            <param name="columns">需要查询的字段列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.GetTotalColumnByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="columns">需要查询的字段列表</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.Delete(`0)">
            <summary>
            删除一条记录
            </summary>
            <param name="entity">删除的实体(必须实例化主键)</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.DeleteByFilter(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            通过条件删除列表
            </summary>
            <param name="filters">条件</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.Add(`0)">
            <summary>
            新增条目
            </summary>
            <param name="entity">提交更新的实体</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.AddList(System.Collections.Generic.List{`0})">
            <summary>
            添加列表项目
            </summary>
            <param name="entitys">The entitys.</param>
            <returns>DefaultResult{System.Int32}.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-17-2013
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.GetStatistics(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得可分页的统计数据
            </summary>
            <param name="page">页数</param>
            <param name="size">每页条目数</param>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="orders">The orders.</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.GetCount(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得符合条件的记录总数
            </summary>
            <param name="filters">条件</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.GetStatistics(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得当前条件下的统计数据
            </summary>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.GetIds(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得ID列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.UpdateByFilter(`0,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            通过条件更新列表
            </summary>
            <param name="entity">更新的实体</param>
            <param name="filters">条件</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.UpdateList(System.Collections.Generic.List{`0})">
            <summary>
            更新条目
            </summary>
            <param name="entitys">提交更新的实体</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.Update(`0)">
            <summary>
            更新条目
            </summary>
            <param name="entity">提交更新的实体</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.GetModelByIds(System.Collections.Generic.List{System.Int32})">
            <summary>
            通过ID列表取得实体列表
            </summary>
            <param name="ids">The id.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.GetModel(System.Int32)">
            <summary>
            取得一个对象的实体
            </summary>
            <param name="id">The id.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.GetValues(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得版本列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">The columns.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.GetColumnsNoCount(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得版本列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">The columns.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.Wrapper``1(System.Func{ISecondBase.ISecondBaseInterface{`0},TT.Common.Frame.Model.DefaultResult{``0}},System.Action{TT.Common.Frame.Model.DefaultResult{``0},MangoMis.Frame.Helper.ApiClient.ServiceSecretPassKey})">
            <summary>
            包装Service函数.用于统一调用
            </summary>
            <typeparam name="TReturn">返回值类型</typeparam>
            <param name="serviceVistorFunc">从Service取数据的函数</param>
            <param name="decrypt">用于解密的函数(因为List/Int/IntLit解密方式不一样)</param>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ClientV3`1.ServiceVistor">
            <summary>
            Servcie访问器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3`1.RebuildVistor">
            <summary>
            重建客户端(用于把Client缓存了的情况)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ClientV3`1.OtherString">
            <summary>
            当前实例的OtherString
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClient.ClientFactory">
            <summary>
            创建WCF服务
            </summary>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/14
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ClientFactory.MaxMessage">
            <summary>
            最大消息大小设置
            </summary>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/16
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientFactory.CreateClientV3``1(System.String)">
            <summary>
            创建V3版本的Client
            </summary>
            <typeparam name="T">WcfService接口类型</typeparam>
            <param name="url">WcfService网址</param>
            <returns>返回接口类型<see cref="M:MangoMis.Frame.Helper.ApiClient.ClientFactory.CreateClientV3``1(System.String)"/></returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/16
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientFactory.CreateClient``1(System.String)">
            <summary>
            创建V3版本的Client
            </summary>
            <typeparam name="T">WcfService接口类型</typeparam>
            <param name="url">WcfService网址</param>
            CreateUser:Mr.Zxf
            CreateDate:2012/8/16
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientFactory.CreateServiceRefBinding``1(System.String,System.String)">
            <summary>
            根据协议创建WCFService
            </summary>
            <typeparam name="T">WcfService接口类型</typeparam>
            <param name="url">WcfService网址</param>
            <param name="binding">传输协议</param>
            <returns>返回接口类型<see cref="M:MangoMis.Frame.Helper.ApiClient.ClientFactory.CreateServiceRefBinding``1(System.String,System.String)"/></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientFactory.CreatePortalService``1(System.String)">
            <summary>
            创建网临通WCFService
            </summary>
            <typeparam name="T">WcfService接口类型</typeparam>
            <param name="url">WcfService网址</param>
            <returns>返回接口类型<see cref="M:MangoMis.Frame.Helper.ApiClient.ClientFactory.CreatePortalService``1(System.String)"/></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientFactory.CreateBinding(System.String)">
            <summary>
            创建传输协议
            </summary>
            <param name="binding">传输协议名称</param>
            <returns>返回传输协议<see cref="T:System.ServiceModel.Channels.Binding"/></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClient.ClientV3TextExtend">
            <summary>
            三版Wcf客户端的扩展(主要用于存储静态消息内容)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3TextExtend.GetServiceActionTitle(System.Type,System.String)">
            <summary>
            取得服务运行时的标题
            </summary>
            <param name="entityType">实体类型</param>
            <param name="action">调用函数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3TextExtend.GetErrorMessageOfGetListByIdButEmptyIds(System.Type)">
            <summary>
            取得按主键取得列表的错误信息
            </summary>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3TextExtend.GetMessageOfTotalList(System.Type,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <param name="pageSize"></param>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3TextExtend.GetMessageOfTotalListIndex(System.Int32)">
            <summary>
            
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3TextExtend.GetMessageOfOtherStringHaveTable(System.Type,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            取得OtherString的内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3TextExtend.GetMessageOfOtherString(System.Type,System.String,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            取得OtherString的内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3TextExtend.GetMessageOfTotalListIndexError(System.Int32)">
            <summary>
            
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ClientV3TextExtend.GetMessageOfPassKeyError(MangoMis.Frame.Helper.ApiClient.ServiceSecretPassKey)">
            <summary>
            
            </summary>
            <param name="passKey"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1">
            <summary>
            数据客户端的基类
            </summary>
            <typeparam name="TEntity">返回实体类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.MangoMis#Frame#Helper#ApiClient#IDataApiClient#GetList(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.GetList(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.MangoMis#Frame#Helper#ApiClient#IDataApiClient#GetList(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="skipNumber">需要跳过几条记录</param>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.GetList(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="skipNumber">需要跳过几条记录</param>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.MangoMis#Frame#Helper#ApiClient#IDataApiClient#GetList(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            按条件取得所有列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <param name="filters">条件</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.GetList(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            按条件取得所有列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <param name="filters">条件</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.MangoMis#Frame#Helper#ApiClient#IDataApiClient#GetTotalListByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.GetTotalListByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.MangoMis#Frame#Helper#ApiClient#IDataApiClient#GetTotalColumnByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="columns">需要查询的字段列表</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.GetTotalColumnByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="columns">需要查询的字段列表</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.Delete``1(``0)">
            <summary>
            删除一条记录
            </summary>
            <param name="entity">删除的实体(必须实例化主键)</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.Delete(`0)">
            <summary>
            删除一条记录
            </summary>
            <param name="entity">删除的实体(必须实例化主键)</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.Add``1(``0)">
            <summary>
            新增条目
            </summary>
            <param name="entity">提交更新的实体</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.Add(`0)">
            <summary>
            新增条目
            </summary>
            <param name="entity">提交更新的实体</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.AddList(System.Collections.IList)">
            <summary>
            添加列表项目
            </summary>
            <param name="entitys">The entitys.</param>
            <returns>DefaultResult{System.Int32}.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-17-2013
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.AddList(System.Collections.Generic.List{`0})">
            <summary>
            添加列表项目
            </summary>
            <param name="entitys">The entitys.</param>
            <returns>DefaultResult{System.Int32}.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-17-2013
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.MangoMis#Frame#Helper#ApiClient#IDataApiClient#GetStatistics(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得可分页的统计数据
            </summary>
            <param name="page">页数</param>
            <param name="size">每页条目数</param>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="orders">The orders.</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.GetStatistics(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得可分页的统计数据
            </summary>
            <param name="page">页数</param>
            <param name="size">每页条目数</param>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="orders">The orders.</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.MangoMis#Frame#Helper#ApiClient#IDataApiClient#GetStatistics(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得当前条件下的统计数据
            </summary>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.GetStatistics(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得当前条件下的统计数据
            </summary>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.UpdateByFilter``1(``0,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            通过条件更新列表
            </summary>
            <param name="entity">更新的实体</param>
            <param name="filters">条件</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.UpdateByFilter(`0,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            通过条件更新列表
            </summary>
            <param name="entity">更新的实体</param>
            <param name="filters">条件</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.UpdateList(System.Collections.IList)">
            <summary>
            更新条目
            </summary>
            <param name="entitys">提交更新的实体</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.UpdateList(System.Collections.Generic.List{`0})">
            <summary>
            更新条目
            </summary>
            <param name="entitys">提交更新的实体</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.Update``1(``0)">
            <summary>
            更新条目
            </summary>
            <param name="entity">提交更新的实体</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.Update(`0)">
            <summary>
            更新条目
            </summary>
            <param name="entity">提交更新的实体</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.MangoMis#Frame#Helper#ApiClient#IDataApiClient#GetModelByIds(System.Collections.Generic.List{System.Int32})">
            <summary>
            通过ID列表取得实体列表
            </summary>
            <param name="ids">The id.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.GetModelByIds(System.Collections.Generic.List{System.Int32})">
            <summary>
            通过ID列表取得实体列表
            </summary>
            <param name="ids">The id.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.GetModel``1(System.Int32)">
            <summary>
            取得一个对象的实体
            </summary>
            <param name="id">The id.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.GetModel(System.Int32)">
            <summary>
            取得一个对象的实体
            </summary>
            <param name="id">The id.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.MangoMis#Frame#Helper#ApiClient#IDataApiClient#GetValues(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得版本列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">The columns.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.GetColumnsNoCount(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得字段内容(不返回总数)
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">The columns.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.MangoMis#Frame#Helper#ApiClient#IDataApiClient#GetColumnsNoCount(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得字段内容(不返回总数)
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">The columns.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.GetValues(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得版本列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">The columns.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.GetTotalIdByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.DeleteByFilter(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            通过条件删除列表
            </summary>
            <param name="filters">条件</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.GetCount(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得符合条件的记录总数
            </summary>
            <param name="filters">条件</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.DataApiClientBase`1.GetIds(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得ID列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClient.IDataApiClient`1">
            <summary>
            数据接口客户端的接口
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient`1.GetList(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient`1.GetList(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="skipNumber">需要跳过几条记录</param>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient`1.GetList(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            按条件取得所有列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <param name="filters">条件</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient`1.GetTotalListByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient`1.GetTotalColumnByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="columns">需要查询的字段列表</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient`1.Delete(`0)">
            <summary>
            删除一条记录
            </summary>
            <param name="entity">删除的实体(必须实例化主键)</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient`1.Add(`0)">
            <summary>
            新增条目
            </summary>
            <param name="entity">提交更新的实体</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient`1.AddList(System.Collections.Generic.List{`0})">
            <summary>
            添加列表项目
            </summary>
            <param name="entitys">The entitys.</param>
            <returns>DefaultResult{System.Int32}.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-17-2013
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient`1.GetStatistics(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得可分页的统计数据
            </summary>
            <param name="page">页数</param>
            <param name="size">每页条目数</param>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="orders">The orders.</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient`1.GetStatistics(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得当前条件下的统计数据
            </summary>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient`1.UpdateByFilter(`0,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            通过条件更新列表
            </summary>
            <param name="entity">更新的实体</param>
            <param name="filters">条件</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient`1.UpdateList(System.Collections.Generic.List{`0})">
            <summary>
            更新条目
            </summary>
            <param name="entitys">提交更新的实体</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient`1.Update(`0)">
            <summary>
            更新条目
            </summary>
            <param name="entity">提交更新的实体</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient`1.GetModelByIds(System.Collections.Generic.List{System.Int32})">
            <summary>
            通过ID列表取得实体列表
            </summary>
            <param name="ids">The id.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient`1.GetModel(System.Int32)">
            <summary>
            取得一个对象的实体
            </summary>
            <param name="id">The id.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient`1.GetValues(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得版本列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">The columns.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient`1.GetColumnsNoCount(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得字段内容(不返回总数)
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">The columns.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClient.IDataApiClient">
            <summary>
            数据接口客户端的接口
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient.GetList(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient.GetList(System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            <param name="skipNumber">需要跳过几条记录</param>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient.GetList(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            按条件取得所有列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <param name="filters">条件</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient.GetTotalIdByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient.GetTotalListByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient.GetTotalColumnByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="columns">需要查询的字段列表</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient.Delete``1(``0)">
            <summary>
            删除一条记录
            </summary>
            <param name="entity">删除的实体(必须实例化主键)</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient.DeleteByFilter(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            通过条件删除列表
            </summary>
            <param name="filters">条件</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient.Add``1(``0)">
            <summary>
            新增条目
            </summary>
            <param name="entity">提交更新的实体</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient.AddList(System.Collections.IList)">
            <summary>
            添加列表项目
            </summary>
            <param name="entitys">The entitys.</param>
            <returns>DefaultResult{System.Int32}.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-17-2013
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient.GetStatistics(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得可分页的统计数据
            </summary>
            <param name="page">页数</param>
            <param name="size">每页条目数</param>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="orders">The orders.</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient.GetCount(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得符合条件的记录总数
            </summary>
            <param name="filters">条件</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient.GetStatistics(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得当前条件下的统计数据
            </summary>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient.GetIds(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得ID列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient.UpdateByFilter``1(``0,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            通过条件更新列表
            </summary>
            <param name="entity">更新的实体</param>
            <param name="filters">条件</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient.UpdateList(System.Collections.IList)">
            <summary>
            更新条目
            </summary>
            <param name="entitys">提交更新的实体</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient.Update``1(``0)">
            <summary>
            更新条目
            </summary>
            <param name="entity">提交更新的实体</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient.GetModelByIds(System.Collections.Generic.List{System.Int32})">
            <summary>
            通过ID列表取得实体列表
            </summary>
            <param name="ids">The id.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient.GetModel``1(System.Int32)">
            <summary>
            取得一个对象的实体
            </summary>
            <param name="id">The id.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient.GetValues(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得版本列表
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">The columns.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.IDataApiClient.GetColumnsNoCount(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得字段内容(不返回总数)
            </summary>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">The columns.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClient.ApiClientParam`1">
            <summary>
            Api客户端的调用参数
            </summary>
            <typeparam name="T">参数类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ApiClientParam`1.GetInfo(System.Text.StringBuilder,System.String)">
            <summary>
            取得参数的信息内容
            </summary>
            <param name="builder"></param>
            <param name="paramName"></param>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClient.ApiClientParamCollection`1">
            <summary>
            用于调用WCF的参数集合(一般用于保存Service参数或者Build调用网址)
            </summary>
            <typeparam name="TEntity">WCF实体类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ApiClientParamCollection`1.Reset">
            <summary>
            重置所有参数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ApiClientParamCollection`1.GetUrl(System.String,System.String)">
            <summary>
            取得本次调用地址
            </summary>
            <param name="url">Api地址(eg.http://apicache200.517.dev:51707/User/v2.0/NetService/User_listService.svc)</param>
            <param name="otherString">调用Api时的otherstring</param>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ApiClientParamCollection`1.ParamPage">
            <summary>
            参数[Page]的值(未设置时为-1)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ApiClientParamCollection`1.Page(System.Int32)">
            <summary>
            设置参数[Page]的值
            </summary>
            <param name="paramValue"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ApiClientParamCollection`1.IdList(System.Collections.Generic.List{System.Int32})">
            <summary>
            设置参数[IdList]的值
            </summary>
            <param name="paramValue"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ApiClientParamCollection`1.SkipNumber(System.Int32)">
            <summary>
            设置参数[skipNumber]的值
            </summary>
            <param name="skipNumber">跳过几条记录</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ApiClientParamCollection`1.Id(System.Int32)">
            <summary>
            设置参数[Id]的值
            </summary>
            <param name="paramValue"></param>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ApiClientParamCollection`1.ParamSize">
            <summary>
            参数[Size]的值(未设置时为-1)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ApiClientParamCollection`1.Size(System.Int32)">
            <summary>
            设置参数[Size]的值
            </summary>
            <param name="paramValue"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ApiClientParamCollection`1.Filters(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            设置参数[Filters]的值
            </summary>
            <param name="paramValue"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ApiClientParamCollection`1.Orders(System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            设置参数[Orders]的值
            </summary>
            <param name="paramValue"></param>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ApiClientParamCollection`1.ParamColumns">
            <summary>
            参数[Columns]的值(未设置时为null)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ApiClientParamCollection`1.Columns(System.Collections.Generic.List{System.String})">
            <summary>
            设置参数[Columns]的值
            </summary>
            <param name="paramValue"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ApiClientParamCollection`1.Groups(System.Collections.Generic.List{System.String})">
            <summary>
            设置参数[Groups]的值
            </summary>
            <param name="paramValue"></param>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ApiClientParamCollection`1.ParamAction">
            <summary>
            参数[Action]的值(未设置时为null)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ApiClientParamCollection`1.Action(System.String)">
            <summary>
            设置参数[Action]的值
            </summary>
            <param name="paramValue"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ApiClientParamCollection`1.Entity(`0)">
            <summary>
            设置参数[Entity]的值
            </summary>
            <param name="paramValue"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ApiClientParamCollection`1.EntityList(System.Collections.Generic.List{`0})">
            <summary>
            设置参数[EntityList]的值
            </summary>
            <param name="paramValue"></param>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClient.ServiceSecret">
            <summary>
            服务密钥
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ServiceSecret.#ctor(System.String,System.String,MangoMis.Frame.Helper.Decrypt.ServiceDecryptType)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="iv"></param>
            <param name="type"></param>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ServiceSecret.Key">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ServiceSecret.Iv">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ApiClient.ServiceSecret.Type">
            <summary>
            密钥类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ServiceSecret.SecretItems">
            <summary>
            密钥
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ApiClient.ServiceSecret.GetSecret(MangoMis.Frame.Helper.ApiClient.ServiceSecretPassKey)">
            <summary>
            取得密钥
            </summary>
            <param name="passKey">密钥类型</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.ApiClient.ServiceSecretPassKey">
            <summary>
            解析的密钥
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ServiceSecretPassKey.FirstKey">
            <summary>
            FirstKey
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ServiceSecretPassKey.SecondKey">
            <summary>
            SecondKey
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ApiClient.ServiceSecretPassKey.ThirdKey">
            <summary>
            ThirdKey
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.Lambda.WhereExpand.WhereExpand">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.Lambda.WhereExpand.WhereExpand.Filters">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.WhereExpand.WhereExpand.ResolveExpression(System.Linq.Expressions.Expression)">
            <summary>
            
            </summary>
            <param name="expression"></param>
        </member>
        <member name="T:MangoMis.Frame.Helper.Lambda.WhereExpand.WhereHelperExpand">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.WhereExpand.WhereHelperExpand.In``1(System.Object,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            该方法只能用于针对wcf的filter的where扩展中的拉姆达使用,请勿在其他地方使用.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="s"></param>
            <param name="list">数组或集合</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.WhereExpand.WhereHelperExpand.In(System.Object,System.String)">
            <summary>
            该方法只能用于针对wcf的filter的where扩展中的拉姆达使用,请勿在其他地方使用.
            </summary>
            <param name="s"></param>
            <param name="args">用逗号分割的字符串</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.WhereExpand.WhereHelperExpand.NotIn``1(System.Object,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            该方法只能用于针对wcf的filter的where扩展中的拉姆达使用,请勿在其他地方使用.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="s"></param>
            <param name="list">数组或集合</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.WhereExpand.WhereHelperExpand.NotIn(System.Object,System.String)">
            <summary>
            该方法只能用于针对wcf的filter的where扩展中的拉姆达使用,请勿在其他地方使用.
            </summary>
            <param name="s"></param>
            <param name="args">用逗号分割的字符串</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.WhereExpand.WhereHelperExpand.Like(System.String,System.String)">
            <summary>
            该方法只能用于针对wcf的filter的where扩展中的拉姆达使用,请勿在其他地方使用.
            </summary>
            <param name="s"></param>
            <param name="likeContent"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.Lambda.DelegateInfo">
            <summary>
            动态函数代理的信息
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.Lambda.DelegateInfo.DelegateHandler">
            <summary>
            动态函数运行的实体
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.Lambda.DelegateInfo.VirtualCode">
            <summary>
            动态函数的虚拟代码
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.Lambda.HandlerItem`1">
            <summary>
            动态函数代理项目
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.HandlerItem`1.#ctor(`0,MangoMis.Frame.Helper.Lambda.LambdaHandlerCode)">
            <summary>
            初始化一个代理项目
            </summary>
            <param name="handler">动态函数</param>
            <param name="code">动态函数的代码</param>
        </member>
        <member name="P:MangoMis.Frame.Helper.Lambda.HandlerItem`1.Handler">
            <summary>
            动态函数运行的实体
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Lambda.HandlerItem`1.LambdaCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.Lambda.HandlerItem`1.TextCode">
            <summary>
            动态函数的虚拟代码
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.Lambda.HandlerItem`1.HtmlCode">
            <summary>
            返回HTML格式的Code
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.Lambda.IHandlerItem`1">
            <summary>
            委托项目接口
            </summary>
            <typeparam name="THandler">委托的类型</typeparam>
        </member>
        <member name="P:MangoMis.Frame.Helper.Lambda.IHandlerItem`1.Handler">
            <summary>
            委托真正运行的实例
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.Lambda.IHandlerItem">
            <summary>
            委托项目接口
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.Lambda.IHandlerItem.Handler">
            <summary>
            委托真正运行的实例
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.Lambda.IHandlerItem.TextCode">
            <summary>
            此实例生成的Lambda表达式代码
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.Lambda.IHandlerItem.HtmlCode">
            <summary>
            此实例生成的Lambda表达式代码的Html展现(使用<br/>替换\n)
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.Lambda.LambdaBuilder">
            <summary>
            创建Lambda的表达式
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaBuilder.BuildLambdaWhereHandler``1(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            创建一个筛选的委托
            </summary>
            <param name="filterList"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaBuilder.BuildLambdaOrderbyHandler``1(System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            创建一个排序的委托
            </summary>
            <param name="orderList"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaBuilder.BuildInvokeMethodWithoutGenericHandlerAndUseInputObject``1(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
            操作对应的函数
            </summary>
            <param name="methodInfo">运行函数</param>
            <param name="inputEntity">如果不是静态函数,那么是否会传入运行实例</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaBuilder.BuildInvokeMethodWithoutGenericHandler``1(System.Reflection.MethodInfo)">
            <summary>
            操作对应的函数
            </summary>
            <param name="methodInfo">运行函数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaBuilder.BuildFuncHandler``1(System.Reflection.MethodInfo,System.Boolean,System.Boolean)">
            <summary>
            取得对应的函数操作
            </summary>
            <param name="methodInfo">运行函数</param>
            <param name="isFunc">是否有返回值</param>
            <param name="isStatic">是否是静态</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaBuilder.BuildGetMemberValueHandler``2(System.Type,System.String)">
            <summary>
            创建一个取得属性值的委托函数
            </summary>
            <param name="entityType">实体类型</param>
            <param name="memberName">成员名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaBuilder.BuildMergeTwoEntityHandlerFromObject``1(System.Type)">
            <summary>
            合并两个实体的相同属性的委托函数
            </summary>
            <typeparam name="TInto">输出的类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaBuilder.BuildMergeTwoEntityHandler``2">
            <summary>
            合并两个实体的相同属性的委托函数
            </summary>
            <typeparam name="TFrom">做为数据源的类型</typeparam>
            <typeparam name="TInto">输出的类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaBuilder.BuildCreateEntityByXmlNodeHandler``1">
            <summary>
            通过字典设置实体属性的委托函数
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.Helper.Lambda.LambdaBuilder.StringDictionaryInsertMethod">
            <summary>
            字符串类型字典的插入值操作函数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaBuilder.BuildCreateDictionaryByEntityHandler(System.Type)">
            <summary>
            将一个实体解析成字符串类型的字典
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaBuilder.BuildCreateObjectEntityByDictionaryHandler``1(System.Type)">
            <summary>
            通过字典设置实体属性的委托函数
            </summary>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaBuilder.BuildCreateEntityByDictionaryHandler``2">
            <summary>
            通过字典设置实体属性的委托函数
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaBuilder.BuildCreateEntityByGetPropertyValueHandler``2">
            <summary>
            取得一个委托,此委托用于通过取得实体属性值的方式来实例化一个实体
            </summary>
            <typeparam name="T">需要委托创建的实体的类型</typeparam>
            <typeparam name="TPropertyValue">取得的属性值的类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaBuilder.BuildSetMemberValueHandler``2(System.Type,System.String)">
            <summary>
            创建一个取得属性值的委托函数
            </summary>
            <param name="entityType">实体类型</param>
            <param name="memberName">成员名</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.Lambda.LambdaCollection`2">
            <summary>
            指定委托类型的Lambda表达式集合
            </summary>
            <typeparam name="TKey">索引类型</typeparam>
            <typeparam name="THandler">委托类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaCollection`2.#ctor(System.Func{System.Object[],MangoMis.Frame.Helper.Lambda.IHandlerItem{`1}})">
            <summary>
            初化一个指定委托类型的表达式集合
            </summary>
            <param name="handlerCreator">用于创建委托的函数</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaCollection`2.GetHtmlCode(System.Type,`0)">
            <summary>
            取得Html的虚拟源码
            </summary>
            <param name="type">绑定的类型</param>
            <param name="key">索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaCollection`2.GetTextCode(System.Type,`0)">
            <summary>
            取得文本的虚拟源码
            </summary>
            <param name="type">绑定的类型</param>
            <param name="key">索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaCollection`2.TryGetHandler(System.Type,`0)">
            <summary>
            取得运行函数
            </summary>
            <param name="type">绑定的类型</param>
            <param name="key">索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaCollection`2.GetOrCreateHandler(System.Type,`0,System.Object[])">
            <summary>
            取得运行函数
            </summary>
            <param name="type">绑定的类型</param>
            <param name="key">索引</param>
            <param name="createArgs">用于创建委托的参数</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.Lambda.LambdaCollection`1">
            <summary>
            不指定委托类型的Lambda表达式集合,不指定委托类型用于已经明确知道返回值是泛型类型,而且不想返回Object,希望直接使用返回值类型返回,不希望再进行装箱拆箱操作
            </summary>
            <typeparam name="TKey">索引的类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaCollection`1.GetHtmlCode(System.Type,`0)">
            <summary>
            取得Html的虚拟源码
            </summary>
            <param name="type">绑定的类型</param>
            <param name="key">索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaCollection`1.GetTextCode(System.Type,`0)">
            <summary>
            取得文本的虚拟源码
            </summary>
            <param name="type">绑定的类型</param>
            <param name="key">索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaCollection`1.TryGetHandler``1(System.Type,`0)">
            <summary>
            取得运行函数
            </summary>
            <param name="type">绑定的类型</param>
            <param name="key">索引</param>
            <typeparam name="THandler">指定的委托类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaCollection`1.GetOrCreateHandler``1(System.Type,`0,System.Func{MangoMis.Frame.Helper.Lambda.IHandlerItem})">
            <summary>
            取得运行函数
            </summary>
            <param name="type">绑定的类型</param>
            <param name="key">索引</param>
            <param name="handlerCreator">委托不存在时,用于创建委托的函数</param>
            <typeparam name="THandler"></typeparam>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.Lambda.LambdaExecute">
            <summary>
            调用以动态生成Lambda表达式为函数的相关方法
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.PriGetMember(System.Type,System.Object,System.String)">
            <summary>
            取得成员值.这个函数最伤.如果可能尽量使用指定返回值类型(也就是属性类型)
            </summary>
            <param name="entityType">运行的类型</param>
            <param name="entity">实体</param>
            <param name="memberName">实体的成员名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.GetMember(System.Type,System.String)">
            <summary>
            取得得静态成员值.这个函数最伤.如果可能尽量使用指定返回值类型(也就是属性类型)
            </summary>
            <param name="atType">运行的类型</param>
            <param name="memberName">实体的成员名(成员必须是静态的)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.GetMember(System.Object,System.String)">
            <summary>
            取得成员值.这个函数最伤.如果可能尽量使用指定返回值类型(也就是属性类型)
            </summary>
            <param name="entity">实体</param>
            <param name="memberName">实体的成员名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.PriGetMember``1(System.Type,System.Object,System.String)">
            <summary>
            取得成员值.
            </summary>
            <param name="entityType">运行的类型</param>
            <param name="entity">实体</param>
            <param name="memberName">实体的成员名</param>
            <typeparam name="TProperty">要取得成员的数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.GetMember``1(System.Type,System.String)">
            <summary>
            取得得静态成员值.
            </summary>
            <param name="atType">运行的类型</param>
            <param name="memberName">实体的成员名(成员必须是静态的)</param>
            <typeparam name="TProperty">要取得成员的数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.GetMember``1(System.Object,System.String)">
            <summary>
            取得成员值.
            </summary>
            <param name="entity">实体</param>
            <param name="memberName">实体的成员名</param>
            <typeparam name="TProperty">要取得成员的数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.PriGetMember``1(``0,System.String)">
            <summary>
            取得成员值.
            </summary>
            <param name="entity">实体</param>
            <param name="memberName">实体的成员名</param>
            <typeparam name="TEntity">所在实体的数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.GetMember``1(System.String)">
            <summary>
            取得成员值.
            </summary>
            <param name="memberName">实体的成员名(成员必须是静态的)</param>
            <typeparam name="TEntity">实体的数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.GetMember``1(``0,System.String)">
            <summary>
            取得成员值.
            </summary>
            <param name="entity">实体</param>
            <param name="memberName">实体的成员名</param>
            <typeparam name="TEntity">实体的数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.PriGetMember``2(``0,System.String)">
            <summary>
            取得成员值.
            </summary>
            <param name="entity">实体</param>
            <param name="memberName">实体的成员名</param>
            <typeparam name="TProperty">要取得成员的数据类型</typeparam>
            <typeparam name="TEntity">实体的数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.GetMember``2(System.String)">
            <summary>
            取得成员值.
            </summary>
            <param name="memberName">实体的成员名(成员必须是静态的)</param>
            <typeparam name="TProperty">要取得成员的数据类型</typeparam>
            <typeparam name="TEntity">实体的数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.GetMember``2(``0,System.String)">
            <summary>
            取得成员值.
            </summary>
            <param name="entity">实体</param>
            <param name="memberName">实体的成员名</param>
            <typeparam name="TProperty">要取得成员的数据类型</typeparam>
            <typeparam name="TEntity">实体的数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.SetMember(System.Object,System.String,System.Object)">
            <summary>
            取得成员值.这个函数最伤.如果可能尽量使用指定返回值类型(也就是属性类型)
            </summary>
            <param name="entity">实体</param>
            <param name="memberName">实体的成员名</param>
            <param name="memberValue">设置的成员值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.SetMember``1(System.Object,System.String,``0)">
            <summary>
            取得成员值.
            </summary>
            <param name="entity">实体</param>
            <param name="memberName">实体的成员名</param>
            <param name="memberValue">设置的成员值</param>
            <typeparam name="TProperty">要取得成员的数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.ToStringDictionary(System.Object)">
            <summary>
            将一个实体解析成字符串类型的字典(因为重名关系改为使用ChangeToStringDictionary)
            </summary>
            <param name="entityObj">要解析的实体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.ChangeToStringDictionary(System.Object)">
            <summary>
            将一个实体解析成字符串类型的字典(因为重名关系制作)
            </summary>
            <param name="entityObj">要解析的实体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.Build``1(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            通过一个带属性名以及属性值的字典来初始化一个实体.
            </summary>
            <param name="propertyDictionary">属性的值的来源</param>
            <typeparam name="TEntity">实体的数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.Build(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type)">
            <summary>
            通过一个带属性名以及属性值的字典来初始化一个实体.
            </summary>
            <param name="propertyDictionary">属性的值的来源</param>
            <param name="outEntityType">输出的对象类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.Build(System.Collections.Generic.IDictionary{System.String,System.String},System.Type)">
            <summary>
            通过一个带属性名以及属性值的字典来初始化一个实体.
            </summary>
            <param name="propertyDictionary">属性的值的来源</param>
            <param name="outEntityType">输出的对象类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.Build``1(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            通过一个带属性名以及属性值的字典来初始化一个实体.
            </summary>
            <param name="propertyDictionary">属性的值的来源</param>
            <typeparam name="TEntity">实体的数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.Build``1(System.Func{System.String,System.Object})">
            <summary>
            通过一个带属性名以及属性值的字典来初始化一个实体.
            </summary>
            <param name="propertyValueGetter">属性的值的来源</param>
            <typeparam name="TEntity">实体的数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.Build``1(System.Xml.XmlNode,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            通过一个包含相关属性以及包含属性名映射的字典来初始化一个实体(需要传实体类型的泛型).
            </summary>
            <param name="xmlNode">属性的值的来源的XmlNode</param>
            <param name="propertyNameMapping">属性名的映射(Key是XmlNode中的属性名(大小写必须一致),Value是实体中的属性名.支持三种情况(1.大小写一致,2.全大写,3全小写))</param>
            <typeparam name="TEntity">实体的数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.Build``1(System.Xml.XmlNodeList,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            通过一个包含相关属性以及包含属性名映射的字典来初始化一个实体(需要传实体类型的泛型).
            </summary>
            <param name="xmlNodeList">属性的值的来源的XmlNode</param>
            <param name="propertyNameMapping">属性名的映射(Key是XmlNode中的属性名(大小写必须一致),Value是实体中的属性名.支持三种情况(1.大小写一致,2.全大写,3全小写))</param>
            <typeparam name="TEntity">实体的数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.ChangeTo``1(System.Object)">
            <summary>
            通过两个实体的相同的属性来赋值.
            </summary>
            <param name="fromEntity">数据来源实体</param>
            <typeparam name="TInfo">实体的数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.MergeTo``2(``0,``1)">
            <summary>
            通过两个实体的相同的属性来赋值.
            </summary>
            <param name="fromEntity">数据来源实体</param>
            <param name="intoEntity">返回的实体</param>
            <typeparam name="TInfo">实体的数据类型</typeparam>
            <typeparam name="TFrom"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.ChangeTo``2(``0)">
            <summary>
            通过两个实体的相同的属性来赋值.
            </summary>
            <param name="fromEntity">数据来源实体</param>
            <typeparam name="TInfo">实体的数据类型</typeparam>
            <typeparam name="TFrom"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.GetMethodInfo(System.Type,System.String,System.Type[],System.Type[])">
            <summary>
            取得某类中的函数
            </summary>
            <param name="methodAtType">函数所在类型</param>
            <param name="methodName">函数名</param>
            <param name="paramTypes">参数类型,没有就传NULL</param>
            <param name="genericTypes">泛型类型,没有就传NULL</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.GetMethodInfo``1(System.Type,System.String)">
            <summary>
            取得某类中的函数(带参数不带泛型)
            </summary>
            <param name="methodAtType">函数所在类型</param>
            <param name="methodName">函数名</param>
            <typeparam name="TParamAction">函数的参数以Action的方式体现(如果无参数则传Action,有参数则Action[,....])</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.GetMethodInfo``2(System.Type,System.String)">
            <summary>
            取得某类中的函数(带参数,带泛型)
            </summary>
            <param name="methodAtType">函数所在类型</param>
            <param name="methodName">函数名</param>
            <typeparam name="TParamAction">函数的参数以Action的方式体现(如果没有则传Action,有参数则Action[,....])</typeparam>
            <typeparam name="TGenericTypeAction">函数的泛型参数以Action的方式体现(如果没有则传Action,有参数则Action[,....])</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.GetMethodWithObjectArrayParamAndInputEntity(System.Reflection.MethodInfo)">
            <summary>
            [需要传入运行实例]取得函数对应的封装方法.会把函数封装成为使用Object[]作为参数的函数,内部有转换类型,一般用于参数数目不定,参数类型不定,但需要统一调用的情况
            </summary>
            <param name="methodInfo">调用的函数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.GetMethodWithObjectArrayParamAndInputEntityNoReturn(System.Reflection.MethodInfo)">
            <summary>
            [需要传入运行实例]取得函数对应的封装方法.会把函数封装成为使用Object[]作为参数的函数,内部有转换类型,一般用于参数数目不定,参数类型不定,但需要统一调用的情况
            </summary>
            <param name="methodInfo">调用的函数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.GetMethodWithObjectArrayParam(System.Reflection.MethodInfo)">
            <summary>
            [不需要传入运行实例,自动创建]取得函数对应的封装方法.会把函数封装成为使用Object[]作为参数的函数,内部有转换类型,一般用于参数数目不定,参数类型不定,但需要统一调用的情况
            </summary>
            <param name="methodInfo">调用的函数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.GetMethodWithObjectArrayParamNoReturn(System.Reflection.MethodInfo)">
            <summary>
            [不需要传入运行实例,自动创建]取得函数对应的封装方法.会把函数封装成为使用Object[]作为参数的函数,内部有转换类型,一般用于参数数目不定,参数类型不定,但需要统一调用的情况
            </summary>
            <param name="methodInfo">调用的函数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.InvokeMethodHaveReturn(System.Reflection.MethodInfo,System.Object[])">
            <summary>
            调用带返回值的封装方法(不需要函数所在主体,会自行创建)
            </summary>
            <param name="methodInfo">调用的函数</param>
            <param name="paramObjects">函数的参数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.InvokeMethodNoReturn(System.Reflection.MethodInfo,System.Object[])">
            <summary>
            调用不带返回值的封装方法(不需要函数所在主体,会自行创建)
            </summary>
            <param name="methodInfo">调用的函数</param>
            <param name="paramObjects">函数的参数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.InvokeMethodHaveReturn(System.Object,System.Reflection.MethodInfo,System.Object[])">
            <summary>
            执行一个带返回值的函数
            </summary>
            <param name="runObj">运行函数的实例</param>
            <param name="methodInfo">运行的函数</param>
            <param name="paramObjects">函数需要的参数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.InvokeMethodNoReturn(System.Object,System.Reflection.MethodInfo,System.Object[])">
            <summary>
            执行一个不带返回值的函数
            </summary>
            <param name="runObj">运行函数的实例</param>
            <param name="methodInfo">运行的函数</param>
            <param name="paramObjects">函数需要的参数</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.GetInvokeMethod``1(System.Reflection.MethodInfo,System.Boolean,System.Boolean)">
            <summary>
            取得对应的函数操作
            </summary>
            <param name="methodInfo">运行函数</param>
            <param name="isFunc">是否有返回值</param>
            <param name="isStatic">是否是静态</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.StaticNoReturn``1(System.Reflection.MethodInfo,``0)">
            <summary>
            运行一个参数的静态函数
            </summary>
            <param name="methodInfo">调用的函数</param>
            <param name="param1">第一个参数</param>
            <typeparam name="TParam1">第一个参数类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.StaticReturn``2(System.Reflection.MethodInfo,``0)">
            <summary>
            运行一个参数的静态函数
            </summary>
            <param name="methodInfo">调用的函数</param>
            <param name="param1">第一个参数</param>
            <typeparam name="TParam1">第一个参数类型</typeparam>
            <typeparam name="TReturn">返回值类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.StaticReturn``3(System.Reflection.MethodInfo,``0,``1)">
            <summary>
            运行两个参数的静态函数
            </summary>
            <param name="methodInfo">调用的函数</param>
            <param name="param1">第一个参数</param>
            <param name="param2">第二个参数</param>
            <typeparam name="TParam1">第一个参数类型</typeparam>
            <typeparam name="TReturn">返回值类型</typeparam>
            <typeparam name="TParam2">第二个参数类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.UnStaticNoReturn``2(System.Reflection.MethodInfo,``0,``1)">
            <summary>
            运行一个参数的静态函数
            </summary>
            <param name="methodInfo">调用的函数</param>
            <param name="body">运行对象</param>
            <param name="param1">第一个参数</param>
            <typeparam name="TParam1">第一个参数类型</typeparam>
            <typeparam name="TBody">运行对象类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.OrderList``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            列表排序
            </summary>
            <param name="entities"></param>
            <param name="orders"></param>
            <typeparam name="TEntity">实体的数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.WhereList``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            列表筛选
            </summary>
            <param name="entities"></param>
            <param name="filters"></param>
            <typeparam name="TEntity">实体的数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.CountList``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得列表的项目数量
            </summary>
            <param name="entities"></param>
            <param name="filters"></param>
            <typeparam name="TEntity">实体的数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.QueryList``1(System.Collections.Generic.List{``0},System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得筛选的列表的
            </summary>
            <param name="entities"></param>
            <param name="filters"></param>
            <typeparam name="TEntity">实体的数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.QueryList``1(System.Collections.Generic.List{``0},System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            分页取得筛选的列表
            </summary>
            <param name="entities">要筛选的列表</param>
            <param name="size">分页大小</param>
            <param name="filters">筛选器</param>
            <param name="page">查找页数</param>
            <param name="orders">排序</param>
            <typeparam name="TEntity">实体的数据类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaExecute.QuickSort``1(System.Collections.Generic.List{``0},System.Int32,System.Int32,System.Comparison{``0})">
            <summary>
            效率不怎么样.禁用
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="left"></param>
            <param name="right"></param>
            <param name="comparer"></param>
        </member>
        <member name="T:MangoMis.Frame.Helper.Lambda.CommonExpression">
            <summary>
            Lambda基础表达式
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.CommonExpression.GetMemberExpression(System.Linq.Expressions.Expression,System.Type,System.String)">
            <summary>
            获取属性或字段的表达式,用于替换Expression.PropertyOrField
            原因为是原函数无法获取静态字段
            </summary>
            <param name="entityExpression">实体表达式</param>
            <param name="entityType">实体类型(因为实体有可能传的是object,所以这里必须有实体类型)</param>
            <param name="memberName">要取得的内容名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.CommonExpression.SetValueExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression@)">
            <summary>
            给一个表达式变量赋值
            </summary>
            <param name="variableExpr">被赋值的变量表达式</param>
            <param name="valueExpr">值的表达式</param>
            <param name="currentVarExpression">在赋值过程中使用到的变量,如果未用到.则是Null</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.CommonExpression.NullableGenericType(System.Type)">
            <summary>
            返回NullAble的类型.如果不是Nullable返回NULL;
            </summary>
            <param name="checkType"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.CommonExpression.BuildLoopExpression(System.Linq.Expressions.Expression,System.Collections.Generic.List{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.List{System.Linq.Expressions.Expression},System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.List{System.Linq.Expressions.Expression}})">
            <summary>
            创建循环的函数
            </summary>
            <param name="loopEndCountExpression">循环次数的表达式</param>
            <param name="blockArgs">此区块的参数列表(为了自动向其中添加参数)</param>
            <param name="blockList">此区域的运行函数列表,为了自动向其中添加运行代码</param>
            <param name="loopChild">循环主体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.CommonExpression.DictionayTryGetValueExpression``2(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression,System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression},System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression@)">
            <summary>
            试图取得字典的值
            </summary>
            <typeparam name="TDictionay">字典类型</typeparam>
            <typeparam name="TKey">字典Key的类型</typeparam>
            <param name="dictionaryExpression">字典实例表达式</param>
            <param name="varValueName">字典值的变量名</param>
            <param name="dictionaryKeyExpr">字典Key(表达式)</param>
            <param name="trueOperateByValueFunc">成功取得值之后的事件</param>
            <param name="falseExpression">取值失败之后的表达式</param>
            <param name="valueExpr">值的表达式(返回是为了在Block中定义变量)</param>
            <returns>返回取值的表达式</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.CommonExpression.HandlerWrapper``1(System.Type,System.Collections.Generic.List{System.Type},System.Action{System.Linq.Expressions.Expression,System.Collections.Generic.List{System.Linq.Expressions.Expression},System.Collections.Generic.List{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.List{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget})">
            <summary>
            操作的通用包装.用于制作函数的参数以及返回值(可以无返回值)
            </summary>
            <param name="returnType">返回值</param>
            <param name="argTypes">函数传入参数的类型</param>
            <param name="delegateOperate">对实体属性的操作</param>
            <typeparam name="THandler">最终返回的函数类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.CommonExpression.PropertiesHanlderWrapper``1(System.Type,System.Collections.Generic.List{System.Type},System.Action{System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.List{System.Linq.Expressions.Expression},System.Collections.Generic.List{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.List{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.LabelTarget})">
            <summary>
            通过实体属性赋值操作的针对属性循环的通用包装.用于制作函数的参数以及返回值
            </summary>
            <param name="entityType">实体类型</param>
            <param name="argTypes">函数传入参数的类型</param>
            <param name="propertyOperate">对实体属性的操作</param>
            <typeparam name="THandler">最终返回的函数类型</typeparam>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.Lambda.LambdaHandlerCode">
            <summary>
            表达式的代码
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaHandlerCode.#ctor(System.Linq.Expressions.LambdaExpression)">
            <summary>
            
            </summary>
            <param name="lambdaExpression"></param>
        </member>
        <member name="P:MangoMis.Frame.Helper.Lambda.LambdaHandlerCode.CurrentExpression">
            <summary>
            代码
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.Lambda.LambdaHandlerCode.HtmlCode">
            <summary>
            Html格式代码
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.Lambda.LambdaHandlerCode.TextCode">
            <summary>
            文本格式代码
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.Lambda.LambdaProvider">
            <summary>
            表达式实体存在
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Lambda.LambdaProvider.GetObjectMember">
            <summary>
            取得成员值的处理
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Lambda.LambdaProvider.GetMember">
            <summary>
            取得成员值的处理(需要传入成员类型的泛型)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Lambda.LambdaProvider.GetTEntityMember">
            <summary>
            取得成员值的处理(需要传入成员类型及实体类型的泛型)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Lambda.LambdaProvider.SetObjectMember">
            <summary>
            设置成员值的处理
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Lambda.LambdaProvider.SetMember">
            <summary>
            设置成员值的处理(需要传入成员类型的泛型)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Lambda.LambdaProvider.CreateObjectEntityFromDictionary">
            <summary>
            通过一个带属性名以及属性值的字典来初始化一个实体的Object类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Lambda.LambdaProvider.CreateObjectEntityFromDictionaryString">
            <summary>
            通过一个带属性名以及属性值的字典来初始化一个实体的Object类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Lambda.LambdaProvider.CreateEntityFromDictionary">
            <summary>
            通过一个带属性名以及属性值的字典来初始化一个实体(需要传实体类型的泛型)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Lambda.LambdaProvider.CreateEntityFromDictionaryString">
            <summary>
            通过一个带属性名以及属性值的字典来初始化一个实体(需要传实体类型的泛型)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Lambda.LambdaProvider.CreateStringDictionaryFromEntity">
            <summary>
            将一个实体解析成字符串类型的字典
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Lambda.LambdaProvider.CreateEntityFromPropertyGetter">
            <summary>
            通过一个带属性名以及属性值的字典来初始化一个实体(需要传实体类型的泛型)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Lambda.LambdaProvider.MergeEntity">
            <summary>
            通过一个带属性名以及属性值的字典来初始化一个实体(需要传实体类型的泛型)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Lambda.LambdaProvider.CreateEntityFromXmlNode">
            <summary>
            通过一个包含相关属性以及包含属性名映射的字典来初始化一个实体(需要传实体类型的泛型)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Lambda.LambdaProvider.MethodHandler">
            <summary>
            运行函数的集合
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Lambda.LambdaProvider.MethodWithObjectParamHandler">
            <summary>
            运行函数的集合(使用Objct[]作为参数传递.内部会有转换类型)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Lambda.LambdaProvider.MethodWithObjectParamAndInputEntityHandler">
            <summary>
            [有传入运行实例]运行函数的集合(使用Objct[]作为参数传递.内部会有转换类型)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Lambda.LambdaProvider.MethodWithObjectParamNoReturnHandler">
            <summary>
            运行函数的集合(使用Objct[]作为参数传递.内部会有转换类型)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Lambda.LambdaProvider.FilterIndexCollection">
            <summary>
            条件索引集合
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaProvider.GetFilterIndex(System.Type,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得排序条件的索引
            </summary>
            <param name="entityType"></param>
            <param name="filters"></param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.Helper.Lambda.LambdaProvider.FilterHandler">
            <summary>
            列表排序
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.Lambda.LambdaProvider.GetOrderIndex(System.Type,System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得排序条件的索引
            </summary>
            <param name="entityType"></param>
            <param name="orders"></param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.Helper.Lambda.LambdaProvider.DisorderHandler">
            <summary>
            列表排序
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Lambda.LambdaProvider.CompareFuncHandler">
            <summary>
            列表排序
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Lambda.LambdaProvider.CheckFuncHandler">
            <summary>
            列表排序
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.AsyncDataGetter`1">
            <summary>
            异步延时的定时刷新数据工具(不调用的话一直不会刷新.只有调用之后才会进行刷新)
            </summary>
            <typeparam name="TDataType"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.Helper.AsyncDataGetter`1.#ctor(System.Func{`0},System.Int32)">
            <summary>
            实例化异步延时的定时刷新数据工具
            </summary>
            <param name="dataGetter">刷新数据,初始化数据的函数</param>
            <param name="timespanSeconds">刷新时间间隔(到时间并不会立刻刷新,而且会进行插入异步调用的队列,等待队列进行调用刷新)</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.AsyncDataGetter`1.BuildData">
            <summary>
            立即重新刷新数据
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.AsyncDataGetter`1.Data">
            <summary>
            当前的数据内容
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.CredentialsHelper">
            <summary>
            使用其它Win凭证进行访问
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.CredentialsHelper.CurrentDomain">
            <summary>
            当前的Domain
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.CredentialsHelper.Action(System.String,System.String,System.String,System.Action)">
            <summary>
            进行模拟账号并操作
            </summary>
            <param name="userName">模拟的账号</param>
             <param name="password">模拟账号的密码</param>
            <param name="domain">当前操作用户所在域</param>
            <param name="callbackAction">要使用模拟账号进行的操作</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.CredentialsHelper.Action(System.String,System.String,System.Action)">
            <summary>
            进行模拟账号并操作
            </summary>
            <param name="userName">模拟的账号</param>
             <param name="password">模拟账号的密码</param>
            <param name="callbackAction">要使用模拟账号进行的操作</param>
        </member>
        <member name="T:MangoMis.Frame.Helper.CurrentFrameInfoHelper">
            <summary>
            当前的页面信息
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.CurrentFrameInfoHelper.Current">
            <summary>
            用于调用静态方法时取得当前处理页面的控件集
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.CurrentFrameInfoHelper.AppendGetKey(System.String,System.String)">
            <summary>
            添加一个页面获取过的参数
            </summary>
            <param name="key">参数Key</param>
            <param name="getType">参数类型</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.CurrentFrameInfoHelper.AppendIfRole(System.Int32)">
            <summary>
            添加一个页面判断过的角色
            </summary>
            <param name="roleid">要添加的判断角色ID</param>
        </member>
        <member name="T:MangoMis.Frame.Helper.CurrentStaticStringHelper">
            <summary>
            本地代码中使用的静态字符等
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.CurrentStaticStringHelper.DevRedisPath">
            <summary>
            本地开发用的Redis路径
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.CurrentStaticStringHelper.DevRedisPort">
            <summary>
            本地开发用的Redis端口
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.Decrypt.DecryptHelper">
            <summary>
            加密解密帮助类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.Decrypt.DecryptHelper.#ctor(System.String,System.String)">
            <summary>
            初始一个解密类
            </summary>
            <param name="key">密钥</param>
            <param name="iv">IV</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.Decrypt.DecryptHelper.DesDecryptClientV3String(System.String)">
            <summary>
            解密3版字符串
            </summary>
            <param name="encryptedValue">需要解密的字符</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.Decrypt.ApiDataDecrypt`1">
            <summary>
            V3版本的WCF解密
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.Helper.Decrypt.ApiDataDecrypt`1.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.Decrypt.ApiDataDecrypt`1.#ctor(System.Boolean)">
            <summary>
            
            </summary>
            <param name="isNoPass">数据源是否未加密</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.Decrypt.ApiDataDecrypt`1.DecryptList(TT.Common.Frame.Model.DefaultResult{System.Collections.Generic.List{`0}},MangoMis.Frame.Helper.ApiClient.ServiceSecretPassKey)">
            <summary>
            解密List实体
            </summary>
            <param name="wcfRet">Wcf返回值</param>
            <param name="passKey">密钥</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Decrypt.ApiDataDecrypt`1.DecryptEntity(TT.Common.Frame.Model.DefaultResult{`0},MangoMis.Frame.Helper.ApiClient.ServiceSecretPassKey)">
            <summary>
            解密实体
            </summary>
            <param name="wcfRet">Wcf返回值</param>
            <param name="passKey">密钥</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Decrypt.ApiDataDecrypt`1.DecryptIntList(TT.Common.Frame.Model.DefaultResult{System.Collections.Generic.List{System.Int32}},MangoMis.Frame.Helper.ApiClient.ServiceSecretPassKey)">
            <summary>
            解密IntList
            </summary>
            <param name="wcfRet">Wcf返回值</param>
            <param name="passKey">密钥</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Decrypt.ApiDataDecrypt`1.DecryptInt(TT.Common.Frame.Model.DefaultResult{System.Int32},MangoMis.Frame.Helper.ApiClient.ServiceSecretPassKey)">
            <summary>
            解密Int
            </summary>
            <param name="wcfRet">Wcf返回值</param>
            <param name="passKey">密钥</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Decrypt.ApiDataDecrypt`1.DecryptStringList(TT.Common.Frame.Model.DefaultResult{System.Collections.Generic.List{System.Collections.Generic.List{System.String}}},MangoMis.Frame.Helper.ApiClient.ServiceSecretPassKey)">
            <summary>
            解密String列表
            </summary>
            <param name="wcfRet">Wcf返回值</param>
            <param name="passKey">密钥</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Decrypt.ApiDataDecrypt`1.Decrypt``1(TT.Common.Frame.Model.DefaultResult{``0})">
            <summary>
            解析V3不加密的XML
            </summary>
            <typeparam name="T"></typeparam>
            <param name="wcfRet"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.Decrypt.ApiDataDecrypt`1.Wrapper``1(TT.Common.Frame.Model.DefaultResult{``0},MangoMis.Frame.Helper.ApiClient.ServiceSecretPassKey,System.Func{System.Xml.XmlNode,System.Collections.Generic.Dictionary{System.String,System.String},``0})">
            <summary>
            外层调用函数.用于统一调用
            </summary>
            <typeparam name="TReturn">返回值类型</typeparam>
            <param name="wcfRet">Api的返回值</param>
            <param name="passKey">密钥类型</param>
            <param name="returnFunc">XmlReleaseObject解析后的数据</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.Decrypt.ApiDataDecrypt`1.XmlReleaseEntityList(System.Xml.XmlNode,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            解析实体
            </summary>
            <param name="parentNode">父级</param>
            <param name="mappingDictionary">字段映射</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Decrypt.ApiDataDecrypt`1.XmlReleaseEntity(System.Xml.XmlNode,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            解析实体列表
            </summary>
            <param name="parentNode">父级</param>
            <param name="mappingDictionary">字段映射</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.Decrypt.ApiDataDecrypt`1.XmlReleaseIntList(System.Xml.XmlNode)">
            <summary>
            解析值列表
            </summary>
            <param name="parentNode">父级</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.Decrypt.ApiDataDecrypt`1.XmlReleaseInt(System.Xml.XmlNode)">
            <summary>
            解析值
            </summary>
            <param name="parentNode">父级</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.Decrypt.ApiDataDecrypt`1.XmlReleaseStringList(System.Xml.XmlNode)">
            <summary>
            解析字段串列表列表
            </summary>
            <param name="parentNode">父级</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.Decrypt.ApiDataDecrypt`1.XmlReleaseObject(System.String)">
            <summary>
            把XML解析成需要的内容(是否解析成功,错误信息,数据节点的父级节点,字段名映射关系)
            </summary>
            <param name="xmlString"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.Decrypt.ServiceDecryptType">
            <summary>
            
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Decrypt.ServiceDecryptType.Object">
            <summary>
            实体的解析
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Decrypt.ServiceDecryptType.Json">
            <summary>
            Json解析
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Decrypt.ServiceDecryptType.Xml">
            <summary>
            Xml解析
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.FrameReflection.StackMethodInfo">
            <summary>
            代码运行的函数信息
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.FrameReflection.StackMethodInfo.ErrorText">
            <summary>
            取得时的错误信息
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.FrameReflection.StackMethodInfo.MethodName">
            <summary>
            函数名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.FrameReflection.StackMethodInfo.TypeName">
            <summary>
            所在类名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.FrameReflection.StackMethodInfo.AssemblyName">
            <summary>
            程序集名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.FrameReflection.StackMethodInfo.AssemblyVersion">
            <summary>
            程序集版本号
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.FrameReflection.StackMethodInfo.AssemblyTime">
            <summary>
            程序集生成时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.FrameReflection.StackMethodInfo.ParentStackMethodInfo">
            <summary>
            上级函数
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.FrameReflection.StackHelper">
            <summary>
            当前堆栈的一些帮助信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.FrameReflection.StackHelper.GetMethodRunInfo(System.Diagnostics.StackTrace,System.Int32,System.Int32)">
            <summary>
            取得运行函数信息
            </summary>
            <param name="st">堆栈信息</param>
            <param name="skipStep">跳过几步开始检索</param>
            <param name="takeStep">检索几步</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FrameReflection.StackHelper.GetMethodRunInfo(System.Int32)">
            <summary>
            取得几步之前的代码信息信息
            </summary>
            <param name="step">运行代码位于之前第几级</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FrameReflection.StackHelper.GetMethodRunInfo(System.Int32,System.Int32)">
            <summary>
            取得几步之前的代码信息信息
            </summary>
            <param name="step">运行代码位于之前第几级</param>
            <param name="takeNumber">取得几层代码</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FrameReflection.StackHelper.GetStackAddMethod(System.Int32)">
            <summary>
            取得当前堆栈的代码Debug内容
            </summary>
            <param name="skipStep">跳过几步(默认为0)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FrameReflection.StackHelper.BuildHtmlActionInfo(MangoMis.Frame.Helper.FrameReflection.StackMethodInfo,System.String@,System.String@)">
            <summary>
            建立函数信息的HTML信息
            </summary>
            <param name="methodInfo">函数信息</param>
            <param name="infoString">函数信息</param>
            <param name="assemblyNameTitle">程序集信息</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.FrameReflection.StackHelper.GetStackHtmlDebugString(System.String,System.Int32,System.Int32)">
            <summary>
            取得当前堆栈的代码Debug内容
            </summary>
            <param name="title">标题</param>
            <param name="skipStep">跳过几步(默认为0)</param>
            <param name="takeNumber">取得几层Debug(默认两层)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FrameReflection.StackHelper.GetStackHtmlDebugString(System.String,System.Int32)">
            <summary>
            取得当前堆栈的代码Debug内容
            </summary>
            <param name="title">标题</param>
            <param name="skipStep">跳过几步(默认为0)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FrameReflection.StackHelper.GetStackHtmlDebugString(System.String)">
            <summary>
            取得当前堆栈的代码Debug内容
            </summary>
            <param name="title">标题</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.Http.HttpContentType">
            <summary>
            文档类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Http.HttpContentType.Json">
            <summary>
            Json类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Http.HttpContentType.Form">
            <summary>
            Form提交
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.Http.HttpVistor">
            <summary>
            Http访问类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.Http.HttpVistor.#ctor(System.String)">
            <summary>
            实例化Http访问类
            </summary>
            <param name="url">访问地址</param>
        </member>
        <member name="P:MangoMis.Frame.Helper.Http.HttpVistor.Url">
            <summary>
            当前要提交的网址
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.Http.HttpVistor.SetTimeout(System.Int32)">
            <summary>
            请求超时时间 ,默认为50000毫秒
            </summary>
            <param name="timeout">以毫秒为单位</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Http.HttpVistor.RequestEncoding(System.Text.Encoding)">
            <summary>
            发送的Encoding默认是Utf-8
            </summary>
            <param name="sendEncoding"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Http.HttpVistor.ResponseEncoding(System.Text.Encoding)">
            <summary>
            接收的Encoding默认是Utf-8
            </summary>
            <param name="getEncoding"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Http.HttpVistor.SetAcceptEncoding(System.String)">
            <summary>
            Header的AcceptEncoding默认为DN.Zxf
            </summary>
            <param name="acceptEncoding"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Http.HttpVistor.SetContentType(MangoMis.Frame.Helper.Http.HttpContentType)">
            <summary>
            Header的ContentType默认为Form提交
            </summary>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Helper.Http.HttpVistor.Status">
            <summary>
            当前状态码.提交成功是200.未提交时为-1.提交后无Response为500
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.Http.HttpVistor.PostJson(System.String)">
            <summary>
            提交JSON
            </summary>
            <param name="jsonString">JsonString</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.ExcuteCodePosition">
            <summary>
            执行代码生成位置
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ExcuteCodePosition.File">
            <summary>
            生成成文件
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ExcuteCodePosition.NoFunctionExcute">
            <summary>
            在内存中运行(无调用函数,动态函数运行)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ExcuteCodePosition.MemoryExcute">
            <summary>
            生成在内存中运行(有调用函数)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ExcuteCodePosition.CurrentDomain">
            <summary>
            生成在当前运行的程序中
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.ExecuteMethodInfo">
            <summary>
            运行的函数信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExecuteMethodInfo.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="fullTypeName"></param>
            <param name="methodName"></param>
        </member>
        <member name="P:MangoMis.Frame.Helper.ExecuteMethodInfo.ExecuteFullType">
            <summary>
            运行函数所在的完整类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ExecuteMethodInfo.ExecuteMethodName">
            <summary>
            运行函数名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ExecuteMethodInfo.IsStaticMethod">
            <summary>
            运行函数是否是静态
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.ExecuteCSharpItem">
            <summary>
            运行项目
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ExecuteCSharpItem.Code">
            <summary>
            当前主键
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExecuteCSharpItem.#ctor">
            <summary>
            运行
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ExecuteCSharpItem.CodePosition">
            <summary>
            代码运行位置.默认为内存中
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ExecuteCSharpItem.UsingList">
            <summary>
            using的列表
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ExecuteCSharpItem.MethodCode">
            <summary>
            主体运行代码
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ExecuteCSharpItem.ExtendCode">
            <summary>
            扩展代码
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ExecuteCSharpItem.RefernceAssemblyList">
            <summary>
            引用Dll列表
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.ExecuteCSharpHelper">
            <summary>
            动态运行代码
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExecuteCSharpHelper.Append(System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String)">
            <summary>
            只添加不运行
            </summary>
            <param name="code">运行主键.唯一</param>
            <param name="methodCode">主运行函数</param>
            <param name="usingList">引用列表</param>
            <param name="extendCode">其它内部函数[需要有完整的如 public void 返回值等,必须是静态函数]</param>
            <param name="refernceAssemblyList">引入的DLL</param>
        </member>
        <member name="F:MangoMis.Frame.Helper.ExecuteCSharpHelper.CommonSystemRefernceList">
            <summary>
            通常引用的文件
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ExecuteCSharpHelper.CommonCurrentRefernceList">
            <summary>
            通常引用的文件
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ExecuteCSharpHelper.CommonUseList">
            <summary>
            通常Use的文件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExecuteCSharpHelper.CurrentUpdateExecuteItem(System.Boolean,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String)">
            <summary>
            更新函数[如果没有.会添加]
            </summary>
            <param name="isUpdate">是否更新</param>
            <param name="code">运行主键.唯一</param>
            <param name="methodCode">主运行函数</param>
            <param name="usingList">引用列表</param>
            <param name="extendCode">其它内部函数[需要有完整的如 public void 返回值等,必须是静态函数]</param>
            <param name="refernceAssemblyList">引入的DLL</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExecuteCSharpHelper.UpdateExecuteItem(System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String)">
            <summary>
            更新函数[如果没有.会添加]
            </summary>
            <param name="code">运行主键.唯一</param>
            <param name="methodCode">主运行函数</param>
            <param name="usingList">引用列表</param>
            <param name="extendCode">其它内部函数[需要有完整的如 public void 返回值等,必须是静态函数]</param>
            <param name="refernceAssemblyList">引入的DLL</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExecuteCSharpHelper.Contains(System.String)">
            <summary>
            当前函数是否存在 
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExecuteCSharpHelper.Execute(System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String)">
            <summary>
            运行Handler的函数[如果没有.会添加]
            </summary>
            <param name="code">运行主键.唯一</param>
            <param name="methodCode">主运行函数</param>
            <param name="usingList">引用列表</param>
            <param name="extendCode">其它内部函数[需要有完整的如 public void 返回值等,必须是静态函数]</param>
            <param name="refernceAssemblyList">引入的DLL</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExecuteCSharpHelper.BuildMethod(System.String,System.String,System.String,System.Collections.Generic.List{System.Type},System.String)">
            <summary>
            建立函数
            </summary>
            <param name="code">代码内容</param>
            <param name="paramString">相关参数字符串</param>
            <param name="resultType">返回值类型字符串</param>
            <param name="useList">引用类型列表</param>
            <param name="name">函数名</param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExecuteCSharpHelper.BuildExecuteMethod(System.String)">
            <summary>
            重建运行函数
            </summary>
            <param name="code"></param>
        </member>
        <member name="T:MangoMis.Frame.Helper.InterfaceInstanceHelper">
            <summary>
            动态实例化接口
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.InterfaceInstanceHelper.CreateInterfaceInstance``1(System.Collections.Generic.List{System.Type})">
            <summary>
            动态创建接口实现的实例(接口中包含属性以及事件的不支持会报错)
            </summary>
            <typeparam name="T">接口类型</typeparam>
            <param name="insteadOfRunTypes">接口函数对应的运行内容类型(必须继承接口,而且构造函数不能有参数)</param>
            <returns>返回一个新的实现的实例</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.InterfaceInstanceHelper.MakeMethods(System.Reflection.Emit.TypeBuilder,System.Type,System.Collections.Generic.List{System.Type})">
            <summary>
            动态根据替代类型构造接口的函数
            </summary>
            <param name="typeBuilder">当前实例的类型构造器</param>
            <param name="interfaceType">接口的类型</param>
            <param name="insteadOfRunTypes">用于替代的新的类</param>
        </member>
        <member name="T:MangoMis.Frame.Helper.AutoInterfaceHelper">
            <summary>
            需要加载程序集进行实现的Interface的帮助文件
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.AutoInterfaceHelper._errorTypeUsedTimes">
            <summary>
            初始化动态接口的错误次数
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.AutoInterfaceHelper._errorTypeUsedHasWaitTime">
            <summary>
            初始化动态接口的错误时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.AutoInterfaceHelper._errorTypeUsedWaitTimes">
            <summary>
            初始化动态接口错误后等待次数
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.AutoInterfaceHelper._errorTypeList">
            <summary>
            已经错误并不再进行初始化的接口
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.AutoInterfaceHelper.RemoveErrorType(System.String)">
            <summary>
            移除一个错误的接口,使其可以再次初始化
            </summary>
            <param name="errorTypeFullName">错误接口命名</param>
            <returns>true:已经移除,false:无对应接口</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.AutoInterfaceHelper.GetErrorTypeNames">
            <summary>
            获取当前所有不再初始化的错误接口的列表
            </summary>
            <returns>Type.FullName的List</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.AutoInterfaceHelper.Use``1">
            <summary>
            使用一个接口
            </summary>
            <typeparam name="T">接口类型</typeparam>
            <returns>接口实例</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.AutoInterfaceHelper.CheckIMangoApiPowerRealize``1">
            <summary>
            针对权限参数模块自动添加实现
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Helper.AutoInterfaceHelper.RealizeStore">
            <summary>
            添加的实现[RedisStore]
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.AutoInterfaceHelper.InterfaceUsedStore">
            <summary>
            接口在当前站点是否可用[本地StoreXML]
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.AutoInterfaceHelper.RealizeUsedStore">
            <summary>
            接口的实现在当前站点是否可用[本地StoreXML]
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.AutoInterfaceHelper.AutoInterfaces">
            <summary>
            当前系统中的可以加载程序集的接口
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.AutoInterfaceHelper.AutoInterfaceUseInstance">
            <summary>
            当前系统中使用的接口实例
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.AutoInterfaceHelper.InterfaceInstanceMapping">
            <summary>
            接口与实现的映射关系
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.AutoInterfaceHelper.AutoInterfaceInstanceTypes">
            <summary>
            接口实现的数据类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.AutoInterfaceHelper.ReloadAssembly(System.String)">
            <summary>
            重新加载实现的程序集
            </summary>
            <param name="assemblyKey">实现的程序集路径</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.AutoInterfaceHelper.ReloadAssemblyByFullClassName(System.String)">
            <summary>
            重新加载一个实现类
            </summary>
            <param name="classKey"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.AutoInterfaceHelper.UpdateInterfaceRealizeUsed(System.String,System.Int32)">
            <summary>
            添加一个接口的实现
            </summary>
            <param name="classKey">实现完整类型名</param>
            <param name="isUsed">是否使用.1使用,0默认,2不使用</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.AutoInterfaceHelper.UpdateInterfaceRealize(System.String,System.String,System.String,System.Int32)">
            <summary>
            添加一个接口的实现
            </summary>
            <param name="interfaceKey">接口完整类型名</param>
            <param name="assemblyKey">程序集路径</param>
            <param name="classKey">实现完整类型名</param>
            <param name="isUsed">是否使用.1使用,0默认,2不使用</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.AutoInterfaceHelper.UpdateRealizeUsed(System.String,System.Int32)">
            <summary>
            更新一个实现的使用情况
            </summary>
            <param name="classKey">实现的类型命名</param>
            <param name="isUsed">是否在使用(1使用)(默认为0,默认不使用)</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.AutoInterfaceHelper.UpdateInterfaceUsed(System.String,System.Int32)">
            <summary>
            更新一个接口的使用情况
            </summary>
            <param name="interfaceKey">接口的类型命名</param>
            <param name="isUsed">是否在使用(1使用)(默认为0,默认使用)</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.AutoInterfaceHelper.InitInterfaceInstance(System.String,System.String,System.String)">
            <summary>
            初始化添加一个接口的实现
            </summary>
            <param name="interfaceKey">接口完整类型名</param>
            <param name="assemblyKey">程序集</param>
            <param name="classKey">实现完整类型名</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.JavascriptPacker">
            <summary>
            Javascript打包混淆(网上的代码.非自己写的)
            Packs a javascript file into a smaller area, removing unnecessary characters from the output.
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.JavascriptPacker.PackerEncoding">
            <summary>
            Javascript打包混淆
            The encoding level to use. See http://dean.edwards.name/packer/usage/ for more info.
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.JavascriptPacker.PackerEncoding.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.JavascriptPacker.PackerEncoding.Numeric">
            <summary>
            
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.JavascriptPacker.PackerEncoding.Mid">
            <summary>
            
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.JavascriptPacker.PackerEncoding.Normal">
            <summary>
            
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.JavascriptPacker.PackerEncoding.HighAscii">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.JavascriptPacker.Encoding">
            <summary>
            The encoding level for this instance
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.JavascriptPacker.FastDecode">
            <summary>
            Adds a subroutine to the output to speed up decoding
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.JavascriptPacker.SpecialChars">
            <summary>
            Replaces special characters
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.JavascriptPacker.Enabled">
            <summary>
            Packer enabled
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.JavascriptPacker.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.JavascriptPacker.#ctor(MangoMis.Frame.Helper.JavascriptPacker.PackerEncoding,System.Boolean,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="encoding">The encoding level for this instance</param>
            <param name="fastDecode">Adds a subroutine to the output to speed up decoding</param>
            <param name="specialChars">Replaces special characters</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.JavascriptPacker.Pack(System.String)">
            <summary>
            Packs the script
            </summary>
            <param name="script">the script to pack</param>
            <returns>the packed script</returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.JavascriptPackerMaster">
            <summary>
            Javascript打包混淆(网上的代码.非自己写的)
            a multi-pattern parser
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.JavascriptPackerMaster.MatchGroupEvaluator">
            <summary>
            Delegate to call when a regular expression is found.
            Use match.Groups[offset + &lt;group number&gt;].Value to get
            the correct subexpression
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.JavascriptPackerMaster.IgnoreCase">
            <summary>
            Ignore Case?
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.JavascriptPackerMaster.EscapeChar">
            <summary>
            Escape Character to use
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.JavascriptPackerMaster.Add(System.String)">
            <summary>
            Add an expression to be deleted
            </summary>
            <param name="expression">Regular Expression String</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.JavascriptPackerMaster.Add(System.String,System.String)">
            <summary>
            Add an expression to be replaced with the replacement string
            </summary>
            <param name="expression">Regular Expression String</param>
            <param name="replacement">Replacement String. Use $1, $2, etc. for groups</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.JavascriptPackerMaster.Add(System.String,MangoMis.Frame.Helper.JavascriptPackerMaster.MatchGroupEvaluator)">
            <summary>
            Add an expression to be replaced using a callback function
            </summary>
            <param name="expression">Regular expression string</param>
            <param name="replacement">Callback function</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.JavascriptPackerMaster.Exec(System.String)">
            <summary>
            Executes the parser
            </summary>
            <param name="input">input string</param>
            <returns>parsed string</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.JavascriptPackerMaster.Add(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="expression"></param>
            <param name="replacement"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.JavascriptPackerMaster.GetPatterns">
            <summary>
            builds the patterns into a single regular expression
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.JavascriptPackerMaster.Replacement(System.Text.RegularExpressions.Match)">
            <summary>
            Global replacement function. Called once for each match found
            </summary>
            <param name="match">Match found</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.JavascriptPackerMaster.ReplacementString(System.Text.RegularExpressions.Match,System.Int32,System.String,System.Int32)">
            <summary>
            Replacement function for complicated lookups (e.g. Hello $3 $2)
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.Json.JsonDataType">
            <summary>
            返回Json的类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Json.JsonDataType.Value">
            <summary>
            值类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Json.JsonDataType.Decimal">
            <summary>
            Decimal(需要转成Double)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Json.JsonDataType.DateTime">
            <summary>
            时间日期类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Json.JsonDataType.String">
            <summary>
            字符串类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Json.JsonDataType.Bool">
            <summary>
            Bool类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Json.JsonDataType.Char">
            <summary>
            Char类型
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.Json.JsonHelper">
            <summary>
            Json帮助类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.Json.JsonHelper.GetJsonString(System.Object)">
            <summary>
            取得一个正常的Json内容
            </summary>
            <param name="obj">要转成Json的内容</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Json.JsonHelper.GetJsonString(System.Object,MangoMis.Frame.Helper.Json.JsonReturnType)">
            <summary>
            取得一个指定类型的Json返回值
            </summary>
            <param name="obj">要转成Json的内容</param>
            <param name="type">Json返回类型</param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.Helper.Json.JsonHelper.Actions">
            <summary>
            当前系统中的类型缓存
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.Json.JsonHelper.GetJsonObject(System.Type,System.Object,MangoMis.Frame.Helper.Json.JsonReturnType)">
            <summary>
            判断Object
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.Json.JsonHelper.GetJsonList(System.Type,System.Object,MangoMis.Frame.Helper.Json.JsonReturnType)">
            <summary>
            判断List
            </summary>
            <param name="objType"></param>
            <param name="obj"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Json.JsonHelper.GetJsonBoolean(System.Type,System.Object,MangoMis.Frame.Helper.Json.JsonReturnType)">
            <summary>
            
            </summary>
            <param name="objType"></param>
            <param name="obj"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Json.JsonHelper.Get``1(System.String)">
            <summary>
            解析实例,支持属性的数据类型,IDictionary,ojbect,IList,值类型支持以下:long/long?/int/int?/float/float?/double/double?/decimal/decimal?/string/datetime/datetime?/
            </summary>
            <typeparam name="T">解析成的实体类型</typeparam>
            <param name="jsonString">要解析的字典串</param>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Helper.Json.JsonHelper.GetJsonPropertyItem.GetKeys">
            <summary>
            当前节点的Key
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Json.JsonHelper.GetJsonPropertyItem.Childrens">
            <summary>
            当前节点要取得的子集
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Json.JsonHelper.PropertyCollection">
            <summary>
            系统中Json属性的缓存集
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.Json.JsonHelper.InitPropertyFunction(System.String)">
            <summary>
            初始化Json属性
            </summary>
            <param name="currentKey"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Json.JsonHelper.GetJsonProperties(System.Collections.Generic.Dictionary{System.String,System.String},LitJson.JsonData,MangoMis.Frame.Helper.Json.JsonHelper.GetJsonPropertyItem,System.String)">
            <summary>
            取得Json里的返回值
            </summary>
            <param name="result">最终返回的字典</param>
            <param name="json">当前的Json节点</param>
            <param name="propertyItem">当前Json节点要获取的内容节点</param>
            <param name="pathPrefix">当前节点的路径</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.Json.JsonHelper.GetJsonProperties(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            从一个Json中转换出对应的属性,转换成字典返回
            </summary>
            <param name="jsonString">当前Json字符串</param>
            <param name="keys">要取得的属性的路径,使用/分割,比如结构为{x:1,y:{z:1,a:2}},要取得a=2则需要的Key为y/a,取x=1则key为x,可以同时取得多个Key</param>
            <returns>返回值列表,Key为</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Json.JsonHelper.Get(System.Type,LitJson.JsonData)">
            <summary>
            
            </summary>
            <param name="initType"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.Json.JsonHelper.GetTime(System.String)">
            <summary>
            时间戳转为C#格式时间
            </summary>
            <param name="timeStamp"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.Json.JsonReturnType">
            <summary>
            Json返回类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Json.JsonReturnType.正常">
            <summary>
            正常返回
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Json.JsonReturnType.不返回null对象">
            <summary>
            为Null的对象不返回
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Json.JsonReturnType.不返回空字符串">
            <summary>
            为空的字符串不返回
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Json.JsonReturnType.对象为nul时直接返回null">
            <summary>
            为空的字符串不返回
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.MangoApiHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.MangoApiHelper.Success``1(``0)">
            <summary>
             返回成功  该方法返回flag=100 message=空 result=data数据 
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.MangoApiHelper.Error``1(System.String)">
            <summary>
            业务异常返回当前对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.MangoApiHelper.JsonStringDeserialize``1(System.String)">
            <summary>
            把字符串反序列化成T对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.MangoApiHelper.CheckModelNull(System.Object,System.String@)">
            <summary>
            判断实体对象是否完全为空
            </summary>
            <param name="o"></param>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.MangoApiHelper.NullCopy``1(System.Object,System.Object)">
            <summary>
            将不为空的数据copy到已查询到的实体对象上面
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="source"></param>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.MangoApiHelper.CopyTo``1(System.Object,System.Object)">
            <summary>
            深度复制
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="from"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.MangoWebClient">
            <summary>
            Create 2020-01-16
            用于Web请求有些项目有默认值.
            如果想修改默认值或者添加功能.请联系DnZxf
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.MangoWebClient.httpResponse">
            <summary>
            本次请求中的响应内容,不用于外部使用
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.MangoWebClient.sendRequest">
            <summary>
            本次请求中的请求主体,不可以重复使用,因为已经外放了获取,可以从外部进行更改,如果二次调用重新实例化会导致外部设置值无效
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.MangoWebClient._timeout">
            <summary>
            超时时间默认值
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.MangoWebClient._coding">
            <summary>
            Encoding默认值
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.MangoWebClient._url">
            <summary>
            连接地址.没啥用其实一开始已经赋值了.只是用于记录日志时使用
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.MangoWebClient._errorException">
            <summary>
            异常信息
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.MangoWebClient._sendParamString">
            <summary>
            当前需要发送的参数字符串.
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.MangoWebClient._sendData">
            <summary>
            要发送的数据内容
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.MangoWebClient.Request">
            <summary>
            本次请求使用的Request.可以通过给内部属性赋值来变更请求方式
            <br/>默认值:
            <br/>Timeout=50000
            <br/>Headers["Accept-Encoding"] = "DN.Zxf"
            <br/>Headers["x-mg-ltctraid"] = Guid.NewGuid().ToString()
            <br/>ContentType = "application/x-www-form-urlencoded"
            <br/>Method = "POST"
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.MangoWebClient.StatusCode">
            <summary>
            本次请求状态码,-100代表未运行
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.MangoWebClient.Status">
            <summary>
            本次请求状态,Send后才生效
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.MangoWebClient.Ltctraid">
            <summary>
            本次请求使用的追踪ID
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.MangoWebClient.IsUrlEncode">
            <summary>
            设置在进行JsonPost或FormPost操作时.是否对值进行UrlEncode操作
            <br/>注意:必须在SetFormJsonBody或SetFormData之前调用SetIsUrlEncode才会生效
            <br/>默认值:false
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.MangoWebClient.Log(System.String)">
            <summary>
            记录日志GetHttpDataError
            </summary>
            <param name="text">日志文本,日志中会自动添加_httpStatus,_stringStatus,_url,_sendParamString</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.MangoWebClient.#ctor(System.String)">
            <summary>
            使用连接地址,实例化一个默认连接客户端
            <br/>Headers["Accept-Encoding"] = "DN.Zxf"
            </summary>
            <param name="url">连接Http地址</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.MangoWebClient.#ctor(System.String,System.Boolean)">
            <summary>
            使用连接地址,实例化一个默认连接客户端
            <br/>Headers["Accept-Encoding"] = "DN.Zxf"
            </summary>
            <param name="url">连接Http地址</param>
            <param name="isNoObsoleteHead">传false会取消<br/>Headers["Accept-Encoding"] = "DN.Zxf"</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.MangoWebClient.Init(System.String,System.Boolean)">
            <summary>
            本域初始化
            </summary>
            <param name="url">连接Http地址</param>
            <param name="isNoObsoleteHead">传false会取消<br/>Headers["Accept-Encoding"] = "DN.Zxf"</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.MangoWebClient.SetLtcTraId(System.String)">
            <summary>
            设置追踪Id如果不设置
            <br/>默认值是新的Guid值
            </summary>
            <param name="ltctraid">要设置的追踪Id</param>
            <returns>当前实例自身</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.MangoWebClient.SetHeaders(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            针对本次请求,设置headers
            </summary>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.MangoWebClient.SetTimeout(System.Int32)">
            <summary>
            设置Request的超时时间
            <br/>默认值:50000
            </summary>
            <param name="timeout">超时时间(以毫秒为单位)</param>
            <returns>当前实例自身</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.MangoWebClient.SetIsUrlEncode(System.Boolean)">
            <summary>
            设置在进行JsonPost或FormPost操作时.是否对值进行UrlEncode操作
            <br/>注意:必须在SetFormJsonBody或SetFormData之前调用此方法才会生效
            <br/>默认值:false
            </summary>
            <param name="isUrlEncode">true 为进行UrlEncode操作,false为不进行UrlEncode操作</param>
            <returns>当前实例自身</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.MangoWebClient.SetHttpMethod(System.String)">
            <summary>
            设置Request的Method
            <br/>默认值:POST
            </summary>
            <param name="httpMethod">GET/POST/....</param>
            <returns>当前实例自身</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.MangoWebClient.SetContentType(System.String)">
            <summary>
            设置Request的ContentType
            <br/>默认值:application/x-www-form-urlencoded
            </summary>
            <param name="contentType">内容类型</param>
            <returns>当前实例自身</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.MangoWebClient.SetEncoding(System.Text.Encoding)">
            <summary>
            设置Request发送数据及Response接收数据时使用的字符编码
            <br/>默认值:Encoding.UTF8
            </summary>
            <param name="coding">要设置的字符编码</param>
            <returns>当前实例自身</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.MangoWebClient.ClearSendBytes">
            <summary>
            清空当前需要发送的数据
            <br/>默认值:null
            <br/>设置数据请使用:SetSendBytes/SetSendBytesByString/SetFormData/SetFormJsonBody
            </summary>
            <returns>当前实例自身</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.MangoWebClient.SetSendBytes(System.Byte[])">
            <summary>
            直接设置要发送的流内容
            <br/>默认值:null
            <br/>设置发送内容只有最后一次设置会生效:SetSendBytes/SetSendBytesByString/SetFormData/SetFormJsonBody
            </summary>
            <param name="bytes">要发送的内容</param>
            <returns>当前实例自身</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.MangoWebClient.SetSendBytesByString(System.String)">
            <summary>
            设置要发送的字符串,会通过Coding.GetBytes来进行转换进发送内容
            <br/>默认值:null
            <br/>设置发送内容只有最后一次设置会生效:SetSendBytes/SetSendBytesByString/SetFormData/SetFormJsonBody
            </summary>
            <param name="sendText">要发送的内容</param>
            <returns>当前实例自身</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.MangoWebClient.SetFormData``1(``0)">
            <summary>
            设置要发送以FormData方式发送的实体(实体中只有属性生效,而且不支持解析属性中属性),会通过Coding.GetBytes来进行转换进发送内容
            <br/>默认值:null
            <br/>设置发送内容只有最后一次设置会生效:SetSendBytes/SetSendBytesByString/SetFormData/SetFormJsonBody
            </summary>
            <param name="sendEntity">要发送的内容</param>
            <returns>当前实例自身</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.MangoWebClient.SetFormJsonBody``1(``0)">
            <summary>
            设置要发送以JsonBody方式发送的实体(实体中只有属性生效,而且不支持解析属性中属性),会通过Coding.GetBytes来进行转换进发送内容
            <br/>默认值:null
            <br/>会修改内容类型,ContentType = "application/json"如果不希望使用此类型,请设置之后再自行修改
            <br/>设置发送内容只有最后一次设置会生效:SetSendBytes/SetSendBytesByString/SetFormData/SetFormJsonBody
            </summary>
            <param name="sendEntity">要发送的内容</param>
            <returns>当前实例自身</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.MangoWebClient.SetDataByString(System.String)">
            <summary>
            本域内设置发送文本
            </summary>
            <param name="sendText">要发送的文本内容</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.MangoWebClient.Send">
            <summary>
            执行本次请求
            <br/>**注意**:同一个实例只能Send一次,第二次Send不会再运行.
            </summary>
            <returns>返回内容</returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.MethodCounterHelper">
            <summary>
            函数调用次数计数器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.MethodCounterHelper.CounterItemInfo.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            初始化一个统计统计对象
            </summary>
            <param name="statisticsTypeId">统计类型.DicClass=1003,比如Redis等 </param>
            <param name="moduleId">模块编号DicClass=136</param>
            <param name="classId">类型编号DicClass=110</param>
            <param name="apiActionKey">Api端的事件Key,比如AppendFav等</param>
            <param name="businessActionKey">业务端事件Key,比如HouseDetail等</param>
            <param name="step">取得之前几步的信息</param>
        </member>
        <member name="F:MangoMis.Frame.Helper.MethodCounterHelper.CounterItemInfo.StatisticsTypeId">
            <summary>
            统计类型.DicClass=1003,比如Redis等 
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.MethodCounterHelper.CounterItemInfo.ModuleId">
            <summary>
            模块编号DicClass=136
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.MethodCounterHelper.CounterItemInfo.ClassId">
            <summary>
            类型编号DicClass=110
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.MethodCounterHelper.CounterItemInfo.ApiActionKey">
            <summary>
            Api端的事件Key,比如AppendFav等
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.MethodCounterHelper.CounterItemInfo.BusinessActionKey">
            <summary>
            业务端事件Key,比如HouseDetail等
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.MethodCounterHelper.CounterItemInfo.Stack">
            <summary>
            堆栈信息
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.MethodCounterHelper.CounterInfoList0">
            <summary>
            第一个列表.用于切换使用
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.MethodCounterHelper.CounterInfoList1">
            <summary>
            第二个列表.用于切换使用
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.MethodCounterHelper.list_number">
            <summary>
            当前使用的是第几个列表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.MethodCounterHelper.isAppendTimer">
            <summary>
            Timer是否已经添加
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.MethodCounterHelper.Append(MangoMis.Frame.Helper.MethodCounterHelper.CounterItemInfo)">
            <summary>
            添加一条统计数据
            </summary>
            <param name="info"></param>
        </member>
        <member name="F:MangoMis.Frame.Helper.MethodCounterHelper.ItemTemplate">
            <summary>
            提交的Json模板
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.MethodCounterHelper.FindOrCreateChild``2(System.Collections.Generic.Dictionary{``0,``1},``0)">
            <summary>
            取得或创建字典中的字典,多重字典中初始化操作
            </summary>
            <typeparam name="TKey">Key类型</typeparam>
            <typeparam name="TValue">Value类型</typeparam>
            <param name="dict">原来的字典</param>
            <param name="key">Key值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.MethodCounterHelper.BuildInfoStringAndPostInfoToApi(System.Int32)">
            <summary>
            问题!用一个Static还是多个
            1个可能会日志比较多
            多个会导致做图的时候会比较闹心,
            据说ES可以支持百万以上的日志量,
            所以暂定只记录一个日志CommonStatistics,通过ConfigCenter配置apisite.es.switch.openmuliname控制1=多个,2=单个
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.MethodCounterHelper.TimeInovke(MangoMis.Frame.Helper.TimerRunModel)">
            <summary>
            定时器,用于切换列表并提交当前列表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.MethodCounterHelper.ApiInvoke(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            在Api添加计数(无再次封装,如果需要再次封装,请调用CustomStep),需要调用此函数(简单来说.目前我想要统计的函数是Api函数.所以要调整堆栈定位到Api函数,这个函数查找是查找前一步的堆栈信息(就是指调用[ApiInvoke]的函数))
            </summary>
            <param name="statisticsTypeId">统计类型.DicClass=1003,比如Redis等 </param>
            <param name="moduleId">模块编号DicClass=136</param>
            <param name="classId">类型编号DicClass=110</param>
            <param name="apiActionKey">Api端的事件Key,比如AppendFav等</param>
            <param name="businessActionKey">业务端事件Key,比如HouseDetail等</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.MethodCounterHelper.LibraryInvoke(System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            在Library封装的函数里添加计数(无再次封装,如果需要再次封装,请调用CustomStep),需要调用此函数(简单来说.目前我想要统计的函数是Api函数.所以要调整堆栈定位到Api函数,这个函数查找是查找前两步的堆栈信息(不是指调用[LibraryInvoke]的函数,而是指调用Library封装方法的函数[即Api函数]))
            </summary>
            <param name="statisticsTypeId">统计类型.DicClass=1003,比如Redis等 </param>
            <param name="moduleId">模块编号DicClass=136</param>
            <param name="classId">类型编号DicClass=110</param>
            <param name="apiActionKey">Api端的事件Key,比如AppendFav等</param>
            <param name="businessActionKey">业务端事件Key,比如HouseDetail等</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.MethodCounterHelper.CustomStep(System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            自定义封装次数的计数,
            </summary>
            <param name="statisticsTypeId">统计类型.DicClass=1003,比如Redis等 </param>
            <param name="moduleId">模块编号DicClass=136</param>
            <param name="classId">类型编号DicClass=110</param>
            <param name="apiActionKey">Api端的事件Key,比如AppendFav等</param>
            <param name="businessActionKey">业务端事件Key,比如HouseDetail等</param>
            <param name="preStep">格式:如果想统计的是method_0,则preStep传0,如果想统计的是method_2,则preStep传2,举例:封装了[CustomStep调用]的函数名字是method_0,然后封装了函数method_1去调用method_0,又封装了method_2去调用method_1,</param>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisDictionary.IRedisEntityVistor`1">
            <summary>
            基础Redis操作接口
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.IRedisEntityVistor`1.GetTimeToLive(System.String)">
            <summary>
            取得剩余存活秒
            </summary>
            <param name="entityKey">索引(非Redis完整Key,完整Key需要类内部进行实例化)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.IRedisEntityVistor`1.GetEntityRedisKey(System.String)">
            <summary>
            通过Entity的Key取出对应的Redis的Key
            </summary>
            <param name="entityKey"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.IRedisEntityVistor`1.GetEntity(System.String)">
            <summary>
            取得单个实例
            </summary>
            <param name="entityKey">索引(非Redis完整Key,完整Key需要类内部进行实例化)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.IRedisEntityVistor`1.SetEntityAndExpire(System.String,System.Int32,`0)">
            <summary>
            设置实例同时设置超时时间
            </summary>
            <param name="entityKey">索引(非Redis完整Key,完整Key需要类内部进行实例化)</param>
            <param name="expireSeconds">超时时间</param>
            <param name="entity">要设置的实例</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.IRedisEntityVistor`1.SetExpire(System.String,System.Int32)">
            <summary>
            设置超时时间
            </summary>
            <param name="entityKey">索引(非Redis完整Key,完整Key需要类内部进行实例化)</param>
            <param name="expireSeconds">超时时间</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.IRedisEntityVistor`1.Remove(System.String)">
            <summary>
            移除一个实例
            </summary>
            <param name="entityKey">索引(非Redis完整Key,完整Key需要类内部进行实例化)</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.IRedisEntityVistor`1.ContainsKey(System.String)">
            <summary>
            判断是否包含此索引
            </summary>
            <param name="entityKey">索引(非Redis完整Key,完整Key需要类内部进行实例化)</param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisDictionary.RedisDictionary`2.Item.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionary`2.Item.IsInvalid">
            <summary>
            是否已经超期
            </summary>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisDictionary.RedisDictionary`2._timeoutSeconds">
            <summary>
            多少秒会超时
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisDictionary.RedisDictionary`2._dictionaryChangeSecondsSpan">
            <summary>
            多少秒会超时
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisDictionary.RedisDictionary`2._dictionaryChangeTimeout">
            <summary>
            到什么时间超时
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisDictionary.RedisDictionary`2._currentDictionaryIndex">
            <summary>
            当前使用的是第几个字典
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisDictionary.RedisDictionary`2._lastDictionaryIndex">
            <summary>
            上次使用的字典
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionary`2.#ctor(System.Int32,System.Int32,MangoMis.Frame.Helper.RedisDictionary.TimeoutRedisItemGetType)">
            <summary>
            初始化一个会超时的字典
            </summary>
            <param name="timeoutSeconds">项目多少秒会超时</param>
            <param name="dictionaryChangeSecondsSpan">字典变更时间间隔</param>
            <param name="itemGetType">项目取值时类型</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionary`2.CheckChangeDictionary">
            <summary>
            判断是否需要转移当前使用的字典
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionary`2.GetLast">
            <summary>
            上次使用的字典
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionary`2.GetCurrent">
            <summary>
            本次使用的字典
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionary`2.Set(System.String,`1)">
            <summary>
            添加一个内容
            </summary>
            <param name="key">索引</param>
            <param name="value">值</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionary`2.TryGetValue(System.String)">
            <summary>
            尝试取得一个内容(会检索本次及上次使用的字典)
            </summary>
            <param name="key">索引</param>
            <returns>如果Key检索成功返回True,Key不存在返回False</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionary`2.TryGetAndRemove(System.String,`1@)">
            <summary>
            尝试移除一个内容(会检索本次及上次使用的字典)
            </summary>
            <param name="key">索引</param>
            <param name="value">取得的内容</param>
            <returns>如果Key检索成功返回True,Key不存在返回False</returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryHelper">
            <summary>
            字典Redis帮助类（字典Redis是用于有超时时间的临时 Redis记录）
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryHelper.TemporaryPrefixName">
            <summary>
            临时Redis存放的前缀名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryHelper.TemporaryPoolConfig">
            <summary>
            临时Redis存放缓存位置配置
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryHelper.TemporaryClient">
            <summary>
            临时Redis存放的连接池
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryVistor`1">
            <summary>
            需要针对实体进行操作的Redis数据读取基础类
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryVistor`1._client">
            <summary>
            连接客户端
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryVistor`1.GetTimeToLiveBase(System.String)">
            <summary>
            取得剩余存活秒
            </summary>
            <param name="key">Redis键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryVistor`1.GetString(System.String)">
            <summary>
            取值
            </summary>
            <param name="key">Redis键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryVistor`1.SetExpire(System.Int32,System.String)">
            <summary>
            设置超期时间
            </summary>
            <param name="timeout">超期时间</param>
            <param name="key">Redis键</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryVistor`1.SetMuliValue(System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            设置多个值.
            </summary>
            <param name="timeout">超期时间</param>
            <param name="muliValueDictionary">Key是Redis键,Value是存储内容</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryVistor`1.Delete(System.String)">
            <summary>
            删除一条Redis数据
            </summary>
            <param name="key">Redis键</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryVistor`1.AppendSetsItem(System.String,System.String,System.Int32)">
            <summary>
            向集合中添加值
            </summary>
            <param name="setId">集合ID</param>
            <param name="value">添加的值</param>
            <param name="timeout">超期时间</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryVistor`1.RemoveSetsItem(System.String,System.String,System.Int32)">
            <summary>
            从集合中移除一个值
            </summary>
            <param name="setId">集合ID</param>
            <param name="value">要移除的值</param>
            <param name="timeout">超期时间</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryVistor`1.GetSetsList(System.String)">
            <summary>
            取值Sets中所有的值
            </summary>
            <param name="setId">集合ID</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryVistor`1.Contains(System.String)">
            <summary>
            判断是否有这个对应的Key
            </summary>
            <param name="key">要判断的索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryVistor`1.GetSetCount(System.String)">
            <summary>
            取得Set的Count
            </summary>
            <param name="setId">Set的Id</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryVistor`1.JsonToEntity(System.String)">
            <summary>
            把Json字符串转换成实例,(值类型和String需要重写,其它不需要)
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryVistor`1.EntityToJson(`0)">
            <summary>
            把实例转换成Json字符串,(值类型和String需要重写,其它不需要)
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryVistor`1.GetTimeToLive(System.String)">
            <summary>
            取得剩余存活秒
            </summary>
            <param name="entityKey">索引(非Redis完整Key,完整Key需要类内部进行实例化)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryVistor`1.GetEntityRedisKey(System.String)">
            <summary>
            通过Entity的Key取出对应的Redis的Key(子类必须实现)
            </summary>
            <param name="entityKey"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryVistor`1.GetEntity(System.String)">
            <summary>
            取得单个实体
            </summary>
            <param name="entityKey">索引(非Redis完整Key,完整Key需要类内部进行实例化)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryVistor`1.SetEntityAndExpire(System.String,System.Int32,`0)">
            <summary>
            设置实例同时设置超时时间
            </summary>
            <param name="entityKey">索引(非Redis完整Key,完整Key需要类内部进行实例化)</param>
            <param name="expireSeconds">超时时间</param>
            <param name="entity">要设置的实例</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryVistor`1.SetExpire(System.String,System.Int32)">
            <summary>
            设置超时时间
            </summary>
            <param name="entityKey">索引(非Redis完整Key,完整Key需要类内部进行实例化)</param>
            <param name="expireSeconds">超时时间</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryVistor`1.Remove(System.String)">
            <summary>
            移除一个实例
            </summary>
            <param name="entityKey">索引(非Redis完整Key,完整Key需要类内部进行实例化)</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisDictionary.RedisDictionaryVistor`1.ContainsKey(System.String)">
            <summary>
            判断是否包含此索引
            </summary>
            <param name="entityKey">索引(非Redis完整Key,完整Key需要类内部进行实例化)</param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisDictionary.TimeoutRedisItemGetType.OnceGet">
            <summary>
            只取一次取完就删除
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisDictionary.TimeoutRedisItemGetType.GetWithSetExpire">
            <summary>
            取值时设置超时时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisDictionary.TimeoutRedisItemGetType.GetWithoutSetExpire">
            <summary>
            取值时不设置超时时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisDictionary.TimeoutRedisItemGetType.OnlyGet">
            <summary>
            取值时不设置超时时间,(可以等超时时间,可以手动删除)
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisV2.DefaultConfig">
            <summary>
            Redis默认配置
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.DefaultConfig.MinDbNumberContains">
            <summary>
            可使用的最小DB数(此编号可使用)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.DefaultConfig.MaxDbNumberUnContains">
            <summary>
            可使用的最大DB数(此编号不可使用)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.DefaultConfig.IsDebug">
            <summary>
            是否是调试模式
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.DefaultConfig.IsRunCounter">
            <summary>
            是否是计数模式
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.DefaultConfig.RedisClientPoolManagerGetClientMaxErrorTimes">
            <summary>
            连接池取得客户端最大错误次数
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.DefaultConfig.ServiceStackClientLogName">
            <summary>
            Redis客户端运行异常
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.DefaultConfig.RedisClientPoolManagerLogName">
            <summary>
            连接池运行异常
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.DefaultConfig.KeysName">
            <summary>
            记录主键的Key名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.DefaultConfig.ExpireSeconds">
            <summary>
            记录过期时间(秒)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.DefaultConfig.SetExpireWhenGetItem">
            <summary>
            取得数据同时设置超时时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.DefaultConfig.HasKeysField">
            <summary>
            有Key字段
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisV2.RedisAsyncCallback">
            <summary>
            异步Redis的回调函数
            </summary>
            <param name="result">返回结果</param>
            <param name="receiveLength">接收的长度</param>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisV2.ManagerCommandFunction`1">
            <summary>
            Pool管理的调用方法
            </summary>
            <typeparam name="T"></typeparam>
            <param name="redisClient">Redis客户端</param>
            <param name="args">相关参数</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisV2.RedisClientCommandFunction`1">
            <summary>
            Redis客户端的调用方法
            </summary>
            <typeparam name="T"></typeparam>
            <param name="client">Redis客户端</param>
            <param name="args">相关参数</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisV2.MangoRedisClient">
            <summary>
            连接Redis的Mango客户端(字符串格式)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.#ctor(System.String,System.String)">
            <summary>
            配置一个自定义配置的Redis客户端
            </summary>
            <param name="dbInfoKey">dbInfoKey</param>
            <param name="redisInstanceKey">实例名(用于做为RedisKey的前缀)</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.#ctor(MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfig)">
            <summary>
            配置一个自定义配置的Redis客户端(自己实例化.不使用DBInfo,及Redis客户端配置)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.#ctor(System.String,System.Int32,System.String,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            初始化一个Redis数据客户端
            </summary>
            <param name="redisHost">Redis连接域名</param>
            <param name="redisPort">连接端口</param>
            <param name="keyBefore">Key前缀</param>
            <param name="expireSeconds">超时时间,单位为秒(可以为0,不超时)</param>
            <param name="isSetExpireWhenGetItem">在取数据时设置超时时间(有超时时间才会生效)</param>
            <param name="isHasKeysField">是否有Keys字段,Keys字段是为了保持数据完整</param>
            <param name="useDb">使用的数据库</param>
            <param name="poolClientCount">可以使用的客户端数量</param>
            <param name="clientKeepAliveSeconds">客户端不使用时保持时长</param>
            <param name="checkAliveTimeSpanSeconds">检查客户端存活的时长</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.#ctor(MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfig,MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerConfig)">
            <summary>
            配置一个自定义配置的Redis客户端(自己实例化.不使用DBInfo,及Redis客户端配置)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.GetConnectionString">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.GetTableName">
            <summary>
            取得表名
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.RedisPoolHost">
            <summary>
            Redis连接池连接的主机(无默认值)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.RedisPoolPort">
            <summary>
            Redis连接池连接的端口(无默认值)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.RedisPoolUseDb">
            <summary>
            Redis连接池连接的Db(默认为0)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.RedisPoolClientCount">
            <summary>
            Redis连接池连接中允许的最多实例数(默认5)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.RedisPoolClientKeepAliveSeconds">
            <summary>
            Redis连接池中单实例不使用存活时间(默认300)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.RedisPoolCheckAliveTimeSpanSeconds">
            <summary>
            Redis连接池中检查时间存储的时间间隔(默认20)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.RedisPoolPath">
            <summary>
            Redis连接的路径(Host:Port)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.IsSetExpireWhenGetItem">
            <summary>
            取得数据时是否同时设置超时时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.ExpireSeconds">
            <summary>
            记录过期时间(秒),默认为0,永不过期
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.IsHasKeysField">
            <summary>
            是否有Keys字段(默认:有),一般用于需要保证数据完整性的情况,会把所有此实例记录的Key都存储下来,如果只是临时记录数据.不需要有
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.GetValue(System.String)">
            <summary>
            取得数据Model数据
            </summary>
            <param name="key">索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.GetListValue(System.Collections.Generic.List{System.String})">
            <summary>
            取得一个数据列表
            </summary>
            <param name="keys">索引列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.GetAllValue">
            <summary>
            取得当前所有数据
            </summary>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.GetKeys">
            <summary>
            取得所有的键.只有使用了主键列表才可以使用
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.SetNewKey(System.String)">
            <summary>
            设置的键.只有使用了主键列表才可以使用
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.SetNewKey(System.Collections.Generic.List{System.String})">
            <summary>
            设置所有的键.只有使用了主键列表才可以使用
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.RemoveKeyNew(System.String)">
            <summary>
            移除Key
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.SetKeys(System.Collections.Generic.List{System.String})">
            <summary>
            设置所有的键.只有使用了主键列表才可以使用
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.SetValue(System.String,System.String)">
            <summary>
            设置一个值
            </summary>
            <param name="key">键索引</param>
            <param name="value">值</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.SetListValue(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            设置一个列表的值
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.RemoveKey(System.String)">
            <summary>
            通过Id列表删除键
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.Count">
            <summary>
            取得当前缓存数量(只有可以设置Key才有效)
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.RemoveAllKey">
            <summary>
            删除所有
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient.RemoveKeyByIds(System.Collections.Generic.List{System.String})">
            <summary>
            通过Id列表删除键
            </summary>
            <param name="ids"></param>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisV2.MangoRedisClient`1">
            <summary>
            连接Redis的Mango客户端
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient`1.#ctor">
            <summary>
            配置一个默认的客户端(会使用DBInfo,及Redis客户端配置)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient`1.#ctor(System.String,System.String)">
            <summary>
            配置一个自定义名前缀的客户端(会使用DBInfo,及Redis客户端配置)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient`1.#ctor(System.String)">
            <summary>
            配置一个自定义名前缀的客户端(会使用DBInfo,及Redis客户端配置)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient`1.#ctor(MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfig)">
            <summary>
            配置一个自定义配置的Redis客户端(自己实例化.不使用DBInfo,及Redis客户端配置)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient`1.#ctor(MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfig,MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerConfig)">
            <summary>
            配置一个自定义配置的Redis客户端(自己实例化.不使用DBInfo,及Redis客户端配置)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient`1.GetModel(System.Object)">
            <summary>
            取得数据
            </summary>
            <param name="key">索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient`1.GetModel(System.String)">
            <summary>
            取得数据Model数据
            </summary>
            <param name="key">索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient`1.GetListByIds(System.Collections.Generic.List{System.Object})">
            <summary>
            取得一个数据列表
            </summary>
            <param name="keys">索引列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient`1.GetListByIds(System.Collections.Generic.List{System.String})">
            <summary>
            取得一个数据列表
            </summary>
            <param name="keys">索引列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient`1.GetAll">
            <summary>
            取得当前所有数据
            </summary>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient`1.Set(System.String,`0)">
            <summary>
            设置一个值
            </summary>
            <param name="key">键索引</param>
            <param name="value">值</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient`1.Set(System.Collections.Generic.Dictionary{System.Object,`0})">
            <summary>
            设置一个列表的值
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient`1.Set(System.Collections.Generic.Dictionary{System.String,`0})">
            <summary>
            设置一个列表的值
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient`1.Remove(System.Object)">
            <summary>
            通过Id列表删除键
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient`1.Remove(System.String)">
            <summary>
            通过Id列表删除键
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient`1.InsertDictionary(System.Collections.Generic.Dictionary{System.Object,`0})">
            <summary>
            向缓存中插入一个字典
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient`1.RemoveAll">
            <summary>
            删除所有
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient`1.RemoveByIds(System.Collections.Generic.List{System.String})">
            <summary>
            通过Id列表删除键
            </summary>
            <param name="ids"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClient`1.RemoveByIds(System.Collections.Generic.List{System.Object})">
            <summary>
            通过Id列表删除键
            </summary>
            <param name="ids"></param>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfig">
            <summary>
            Redis客户端配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfig.#ctor">
            <summary>
            初始化一个默认的Redis客户端配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfig.#ctor(System.String)">
            <summary>
            采用默认的超时时间的客户端配置
            </summary>
            <param name="redisInstanceKey">当前实例的名称索引</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfig.#ctor(System.String,System.String)">
            <summary>
            采用默认的超时时间的客户端配置
            </summary>
            <param name="redisInstanceKey">当前实例的名称索引</param>
            <param name="dbInfoKey">当前使用的数据源索引</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfig.#ctor(System.String,System.String,System.Int32)">
            <summary>
            采用默认的超时时间的客户端配置
            </summary>
            <param name="dbInfoKey">当前使用的数据源索引</param>
            <param name="expireSeconds">记录过期时间(秒)</param>
            <param name="redisInstanceKey">当前实例的名称索引</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfig.#ctor(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            不在获取时同时设置超时时间的客户端配置 
            </summary>
            <param name="dbInfoKey">当前使用的数据源索引</param>
            <param name="redisInstanceKey">当前实例的名称索引</param>
            <param name="hasKeysField">是否有Key字段</param>
            <param name="expireSeconds">记录过期时间(秒)</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfig.#ctor(System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            不在获取时同时设置超时时间的客户端配置 
            </summary>
            <param name="dbInfoKey">当前使用的数据源索引</param>
            <param name="redisInstanceKey">当前实例的名称索引</param>
            <param name="expireSeconds">记录过期时间(秒)</param>
            <param name="hasKeysField">是否有Key字段</param>
            <param name="setExpireWhenGet">是否在取得数据同时设置超时时间</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfig.#ctor(System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.String)">
            <summary>
            得到一个配置项
            </summary>
            <param name="dbInfoKey">当前使用的数据源索引</param>
            <param name="expireSeconds">记录过期时间(秒)</param>
            <param name="setExpireWhenGet">是否在取得数据同时设置超时时间</param>
            <param name="nameSplitString">名字间隔</param>
            <param name="hasKeysField">是否有Key字段</param>
            <param name="redisInstanceKey">当前实例的名称索引</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfig.Init(System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.String)">
            <summary>
            得到一个配置项
            </summary>
            <param name="expireSeconds">记录过期时间(秒)</param>
            <param name="setExpireWhenGet">是否在取得数据同时设置超时时间</param>
            <param name="nameSplitString">名字间隔</param>
            <param name="hasKeysField">是否有Key字段</param>
            <param name="dbInfoKey">当前使用的数据源索引</param>
            <param name="redisInstanceKey">当前实例的名称索引</param>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfig.DbInfoKey">
            <summary>
            当前使用的数据源索引
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfig.ExpireSeconds">
            <summary>
            记录过期时间(秒),默认值为0永不过期
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfig.SetExpireWhenGetItem">
            <summary>
            取得数据同时设置超时时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfig.HasKeysField">
            <summary>
            有Key字段(默认是True)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfig.NameSplitString">
            <summary>
            名前缀的分割线
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfig.DbTableNameBefore">
            <summary>
            名前缀
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfig.RedisInstanceKey">
            <summary>
            当前实例的名称索引
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfig.ReordKeyBefore">
            <summary>
            记录名称前缀(中间{0}表示表名)
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfigManager">
            <summary>
            配置管理
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfigManager.GetMangoRedisFoundationConfig(System.String,System.String)">
            <summary>
            取得芒果Redis客户端的配置.
            </summary>
            <param name="foundationKey">基础配置的Key(比如FoundationStore.DbInfoStore,一般是类的全名)</param>
            <param name="configKey">配置名.参见DefaultMangoRedisFoundationConfig的Key</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfigManager.TryGetOrAddMangoRedisClientConfig(System.String,System.String)">
            <summary>
            取得对应Redis名(默认是实体数据类型全名)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClientConfigManager.TryGetOrAddMangoRedisClientConfig(System.String)">
            <summary>
            取得对应Redis名(默认是实体数据类型全名)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClientTextExtend.GetRedisClientConnectionString(System.String,System.Int32)">
            <summary>
            通过Host和Port取得Redis的连接字符串
            </summary>
            <param name="host"></param>
            <param name="port"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisClientTextExtend.GetAllErrorText(System.String,System.String)">
            <summary>
            通过连接字符串和表名.取得不允许记录主键时的错误信息
            </summary>
            <param name="connString"></param>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType">
            <summary>
            Redis连接池的计数器类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand进入">
            <summary>
            RedisRunCommand进入
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand调用">
            <summary>
            RedisRunCommand调用
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand调用取不到客户端">
            <summary>
            RedisRunCommand调用取不到客户端
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行实际函数">
            <summary>
            RedisRunCommand运行实际函数
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行SetHashSetWithExprire">
            <summary>
            RedisRunCommand运行SetHashSetWithExprire
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行SetHashSetWithExprire结束">
            <summary>
            RedisRunCommand运行SetHashSetWithExprire结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行SetHashSetWithoutExpire">
            <summary>
            RedisRunCommand运行SetHashSetWithoutExpire
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行SetHashSetWithoutExpire结束">
            <summary>
            RedisRunCommand运行SetHashSetWithoutExpire结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行SetHashSetIncrWithExprie">
            <summary>
            RedisRunCommand运行SetHashSetIncrWithExprie
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行SetHashSetIncrWithExprie结束">
            <summary>
            RedisRunCommand运行SetHashSetIncrWithExprie结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行SetHashSetIncrWithoutExprie">
            <summary>
            RedisRunCommand运行SetHashSetIncrWithoutExprie
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行SetHashSetIncrWithoutExprie结束">
            <summary>
            RedisRunCommand运行SetHashSetIncrWithoutExprie结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行GetHashSetAll">
            <summary>
            RedisRunCommand运行GetHashSetAll
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行GetHashSetAll结束">
            <summary>
            RedisRunCommand运行GetHashSetAll结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行GetHashSetEntry">
            <summary>
            RedisRunCommand运行GetHashSetEntry
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行GetHashSetEntry结束">
            <summary>
            RedisRunCommand运行GetHashSetEntry结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行RemoveHashSetEntry">
            <summary>
            RedisRunCommand运行RemoveHashSetEntry
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行RemoveHashSetEntry结束">
            <summary>
            RedisRunCommand运行RemoveHashSetEntry结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行GetHashSetCount">
            <summary>
            RedisRunCommand运行GetHashSetCount
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行GetHashSetCount结束">
            <summary>
            RedisRunCommand运行GetHashSetCount结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行Set">
            <summary>
            RedisRunCommand运行Set
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行Set结束">
            <summary>
            RedisRunCommand运行Set结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行SetExpire">
            <summary>
            RedisRunCommand运行SetExpire
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行SetExpire结束">
            <summary>
            RedisRunCommand运行SetExpire结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行SetEx">
            <summary>
            RedisRunCommand运行SetEx
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行SetEx结束">
            <summary>
            RedisRunCommand运行SetEx结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行Delete">
            <summary>
            RedisRunCommand运行Delete
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行Delete结束">
            <summary>
            RedisRunCommand运行Delete结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行SetAndExpireWhenNotExists">
            <summary>
            RedisRunCommand运行SetAndExpireWhenNotExists
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行SetAndExpireWhenNotExists结束">
            <summary>
            RedisRunCommand运行SetAndExpireWhenNotExists结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行SetWhenNotExists">
            <summary>
            RedisRunCommand运行SetWhenNotExists
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行SetWhenNotExists结束">
            <summary>
            RedisRunCommand运行SetWhenNotExists结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行SetList">
            <summary>
            RedisRunCommand运行SetList
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行SetList结束">
            <summary>
            RedisRunCommand运行SetList结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行SetExList">
            <summary>
            RedisRunCommand运行SetExList
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行SetExList结束">
            <summary>
            RedisRunCommand运行SetExList结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行Get">
            <summary>
            RedisRunCommand运行Get
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行Get结束">
            <summary>
            RedisRunCommand运行Get结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行GetList">
            <summary>
            RedisRunCommand运行GetList
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行GetList结束">
            <summary>
            RedisRunCommand运行GetList结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行Sets添加">
            <summary>
            RedisRunCommand运行SETS添加
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行Sets添加结束">
            <summary>
            RedisRunCommand运行SETS添加结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行Sets添加WithExpire">
            <summary>
            RedisRunCommand运行Sets添加WithExpire
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行Sets添加WithExpire结束">
            <summary>
            RedisRunCommand运行Sets添加WithExpire结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行Sets移除">
            <summary>
            RedisRunCommand运行SETS移除
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行Sets移除结束">
            <summary>
            RedisRunCommand运行SETS移除结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行Sets移除WithExpire">
            <summary>
            RedisRunCommand运行Sets移除WithExpire
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行Sets移除WithExpire结束">
            <summary>
            RedisRunCommand运行Sets移除WithExpire结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行Sets取列表">
            <summary>
            RedisRunCommand运行SETS取列表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行Sets取列表结束">
            <summary>
            RedisRunCommand运行SETS取列表结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand错误后再调用">
            <summary>
            RedisRunCommand错误后再调用
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand错误超过5次">
            <summary>
            RedisRunCommand错误超过5次
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行结果成功">
            <summary>
            RedisRunCommand运行结果成功
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行结果发现此实例正在运行中">
            <summary>
            RedisRunCommand运行结果发现此实例正在运行中
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.RedisRunCommand运行结果失败">
            <summary>
            RedisRunCommand运行结果失败
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.Client遇到错误销毁">
            <summary>
            Client遇到错误销毁
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.Client为Null销毁">
            <summary>
            Client为Null销毁
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.Client实例化">
            <summary>
            Client实例化
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.Client实例化发现不可添加">
            <summary>
            Client实例化发现不可添加
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.Client实例化成功">
            <summary>
            Client实例化成功
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.Client实例化失败">
            <summary>
            Client实例化失败
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.Client超出生存周期销毁">
            <summary>
            Client超出生存周期销毁
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.Client检查生存周期遇到错误销毁">
            <summary>
            Client检查生存周期遇到错误销毁
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.Client没有可用客户端Wait后再查找">
            <summary>
            Client没有可用客户端Wait后再查找
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.Client重新获取后成功">
            <summary>
            Client重新获取后成功
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.Client重新获取后失败">
            <summary>
            Client重新获取后失败
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerCounterType.Client重新获取失败n次不再获取">
            <summary>
            Client重新获取失败n次不再获取
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager">
            <summary>
            Redis客户端连接池
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.#ctor">
            <summary>
            初始化一个使用默认数据源配置的Redis客户端连接池
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.#ctor(MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerConfig)">
            <summary>
            Redis客户端连接池
            </summary>
            <param name="config">连接配置</param>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.Config">
            <summary>
            当前配置 
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.PoolManagerEnumCounter">
            <summary>
            连接池计数器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.ContainsKey(System.String)">
            <summary>
            检查Key是否存在
            </summary>
            <param name="key">主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.Get(System.Collections.Generic.List{System.String})">
            <summary>
            取得列表
            </summary>
            <param name="keys">主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.Get(System.String)">
            <summary>
            取得单条数据
            </summary>
            <param name="key">主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.SetEx(System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            设置值同时设置超时时间
            </summary>
            <param name="values">值列表</param>
            <param name="keepAliveSeconds">超时时间(秒)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.SetEx(System.String,System.String,System.Int32)">
            <summary>
            设置值同时设置超时时间
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="keepAliveSeconds">超时时间(秒)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.Set(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            设置值
            </summary>
            <param name="values">值列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.Set(System.String,System.String)">
            <summary>
            设置值
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.SetAndExpireWhenNotExists(System.String,System.String,System.Int32)">
            <summary>
            如果Key不存在,则赋值并设置超时时间后返回1,如果Key已经存在,则返回0(一般用于单例锁)
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="keepAliveSeconds">超时时间</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.SetWhenNotExists(System.String,System.String)">
            <summary>
            如果Key不存在,则赋值后返回1,如果Key已经存在,则返回0(一般用于单例锁)
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.SetExpire(System.String,System.Int32)">
            <summary>
            设置超时时间
            </summary>
            <param name="key">键</param>
            <param name="keepAliveSeconds">超时时间</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.Delete(System.String)">
            <summary>
            删除一个键
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.DeleteList(System.Collections.Generic.List{System.String})">
            <summary>
            删除多个键
            </summary>
            <param name="keys">键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.SetWhenNotExistsAction(MangoMis.Frame.Helper.RedisV2.StackRedisClient,System.Object[])">
            <summary>
            插入成功返回1,插入失败返回0
            </summary>
            <param name="redisClient"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.SetAndExpireWhenNotExistsAction(MangoMis.Frame.Helper.RedisV2.StackRedisClient,System.Object[])">
            <summary>
            插入成功返回1,插入失败返回0
            </summary>
            <param name="redisClient"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.SetByteWithOutExpire(System.String,System.Byte[])">
            <summary>
            设置Byte
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.SetByte(System.String,System.Byte[],System.Int32)">
            <summary>
            设置Byte同时设置超时时间
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="keepAliveSeconds">超时时间(秒)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.GetByte(System.String)">
            <summary>
            设置Byte同时设置超时时间
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.AddDataSetList(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            [Redis的 Set（集合）]设置值列表
            </summary>
            <param name="skey">键</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.AddDataSetListWithExpire(System.String,System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            [Redis的 Set（集合）]设置值列表同时设置超时时间
            </summary>
            <param name="skey">键</param>
            <param name="value">值</param>
            <param name="keepAliveSeconds">超时时间(秒)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.AddDataSetListWithExpireAction(MangoMis.Frame.Helper.RedisV2.StackRedisClient,System.Object[])">
            <summary>
            [Redis的 Set（集合）]设置值的同时设置超时时间
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.AddDataSetItem(System.String,System.String)">
            <summary>
            [Redis的 Set（集合）]设置值
            </summary>
            <param name="skey">键</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.AddDataSetItemWithExpire(System.String,System.String,System.Int32)">
            <summary>
            [Redis的 Set（集合）]设置值同时设置超时时间
            </summary>
            <param name="skey">键</param>
            <param name="value">值</param>
            <param name="keepAliveSeconds">超时时间(秒)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.AddDataSetItemWithExpireAction(MangoMis.Frame.Helper.RedisV2.StackRedisClient,System.Object[])">
            <summary>
            [Redis的 Set（集合）]设置值的同时设置超时时间
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.RemoveDataSetItem(System.String,System.String)">
            <summary>
            [Redis的 Set（集合）]删除值
            </summary>
            <param name="skey">键</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.RemoveDataSetItemWithExpire(System.String,System.String,System.Int32)">
            <summary>
            [Redis的 Set（集合）]删除值
            </summary>
            <param name="skey">键</param>
            <param name="value">值</param>
            <param name="keepAliveSeconds">超时时间(秒)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.GetSetCount(System.String)">
            <summary>
            [Redis的 Set（集合）]取得总数
            </summary>
            <param name="skey">键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.GetDataSet(System.String)">
            <summary>
            [Redis的 Set（集合）]取值
            </summary>
            <param name="skey">键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.GetTimeToLive(System.String)">
            <summary>
            取得Redis超时时间,
            </summary>
            <param name="key">键</param>
            <returns>还剩余多少秒</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.SetRangeInHashSet(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Int32)">
            <summary>
            给HashSet设置一个字典同时设置HashSet的超时时间(不是给HashSet里面的项设置超时时间)
            </summary>
            <param name="dictKey">HashSet索引</param>
            <param name="keyAndValues">HashSet项的Key和Value</param>
            <param name="keepAliveSeconds">几秒后超时</param>
            <returns>返回是否设置成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.SetRangeInHashSetAction(MangoMis.Frame.Helper.RedisV2.StackRedisClient,System.Object[])">
            <summary>
            给HashSet设置一个字典同时设置HashSet的超时时间(不是给HashSet里面的项设置超时时间)
            </summary>
            <param name="redisClient">客户端</param>
            <param name="args">参数[0=HashId,1=SetId,2=SetValue,3=超时时间(秒)]</param>
            <returns>返回是否设置成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.SetRangeInHashSetWithoutExpire(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            给HashSet设置一个值(不设置HashSet的超时时间)
            </summary>
            <param name="dictKey">HashSet索引</param>
            <param name="keyAndValues">HashSet项的Key和Value</param>
            <returns>返回是否设置成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.SetRangeInHashSetWithoutExpireAction(MangoMis.Frame.Helper.RedisV2.StackRedisClient,System.Object[])">
            <summary>
            给HashSet设置一个累加值(不设置HashSet的超时时间)
            </summary>
            <param name="redisClient">客户端</param>
            <param name="args">参数[0=HashId,1=SetId,2=SetValue]</param>
            <returns>返回是否设置成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.SetHashSetWithExpire(System.String,System.String,System.String,System.Int32)">
            <summary>
            给HashSet设置一个值同时设置HashSet的超时时间(不是给HashSet里面的项设置超时时间)
            </summary>
            <param name="dictKey">HashSet索引</param>
            <param name="entryKey">HashSet项Key</param>
            <param name="entryValue">HashSet项Value</param>
            <param name="keepAliveSeconds">几秒后超时</param>
            <returns>返回是否设置成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.SetHashSetWithExpireAction(MangoMis.Frame.Helper.RedisV2.StackRedisClient,System.Object[])">
            <summary>
            给HashSet设置一个累加值同时设置HashSet的超时时间(不是给HashSet里面的项设置超时时间)
            </summary>
            <param name="redisClient">客户端</param>
            <param name="args">参数[0=HashId,1=SetId,2=SetValue,3=超时时间(秒)]</param>
            <returns>返回是否设置成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.SetHashSetWithoutExpire(System.String,System.String,System.String)">
            <summary>
            给HashSet设置一个值(不设置HashSet的超时时间)
            </summary>
            <param name="dictKey">HashSet索引</param>
            <param name="entryKey">HashSet项Key</param>
            <param name="entryValue">HashSet项Value</param>
            <returns>返回是否设置成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.SetHashSetWithoutExpireAction(MangoMis.Frame.Helper.RedisV2.StackRedisClient,System.Object[])">
            <summary>
            给HashSet设置一个累加值(不设置HashSet的超时时间)
            </summary>
            <param name="redisClient">客户端</param>
            <param name="args">参数[0=HashId,1=SetId,2=SetValue]</param>
            <returns>返回是否设置成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.SetHashSetIncrWithExprie(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            给HashSet设置一个累加值同时设置HashSet的超时时间(不是给HashSet里面的项设置超时时间)
            </summary>
            <param name="dictKey">HashSet索引</param>
            <param name="entryKey">HashSet项Key</param>
            <param name="incrValue">要累加的值</param>
            <param name="keepAliveSeconds">几秒后超时</param>
            <returns>返回累加后的值</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.SetHashSetIncrWithoutExprie(System.String,System.String,System.Int32)">
            <summary>
            给HashSet设置一个累加值(不设置HashSet的超时时间)
            </summary>
            <param name="dictKey">HashSet索引</param>
            <param name="entryKey">HashSet项Key</param>
            <param name="incrValue">要累加的值</param>
            <returns>返回累加后的值</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.SetHashSetIncrWithExprieAction(MangoMis.Frame.Helper.RedisV2.StackRedisClient,System.Object[])">
            <summary>
            给HashSet设置一个累加值
            </summary>
            <param name="redisClient">客户端</param>
            <param name="args">参数[0=HashId,1=SetId,2=累加值(数字),3=超时时间(秒)]</param>
            <returns>返回累加后的值</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.SetHashSetIncrWithoutExprieAction(MangoMis.Frame.Helper.RedisV2.StackRedisClient,System.Object[])">
            <summary>
            给HashSet设置一个累加值
            </summary>
            <param name="redisClient">客户端</param>
            <param name="args">参数[0=HashId,1=SetId,2=累加值(数字)]</param>
            <returns>返回累加后的值</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.GetHashSetAll(System.String)">
            <summary>
            取得一个HashSet中所有的值
            </summary>
            <param name="dictKey">HashSet索引</param>
            <returns>返回HashSet内容</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.GetHashSetAllAction(MangoMis.Frame.Helper.RedisV2.StackRedisClient,System.Object[])">
            <summary>
            取得一个HashSet中所有的值
            </summary>
            <param name="redisClient">客户端</param>
            <param name="args">参数[0=HashId]</param>
            <returns>返回HashSet内容</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.GetHashSetEntry(System.String,System.String)">
            <summary>
            取值HashSet中单独的值
            </summary>
            <param name="dictKey">HashSet索引</param>
            <param name="entryKey">HashSet项的索引</param>
            <returns>HashSet项的值</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.GetHashSetEntryAction(MangoMis.Frame.Helper.RedisV2.StackRedisClient,System.Object[])">
            <summary>
            取值HashSet中单独的值
            </summary>
            <param name="redisClient">客户端</param>
            <param name="args">参数[0=HashId,1=SetId]</param>
            <returns>HashSet项的值</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.RemoveHashSetEntry(System.String,System.String)">
            <summary>
            移除HashSet中的单独的项目
            </summary>
            <param name="dictKey">HashSet索引</param>
            <param name="entryKey">HashSet项的索引</param>
            <returns>返回设置是否成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.RemoveHashSetEntryAction(MangoMis.Frame.Helper.RedisV2.StackRedisClient,System.Object[])">
            <summary>
            移除HashSet中的单独的项目
            </summary>
            <param name="redisClient">客户端</param>
            <param name="args">参数[0=HashId,1=SetId]</param>
            <returns>返回设置是否成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.GetHashSetCount(System.String)">
            <summary>
            取得HashSet中的项目个数
            </summary>
            <param name="dictKey">HashSet索引</param>
            <returns>返回内容数目</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.GetHashSetCountAction(MangoMis.Frame.Helper.RedisV2.StackRedisClient,System.Object[])">
            <summary>
            取得HashSet中的项目个数
            </summary>
            <param name="redisClient">客户端</param>
            <param name="args">参数[0=HashId]</param>
            <returns>返回内容数目</returns>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.CurrentClientCount">
            <summary>
            当前使用的客户端数量
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.WaitForGetClient(System.Int32)">
            <summary>
            等待查找下一个可用的客户端
            </summary>
            <param name="errorTimes">错误次数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.NullDestroy(System.Int32)">
            <summary>
            实例为NULL销毁实例
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.CloseDestroy(System.Int32)">
            <summary>
            实例已经关闭销毁实例
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.ErrorDestroy(System.Int32)">
            <summary>
            实例发生异常销毁实例
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.HadExceptionsDestroy(System.Int32)">
            <summary>
            实例中的Redis有异常销毁实例
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.GetClient(System.Boolean,System.Int32)">
            <summary>
            取得下一个可用的实例
            </summary>
            <param name="isReGet">是否是重新取得</param>
            <param name="errorTimes">错误次数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.GetClient">
            <summary>
            得取一个可用的实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager.Dispose">
            <summary>
            执行与释放或重置非托管资源相关的应用程序定义的任务。
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerConfig">
            <summary>
            Redis连接池管理配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerConfig.#ctor">
            <summary>
            配置一个默认数据源的连接池
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerConfig.#ctor(MangoMis.Frame.DB.Info.DBInfo)">
            <summary>
            根据一个现有有的数据源配置实例化连接池(传入DBInfo,所有配置都位于DBInfo的配置中)
            </summary>
            <param name="dbInfo">数据源配置</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerConfig.#ctor(System.String,System.Int32)">
            <summary>
            实例化一个连接池的配置
            </summary>
            <param name="host">连接地址</param>
            <param name="port">连接端口</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerConfig.#ctor(System.String,System.Int32,System.Nullable{System.Int32})">
            <summary>
            实例化一个连接池的配置
            </summary>
            <param name="host">连接地址</param>
            <param name="port">连接端口</param>
            <param name="useDb">连接DB默认0</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerConfig.#ctor(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            实例化一个连接池的配置
            </summary>
            <param name="host">连接地址</param>
            <param name="port">连接端口</param>
            <param name="useDb">连接DB默认0</param>
            <param name="poolClientCount">池中的实例数默认5个</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerConfig.#ctor(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            实例化一个连接池的配置 
            </summary>
            <param name="host">连接地址</param>
            <param name="port">连接端口</param>
            <param name="useDb">连接DB默认0</param>
            <param name="poolClientCount">池中的实例数默认5个</param>
            <param name="redisClientKeepAliveSeconds">实例的生存周期(秒)默认300秒</param>
            <param name="checkAliveTimeSpanSeconds">检查实例生存计时器定时(秒)默认20秒</param>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerConfig.IsUseDefaultHost">
            <summary>
            使用的是否是原SettingThisSite中的Redis配置 
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerConfig.IsUseDefaultPort">
            <summary>
            使用的是否是原SettingThisSite中的Redis配置 
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerConfig.Host">
            <summary>
            连接主机地址
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerConfig.Port">
            <summary>
            连接端口号
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerConfig.UseDb">
            <summary>
            使用的数据库
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerConfig.PoolClientCount">
            <summary>
            连接池中实例数量
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerConfig.ClientKeepAliveSeconds">
            <summary>
            实例的生存周期(秒)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerConfig.CheckAliveTimeSpanSeconds">
            <summary>
            定时检查实例是否生存的时间间隔(秒)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.RedisClientPoolManagerConfig.Weight">
            <summary>
            权重  默认为1  数字越小 表示权重越低.
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisV2.RedisResult`1">
            <summary>
            Redis运行的结果
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisResult`1.#ctor">
            <summary>
            初始化一个失败的运行结果
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisResult`1.#ctor(MangoMis.Frame.Helper.RedisV2.RedisResultType)">
            <summary>
            初始化一个指定类型的运行结果
            </summary>
            <param name="resultType"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisResult`1.#ctor(`0)">
            <summary>
            初始化一个运行成功的运行结果
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisResult`1.#ctor(`0,MangoMis.Frame.Helper.RedisV2.RedisResultType)">
            <summary>
            初始化一个运行结果
            </summary>
            <param name="result">运行结果</param>
            <param name="resultType">结果类型</param>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.RedisResult`1.Result">
            <summary>
            运行结果
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.RedisResult`1.ResultType">
            <summary>
            运行结果类型
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisV2.RedisResultType">
            <summary>
            运行Redis命令的返回值类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisResultType.Success">
            <summary>
            运行成功
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisResultType.Failed">
            <summary>
            运行失败
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisResultType.Activing">
            <summary>
            运行中
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisResultType.OutOfTimeRange">
            <summary>
            设定的时间超出时间范围
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisV2.RedisStorageHandle">
            <summary>
            用于代替Session.使用SessionId,使用时最好不要使用Session改为使用这个,不要在服务端调用中获取.没有值的
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.RedisStorageHandle.MaxSeconds">
            <summary>
            最长设置15天超时时间
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageHandle.#ctor(System.String,MangoMis.Frame.DB.Info.DBInfo,System.Int32)">
            <summary>
            实初化一个Redis的临时存储数据的结构
            </summary>
            <param name="keyBeforePart">存储Key的前缀,最终key的结构是dbInfo前缀:client的keyBefore:key</param>
            <param name="dbInfo">数据存储位置信息(Redis)</param>
            <param name="maxSeconds">最长的有效期,有效期过了会清除数据</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageHandle.GetRedisKey(System.String)">
            <summary>
            获取Redis中存储的Key
            </summary>
            <param name="key">取值的Key</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageHandle.Set(System.String,System.String,System.Int32)">
            <summary>
            设置一个字符串
            </summary>
            <param name="key">Redis键</param>
            <param name="value">RedisValue</param>
            <param name="keepSeconds">多少秒之后超时</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageHandle.SetExpire(System.String,System.Int32)">
            <summary>
            设置一个字符串
            </summary>
            <param name="key">Redis键</param>
            <param name="keepSeconds">多少秒之后超时</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageHandle.Get(System.String)">
            <summary>
            获取一个字符串
            </summary>
            <param name="key">Redis键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageHandle.GetWithSetExpire(System.String,System.Int32)">
            <summary>
            获取一个字符串并设置超时时间
            </summary>
            <param name="key">Redis键</param>
            <param name="keepSeconds">多少秒之后超时</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageHandle.GetValue(System.String)">
            <summary>
            获取一个字符串
            </summary>
            <param name="key">Redis键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageHandle.GetValueWithSetExpire(System.String,System.Int32)">
            <summary>
            获取一个字符串并设置超时时间
            </summary>
            <param name="key">Redis键</param>
            <param name="keepSeconds">多少秒之后超时</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageHandle.Set(System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            设置一个字符串
            </summary>
            <param name="keyValueDictionary">Redis键值对</param>
            <param name="keepSeconds">多少秒之后超时</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageHandle.SetExpire(System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            设置一个字符串
            </summary>
            <param name="key">Redis键</param>
            <param name="keepSeconds">多少秒之后超时</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageHandle.Get(System.Collections.Generic.List{System.String})">
            <summary>
            获取一个字符串
            </summary>
            <param name="key">Redis键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageHandle.GetWithSetExpire(System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            获取一个字符串列表并设置超时时间
            </summary>
            <param name="key">Redis键</param>
            <param name="keepSeconds">多少秒之后超时</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageHandle.GetValue(System.Collections.Generic.List{System.String})">
            <summary>
            获取一个字符串
            </summary>
            <param name="key">Redis键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageHandle.GetValueWithSetExpire(System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            获取一个字符串列表并设置超时时间
            </summary>
            <param name="key">Redis键</param>
            <param name="keepSeconds">多少秒之后超时</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisV2.RedisDataHandle">
            <summary>
            临时缓存数据
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisDataHandle.#ctor">
            <summary>
            实初化一个Redis的临时存储数据的结构
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisV2.RedisStorageExecuteStringList">
            <summary>
            List的Redis
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageExecuteStringList.GetRealKey(System.Collections.Generic.List{System.String})">
            <summary>
            获取对应的键
            </summary>
            <param name="key">已经是真实的Redis键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageExecuteStringList.RedisSet(MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            获取对应的键
            </summary>
            <param name="client">客户端</param>
            <param name="real_redis_key">已经是真实的Redis键</param>
            <param name="value">RedisValue</param>
            <param name="keepSeconds">多少秒之后超时</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageExecuteStringList.RedisGet(MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager,System.Collections.Generic.List{System.String})">
            <summary>
            获取对应的键
            </summary>
            <param name="client">客户端</param>
            <param name="real_redis_key">已经是真实的Redis键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageExecuteStringList.RedisSetExpire(MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager,System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            获取对应的键
            </summary>
            <param name="client">客户端</param>
            <param name="real_redis_key">Redis键</param>
            <param name="keepSeconds">多少秒之后超时</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisV2.RedisStorageExecuteString">
            <summary>
            String的Redis
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageExecuteString.GetRealKey(System.String)">
            <summary>
            获取对应的键
            </summary>
            <param name="key">已经是真实的Redis键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageExecuteString.RedisSet(MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager,System.String,System.String,System.Int32)">
            <summary>
            获取对应的键
            </summary>
            <param name="client">客户端</param>
            <param name="real_redis_key">已经是真实的Redis键</param>
            <param name="value">RedisValue</param>
            <param name="keepSeconds">多少秒之后超时</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageExecuteString.RedisGet(MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager,System.String)">
            <summary>
            获取对应的键
            </summary>
            <param name="client">客户端</param>
            <param name="real_redis_key">已经是真实的Redis键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageExecuteString.RedisSetExpire(MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager,System.String,System.Int32)">
            <summary>
            获取对应的键
            </summary>
            <param name="client">客户端</param>
            <param name="real_redis_key">Redis键</param>
            <param name="keepSeconds">多少秒之后超时</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageExecuteItem`2.GetRealKey(`0)">
            <summary>
            获取对应的键
            </summary>
            <param name="key">已经是真实的Redis键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageExecuteItem`2.RedisSet(MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager,`0,`1,System.Int32)">
            <summary>
            获取对应的键
            </summary>
            <param name="client">客户端</param>
            <param name="real_redis_key">已经是真实的Redis键</param>
            <param name="value">RedisValue</param>
            <param name="keepSeconds">多少秒之后超时</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageExecuteItem`2.RedisGet(MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager,`0)">
            <summary>
            获取对应的键
            </summary>
            <param name="client">客户端</param>
            <param name="real_redis_key">已经是真实的Redis键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageExecuteItem`2.RedisSetExpire(MangoMis.Frame.Helper.RedisV2.RedisClientPoolManager,`0,System.Int32)">
            <summary>
            获取对应的键
            </summary>
            <param name="client">客户端</param>
            <param name="real_redis_key">Redis键</param>
            <param name="keepSeconds">多少秒之后超时</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageExecuteItem`2.Set(`0,`1,System.Int32)">
            <summary>
            向Redis中设置值
            </summary>
            <param name="key">Redis键</param>
            <param name="value">RedisValue</param>
            <param name="keepSeconds">多少秒之后超时</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageExecuteItem`2.SetExpire(`0,System.Int32)">
            <summary>
            给一个Redis的Key重新设置超时时间
            </summary>
            <param name="key">Redis键</param>
            <param name="keepSeconds">多少秒之后超时</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageExecuteItem`2.Get(`0)">
            <summary>
            获取Redis中的对象
            </summary>
            <param name="key">Redis键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorageExecuteItem`2.GetWithSetExpire(`0,System.Int32)">
            <summary>
            获取一个字符串并设置超时时间
            </summary>
            <param name="key">Redis键</param>
            <param name="keepSeconds">多少秒之后超时</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisV2.RedisStorage">
            <summary>
            用于代替Session.使用SessionId,使用时最好不要使用Session改为使用这个,不要在服务端调用中获取.没有值的
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.RedisStorage.MaxSeconds">
            <summary>
            最长设置15天超时时间
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorage.SetWeek(System.String,System.String)">
            <summary>
            设置一个字符串(超时时间7天)
            </summary>
            <param name="key">Redis键</param>
            <param name="value">RedisValue</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorage.SetDay(System.String,System.String)">
            <summary>
            设置一个字符串(超时时间24小时)
            </summary>
            <param name="key">Redis键</param>
            <param name="value">RedisValue</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorage.Set(System.String,System.String)">
            <summary>
            设置一个字符串(超时时间五分钟)
            </summary>
            <param name="key">Redis键</param>
            <param name="value">RedisValue</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorage.Set(System.String,System.String,System.Int32)">
            <summary>
            设置一个字符串
            </summary>
            <param name="key">Redis键</param>
            <param name="value">RedisValue</param>
            <param name="keepSeconds">多少秒之后超时</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorage.Get(System.String)">
            <summary>
            获取一个字符串
            </summary>
            <param name="key">Redis键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorage.String(System.String)">
            <summary>
            获取一个字符串
            </summary>
            <param name="key">Redis键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.RedisStorage.GetWithSetExpire(System.String,System.Int32)">
            <summary>
            获取一个字符串并设置超时时间
            </summary>
            <param name="key">Redis键</param>
            <param name="keepSeconds">多少秒之后超时</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisV2.StackRedisClientCounterType">
            <summary>
            直接连接Redis客户端的计数器类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.StackRedisClientCounterType.Redis进入Command">
            <summary>
            Redis进入Command
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.StackRedisClientCounterType.Redis客户端为Null">
            <summary>
            Redis客户端为Null
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.StackRedisClientCounterType.Redis客户端有异常HadExceptions">
            <summary>
            Redis客户端有异常HadExceptions
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.StackRedisClientCounterType.Redis运行Command">
            <summary>
            Redis运行Command
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.StackRedisClientCounterType.Redis运行Command结束">
            <summary>
            Redis运行Command结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.StackRedisClientCounterType.Redis运行Command异常">
            <summary>
            Redis运行Command异常
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.StackRedisClientCounterType.Redis运行CommandBefore返回结果">
            <summary>
            Redis运行CommandBefore返回结果
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.StackRedisClientCounterType.Redis重复运行Dispose">
            <summary>
            Redis重复运行Dispose
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.StackRedisClientCounterType.Redis未初始化就Dispose">
            <summary>
            Redis未初始化就Dispose
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.StackRedisClientCounterType.Redis运行Close">
            <summary>
            Redis运行Close
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.StackRedisClientCounterType.Redis访问中尝试关闭">
            <summary>
            Redis访问中尝试关闭
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisV2.StackRedisClient">
            <summary>
            封装过的SeveiceStackRedis
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.#ctor(MangoMis.Frame.Helper.RedisV2.StackReidsClientConfig)">
            <summary>
            初始化一个连接客户端
            </summary>
            <param name="config">需要的配置</param>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.StackRedisClient.Host">
            <summary>
            当前实例连接的主机
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.StackRedisClient.Port">
            <summary>
            当前实例的连接端口
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.StackRedisClient.UseDb">
            <summary>
            当前实例使用的数据库
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.StackRedisClient.ClientKeepAliveSeconds">
            <summary>
            当前实例保持连接的时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.StackRedisClient.IsOutOfKeepAliveTime">
            <summary>
            此实例是否已经超出生存周期
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.StackRedisClient._connectionString">
            <summary>
            当前连接字符串
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.StackRedisClient.IsInited">
            <summary>
            是否已经初始化过
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.StackRedisClient.IsClosed">
            <summary>
            是否已经关闭
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.StackRedisClient.IsError">
            <summary>
            是否发生错误
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisV2.StackRedisClient.HadExceptions">
            <summary>
            Redis客户端是否有异常
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.GetClient">
            <summary>
            取得当前的RedisClient的客户端
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.Close">
            <summary>
            关闭当前的客户端口
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.Get(System.Collections.Generic.List{System.String})">
            <summary>
            取得列表
            </summary>
            <param name="keys">主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.Get(System.String)">
            <summary>
            取得单条数据
            </summary>
            <param name="key">主键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.SetEx(System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            设置值同时设置超时时间
            </summary>
            <param name="values">值列表</param>
            <param name="keepAliveSeconds">超时时间(秒)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.Set(System.String,System.String)">
            <summary>
            设置值
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.SetEx(System.String,System.String,System.Int32)">
            <summary>
            设置值同时设置超时时间
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="keepAliveSeconds">超时时间(秒)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.Set(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            设置值
            </summary>
            <param name="values">值列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.SetAndExpireWhenNotExists(System.String,System.String,System.Int32)">
            <summary>
            如果Key不存在,则赋值并设置超时时间后返回1,如果Key已经存在,则返回0(一般用于单例锁)
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="keepAliveSeconds">超时时间</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.SetWhenNotExists(System.String,System.String)">
            <summary>
            如果Key不存在,则赋值后返回1,如果Key已经存在,则返回0(一般用于单例锁)
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.SetExpire(System.String,System.Int32)">
            <summary>
            设置超时时间
            </summary>
            <param name="key">键</param>
            <param name="keepAliveSeconds">超时时间</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.Delete(System.String)">
            <summary>
            删除一个键
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.DeleteList(System.Collections.Generic.List{System.String})">
            <summary>
            删除一个键
            </summary>
            <param name="keys">键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.ContainsKey(System.String)">
            <summary>
            检查Key是否存在
            </summary>
            <param name="skey">键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.SetByteWithOutExpire(System.String,System.Byte[])">
            <summary>
            设置Byte
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.SetByte(System.String,System.Byte[],System.Int32)">
            <summary>
            设置Byte同时设置超时时间
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <param name="keepAliveSeconds">超时时间(秒)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.GetByte(System.String)">
            <summary>
            设置Byte同时设置超时时间
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.SetRangeInHashSet(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Int32)">
            <summary>
            给HashSet设置一个字典同时设置HashSet的超时时间(不是给HashSet里面的项设置超时时间)
            </summary>
            <param name="dictKey">HashSet索引</param>
            <param name="keyAndValues">HashSet项的Key和Value</param>
            <param name="keepAliveSeconds">几秒后超时</param>
            <returns>返回是否设置成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.SetRangeInHashSetWithoutExpire(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            给HashSet设置一个字典(不设置HashSet的超时时间)
            </summary>
            <param name="dictKey">HashSet索引</param>
            <param name="keyAndValues">HashSet项的Key和Value</param>
            <returns>返回是否设置成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.SetRangeInHashSetAction(ServiceStack.Redis.RedisClient,System.Object[])">
            <summary>
            可以设置超时时间
            </summary>
            <param name="client"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.SetRangeInHashSetWithoutExpireAction(ServiceStack.Redis.RedisClient,System.Object[])">
            <summary>
            不设置超时时间
            </summary>
            <param name="client"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.SetRangeInHashSetAction(ServiceStack.Redis.RedisClient,System.Boolean,System.Object[])">
            <summary>
            给HashSet设置一个值
            </summary>
            <param name="client">客户端</param>
            <param name="isSetExpire">是否设置超时时间</param>
            <param name="args">参数[0=HashId,1=SetId,2=SetValue](如果设置超时时间,第四个参数是超时时间(秒))</param>
            <returns>返回是否设置成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.SetHashSetWithExpire(System.String,System.String,System.String,System.Int32)">
            <summary>
            给HashSet设置一个值同时设置HashSet的超时时间(不是给HashSet里面的项设置超时时间)
            </summary>
            <param name="dictKey">HashSet索引</param>
            <param name="entryKey">HashSet项Key</param>
            <param name="entryValue">HashSet项Value</param>
            <param name="keepAliveSeconds">几秒后超时</param>
            <returns>返回是否设置成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.SetHashSetWithoutExpire(System.String,System.String,System.String)">
            <summary>
            给HashSet设置一个值(不设置HashSet的超时时间)
            </summary>
            <param name="dictKey">HashSet索引</param>
            <param name="entryKey">HashSet项Key</param>
            <param name="entryValue">HashSet项Value</param>
            <returns>返回是否设置成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.SetHashSetWithExpireAction(ServiceStack.Redis.RedisClient,System.Object[])">
            <summary>
            可以设置超时时间
            </summary>
            <param name="client"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.SetHashSetWithoutExpireAction(ServiceStack.Redis.RedisClient,System.Object[])">
            <summary>
            不设置超时时间
            </summary>
            <param name="client"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.SetHashSetAction(ServiceStack.Redis.RedisClient,System.Boolean,System.Object[])">
            <summary>
            给HashSet设置一个值
            </summary>
            <param name="client">客户端</param>
            <param name="isSetExpire">是否设置超时时间</param>
            <param name="args">参数[0=HashId,1=SetId,2=SetValue](如果设置超时时间,第四个参数是超时时间(秒))</param>
            <returns>返回是否设置成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.SetHashSetIncrWithExprie(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            给HashSet设置一个累加值同时设置HashSet的超时时间(不是给HashSet里面的项设置超时时间)
            </summary>
            <param name="dictKey">HashSet索引</param>
            <param name="entryKey">HashSet项Key</param>
            <param name="incrValue">要累加的值</param>
            <param name="keepAliveSeconds">几秒后超时</param>
            <returns>返回累加后的值</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.SetHashSetIncrWithoutExprie(System.String,System.String,System.Int32)">
            <summary>
            给HashSet设置一个累加值(不设置HashSet的超时时间)
            </summary>
            <param name="dictKey">HashSet索引</param>
            <param name="entryKey">HashSet项Key</param>
            <param name="incrValue">要累加的值</param>
            <returns>返回累加后的值</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.SetHashSetIncrWithExprieAction(ServiceStack.Redis.RedisClient,System.Object[])">
            <summary>
            可以设置超时时间
            </summary>
            <param name="client"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.SetHashSetIncrWithoutExprieAction(ServiceStack.Redis.RedisClient,System.Object[])">
            <summary>
            不设置超时时间
            </summary>
            <param name="client"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.SetHashSetIncrAction(ServiceStack.Redis.RedisClient,System.Boolean,System.Object[])">
            <summary>
            给HashSet设置一个累加值
            </summary>
            <param name="client">客户端</param>
            <param name="isSetExpire">是否设置超时时间</param>
            <param name="args">参数[0=HashId,1=SetId,2=累加值(数字)](如果设置超时时间,第四个参数是超时时间(秒))</param>
            <returns>返回累加后的值</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.GetHashSetAll(System.String)">
            <summary>
            取得一个HashSet中所有的值
            </summary>
            <param name="dictKey">HashSet索引</param>
            <returns>返回HashSet内容</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.GetHashSetAllAction(ServiceStack.Redis.RedisClient,System.Object[])">
            <summary>
            取得一个HashSet中所有的值
            </summary>
            <param name="client">客户端</param>
            <param name="args">参数[0=HashId]</param>
            <returns>返回HashSet内容</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.GetHashSetEntry(System.String,System.String)">
            <summary>
            取值HashSet中单独的值
            </summary>
            <param name="dictKey">HashSet索引</param>
            <param name="entryKey">HashSet项的索引</param>
            <returns>HashSet项的值</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.GetHashSetEntryAction(ServiceStack.Redis.RedisClient,System.Object[])">
            <summary>
            取值HashSet中单独的值
            </summary>
            <param name="client">客户端</param>
            <param name="args">参数[0=HashId,1=SetId]</param>
            <returns>HashSet项的值</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.RemoveHashSetEntry(System.String,System.String)">
            <summary>
            移除HashSet中的单独的项目
            </summary>
            <param name="dictKey">HashSet索引</param>
            <param name="entryKey">HashSet项的索引</param>
            <returns>返回设置是否成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.RemoveHashSetEntryAction(ServiceStack.Redis.RedisClient,System.Object[])">
            <summary>
            移除HashSet中的单独的项目
            </summary>
            <param name="client">客户端</param>
            <param name="args">参数[0=HashId,1=SetId]</param>
            <returns>返回设置是否成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.GetHashSetCount(System.String)">
            <summary>
            取得HashSet中的项目个数
            </summary>
            <param name="dictKey">HashSet索引</param>
            <returns>返回内容数目</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.GetHashSetCountAction(ServiceStack.Redis.RedisClient,System.Object[])">
            <summary>
            取得HashSet中的项目个数
            </summary>
            <param name="client">客户端</param>
            <param name="args">参数[0=HashId]</param>
            <returns>返回内容数目</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.AddSetListWithoutExpire(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            [SETS]设置值列表
            </summary>
            <param name="skey">键</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.AddSetListWithExpire(System.String,System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            [SETS]设置值列表的同时设置超时时间
            </summary>
            <param name="skey">键</param>
            <param name="value">值</param>
            <param name="keepAliveSeconds">超时时间(秒)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.AddSetItemWithoutExpire(System.String,System.String)">
            <summary>
            [SETS]设置值
            </summary>
            <param name="skey">键</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.AddSetItemWithExpire(System.String,System.String,System.Int32)">
            <summary>
            [SETS]设置值的同时设置超时时间
            </summary>
            <param name="skey">键</param>
            <param name="value">值</param>
            <param name="keepAliveSeconds">超时时间(秒)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.RemoveSetItemWithoutExpire(System.String,System.String)">
            <summary>
            [SETS]删除值
            </summary>
            <param name="skey">键</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.RemoveSetItemWithExpire(System.String,System.String,System.Int32)">
            <summary>
            [SETS]删除值同时设置超时时间
            </summary>
            <param name="skey">键</param>
            <param name="value">值</param>
            <param name="keepAliveSeconds">超时时间(秒)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.GetSetCount(System.String)">
            <summary>
            [SETS]取得总数
            </summary>
            <param name="skey">键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.GetDataSet(System.String)">
            <summary>
            [SETS]取值
            </summary>
            <param name="skey">键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.GetTimeToLive(System.String)">
            <summary>
            取得超时时间,
            </summary>
            <param name="key">键</param>
            <returns>还剩余多少秒</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.SetWhenNotExistsAction(ServiceStack.Redis.RedisClient,System.Object[])">
            <summary>
            插入成功返回1,插入失败返回0
            </summary>
            <param name="client"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.SetAndExpireWhenNotExistsAction(ServiceStack.Redis.RedisClient,System.Object[])">
            <summary>
            插入成功返回1,插入失败返回0
            </summary>
            <param name="client"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.ClearRunLog">
            <summary>
            清空运行日志
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.StackRedisClient.RunLogList">
            <summary>
            当前运行日志
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.IsActived(System.String)">
            <summary>
            此实例是否正在被访问
            </summary>
            <param name="fromFunction"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.IsCanUseThenUseIt">
            <summary>
            此实例是否可以使用,如果可以使用,则使用它
            </summary>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.StackRedisClient._serviceStacKRedisCounter">
            <summary>
            此实例的计数器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.GetRunCount(MangoMis.Frame.Helper.RedisV2.StackRedisClientCounterType)">
            <summary>
            取得对应类型的计数
            </summary>
            <param name="counterType">计数类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.GetRunCounts">
            <summary>
            取得当前所有类型的计数
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackRedisClient.Dispose">
            <summary>
            执行与释放或重置非托管资源相关的应用程序定义的任务。
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisV2.StackReidsClientConfig">
            <summary>
            封装过的SeveiceStackRedis配置 
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackReidsClientConfig.#ctor(MangoMis.Frame.DB.Info.DBInfo,System.Int32)">
            <summary>
            实例化一个配置
            </summary>
            <param name="dbInfo">数据连接配置</param>
            <param name="keepAliveSeconds">此实例的记录的生存周期(秒)</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.StackReidsClientConfig.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            实例化一个配置
            </summary>
            <param name="host">连接主机地址</param>
            <param name="port">连接端口号</param>
            <param name="useDb">使用的数据库</param>
            <param name="clientKeepAliveSeconds">此实例的记录的生存周期(秒)</param>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.StackReidsClientConfig.Host">
            <summary>
            连接主机地址
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.StackReidsClientConfig.Port">
            <summary>
            连接端口号
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.StackReidsClientConfig.UseDb">
            <summary>
            使用的数据库
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisV2.StackReidsClientConfig.ClientKeepAliveSeconds">
            <summary>
            记录的生存周期(秒)
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisV2.MangoRedisHelper">
            <summary>
            Redis帮助处理
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisHelper.GetManager(System.String)">
            <summary>
            得到当前使用的Manager
            </summary>
            <param name="dbInfoKey">数据源索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisHelper.GetDefault">
            <summary>
            取得默认的Redis连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisHelper.GetManager(MangoMis.Frame.DB.Info.DBInfo)">
            <summary>
            得到当前使用的Manager
            </summary>
            <param name="dbInfo">数据源</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisHelper.GetManager(System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Int32)">
            <summary>
            得到当前使用的Manager
            </summary>
            <param name="redisPath">Redis地址</param>
            <param name="useDb">使用数据库</param>
            <param name="poolClientCount">连接池实例数</param>
            <param name="redisClientKeepAliveSeconds">连接池实例超时时间</param>
            <param name="checkAliveTimeSpanSeconds">检查实例超时时间</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisHelper.GetManagerByConfigValue(System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.Int32)">
            <summary>
            得到当前使用的Manager
            </summary>
            <param name="redisPath">Redis地址</param>
            <param name="useDb">使用数据库</param>
            <param name="poolClientCount">连接池实例数</param>
            <param name="redisClientKeepAliveSeconds">连接池实例超时时间</param>
            <param name="checkAliveTimeSpanSeconds">检查实例超时时间</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisV2.MangoRedisHelper.RebuildManager(MangoMis.Frame.DB.Info.DBInfo)">
            <summary>
            根据配置重建Manager
            </summary>
            <param name="dbInfo"></param>
        </member>
        <member name="T:MangoMis.Frame.Helper.AccessSecretProvider">
            <summary>
            签名验证的创建器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.AccessSecretProvider.Remove(System.String)">
            <summary>
            移除一个参数
            </summary>
            <param name="key">参数Key</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.AccessSecretProvider.AddParam(System.String,System.String)">
            <summary>
            添加一个调用时的地址栏参数
            </summary>
            <param name="key">参数Key</param>
            <param name="value">参数值</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.AccessSecretProvider.BuildUrl(System.String)">
            <summary>
            创建用于访问的URL
            </summary>
            <param name="pageUrl">基础页面地址（不含QueryString，不含？）</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.AccessSecretItem">
            <summary>
            签名验证的项目
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.AccessSecretItem.NewProvider">
            <summary>
            创建一个新的签名验证的地址创建器
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Helper.AccessSecretItem.GroupKey">
            <summary>
            签名分组
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.AccessSecretItem.AccessKeyId">
            <summary>
            访问公钥
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.AccessSecretItem.SecretKey">
            <summary>
            加密私钥
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.SecretHelper">
            <summary>
            私钥帮助类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.SecretHelper.InitSystemSecret">
            <summary>
            实例化系统能自动实例的签名组。会在初始化MangoAPI时初始化
            TODO 未完成自动实例
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.SecretHelper.GetHaveSignatureQueryStringByGroupKey(System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            [私有]取得用于验证的QueryString字符串,返回结果没有最开始的问号
            </summary>
            <param name="urlParams">参数</param>
            <param name="groupKey">公钥组名称</param>
            <returns>返回不带?的条件字符串</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.SecretHelper.GetHaveSignatureQueryStringByGroupKeyWithTimeticks(System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            [私有]取得用于验证的QueryString字符串,返回结果没有最开始的问号,自动添加timeticks
            </summary>
            <param name="urlParams">参数</param>
            <param name="groupKey">公钥组名称</param>
            <returns>返回不带?的条件字符串</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.SecretHelper.GetHaveSignatureQueryString(System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            [私有]取得用于验证的QueryString字符串,返回结果没有最开始的问号
            </summary>
            <param name="urlParams">参数</param>
            <param name="accessKeyId">公钥</param>
            <returns>返回不带?的条件字符串</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.SecretHelper.GetHaveSignatureQueryStringWithTimeticks(System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            [私有]取得用于验证的QueryString字符串,返回结果没有最开始的问号,自动添加timeticks
            </summary>
            <param name="urlParams">参数</param>
            <param name="accessKeyId">公钥</param>
            <returns>返回不带?的条件字符串</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.SecretHelper.GetHaveSignatureQueryString(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String)">
            <summary>
            取得用于验证的QueryString字符串,返回结果没有最开始的问号
            </summary>
            <param name="urlParams">参数</param>
            <param name="accessKeyId">公钥</param>
            <param name="secretKey">私钥</param>
            <returns>返回不带?的条件字符串</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.SecretHelper.GetSignature(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String)">
            <summary>
            取得用于验证的QueryString字符串,返回结果没有最开始的问号
            </summary>
            <param name="urlParams">参数</param>
            <param name="accessKeyId">公钥</param>
            <param name="secretKey">私钥</param>
            <returns>返回不带?的条件字符串</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.SecretHelper.GetSortedQueryString(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            取得排序后的地址栏参数
            </summary>
            <param name="urlParams"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.SecretHelper.InitSecretKeyByCenterConfigKey(System.String,System.String)">
            <summary>
            通过配置中心的ConfigKey来初始化密钥对(配置值的格式为accessKey1:accessSecret1;accessKey2:accessSecret2;..)
            </summary>
            <param name="configKey">配置名</param>
            <param name="accessGroupKey">公钥分组(多个API不同权限时使用.不同分组中的密钥不通用)</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.SecretHelper.AddAcceptSecretKey(System.String,System.String,System.String)">
            <summary>
            添加一个允许访问的公钥私匙对
            </summary>
            <param name="accessGroupKey">公钥分组(多个API不同权限时使用.不同分组中的密钥不通用)</param>
            <param name="accessKey">公钥</param>
            <param name="accessSecret">私钥</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.SecretHelper.RemoveAcceptSecretKeyGroup(System.String)">
            <summary>
            移除一个访问组
            </summary>
            <param name="accessGroupKey">公钥分组(多个API不同权限时使用.不同分组中的密钥不通用)</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.SecretHelper.IsAccept(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean@)">
            <summary>
            验证访问是否是允许的
            </summary>
            <param name="accessGroupKey"></param>
            <param name="urlParams">当前来访所有参数</param>
            <param name="isAccept">是否允许访问</param>
            <returns>返回错误消息</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.SecretHelper.AddAcceptSecretKey(System.String,System.String)">
            <summary>
            添加一个允许访问的公钥私匙对(不分密钥组的密钥,与分组的密钥不通用)
            </summary>
            <param name="accessKey">公钥</param>
            <param name="accessSecret">私钥</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.SecretHelper.IsAccept(System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean@)">
            <summary>
            验证访问是否是允许的(使用的是无分组的通用模式,不分API使用分组)
            </summary>
            <param name="urlParams">当前来访所有参数</param>
            <param name="isAccept">是否允许访问</param>
            <returns>返回错误消息</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.SecretHelper.SpecialUrlEncode(System.String)">
            <summary>
            进行UrlEncode.传递前需要编码
            </summary>
            <param name="v">要传递的字符串</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.TypeToJson">
            <summary>
            根据Type类型输出Json实例,用于查看类型以及POST数据构造
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.TypeToJson.Json">
            <summary>
            返回最终的json字符串
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeToJson.GetReturnJson">
            <summary>
            获取最终的json,替换之后的
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Helper.TypeToJson.ObjType">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.TypeToJson.HaveDescription">
            <summary>
            是否需要显示注释,如果是类型查看需要,如果是显示json用于post不需要
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeToJson.#ctor(System.Type,System.Boolean)">
            <summary>
            
            </summary>
            <param name="_type"></param>
            <param name="_HaveDescription"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeToJson.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeToJson.BaseConvert">
            <summary>
            第一层次判断 如果是基本类型,直接返回空
            </summary>
            <param name="_tmpType"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeToJson.ConvertToJson(System.Type)">
            <summary>
            
            </summary>
            <param name="_tmpType"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeToJson.GetDescription(MangoMis.Frame.MangoApi.TypeDescription,System.String)">
            <summary>
            根据类型读出描述.并且判断
            </summary>
            <param name="doc"></param>
            <param name="filed"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeToJson.GetTypeString(System.Type)">
            <summary>
            通过类型获取实际显示的类型 用于显示返回值类型显示
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.DN_HttpModuleModel">
            <summary>
            自定义的HttpModule
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.DN_HttpModuleModel.Key">
            <summary>
            索引名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.DN_HttpModuleModel.#ctor(System.String,System.String)">
            <summary>
            建立一个程序集
            </summary>
            <param name="key">程序集索引</param>
            <param name="file_path">程序集路径</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.DN_HttpModuleModel.InitAssembly">
            <summary>
            初始化程序集
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.DN_HttpModuleModel.ReBuildModule_All">
            <summary>
            重建当前系统内所有的HttpModule
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.DN_HttpModuleModel.BuildModule(System.String)">
            <summary>
            建立对应的Module类型
            </summary>
            <param name="typename">类型全名</param>
        </member>
        <member name="P:MangoMis.Frame.Helper.DN_HttpModuleModel.Item(System.String)">
            <summary>
            取得对应的HTTPModule
            </summary>
            <param name="typename">类型全名</param>
        </member>
        <member name="T:MangoMis.Frame.Helper.HttpModuleHelper">
            <summary>
            网站模块帮助管理
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.HttpModuleHelper.ModulesCollection">
            <summary>
            自定义的HttpModule集合
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.HttpModuleHelper.InitAssembly(System.String,System.String)">
            <summary>
            初始化一个程序集
            </summary>
            <param name="key">程序集索引</param>
            <param name="file_path">程序集文件路径</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.HttpModuleHelper.InitModule(System.String,System.String,System.String)">
            <summary>
            初始化一个Module
            </summary>
            <param name="key">程序集索引</param>
            <param name="file_path">程序集文件路径</param>
            <param name="moduletype">Module的类型全名</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.HttpModuleHelper.LoadModule(System.String,System.String)">
            <summary>
            加载Module
            </summary>
            <param name="key"></param>
            <param name="moduletype"></param>
        </member>
        <member name="T:MangoMis.Frame.Helper.ObjectToFileHelper">
            <summary>
            实体到文件的转换
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ObjectToFileHelper.proInfo">
            <summary>
            属性的取值列表
            </summary>
            <value>The pro information.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.ObjectToFileHelper.typeInfo">
            <summary>
            类型的取值列表
            </summary>
            <value>The type information.</value>
        </member>
        <member name="F:MangoMis.Frame.Helper.ObjectToFileHelper.word_detail">
            <summary>
            实体中属性的分割
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ObjectToFileHelper.word_list">
            <summary>
            list中的项目分割
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ObjectToFileHelper.word_dict">
            <summary>
            字典项目的分割
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ObjectToFileHelper.word_dict_key_value_split">
            <summary>
            字典键值分割
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ObjectToFileHelper.Deserialize``1(System.String)">
            <summary>
            解析文件
            </summary>
            <typeparam name="MT">文件内容类型</typeparam>
            <param name="path">文件路径</param>
            <returns>``0.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ObjectToFileHelper.Serialize(System.Object,System.String)">
            <summary>
            序列化成文件
            </summary>
            <param name="obj">The object.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ObjectToFileHelper.get_resolve_type(System.Type)">
            <summary>
            取得结构类型
            </summary>
            <param name="type">The type.</param>
            <returns>TT_Resolve_Type.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ObjectToFileHelper.get_resolve(System.Type)">
            <summary>
            取得类型的结构
            </summary>
            <param name="type">The type.</param>
            <returns>Resolve_Struct.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ObjectToFileHelper.resolve_to_info(System.Type,MangoMis.Frame.Helper.Resolve_Struct)">
            <summary>
            格式化类型的类型等
            </summary>
            <param name="type">The type.</param>
            <param name="resolve">The resolve.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ObjectToFileHelper.Serialize_Object(System.Object,MangoMis.Frame.Helper.Resolve_Struct)">
            <summary>
            将实体解析成字符串
            </summary>
            <param name="obj">The object.</param>
            <param name="resolve">The resolve.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ObjectToFileHelper.Resolve_Deserialize(System.String,MangoMis.Frame.Helper.Resolve_Struct)">
            <summary>
            解密文件内容
            </summary>
            <param name="word">The word.</param>
            <param name="resolve">The resolve.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.TT_Resolve_Type">
            <summary>
            转换文件的类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TT_Resolve_Type.Entity">
            <summary>
            实体
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TT_Resolve_Type.IList">
            <summary>
            列表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TT_Resolve_Type.Property">
            <summary>
            属性
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TT_Resolve_Type.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TT_Resolve_Type.IDictionary">
            <summary>
            字典
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.Resolve_Struct">
            <summary>
            转换成文件的基本结构
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.Resolve_Struct.Index">
            <summary>
            序号
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.Resolve_Struct.StructType">
            <summary>
            结构类型
            </summary>
            <value>The type of the structure.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.Resolve_Struct.Key">
            <summary>
            字典的KEY
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.Resolve_Struct.Value">
            <summary>
            字典的值以及列表的值
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.Resolve_Struct.Properties">
            <summary>
            实体的属性
            </summary>
            <value>The properties.</value>
        </member>
        <member name="T:MangoMis.Frame.Helper.ReflectionEnumType">
            <summary>
            反射的运行类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ReflectionEnumType.Invoke">
            <summary>
            执行方法
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ReflectionEnumType.SetField">
            <summary>
            为字段赋值
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ReflectionEnumType.GetField">
            <summary>
            字段取值
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ReflectionEnumType.GetMember">
            <summary>
            取得对象
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ReflectionEnumType.SetProperty">
            <summary>
            属性赋值
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ReflectionEnumType.GetProperty">
            <summary>
            属性取值
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ReflectionEnumType.GetType">
            <summary>
            取得类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ReflectionEnumType.NewEntity">
            <summary>
            新的实体
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.ReflectionOpHelperModel">
            <summary>
            反射操作实体
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ReflectionOpHelperModel._type">
            <summary>
            当前反射操作类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ReflectionOpHelperModel.#ctor(MangoMis.Frame.Helper.ReflectionEnumType)">
            <summary>
            使用类型实例化反射
            </summary>
            <param name="type">反射类型</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ReflectionOpHelperModel.Run(System.Object,System.Type,System.String,System.Object[])">
            <summary>
            运行结果 
            (20170902:修改为obj可以为NULL,取静态变量)
            </summary>
            <param name="obj">执行实体</param>
            <param name="objType">实体的类型</param>
            <param name="name">执行对象名</param>
            <param name="param">执行的参数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ReflectionOpHelperModel.NewEntity(System.Type,System.Object[],System.Type[],System.Type[])">
            <summary>
            新建实体
            </summary>
            <param name="objType">实体类型</param>
            <param name="param">构造函数参数</param>
            <param name="types">如果构造函数参数为NULL则需要指定类型</param>
            <param name="genericTypes">泛型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ReflectionOpHelperModel.Run(System.Object,System.String)">
            <summary>
            运行结果 
            </summary>
            <param name="obj">执行实体</param>
            <param name="name">执行对象名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ReflectionOpHelperModel.Run(System.Object,System.Type,System.String)">
            <summary>
            运行结果 
            </summary>
            <param name="obj">执行实体</param>
            <param name="objType">实体的类型</param>
            <param name="name">执行对象名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ReflectionOpHelperModel.Run(System.Object,System.Type,System.String,System.Object)">
            <summary>
            运行结果 
            </summary>
            <param name="obj">执行实体</param>
            <param name="objType">实体的类型</param>
            <param name="name">执行对象名</param>
            <param name="param">执行的参数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ReflectionOpHelperModel.Run(System.Object,System.String,System.Object[])">
            <summary>
            运行结果(多个参数)
            </summary>
            <param name="obj">执行实体</param>
            <param name="name">执行对象名</param>
            <param name="param">执行的参数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ReflectionOpHelperModel.Run(System.Object,System.String,System.Object)">
            <summary>
            运行结果(单个参数)
            </summary>
            <param name="obj">执行实体</param>
            <param name="name">执行对象名</param>
            <param name="param">执行的参数</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.EvalHelper">
            <summary>
            ReflectionHelper的扩展方法.因为感觉调用有点麻烦
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.EvalHelper.GetFieldsValue(System.Type,System.Object)">
            <summary>
            取得对象所有字段值
            </summary>
            <param name="currentType">要取得值的主体类型</param>
            <param name="obj">对象主体</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.EvalHelper.GetFieldsValue(System.Type)">
            <summary>
            取得所有静态字段值
            </summary>
            <param name="currentType">要取得值的主体类型</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.EvalHelper.GetFieldValue(System.Type,System.String)">
            <summary>
            取得类型的静态字段值
            </summary>
            <param name="currentType">要取得值的主体类型</param>
            <param name="fieldName">字段名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.EvalHelper.GetFieldValue(System.Object,System.String)">
            <summary>
            取得一个实体中的字段(实体不能为NULL)
            </summary>
            <param name="currentObj">对象主体</param>
            <param name="fieldName">字段名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.EvalHelper.GetFieldValue(System.Type,System.Object,System.String)">
            <summary>
            取得对象的字段值
            </summary>
            <param name="currentType">要取得值的主体类型</param>
            <param name="obj">对象主体</param>
            <param name="fieldName">字段名</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.ReflectionHelper">
            <summary>
            反射帮助类.通过反射取得对应的内容
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ReflectionHelper.search_flag">
            <summary>
            查找的Flag.使用相关的Flag进行查找(基本上是所有)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ReflectionHelper.Invoke">
            <summary>
            执行函数
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ReflectionHelper.SetField">
            <summary>
            设置字段值
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ReflectionHelper.GetField">
            <summary>
            取得字段值
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ReflectionHelper.GetProperty">
            <summary>
            取得属性值
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ReflectionHelper.SetProperty">
            <summary>
            取得属性值
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ReflectionHelper.GetMember">
            <summary>
            取得属性值
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ReflectionHelper._getType">
            <summary>
            取得属性值
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ReflectionHelper.CopyProperties(System.Object,System.Object)">
            <summary>
            取得所有的属性
            </summary>
            <param name="objFrom">数据来源</param>
            <param name="objTo">拷贝到</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ReflectionHelper.StaticInvoke``1(System.String,System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Type})">
            <summary>
            运行静态函数
            </summary>
            <param name="methodName">运行函数名</param>
            <param name="paramObjects">运行参数</param>
            <param name="genericTypeList">运行泛型类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ReflectionHelper.StaticInvoke(System.Type,System.String,System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Type})">
            <summary>
            运行静态函数
            </summary>
            <param name="InvokeType">运行实体类型</param>
            <param name="MethodName">运行函数名</param>
            <param name="paramObjects">运行参数</param>
            <param name="genericTypeList">运行泛型类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ReflectionHelper.GetCodeSource(System.Int32,System.Int32)">
            <summary>
            取得调用源
            </summary>
            <param name="skipNumber">跳过几个记录</param>
            <param name="maxLength"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ReflectionHelper.MethodInvoke(System.Type,System.String,System.Object,System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Type})">
            <summary>
            运行函数
            </summary>
            <param name="InvokeType">运行实体类型</param>
            <param name="MethodName">运行函数名</param>
            <param name="AtEntity">运行实体(静态函数可以写NULL)</param>
            <param name="paramObjects">运行参数</param>
            <param name="genericTypeList">运行泛型类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ReflectionHelper.CopyFiled(System.Object,System.Object)">
            <summary>
            取得所有的属性
            </summary>
            <param name="obj_from">数据来源</param>
            <param name="obj_to">拷贝到</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ReflectionHelper.GetPropertyInfos(System.Type)">
            <summary>
            取得所有的属性
            </summary>
            <param name="objType"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ReflectionHelper.GetPropertyInfos(System.Object)">
            <summary>
            取得所有的属性
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ReflectionHelper.GetFields(System.Object)">
            <summary>
            取得所有的字段
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ReflectionHelper.GetMethoInfos(System.Object)">
            <summary>
            取得所有的函数
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ReflectionHelper.GetType(System.Type,System.String)">
            <summary>
            根据基类取得基类程序集中的类型
            </summary>
            <param name="type">基类</param>
            <param name="name">类型名(可以不写全.但是要保证唯一性,而且区分大小写)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ReflectionHelper.NewEntity(System.Type,System.Object[],System.Type[],System.Type[])">
            <summary>
            新建实体
            </summary>
            <param name="objType">实体类型</param>
            <param name="param">构造函数参数</param>
            <param name="types">如果构造函数参数为NULL则需要指定类型</param>
            <param name="genericTypes">泛型</param>
            <returns>新实体.有可能为NULL</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ReflectionHelper.GetParentMethodInfo(System.Int32)">
            <summary>
            取得父级运行的代码
            </summary>
            <param name="parent_number"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ReflectionHelper.GetCustomParentMethodHtml">
            <summary>
            取得所有自定义的父级信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ReflectionHelper.GetParentMethodHTMLText(System.Int32)">
            <summary>
            取得父级运行的Html描述信息
            </summary>
            <param name="parent_number"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.WorkerHelper">
            <summary>
            工作帮助 
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.WorkerHelper.WithQueueThread(System.Action)">
            <summary>
            用于异步运行时使用。想异步运行时。就把函数添加在这里。
            https://www.processon.com/view/link/5ade856de4b046910650a70e
            </summary>
            <param name="doEvent"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WorkerHelper.WithWork(MangoMis.Frame.Helper.WorkEvent)">
            <summary>
            使用后台Work运行
            </summary>
            <param name="doEvent"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WorkerHelper.WithThread(MangoMis.Frame.Helper.WorkEvent)">
            <summary>
            使用后台Work运行
            </summary>
            <param name="doEvent"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WorkerHelper.WithTimer(MangoMis.Frame.Helper.WorkEvent,System.Int32)">
            <summary>
            使用计时器运行
            </summary>
            <param name="doEvent"></param>
            <param name="second_span">几秒后运行</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WorkerHelper.RemoveAllEvent``1(``0,System.String)">
            <summary>
            移除对象中的所有事件
            </summary>
            <typeparam name="MT">移除的对象</typeparam>
            <param name="entity">要移除的事件名</param>
            <param name="eventName">Name of the event.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WorkerHelper.GetObjectEventList``1(``0,System.String)">
            <summary>
            获取对象的事件列表
            </summary>
            <param name="entity">对象</param>
            <param name="p_EventName">事件名 EventClick EventDoubleClick </param>
            <returns>委托列</returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.TTOneWOrker">
            <summary>
            Class TTOneWOrker.
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TTOneWOrker.#ctor(System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Helper.TTOneWOrker" /> class.
            </summary>
            <param name="work">The work.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.TTOneWOrker.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TTOneWOrker.End">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.WorkEvent">
            <summary>
            工作事件
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.DNZxfWork">
            <summary>
            工作事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.DNZxfWork.#ctor(MangoMis.Frame.Helper.WorkEvent,MangoMis.Frame.Helper.WorkEvent)">
            <summary>
            
            </summary>
            <param name="async"></param>
            <param name="callback"></param>
        </member>
        <member name="F:MangoMis.Frame.Helper.DNZxfWork.Do_Async">
            <summary>
            异步调用
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.DNZxfWork.Do_Callback">
            <summary>
            异步调用之后的回调本线程事件
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.DNZxfWorker">
            <summary>
            后台运行工人
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.DNZxfWorker.#ctor(MangoMis.Frame.Helper.WorkEvent,MangoMis.Frame.Helper.DNZxfWork[])">
            <summary>
            初始化工人
            </summary>
            <param name="callback">运行完成回调</param>
            <param name="action_param">运行过程</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.DNZxfWorker.Start">
            <summary>
            开始工人运行
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.DNZxfWorker.End">
            <summary>
            结束工人运行
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.TTWorker">
            <summary>
            后台运行工人
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TTWorker.#ctor(System.Action,System.Tuple{System.Action,System.Action}[])">
            <summary>
            初始化工人
            </summary>
            <param name="callback">运行完成回调</param>
            <param name="action_param">运行过程</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.TTWorker.Start">
            <summary>
            开始工人运行
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TTWorker.End">
            <summary>
            结束工人运行
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.TTDotMessageWorker">
            <summary>
            动态消息工
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TTDotMessageWorker.#ctor(System.String,System.Action{System.String},System.Int32,System.Int32,System.String)">
            <summary>
            初始化
            </summary>
            <param name="text">要发送的文本信息</param>
            <param name="DoWithText">使用文本信息的方法</param>
            <param name="timespan">The timespan.</param>
            <param name="max">The maximum.</param>
            <param name="message_dot">The message_dot.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.TTDotMessageWorker.ReWriteText(System.String)">
            <summary>
            重写文本
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.TTDotMessageWorker.Start">
            <summary>
            开始消息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TTDotMessageWorker.End">
            <summary>
            结束消息
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.TT_H_Table_Item_Type">
            <summary>
            页面Table列表中的单元格内容的类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TT_H_Table_Item_Type.Text">
            <summary>
            单元格中记录的是文本
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TT_H_Table_Item_Type.Html">
            <summary>
            单元格中记录的是Html
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TT_H_Table_Item_Type.Control">
            <summary>
            单元格中记录的是控件
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TT_H_Table_Item_Type.Controls">
            <summary>
            单元格中记录的是控件列表
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.TT_H_Table_Item">
            <summary>
            页面Table列表中的单元格内容
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TT_H_Table_Item.ItemType">
            <summary>
            内容类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TT_H_Table_Item.Value">
            <summary>
            单元格内容
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TT_H_Table_Item.ColSpan">
            <summary>
            占用格
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TT_H_Table_Item.RowSpan">
            <summary>
            占用行
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Table_Item.#ctor(System.Object,MangoMis.Frame.Helper.TT_H_Table_Item_Type)">
            <summary>
            初始化单元格内容
            </summary>
            <param name="content">内容</param>
            <param name="type">内容类型</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Table_Item.Append(System.Object)">
            <summary>
            向单元格中添加内容
            </summary>
            <param name="content">内容</param>
        </member>
        <member name="T:MangoMis.Frame.Helper.TT_H_Table">
            <summary>
            页面Table列表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Table.#ctor(System.String)">
            <summary>
            创建一个页面Table的Html实例
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Table.AddColumn(System.Object,System.Int32)">
            <summary>
            添加字段
            </summary>
            <param name="title">字段名</param>
            <param name="width">字段宽度</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Table.AddRow(System.Collections.Generic.List{System.Object})">
            <summary>
            添加一行
            </summary>
            <param name="row">行内容</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Table.AddRow(System.Collections.Generic.List{MangoMis.Frame.Helper.TT_H_Table_Item})">
            <summary>
            添加一行
            </summary>
            <param name="row">行内容</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Table.GetCell(MangoMis.Frame.Helper.TT_H_Table_Item,System.String)">
            <summary>
            取得带内容的单元格
            </summary>
            <param name="column">单元格实例</param>
            <param name="td_tag">标签内容(可以写 th 如果是td则默认)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Table.Build">
            <summary>
            重新建立本地列表(需要有行和列)
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.TT_H_Select">
            <summary>
            页面下拉框
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Select.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Helper.TT_H_Text"/> class.
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Select.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Helper.TT_H_Text"/> class.
            </summary>
            <param name="id">ID|</param>
            <param name="value">值.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Select.#ctor(System.String,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Helper.TT_H_Text"/> class.
            </summary>
            <param name="id">ID|</param>
            <param name="value">值.</param>
            <param name="onclick"></param>
        </member>
        <member name="T:MangoMis.Frame.Helper.TT_H_Text">
            <summary>
            页面文本控件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Text.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Helper.TT_H_Text"/> class.
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Text.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Helper.TT_H_Text"/> class.
            </summary>
            <param name="id">ID|</param>
            <param name="value">值.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Text.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Helper.TT_H_Text" /> class.
            </summary>
            <param name="id">ID|</param>
            <param name="value">值.</param>
            <param name="width">The width.</param>
        </member>
        <member name="T:MangoMis.Frame.Helper.TT_H_Button">
            <summary>
            页面提交按钮控件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Button.#ctor(System.String,System.String,System.String)">
            <summary>
            页面提交按钮控件(添加进容器之前.要调用Build函数)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.TT_H_Button.Enabled">
            <summary>
            获取或设置按钮是否可用
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.TT_H_Button.Item(System.String)">
            <summary>
            设置或获取此按钮提交的参数
            </summary>
            <param name="key">参数名</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Button.AppendPost(System.String,System.String)">
            <summary>
            添加一个此按钮提交时的参数
            </summary>
            <param name="key">参数名</param>
            <param name="value">参数值</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Button.Build">
            <summary>
            建立按钮的点击事件
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.TT_H_Radio">
            <summary>
            页面文本控件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Radio.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Helper.TT_H_Text" /> class.
            </summary>
            <param name="id">ID|</param>
            <param name="value">值.</param>
            <param name="text">The text.</param>
            <param name="check">if set to <c>true</c> [check].</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Helper.TT_CssLink">
            <summary>
            CSS样式表的页面控件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_CssLink.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Helper.TT_CssLink"/> class.
            </summary>
            <param name="linkUrl">The link URL.</param>
        </member>
        <member name="T:MangoMis.Frame.Helper.TT_H_Block_Type">
            <summary>
            区块类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TT_H_Block_Type.WithTitleAndBoder">
            <summary>
            带标题带边框的区块
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TT_H_Block_Type.Content_Box_2">
            <summary>
            第2种父级DIV
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.DNZxf_H_Detail">
            <summary>
            详情模块
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.DNZxf_H_Detail.body">
            <summary>
            内容.需要手动添加进某容器中
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.DNZxf_H_Detail.#ctor(System.Int32)">
            <summary>
            </summary>
            <param name="width"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.DNZxf_H_Detail.Append(System.Object,System.Object,System.Int32,System.Int32,System.Int32)">
            <summary>
            添加一个单元格
            </summary>
            <param name="title">标题控件</param>
            <param name="value">值控件</param>
            <param name="titl_sapn"></param>
            <param name="row_span">行占用</param>
            <param name="col_span">列占用</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.DNZxf_H_Detail.Line">
            <summary>
            换行
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.DNZxf_H_Detail.Append_Col2(System.Object,System.Object,System.Int32,System.Int32)">
            <summary>
            添加一个单元格
            </summary>
            <param name="title">标题控件</param>
            <param name="value">值控件</param>
            <param name="titl_sapn"></param>
            <param name="row_span">行占用</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.DNZxf_H_Detail.Append_Col3(System.Object,System.Object,System.Int32,System.Int32)">
            <summary>
            添加一个单元格
            </summary>
            <param name="title">标题控件</param>
            <param name="value">值控件</param>
            <param name="titl_sapn"></param>
            <param name="row_span">行占用</param>
        </member>
        <member name="T:MangoMis.Frame.Helper.TT_H_Block">
            <summary>
            HTML中的区块(基于V2版本的样式)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.TT_H_Block.body">
            <summary>
            内容.需要手动添加进某容器中
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Block.Clear">
            <summary>
            清空当前区块节点
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Block.#ctor(MangoMis.Frame.Helper.TT_H_Block_Type)">
            <summary>
            HTML中的区块(基于V2版本的样式)
            建立之后需要手动将body添加进容器中
            </summary>
            <param name="block_type"></param>
        </member>
        <member name="P:MangoMis.Frame.Helper.TT_H_Block.Item(System.Int32)">
            <summary>
            取得控件
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Block.SetTitle(System.String)">
            <summary>
            设置标题内容
            </summary>
            <param name="title">标题内容(支持HTML标记)</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Block.SetTitle(System.Web.UI.Control)">
            <summary>
            设置标题内容
            </summary>
            <param name="titleControl">标题控件</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Block.SetExtendTitle(System.String)">
            <summary>
            设置副标题内容
            </summary>
            <param name="title">副标题内容(支持HTML标记)</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Block.Append(System.String,System.Int32)">
            <summary>
            添加内容
            </summary>
            <param name="text">内容(支持HTML标记)</param>
            <param name="index">子项目索引(从0开始)</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Block.Append(System.Web.UI.HtmlControls.HtmlControl,System.Int32)">
            <summary>
            添加内容
            </summary>
            <param name="control">内容控件</param>
            <param name="index">子项目索引(从0开始)</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Block.Append(System.Web.UI.Control,System.Int32)">
            <summary>
            添加内容
            </summary>
            <param name="control">内容控件</param>
            <param name="index">子项目索引(从0开始)</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Block.AddItem">
            <summary>
            添加子项目并返回索引
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.TT_H_Submit">
            <summary>
            提交按钮
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Submit.#ctor(System.String,System.String)">
            <summary>
            提交按钮
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Submit.#ctor(System.String)">
            <summary>
            提交按钮
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Submit.#ctor">
            <summary>
            提交按钮
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.TT_H_Generic">
            <summary>
            重写HTML控件.为了能方便添加样式
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Generic.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Helper.TT_H_Generic"/> class.
            </summary>
            <param name="tag">标签名(如Div)</param>
            <param name="text">标签内容文本.可以为空值</param>
            <param name="have_class">class标记的内容</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Generic.AddClass(System.String)">
            <summary>
            添加一个样式
            </summary>
            <param name="css">The CSS.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Generic.Append(System.Object)">
            <summary>
            添加一个子控件(支持string,HtmlControl,Control)
            </summary>
            <param name="control">The control.</param>
            <returns>TT_H_Generic.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Generic.Append(System.Web.UI.Control)">
            <summary>
            添加一个子控件
            </summary>
            <param name="control">The control.</param>
            <returns>TT_H_Generic.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Generic.Append(System.Web.UI.HtmlControls.HtmlControl)">
            <summary>
            添加一个子控件
            </summary>
            <param name="control">The control.</param>
            <returns>TT_H_Generic.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.TT_H_Generic.AddCss(System.String)">
            <summary>
            添加Style样式
            </summary>
            <param name="css">The CSS.</param>
        </member>
        <member name="T:MangoMis.Frame.Helper.VirtualPageControl">
            <summary>
            虚拟的一些控件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirtualPageControl.BuildLinkButton(System.String,System.String,System.String,System.String)">
            <summary>
            建立一个页面超链接 (改为使用HtmlContent.Control.A)
            </summary>
            <param name="url">链接地址</param>
            <param name="text">显示文本</param>
            <param name="css">Class</param>
            <param name="target">打开方式</param>
            <returns>HtmlAnchor.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirtualPageControl.BuildBaseDiv(System.String)">
            <summary>
            建立一个页面基础Div
            </summary>
            <param name="title">The title.</param>
            <returns>TT_H_Generic.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirtualPageControl.Msg(System.String)">
            <summary>
            建立一个消息
            </summary>
            <param name="text">The text.</param>
            <returns>TT_H_Generic.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirtualPageControl.Tag(System.String,System.Int32,MangoMis.Frame.Helper.TT_H_Generic@)">
            <summary>
            新建一个Tag(冰哥的样式)
            </summary>
            <param name="text">The text.</param>
            <param name="type">The type.</param>
            <param name="li">The li.</param>
            <returns>MangoMis.Frame.Helper.TT_H_Generic.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirtualPageControl.FormDivLong(System.String,System.Int32,System.Web.UI.Control)">
            <summary>
            建立一个窗格
            </summary>
            <param name="text">The text.</param>
            <param name="width">The width.</param>
            <param name="ctrls">The CTRLS.</param>
            <returns>TT_H_Generic.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirtualPageControl.FormDiv(System.String,System.Web.UI.Control)">
            <summary>
            建立一个窗格
            </summary>
            <param name="text">The text.</param>
            <param name="ctrls">The CTRLS.</param>
            <returns>TT_H_Generic.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirtualPageControl.FormDiv(System.String,MangoMis.Frame.Helper.TT_H_Generic@,System.Web.UI.Control)">
            <summary>
            建立一个窗格
            </summary>
            <param name="text">The text.</param>
            <param name="ctrls">The CTRLS.</param>
            <param name="conSpan">The con span.</param>
            <returns>TT_H_Generic.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirtualPageControl.FormDiv(System.String,System.Collections.Generic.List{MangoMis.Frame.Helper.TT_H_Generic},MangoMis.Frame.Helper.TT_H_Generic@)">
            <summary>
            建立一个窗格
            </summary>
            <param name="text">The text.</param>
            <param name="ctrls">The CTRLS.</param>
            <param name="conSpan">The con span.</param>
            <returns>TT_H_Generic.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirtualPageControl.ShowDictClass(System.Int32)">
            <summary>
            建立一个字典类型的显示文本
            </summary>
            <param name="dict_class_id">字典类型</param>
            <returns>TT_H_Generic.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirtualPageControl.ActionButton(System.String,System.String,System.String,System.String)">
            <summary>
            添加一个方法按钮
            </summary>
            <param name="name">按钮文本</param>
            <param name="formname">所属Form名</param>
            <param name="action">提交的Action事件</param>
            <param name="btnClass">按钮的样式,默认buttonSta02</param>
            <returns>HtmlButton.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirtualPageControl.ClickButton(System.String,System.String,System.String)">
            <summary>
            取得一个点击提交的按钮
            </summary>
            <param name="name">按钮文本</param>
            <param name="formname">所属Form名</param>
            <param name="btnClass">按钮的样式,默认buttonSta02</param>
            <returns>HtmlButton.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirtualPageControl.HtmlInserText(System.String,System.String,System.String)">
            <summary>
            插入一个隐藏的Text
            </summary>
            <param name="id">ID</param>
            <param name="value">值</param>
            <param name="fromrname">From名</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.ErrorMessageHelper">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ErrorMessageHelper.Msg(System.Int32,System.Object[])">
            <summary>
            取得错误信息
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/11 11:26:53
            ************************************************************
            <param name="errorType">Type of the error.</param>
            <param name="inStrings">The in strings.</param>
            <returns>System.String.</returns>
        </member>
        <member name="F:MangoMis.Frame.Helper.ErrorMessageHelper.Msgs">
            <summary>
            错误信息列表
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.ExcelStyle">
            <summary>
            Excel的样式
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="F:MangoMis.Frame.Helper.ExcelStyle.Border">
            <summary>
            有边框
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ExcelStyle.TextFont">
            <summary>
            字体
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ExcelStyle.TextColor">
            <summary>
            字体色
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ExcelStyle.Valign">
            <summary>
            纵向排列 -1 Top 0 Center 1 Bottom
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ExcelStyle.Align">
            <summary>
            横向排列 -1 Left 0 Center 1 Right
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ExcelStyle.Type">
            <summary>
            格式
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ExcelStyle.StyleName">
            <summary>
            样式名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ExcelStyle.BackColor">
            <summary>
            背景色
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExcelStyle.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Helper.ExcelStyle"/> class.
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExcelStyle.String">
            <summary>
            返回样字符串
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Helper.DataType">
            <summary>
            单元格格式
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="F:MangoMis.Frame.Helper.DataType.Defalut">
            <summary>
            默认
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.DataType.Number">
            <summary>
            默认
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.DataType.String">
            <summary>
            字符串
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.ExcelCell">
            <summary>
            Excel的标题
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="F:MangoMis.Frame.Helper.ExcelCell.MergeAcross">
            <summary>
            横向合并
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ExcelCell.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ExcelCell.Style">
            <summary>
            样式
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.ExcelTitle">
            <summary>
            标题
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="F:MangoMis.Frame.Helper.ExcelTitle.MergeAcross">
            <summary>
            横向合并
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ExcelTitle.TitleName">
            <summary>
            标题
            </summary>
            <value>The name of the title.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Helper.ExcelTitle.ColumnName">
            <summary>
            字段名
            </summary>
            <value>The name of the column.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Helper.ExcelTitle.TitleStyle">
            <summary>
            标题样式
            </summary>
            <value>The title style.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Helper.ExcelTitle.CellStyle">
            <summary>
            单元格样式
            </summary>
            <value>The cell style.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExcelTitle.#ctor(System.String,System.String,System.Func{System.String,MangoMis.Frame.Helper.ExcelStyle},System.Func{System.String,System.Object,System.Object,MangoMis.Frame.Helper.ExcelStyle})">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Helper.ExcelTitle"/> class.
            </summary>
            <param name="titleName">Name of the title.</param>
            <param name="columnName">Name of the column.</param>
            <param name="titleStyle">The title style.</param>
            <param name="cellStyle">The cell style.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Helper.ExcelHelper">
            <summary>
            Class ExcelHelper.
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExcelHelper.BuildRowByCells(System.Collections.Generic.List{MangoMis.Frame.Helper.ExcelCell})">
            <summary>
            建立一行Excel
            </summary>
            <param name="cells">The cells.</param>
            <returns>System.String.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExcelHelper.BuildExcelTitle(System.Collections.Generic.List{MangoMis.Frame.Helper.ExcelStyle})">
            <summary>
            建立Excel的表头
            </summary>
            <returns>System.String.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExcelHelper.BuildExcelByCellList(System.String,System.Collections.Generic.List{System.Collections.Generic.List{MangoMis.Frame.Helper.ExcelCell}})">
            <summary>
            建立一个Excel
            </summary>
            <param name="WorkName">Name of the work.</param>
            <param name="rows">The rows.</param>
            <returns>System.String.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExcelHelper.BuildExcelByDataSet(System.String,System.Data.DataSet,System.Collections.Generic.List{System.Collections.Generic.List{MangoMis.Frame.Helper.ExcelTitle}},System.Int32)">
            <summary>
            生成出一个Excel的字符
            </summary>
            <param name="WorkName">Name of the work.</param>
            <param name="ds">The ds.</param>
            <param name="titles">The titles.</param>
            <param name="Number">The number.</param>
            <returns>System.String.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExcelHelper.BuildExcelByDataSet(System.String,System.Data.DataSet,System.Collections.Generic.List{MangoMis.Frame.Helper.ExcelTitle},System.Int32)">
            <summary>
            生成出一个Excel的字符(一张表格,一行表头)
            </summary>
            <param name="WorkName">Name of the work.</param>
            <param name="ds">The ds.</param>
            <param name="titles">The titles.</param>
            <param name="Number">The number.</param>
            <returns>System.String.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExcelHelper.OutExcel(System.String,System.Data.DataSet,System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{System.Collections.Generic.List{MangoMis.Frame.Helper.ExcelTitle}}},System.Collections.Generic.List{MangoMis.Frame.Helper.ExcelStyle})">
            <summary>
            生成出一个Excel的字符(多张表格,多行表头:表名一样)
            </summary>
            <param name="WorkName">Name of the work.</param>
            <param name="ds">The ds.</param>
            <param name="titles">The titles.</param>
            <param name="styles">The styles.</param>
            <returns>System.String.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExcelHelper.OutExcel(System.String,System.Data.DataSet,System.Collections.Generic.Dictionary{System.Int32,System.Tuple{System.String,System.Collections.Generic.List{System.Collections.Generic.List{MangoMis.Frame.Helper.ExcelTitle}}}},System.Collections.Generic.List{MangoMis.Frame.Helper.ExcelStyle})">
            <summary>
            生成出一个Excel的字符(多张表格,多行表头:表名不样)
            </summary>
            <param name="ExcelName">Excel导出名</param>
            <param name="ds">数据源</param>
            <param name="titles">Excel表头(KEY代表使用数据源中第几张Table,Value{ITEM1:Excel表名,Item2,表头})</param>
            <param name="styles">Excel使用样式</param>
            <returns>System.String.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExcelHelper.OutExcel(System.String,System.Data.DataSet,System.Collections.Generic.Dictionary{System.Int32,System.Tuple{System.String,System.Collections.Generic.List{MangoMis.Frame.Helper.ExcelTitle}}},System.Collections.Generic.List{MangoMis.Frame.Helper.ExcelStyle})">
            <summary>
            生成出一个Excel的字符(多张表格,一行表头:表名不样)
            </summary>
            <param name="ExcelName">Excel导出名</param>
            <param name="ds">数据源</param>
            <param name="titles">Excel表头(KEY代表使用数据源中第几张Table,Value{ITEM1:Excel表名,Item2,表头})</param>
            <param name="styles">Excel使用样式</param>
            <returns>System.String.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExcelHelper.OutExcel(System.String,System.Data.DataSet,System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{MangoMis.Frame.Helper.ExcelTitle}},System.Collections.Generic.List{MangoMis.Frame.Helper.ExcelStyle})">
            <summary>
            生成出一个Excel的字符(多张表格,一行表头:表名一样)
            </summary>
            <param name="WorkName">Name of the work.</param>
            <param name="ds">The ds.</param>
            <param name="titles">The titles.</param>
            <param name="styles">The styles.</param>
            <returns>System.String.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExcelHelper.OutExcel(System.String,System.String)">
            <summary>
            Outs the excel.
            </summary>
            <param name="WorkName">Name of the work.</param>
            <param name="ExcelString">The excel string.</param>
            <returns>System.String.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Helper.ExpandHelper">
            <summary>
            扩展使用类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.ForWhere``2(System.Collections.Concurrent.ConcurrentDictionary{``0,``1},System.Func{``0,``1,System.Boolean})">
            <summary>
            使用For循环来进行字典的检索
            </summary>
            <param name="source">数据源字典</param>
            <param name="checkFunc">检索条件(Lamda表达式)</param>
            <typeparam name="TK"></typeparam>
            <typeparam name="TV"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.ForWhere``1(System.Collections.Generic.List{``0},System.Func{``0,System.Boolean})">
            <summary>
            使用For循环来进行List的检索
            </summary>
            <param name="source">数据源List</param>
            <param name="checkFunc">检索条件(Lamda表达式)</param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.DNZxfCount``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            [改为使用 MangoMis.Frame.Helper.Lambda.LambdaExecute][CountList]取得条件记录数
            </summary>
            <param name="source"></param>
            <param name="filters"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.QueryAll``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.IEnumerable{TT.Common.Frame.Model.CommonOrderModel},System.Int32@)">
            <summary>
            Paginations the specified source.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <param name="filters">The filters.</param>
            <param name="orders">The orders.</param>
            <param name="count">The count.</param>
            <returns>IEnumerable{``0}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.GetRandomList``1(System.Collections.Generic.List{``0},System.Int32)">
            <summary>
            取得随机列表
            </summary>
            <typeparam name="TMt">List中的类型</typeparam>
            <param name="list">要查找的List</param>
            <param name="number">要取得的数据个数</param>
            <returns>List{``0}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.GetRandomItem``1(System.Collections.Generic.List{``0})">
            <summary>
            取得列表中随机一条
            </summary>
            <typeparam name="T">List中的类型</typeparam>
            <param name="list">要查找的List</param>
            <returns>List{``0}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.PaginationCount``1(System.Linq.IQueryable{``0})">
            <summary>
            分页读取
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <returns>IQueryable{``0}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.Pagination``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Int32@)">
            <summary>
            Paginations the specified source.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <param name="page">The page.</param>
            <param name="size">The size.</param>
            <param name="filters">The filters.</param>
            <param name="orders">The orders.</param>
            <param name="count">The count.</param>
            <returns>IEnumerable{``0}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.Pagination``1(System.Collections.Generic.List{``0},System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Int32@)">
            <summary>
            分页读取
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <param name="page">The page.</param>
            <param name="size">The size.</param>
            <param name="filters">The filters.</param>
            <param name="orders">The orders.</param>
            <param name="count">The count.</param>
            <returns>IQueryable{``0}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.GetOrderString(System.Collections.Generic.IEnumerable{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            Gets the order string.
            </summary>
            <param name="orders">The orders.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.ToOrderString(TT.Common.Frame.Model.CommonOrderModel[])">
            <summary>
            取得排序条件的字符串
            </summary>
            <param name="orders"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.GetFilterString``1(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Type)">
            <summary>
            取得查询字段串
            </summary>
            <param name="filters">The filters.</param>
            <param name="t">The t.</param>
            <returns>Tuple{System.StringSystem.Object[]}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.DictEach``2(System.Collections.Generic.Dictionary{``0,``1},System.Action{``0,``1})">
            <summary>
            字典的循环
            </summary>
            <typeparam name="TKey">The type of the T key.</typeparam>
            <typeparam name="TValue">The type of the T value.</typeparam>
            <param name="dict">The dict.</param>
            <param name="eachFunction">循环方法.会有两个参数.一个是Key一个是Value</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.DictEach``2(System.Collections.Concurrent.ConcurrentDictionary{``0,``1},System.Action{``0,``1})">
            <summary>
            字典的循环
            </summary>
            <typeparam name="TKey">The type of the T key.</typeparam>
            <typeparam name="TValue">The type of the T value.</typeparam>
            <param name="dict">The dict.</param>
            <param name="eachFunction">循环方法.会有两个参数.一个是Key一个是Value</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.ChangeToIntList(System.String)">
            <summary>
            把用","分割的字符串转成数值列表
            </summary>
            <param name="value">The value.</param>
            <returns>List{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.ChangeToList(System.String)">
            <summary>
            把用","分割的字符串转成列表
            </summary>
            <param name="value">The value.</param>
            <returns>List{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.ChangeToKeyValuePair(System.String)">
            <summary>
            将字符从等号之前算Key之后算Value
            </summary>
            <param name="value">The value.</param>
            <returns>List{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.ChangeToList(System.String,System.String)">
            <summary>
            把分割的字符串转成列表
            </summary>
            <param name="value">The value.</param>
            <param name="split">The split.</param>
            <returns>List{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.ToInt(System.String)">
            <summary>
            转换成INT
            </summary>
            <param name="value">The value.</param>
            <returns>List{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.Int(System.Object)">
            <summary>
            转换成INT
            </summary>
            <param name="value">The value.</param>
            <returns>List{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.Decimal(System.Object)">
            <summary>
            转换成INT
            </summary>
            <param name="value">The value.</param>
            <returns>List{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.Float(System.Object)">
            <summary>
            转换成INT
            </summary>
            <param name="value">The value.</param>
            <returns>List{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.Date(System.Object)">
            <summary>
            转换成DateTime
            </summary>
            <param name="value">The value.</param>
            <returns>List{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.NullOrWhiteSpaceUse(System.String,System.String)">
            <summary>
            判断一个字符串是否是IsNullOrWhiteSpace,如果是,则返回defalutValue,不是则返回字符串本身
            </summary>
            <param name="value">判断是否是Null的值</param>
            <param name="defaultValue">默认值</param>
            <returns>如果IsNullOrWhiteSpace,则返回defalutValue,不是则返回字符串本身</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.MaxLength(System.String,System.Int32)">
            <summary>
            检查一个字符串的字符长度,如果超过限定值,会截断后补充四个点占位....
            </summary>
            <param name="value">检查的值</param>
            <param name="maxLength">最大字符长度,截断值会比最大长度少2个字符(为了添加....)</param>
            <returns>返回截断后字符串</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.NullOrWhiteSpaceUse(System.String,System.String,System.String[])">
            <summary>
            判断一个字符串是否是IsNullOrWhiteSpace,如果是,则返回后续第一个不是的,最终返回最后一个
            </summary>
            <param name="value">判断是否是Null的值</param>
            <param name="defaultValue">默认值</param>
            <param name="defaultValueParams">后续默认值.按顺序判断直到不是IsNullOrWhiteSpace,最终返回最后一个</param>
            <returns>如果IsNullOrWhiteSpace,则返回defalutValue,不是则返回字符串本身</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.NullOrEmptyUse(System.String,System.String)">
            <summary>
            判断一个字符串是否是IsNullOrEmpty,如果是,则返回defalutValue,不是则返回字符串本身
            </summary>
            <param name="value">判断是否是Null的值</param>
            <param name="defaultValue">默认值</param>
            <returns>如果IsNullOrEmpty,则返回defalutValue,不是则返回字符串本身</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ExpandHelper.NullOrEmptyUse(System.String,System.String,System.String[])">
            <summary>
            判断一个字符串是否是IsNullOrEmpty,如果是,则返回后续第一个不是的,最终返回最后一个
            </summary>
            <param name="value">判断是否是Null的值</param>
            <param name="defaultValue">默认值</param>
            <param name="defaultValueParams">后续默认值.按顺序判断直到不是IsNullOrWhiteSpace,最终返回最后一个</param>
            <returns>如果IsNullOrEmpty,则返回defalutValue,不是则返回字符串本身</returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.DesFileHelper">
            <summary>
            加密文件帮助类
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.DesFileHelper.ttkey">
            <summary>
            基础Key
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.DesFileHelper.ttiv">
            <summary>
            基础IV
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.DesFileHelper.WriteFile(System.Object,System.String)">
            <summary>
            将可序列化的对象写入文件
            </summary>
            <param name="obj">The obj.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.DesFileHelper.ReadFile``1(System.String)">
            <summary>
            将可序列化的对象写入文件
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.DesFileHelper.DESEncryptObject(System.Object,System.String,System.String)">
            <summary> 
            使用DES加密指定字符串 
            </summary> 
            <param name="encryptObject">待加密的实体 </param> 
            <param name="key">密钥(最大长度8) </param> 
            <param name="iv">初始化向量(最大长度8) </param> 
            <returns>加密后的字符串 </returns> 
        </member>
        <member name="M:MangoMis.Frame.Helper.DesFileHelper.DESDecryptObject(System.Byte[],System.String,System.String)">
            <summary>
            使用DES解密指定字符串
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/6/5 11:21:01
            ************************************************************
            <param name="encryptedValue">待解密的字符串</param>
            <param name="key">密钥(最大长度8)</param>
            <param name="iv">初始化向量(最大长度8)</param>
            <returns>解密后的字符串</returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.WriteTextParam">
            <summary>
            写入文件的参数
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WriteTextParam.WriteText">
            <summary>
            写入文本
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WriteTextParam.FirstAppend">
            <summary>
            首次添加的补充文本
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WriteTextParam.IsAppend">
            <summary>
            写入时是否是追加写入
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WriteTextParam.IsCreateNew">
            <summary>
            是否是新创建的文件
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WriteTextParam.Encoding">
            <summary>
            编码格式
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.LoadedAssembly">
            <summary>
            加载好的应用程序集
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.LoadedAssembly.LoadedItem">
            <summary>
            已经读取的程序集
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.LoadedAssembly.LoadTime">
            <summary>
            首次读取时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.LoadedAssembly.LastReloadTime">
            <summary>
            最后一次读取时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.LoadedAssembly.LoadType">
            <summary>
            1 通过文件  2 通过SqlServer
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.LoadedAssembly.LastReloadType">
            <summary>
            1 通过文件  2 通过SqlServer
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.LoadedAssembly.LoadUserId">
            <summary>
            首次读取人
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.LoadedAssembly.LastReloadUserId">
            <summary>
            最后一次重读人
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.LoadedAssembly.LoadErrorMessage">
            <summary>
            读取时的错误信息
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.LoadedAssembly.LoadAssemblyVersion">
            <summary>
            加载的程序集的版本
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.LoadedAssembly.AssemblyLastUpdateTime">
            <summary>
            加载的程序集的的最后修改时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.LoadedAssembly.LoadTimes">
            <summary>
            读取次数
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.FileHelper">
            <summary>
            实体文件操作类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.GetAssemblyBodies">
            <summary>
            取得所有的程序集[改为使用: DomainAssembly.GetAssemblyBodies()]
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.GetAssemblyBodies(MangoMis.Frame.AssemblyLoader.TypeGroupKey)">
            <summary>
            取得程序集[改为使用: DomainAssembly.GetAssemblyBodies(groupKey)]
            </summary>
            <param name="groupKey">要取得的程序集类型[如果传TypeGroupKey.None就是所有]</param>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Helper.FileHelper.CurrentAssemblies">
            <summary>
            [改为使用: DomainAssembly.GetAssemblyBodies()]
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.LoadDataAssemblies">
            <summary>
            读取接口映射的Data[改为使用:无]
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.ReloadDataAssembly(System.String)">
            <summary>
            重新加载DataDll内容 [改为使用:DomainAssembly.ReloadAssembly]
            </summary>
            <param name="assemblyKey">程序集Key</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.GetCurrentAssemblies(MangoMis.Frame.AssemblyLoader.TypeGroupKey)">
            <summary>
            取得当前所有加载的应用程序集[改为使用:DomainAssembly.Get]
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.GetCurrentAssembly(System.String)">
            <summary>
            取得当前加载的应用程序集[改为使用:DomainAssembly.Get]
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.GetCurrentAssemblies">
            <summary>
            取得当前所有加载的应用程序集[改为使用:DomainAssembly.GetAssemblyBodies]
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Helper.FileHelper.LoadedAssemblies">
            <summary>
            放弃使用
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.CurrentLoadAssemblyByPath(System.String,System.String)">
            <summary>
            本类私有取得相关的DLL内容[改为使用:DomainAssembly.LoadAssemblyByPath]
            </summary>
            <param name="dllPath"></param>
            <param name="pdbPath"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.GetAssemblyInfo(System.String)">
            <summary>
            取得加载的应用程序集的信息[改为使用:DomainAssembly.TryGetAssemblyKeyByPathOrLoad取得程序集索引.然后使用 DomainAssembly.Get(程序集索引)来取得程序集信息对象]
            </summary>
            <param name="dllPath">程序路径不存在则返回NULL</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.GetAssemblyByPath(System.String,System.String)">
            <summary>
            从文件读取程序集[改为使用:TryGetAssemblyKeyByPathOrLoad取得程序集索引.然后使用 DomainAssembly.Get(程序集索引)来取得程序集信息对象]
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.ReGetAssemblyByPath(System.String,System.String)">
            <summary>
            从文件重新读取程序集(一般只作为按钮或独立接口调用.不能用于初始化.因为会不判断是否存在)
            [改为使用:TryGetAssemblyKeyByPathOrLoad取得程序集索引.然后使用 DomainAssembly.ReloadAssembly(程序集索引)来重新加载程序集]
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.GetAssemblyBySql(System.String)">
            <summary>
            TODO:BySql
            从SqlServer读取程序集[改为使用:暂无]
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.WriteLoadLog(System.String,System.Exception)">
            <summary>
            加载文件时的日志
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.ShowLoadLog">
            <summary>
            显示读取文件的日志
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.GetFileMemoryStream(System.String)">
            <summary>
            读取文件的流,放入内存流中
            </summary>
            <param name="fullFilePath"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.ReadAssemblyFromSql(System.String,System.String)">
            <summary>
            读取程序集
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.ReadAssembly(System.String)">
            <summary>
            读取程序集
            </summary>
            <param name="path">程序集路径</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.SaveFile(System.String,System.IO.Stream)">
            <summary>
            保存本地文件
            </summary>
            <param name="path">The path.</param>
            <param name="stream">The stream.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.WriteFile(System.Object,System.String)">
            <summary>
            写入文件
            </summary>
            <param name="obj">The object.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.ReadFile``1(System.String)">
            <summary>
            读取文件
            </summary>
            <typeparam name="TMt">The type of the mt.</typeparam>
            <param name="path">The path.</param>
            <returns>``0.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.ObjectToXML(System.String,System.Object)">
            <summary>
            XML序列化对象
            </summary>
            <param name="path">The path.</param>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.XMLToObject``1(System.String)">
            <summary>
            反序列化XML字符串
            </summary>
            <typeparam name="T">The type of the mt.</typeparam>
            <param name="path">The path.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.GetPath(System.String)">
            <summary>
            取得物理路径
            </summary>
            <param name="path">The path.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.IsFileUsed(System.String)">
            <summary>
            查看文件是否被占用(可以使用返回false,不可使用返回true)
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.ClearDir(System.String)">
            <summary>
            清空文件夹
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.SetFileNormal(System.String)">
            <summary>
            将只读文件改为非只读
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="P:MangoMis.Frame.Helper.FileHelper.WriteFileQueue">
            <summary>
            写入Text的队列
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.FileHelper.WriteFileQueueIsRunngin">
            <summary>
            写入Text的队列是否在运行
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.ReadTextLocker(System.String,MangoMis.Frame.Model.InitEventAction)">
            <summary>
            读取文件的时候的锁定
            </summary>
            <param name="filePath"></param>
            <param name="readAction"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.WriteFile_ForSerialize(System.String,System.Object)">
            <summary>
            向文件中写入对象的序列化.内部调用.用于队列调用时调用
            </summary>
            <param name="filePath">文件路径</param>
            <param name="obj">需要序列化的对象</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.MergePath(System.String[])">
            <summary>
            合并路径.用于不确定路径中的分割符是\\还是/的情况
            </summary>
            <param name="paths">路径列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.ReadText(System.String)">
            <summary>
            读取文件文本
            </summary>
            <param name="path">The path.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.CheckAndCreatePath(System.String)">
            <summary>
            检查并尝试创建文件夹
            </summary>
            <param name="path">The path.</param>
            <returns>System.Boolean.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.ReadFileBytes(System.String)">
            <summary>
            取得二进制文件内容
            </summary>
            <param name="path">The path.</param>
            <returns>System.Byte[][].</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.GetCRCCode(System.Byte[])">
            <summary>
            取得二进制数据的CRC
            </summary>
            <param name="data">The data.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.FileHelper.WriteText(System.String,System.String,System.Boolean,System.String)">
            <summary>
            写入文本
            </summary>
            <param name="path">The path.</param>
            <param name="text">The text.</param>
            <param name="IsAppend">if set to <c>true</c> [is append].</param>
            <param name="FirstAppend">创建文件时添加的文本</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.Crc32">
            <summary>
            CRC32取值
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.Crc32.Value">
            <summary>
            得到CRC的值
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.Crc32.Reset">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.Crc32.Crc(System.Int32)">
            <summary>
            
            </summary>
            <param name="bval"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.Crc32.CRC(System.Byte[])">
            <summary>
            CRCs the specified buf.
            </summary>
            <param name="buf">The buf.</param>
            <exception cref="T:System.ArgumentNullException">buf</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:MangoMis.Frame.Helper.Crc32.Crc(System.Byte[])">
            <summary>
            
            </summary>
            <param name="buffer"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.Crc32.Crc(System.Byte[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="buf"></param>
            <param name="off"></param>
            <param name="len"></param>
        </member>
        <member name="T:MangoMis.Frame.Helper.DynamicQueryable">
            <summary>
            <example>
            //var query = db.Customers.Where("City == @0 and Orders.Count >= @1", "London", 10).OrderBy("CompanyName").Select("New(CompanyName as Name, Phone)");
            </example>
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.LogAllotItem.SourceLogName">
            <summary>
            源Log名,如果没有则只要遇到都转移
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.LogAllotItem.MessageKeyWordList">
            <summary>
            转移关键字(遇到内容字符串则转移)自定义Message的关键字
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.LogAllotItem.TotalKeyWordList">
            <summary>
            转移关键字(遇到内容字符串则转移)(全部内容的关键字)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.LogAllotItem.TargetLogName">
            <summary>
            转移目标日志名
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.LogHelper">
            <summary>
            日志帮助
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.LogHelper._isCustomLogStoreSuccess">
            <summary>
            当前创建Store是否成功
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.LogHelper._isInitCustomLogStore">
            <summary>
            是否已经初始化过日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.LogHelper.CustomLogConfigStore">
            <summary>
            
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.LogHelper._logAllotStoreSuccess">
            <summary>
            当前创建Store是否成功
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.GetAllotLogNameByMessage(System.String,System.String)">
            <summary>
            通过自定义的消息内容,取得分配日志的结果
            </summary>
            <param name="sourceLogName">来源日志名</param>
            <param name="msg">自定义的消息</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.GetAllotLogNameByTotalMessage(System.String,System.String)">
            <summary>
            通过全部的消息内容,取得分配日志的结果
            </summary>
            <param name="sourceLogName">来源日志名</param>
            <param name="totalMsg">通过全部的消息内容取得分配的日志名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.CommonLog(System.String,System.Int32,System.Exception)">
            <summary>
            写入普通日志
            </summary>
            <param name="msg">The MSG.</param>
            <param name="ex">The ex.</param>
            <param name="stepNumber">The step number.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.LogOut(System.String,System.Int32,System.Exception)">
            <summary>
            写入登出日志
            </summary>
            <param name="msg">The MSG.</param>
            <param name="ex">The ex.</param>
            <param name="stepNumber">The step number.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.DownloadLog(System.String,System.Int32,System.Exception)">
            <summary>
            写入普通日志
            </summary>
            <param name="msg">The MSG.</param>
            <param name="ex">The ex.</param>
            <param name="stepNumber">The step number.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.Custom(System.String,System.String,System.Int32,System.Exception)">
            <summary>
            写入自定义的信息
            </summary>
            <param name="customname">自定义的Log名</param>
            <param name="msg">The MSG.</param>
            <param name="ex">The ex.</param>
            <param name="stepNumber">The step number.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.AppStartLog(System.String,System.Int32,System.Exception)">
            <summary>
            写入系统启动日志
            </summary>
            <param name="msg">The MSG.</param>
            <param name="ex">The ex.</param>
            <param name="stepNumber">The step number.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.SysRunningLog(System.String,System.Int32,System.Exception)">
            <summary>
            写入系统运行日志
            </summary>
            <param name="msg">The MSG.</param>
            <param name="ex">The ex.</param>
            <param name="stepNumber">The step number.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.ErrorUse(System.String)">
            <summary>
            使用了错误的缓存或函数的记录
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.Catch(System.String,System.Exception,System.Int32)">
            <summary>
            写入捕捉到的异常
            </summary>
            <param name="msg">The MSG.</param>
            <param name="ex">The ex.</param>
            <param name="stepNumber">The step number.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.Cache(System.String,System.Int32,System.Exception)">
            <summary>
            缓存文件日志
            </summary>
            <param name="msg">The MSG.</param>
            <param name="stepNumber">The step number.</param>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.Error(System.String,System.Int32,System.Exception)">
            <summary>
            写入判断的异常
            </summary>
            <param name="msg">The MSG.</param>
            <param name="ex">The ex.</param>
            <param name="stepNumber">The step number.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.Fatal(System.String,System.Int32,System.Exception)">
            <summary>
            写入判断的异常
            </summary>
            <param name="msg">The MSG.</param>
            <param name="ex">The ex.</param>
            <param name="stepNumber">The step number.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.WriteCommonLog(System.String,System.Int32,System.Exception)">
            <summary>
            写入普通日志,
            </summary>
            <param name="msg">The MSG.</param>
            <param name="ex">The ex.</param>
            <param name="stepNumber">The step number.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.WriteLogOut(System.String,System.Int32,System.Exception)">
            <summary>
            写入登出日志
            </summary>
            <param name="msg">The MSG.</param>
            <param name="ex">The ex.</param>
            <param name="stepNumber">The step number.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.WriteDownloadLog(System.String,System.Int32,System.Exception)">
            <summary>
            写入普通日志
            </summary>
            <param name="msg">The MSG.</param>
            <param name="ex">The ex.</param>
            <param name="stepNumber">The step number.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.WriteAppStartLog(System.String,System.Int32,System.Exception)">
            <summary>
            写入系统启动日志
            </summary>
            <param name="msg">The MSG.</param>
            <param name="ex">The ex.</param>
            <param name="stepNumber">The step number.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.WriteSysRunningLog(System.String,System.Int32,System.Exception)">
            <summary>
            写入系统运行日志
            </summary>
            <param name="msg">The MSG.</param>
            <param name="ex">The ex.</param>
            <param name="stepNumber">The step number.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.WriteCatch(System.String,System.Exception,System.Int32)">
            <summary>
            写入捕捉到的异常
            </summary>
            <param name="msg">The MSG.</param>
            <param name="ex">The ex.</param>
            <param name="stepNumber">The step number.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.WriteCache(System.String,System.Int32,System.Exception)">
            <summary>
            缓存文件日志
            </summary>
            <param name="msg">The MSG.</param>
            <param name="stepNumber">The step number.</param>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.WriteError(System.String,System.Int32,System.Exception)">
            <summary>
            写入判断的异常
            </summary>
            <param name="msg">The MSG.</param>
            <param name="ex">The ex.</param>
            <param name="stepNumber">The step number.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.LogIsOpen(System.String)">
            <summary>
            此日志是否开启
            </summary>
            <param name="logName"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.CustomNoStack(System.String,System.String,System.Int32,System.Exception)">
            <summary>
            写入自定义的信息(不记录堆栈信息)
            </summary>
            <param name="customname">自定义的Log名,尽量用[中文名],并且说明白干啥用的.</param>
            <param name="msg">The MSG.</param>
            <param name="ex">The ex.</param>
            <param name="stepNumber">The step number.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.WriteCustom(System.String,System.String,System.Int32,System.Exception)">
            <summary>
            写入自定义的信息
            </summary>
            <param name="customname">自定义的Log名,尽量用[中文名],并且说明白干啥用的.</param>
            <param name="msg">The MSG.</param>
            <param name="ex">The ex.</param>
            <param name="stepNumber">The step number.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.WriteFatal(System.String,System.Int32,System.Exception)">
            <summary>
            写入判断的异常
            </summary>
            <param name="msg">The MSG.</param>
            <param name="ex">The ex.</param>
            <param name="stepNumber">The step number.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.WriteApplicationError">
            <summary>
            写入系统日志
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.NewLogger">
            <summary>
            News the logger.
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.WriteLog(System.String,System.String,System.Int32,System.Exception)">
            <summary>
            写入日志
            </summary>
            <param name="msg">日志信息</param>
            <param name="path">写入地址</param>
            <param name="stepNumber">取出上几步的信息</param>
            <param name="ex">错误信息</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.LogHelper.Log(System.String,System.String,System.Int32,System.Exception,System.Boolean)">
            <summary>
            写入日志
            </summary>
            <param name="msg">日志信息</param>
            <param name="logName">写入地址</param>
            <param name="stepNumber">取出上几步的信息</param>
            <param name="ex">错误信息</param>
            <param name="isStack">记录堆栈信息.默认为True=记录</param>
        </member>
        <member name="T:MangoMis.Frame.Helper.PinYinHelper">
            <summary>
            拼音帮助类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.PinYinHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Helper.PinYinHelper"/> class.
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.PinYinHelper.GetFirstSpell(System.String)">
            <summary>
            取得拼音首字母
            </summary>
            <param name="inString">The in string.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.PinYinHelper.GetSpell(System.String)">
            <summary>
            获得拼音
            </summary>
            <param name="str_Chinese">汉字</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.PinYinHelper.ToPinYinList(System.Char)">
            <summary>
            单个字符转拼音列表
            </summary>
            <param name="chr"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.PinYinHelper.ToPinYinList(System.String)">
            <summary>
            字符串转拼音列表
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.PinYinHelper.ZhToPinYinList(System.String)">
            <summary>
            字符串转拼音拆分列表
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.PinYinHelper.ToPinYinFirstList(System.String)">
            <summary>
            字符串转拼音首字母列表
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.PinYinHelper.GetUnion(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            两个字符串集合的并集
            </summary>
            <param name="list1"></param>
            <param name="list2"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.PinYinHelper.ReplacePinYinNG(System.String)">
            <summary>
            替换ing为in
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.PinYinHelper.NG(System.String,System.String,System.String)">
            <summary>
            处理 ing eng ang ong
            </summary>
            <param name="str"></param>
            <param name="oldstr"></param>
            <param name="newstr"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.PinYinHelper.ZHCHSH(System.String,System.String,System.String)">
            <summary>
            处理 zh ch sh
            </summary>
            <param name="str"></param>
            <param name="oldstr"></param>
            <param name="newstr"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.PinYinHelper.NumberToZi(System.String)">
            <summary>
            数字转汉字
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.RedisHelper`1">
            <summary>
            Redis缓存帮助
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisHelper`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Helper.RedisHelper`1"/> class.
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisHelper`1.#ctor(System.String,MangoMis.Frame.DB.Info.DBInfo)">
            <summary>
            通过名称以及服务信息初始化Redis缓存
            </summary>
            <param name="name">表名</param>
            <param name="dbInfo">服务器初始化信息</param>
        </member>
        <member name="F:MangoMis.Frame.Helper.RedisHelper`1._name">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisHelper`1.Name">
            <summary>
            表名
            </summary>
            <value>The name.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisHelper`1.KeyBefore">
            <summary>
            键前缀
            </summary>
            <value>The key before.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisHelper`1.GetConnectionString">
            <summary>
            取得连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisHelper`1.GetTableName">
            <summary>
            取得表名
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Helper.RedisHelper`1.Client">
            <summary>
            取得客户端
            </summary>
            <value>The client.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisHelper`1.GetEntitysByKeys(System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            取出所有对象
            </summary>
            <returns>List{`0}.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisHelper`1.GetAll">
            <summary>
            取出所有对象
            </summary>
            <returns>List{`0}.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisHelper`1.Count">
            <summary>
            取得当前缓存数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisHelper`1.InsertDictionary(System.Collections.Generic.Dictionary{System.Object,`0})">
            <summary>
            向缓存中插入一个字典
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisHelper`1.GetListByIds(System.Collections.Generic.List{System.Object})">
            <summary>
            通过ID取出列表
            </summary>
            <param name="ids">The ids.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisHelper`1.GetModel(System.Object)">
            <summary>
            通过ID取出实体
            </summary>
            <param name="id">The identifier.</param>
            <returns>`0.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisHelper`1.RemoveByIds(System.Collections.Generic.List{System.Object})">
            <summary>
            通过ID列表删除多条
            </summary>
            <param name="ids">The ids.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisHelper`1.Remove(System.Object)">
            <summary>
            移除一条记录
            </summary>
            <param name="id">The identifier.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisHelper`1.RemoveAll">
            <summary>
            删除所有
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.RedisHelper`1.RemoeByKey(System.Object)">
            <summary>
            按键删除
            </summary>
            <param name="key">The key.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Helper.StringHelper">
            <summary>
            字符串帮助信息
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="F:MangoMis.Frame.Helper.StringHelper.Empty">
            <summary>
            空字符串
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.StringHelper.Make_Money_String(System.Object,System.Int32)">
            <summary>
            制作数字字符串,可用于将过万的数值写为**万
            </summary>
            <param name="money">金额.可以是String或decimal等</param>
            <param name="roundNumber">保留小数位数</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.StringHelper.Make_Length_Number(System.Object,System.Int32)">
            <summary>
            制作一个定长字符串不足位在前面以零补足
            </summary>
            <param name="number"></param>
            <param name="maxLength"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.StringHelper.BuildSizeString(System.Decimal,System.Int32)">
            <summary>
            计算文件大小的String
            </summary>
            <param name="size"></param>
            <param name="unitIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.StringHelper.ComputeSize(System.Decimal,System.Int32)">
            <summary>
            递归计算文件大小
            </summary>
            <param name="size"></param>
            <param name="unitIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.StringHelper.ComputeSize(System.Int64)">
            <summary>
            计算文件大小的字符串
            </summary>
            <param name="size">文件Length(字节)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.StringHelper.StartIs(System.String,System.String)">
            <summary>
            检查是否是开始字符
            </summary>
            <param name="baseString">基础字符串检查的基字符串</param>
            <param name="checkIsStringText">要检查的开始字符</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.StringHelper.MakeCoverWord(System.Object)">
            <summary>
            在字符串中添加干扰字符.目前是添加(*)
            </summary>
            <param name="obj">The object.</param>
            <returns>System.String.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/24 14:50:27
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.StringHelper.GetRegexString(System.String,System.String)">
            <summary>
            正则验证
            </summary>
            <param name="regexString">用于验证的正则字符串</param>
            <param name="validateString">验证的字符</param>
            <returns></returns>
            <example></example>
            CreateUser:Mr.Zxf
            CreateDate:2012/12/26
        </member>
        <member name="F:MangoMis.Frame.Helper.StringHelper.IpRegexString">
            <summary>
            IP正则字符串
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.StringHelper.IpRegex">
            <summary>
            IP正则表达式
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.StringHelper.IsIp(System.String)">
            <summary>
            查看一个字符串是否是IP
            </summary>
            <param name="stringText">字符串文本</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.StringHelper.RegexString(System.String,System.String)">
            <summary>
            正则验证
            </summary>
            <param name="regexString">用于验证的正则字符串</param>
            <param name="validateString">验证的字符</param>
            <returns></returns>
            <example></example>
            CreateUser:Mr.Zxf
            CreateDate:2012/12/26
        </member>
        <member name="M:MangoMis.Frame.Helper.StringHelper.CheckStringPower(System.String)">
            <summary>
            验证字符串强度.
            小于四位直接为[0]分
            默认不连接字符大于等于(3)个为[0]分.不连续字符超过五个加[1]分.不连续字符小于(3)个.每少(1)个减[1]分{112233会判断为全连续字符}
            默认不相同字符大于等于(3)个为[0]分.小于(3)个每少(1)个减[1]分
            包含
                1.小写英文[1]分
                2.大写英文[2]分
                3.数字[1]分
                4.特殊字符[2]分
                5.全角特殊字符[3]分
                6.同时包含大写和小写英文[1]分
            最低[0]分
            </summary>
            <param name="checkString">被验证字符串</param>
            <returns></returns>
            <example></example>
            CreateUser:Mr.Zxf
            CreateDate:2012/12/26
        </member>
        <member name="T:MangoMis.Frame.Helper.TimerHelper">
            <summary>
            定时执行
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TimerHelper.timer">
            <summary>
            The timer
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TimerHelper.RunList">
            <summary>
            运行列表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TimerHelper.Add(MangoMis.Frame.Helper.TimerRunModel)">
            <summary>
            添加一个定时运行
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/5/13 16:32:37
            ************************************************************
            <param name="entity">The entity.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.TimerHelper.GetMaxTimerId">
            <summary>
            Gets the now timer identifier.
            </summary>
            <returns>System.Int32.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.TimerHelper.GetList">
            <summary>
            取得当前运行列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/5/13 16:36:34
            ************************************************************
            <returns>TimerRunModel[][].</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.TimerHelper.GetList(System.Int32)">
            <summary>
            取得当前运行列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/5/13 16:36:34
            ************************************************************
            <returns>TimerRunModel[][].</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.TimerHelper.Remove(System.Int32)">
            <summary>
            删除一个定时运行
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/5/13 16:32:47
            ************************************************************
            <param name="Id">The id.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="F:MangoMis.Frame.Helper.TimerHelper.Status">
            <summary>
            当前运行判断(0未运行,1已经运行)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TimerHelper.Begin">
            <summary>
            开始
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/5/13 16:32:55
            ************************************************************
            <exception cref="T:System.Exception">开始失败</exception>
        </member>
        <member name="M:MangoMis.Frame.Helper.TimerHelper.End">
            <summary>
            结束
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/5/13 16:33:00
            ************************************************************
            <exception cref="T:System.Exception">结束失败</exception>
        </member>
        <member name="M:MangoMis.Frame.Helper.TimerHelper.#ctor">
            <summary>
             初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TimerHelper.EventTarget(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            处理事件
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/5/13 16:33:18
            ************************************************************
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Timers.ElapsedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:MangoMis.Frame.Helper.TimeRunFunction">
            <summary>
            定时运行的方法
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.TimeRunType">
            <summary>
            计时类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TimeRunType.timeSpan">
            <summary>
            时间间隔
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TimeRunType.onDayTime">
            <summary>
            每天固定时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TimeRunType.onWeekDay">
            <summary>
            每周固定某天某时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TimeRunType.onMonthDay">
            <summary>
            每月固定某天某时间
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.TimerRunModel">
            <summary>
            定时运行的类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TimerRunModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Helper.TimerRunModel"/> class.
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TimerRunModel.#ctor(System.Int32,System.Int32,System.String,MangoMis.Frame.Helper.TimeRunFunction,MangoMis.Frame.Helper.TimeRunType,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Helper.TimerRunModel"/> class.
            </summary>
            <param name="Id">编号</param>
            <param name="runSpan">运行间隔(秒)</param>
            <param name="runName">运行名(暂时没啥大用.只用来显示)</param>
            <param name="runFunction">运行方法</param>
            <param name="type">定时类型</param>
            <param name="runObj">参与运行的参数.可以没有</param>
        </member>
        <member name="P:MangoMis.Frame.Helper.TimerRunModel.RunTime">
            <summary>
            运行时间.如果是每月或每周.请定义好时间.会按定义时间的天或星期几来运行
            </summary>
            <value>The run time.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.TimerRunModel.BeginTime">
            <summary>
            首次运行时间
            </summary>
            <value>The run time.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.TimerRunModel.IfRun">
            <summary>
            是否运行
            </summary>
            <value><c>true</c> if [if run]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.TimerRunModel.RunId">
            <summary>
            运行编号 不可重复
            </summary>
            <value>The run id.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.TimerRunModel.RunSpan">
            <summary>
            以秒为单位
            </summary>
            <value>The run span.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.TimerRunModel.LastRunTime">
            <summary>
            上次运行时间
            </summary>
            <value>The run span.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.TimerRunModel.RunName">
            <summary>
            Gets or sets the name of the run.
            </summary>
            <value>The name of the run.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.TimerRunModel.RunObject">
            <summary>
            运行参数
            </summary>
            <value>The run object.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.TimerRunModel.RunFunction">
            <summary>
            运行的方法
            </summary>
            <value>The run function.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.TimerRunModel.OnType">
            <summary>
            计时类型
            </summary>
            <value>The type of the on.</value>
        </member>
        <member name="T:MangoMis.Frame.Helper.TypeHelper">
            <summary>
            数据类型传换等操作
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeHelper.GetSourceType(System.Type)">
            <summary>
            初始化一个字段类型
            </summary>
            <param name="currentType">当前类型</param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.Helper.TypeHelper.FullNameOfObject">
            <summary>
            String全名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TypeHelper.FullNameOfBool">
            <summary>
            INT全名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TypeHelper.FullNameOfInt">
            <summary>
            INT全名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TypeHelper.FullNameOfString">
            <summary>
            String全名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TypeHelper.FullNameOfDate">
            <summary>
            DateTime全名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TypeHelper.FullNameOfDecimal">
            <summary>
            Decimal 全名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TypeHelper.FullNameOfFloat">
            <summary>
            Float 全名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TypeHelper.FullNameOfDouble">
            <summary>
            Double全名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TypeHelper.TypeOfByteArray">
            <summary>
            Object 的类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TypeHelper.TypeOfObject">
            <summary>
            Object 的类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.TypeHelper.TypeOfString">
            <summary>
            string 的类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeHelper.GetProType(System.Type)">
            <summary>
            取得真实类型
            </summary>
            <param name="info">The info.</param>
            <returns>Type.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeHelper.CopyObj``2(``1,``0@)">
            <summary>
            转换模型(相同的属性之间转换)
            </summary>
            <typeparam name="To">转换到的数据类型</typeparam>
            <typeparam name="From">原数据模型</typeparam>
            <param name="entity">被转换的实体</param>
            <param name="ret">填充的实体</param>
            <returns></returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/9/5
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeHelper.EqualDateTime(System.Object,System.Object)">
            <summary>
            比较日期类型是否相同
            </summary>
            <param name="datetime1"></param>
            <param name="datetime2"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeHelper.TypeConvertObj``2(``1,``0)">
            <summary>
            转换模型(相同的属性之间转换)
            </summary>
            <typeparam name="To">转换到的数据类型</typeparam>
            <typeparam name="From">原数据模型</typeparam>
            <param name="entity">被转换的实体</param>
            <param name="ret">填充的实体</param>
            <returns></returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/9/5
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeHelper.GetStringValue``1(``0,System.String)">
            <summary>
            取得对象实体中的属性值.取出时为String类型
            </summary>
            <typeparam name="MT">对象类型</typeparam>
            <param name="entity">对象实体</param>
            <param name="propertyName">属性名</param>
            <returns></returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/9/15
            <author>
            张晓丰
            </author>
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeHelper.GetEnumNameAndValues(System.Type)">
             <summary>
            取得枚举的类型以及值
             </summary>
             <param name="enumType">枚举类型</param>
             <returns>Key是枚举值,Value是枚举定义的字符呼呼大睡</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeHelper.GetMethodName(System.Reflection.MethodBase)">
            <summary>
            取得类型名(包括泛型名)
            </summary>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeHelper.GetTypeName(System.Type)">
            <summary>
            取得类型名(包括泛型名)
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeHelper.GetEnumValues(System.Type)">
             <summary>
            取得枚举的类型
             </summary>
             <param name="enumType">Type of the enum.</param>
             <returns>List{System.Object}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeHelper.ToObjectList(System.Collections.Generic.List{System.Int32})">
            <summary>
            把ID的列表转成Object的(用来做WCF条件)
            </summary>
            <param name="ids">列表</param>
            <returns>List</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeHelper.TypeConvert(System.Object,System.Type)">
            <summary>
            类型转换(可以转换Nullabled值)
            </summary>
            <param name="turnObject">转换的对象</param>
            <param name="newType">转换成的类型</param>
            <returns></returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/9/6
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeHelper.Cast``1(System.Object)">
            <summary>
            类型转换(可以转换Nullabled值)
            </summary>
            <param name="turnObject">转换的对象</param>
            <returns></returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/9/6
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeHelper.IntConvert(System.Object)">
            <summary>
            将一个值转换为Int32类型(可以转Nullabled)
            </summary>
            <param name="turnObject">需要转换的对象</param>
            <returns>System.Int32.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 14:54:06
            ************************************************************
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/8/8 14:54:06
            添加为空判断
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeHelper.DecimalConvert(System.Object)">
            <summary>
            将一个值转换为Int32类型(可以转Nullabled)
            </summary>
            <param name="turnObject">需要转换的对象</param>
            <returns>System.Int32.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 14:54:06
            ************************************************************
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/8/8 14:54:06
            添加为空判断
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeHelper.FloatConvert(System.Object)">
            <summary>
            将一个值转换为float类型(可以转Nullabled)
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 14:54:06
            ************************************************************
            <param name="turnObject">需要转换的对象</param>
            <returns>float.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeHelper.DateConvert(System.Object)">
            <summary>
            将一个值转换为DateTime类型(可以转Nullabled)
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 14:54:06
            ************************************************************
            <param name="turnObject">需要转换的对象</param>
            <returns>System.DateTime.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeHelper.GetIdValueList``1(System.Collections.Generic.List{``0},System.String,System.String)">
            <summary>
            将一个列表转换成ID/值的模式(id,text)
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 15:00:12
            ************************************************************
            <typeparam name="MT">要转换的类型</typeparam>
            <param name="ItemList">要转换的列表</param>
            <param name="IdColumn">ID的字段名</param>
            <param name="ValueColumn">值的字段名</param>
            <returns>List{Item_IdValue}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeHelper.TimeString(System.DateTime)">
            <summary>
            将日期转成字符串
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>System.String.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeHelper.S_DT(System.Nullable{System.DateTime})">
            <summary>
            返回yyyy-MM-dd HH:mm:ss格式的字符串
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>System.String.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Helper.TypeHelper.MinTime">
            <summary>
            取得最小的时间
            </summary>
            <value>The minimum time.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeHelper.GetPropertyValues(System.Object,System.Type)">
            <summary>
            取得实体的所有属性的值
            </summary>
            <param name="entity">The entity.</param>
            <param name="entity_type">The entity_type.</param>
            <returns>Dictionary{System.StringSystem.Object}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeHelper.Key_Value``1(System.String,``0)">
            <summary>
            取得一个KeyValuePair参数
            </summary>
            <param name="key">KEY</param>
            <param name="value">VALUE</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.TypeHelper.GetPropertyValue(System.Object,System.Type,System.String)">
            <summary>
            取得实体的属性值
            </summary>
            <param name="entity">实体</param>
            <param name="entity_type">实体类型</param>
            <param name="property_name">属性名(不区分大小写)</param>
            <returns>System.Object.</returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.KeyText">
            <summary>
            只包括Key和Value的实体
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.KeyText.#ctor">
            <summary>
            初始化一个空对象
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.KeyText.#ctor(System.String)">
            <summary>
            初始化一个对象
            </summary>
            <param name="key">索引</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.KeyText.#ctor(System.String,System.String)">
            <summary>
            初始化一个对象
            </summary>
            <param name="key">索引</param>
            <param name="text">Text的值</param>
        </member>
        <member name="P:MangoMis.Frame.Helper.KeyText.Key">
            <summary>
            Key
            </summary>
            <value>Key</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.KeyText.Text">
            <summary>
            值
            </summary>
            <value>The text.</value>
        </member>
        <member name="T:MangoMis.Frame.Helper.Item_IdValue">
            <summary>
            只包括ID和值的对象
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.Item_IdValue.#ctor">
            <summary>
            初始化一个空对象
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.Item_IdValue.#ctor(System.Int32)">
            <summary>
            初始化一个对象
            </summary>
            <param name="Id">ID的值</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.Item_IdValue.#ctor(System.Int32,System.String)">
            <summary>
            初始化一个对象
            </summary>
            <param name="Id">ID的值</param>
            <param name="Text">Text的值</param>
        </member>
        <member name="P:MangoMis.Frame.Helper.Item_IdValue.id">
            <summary>
            ID
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.Item_IdValue.text">
            <summary>
            值
            </summary>
            <value>The text.</value>
        </member>
        <member name="T:MangoMis.Frame.Helper.ValidateHelper">
            <summary>
            Class ValidateHelper.
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="F:MangoMis.Frame.Helper.ValidateHelper.CheckMsg">
            <summary>
            验证的信息
            TODO:或者放弃,或者改为使用安全字典
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ValidateHelper.GetMessage(MangoMis.Frame.Helper.Validate_CheckType,System.String,System.String)">
            <summary>
            取得错误消息内容
            </summary>
            <param name="checkType">消息类型</param>
            <param name="strParam1">消息内容</param>
            <param name="strParam2">消息内容</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ValidateHelper.GetMessage(MangoMis.Frame.Helper.Validate_CheckType,System.String)">
            <summary>
            取得错误消息内容
            </summary>
            <param name="checkType">消息类型</param>
            <param name="strParam1">消息内容</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ValidateHelper.GetMessage(MangoMis.Frame.Helper.Validate_CheckType,System.Object[])">
            <summary>
            取得错误消息内容
            </summary>
            <param name="checkType">消息类型</param>
            <param name="strParams">消息内容</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ValidateHelper.IsMast(System.Object)">
            <summary>
            验证是否必填
            </summary>
            <param name="value">The value.</param>
            <returns><c>true</c> if the specified value is mast; otherwise, <c>false</c>.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.ValidateHelper.Validate(System.Object,MangoMis.Frame.Helper.Validate_CheckType,System.Object)">
            <summary>
            Validates the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="data">The data.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Helper.Validate_CheckType">
            <summary>
            默认验证
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="F:MangoMis.Frame.Helper.Validate_CheckType.必填">
            <summary>
            必须要填写
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Validate_CheckType.中文字符">
            <summary>
            The 中文字符
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Validate_CheckType.英文字符">
            <summary>
            The 英文字符
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Validate_CheckType.英文数字">
            <summary>
            The 英文数字
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Validate_CheckType.手机号">
            <summary>
            The 手机号
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Validate_CheckType.身份证">
            <summary>
            The 身份证
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Validate_CheckType.Email">
            <summary>
            The email
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Validate_CheckType.整数">
            <summary>
            The 整数
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Validate_CheckType.实数">
            <summary>
            The 实数
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Validate_CheckType.半整数">
            <summary>
            The 半整数
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Validate_CheckType.重复检验">
            <summary>
            The 重复检验
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Validate_CheckType.最大长度">
            <summary>
            The 最大长度
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Validate_CheckType.最小长度">
            <summary>
            The 最小长度
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.Validate_CheckType.数值范围">
            <summary>
            The 数值范围
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.VirPageHelper">
            <summary>
            建立虚拟页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.VirPageHelper.IsSSOSite">
            <summary>
            是否SSO站点
            </summary>
            <value><c>true</c> if this instance is sso site; otherwise, <c>false</c>.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Helper.VirPageHelper.SSOUid">
            <summary>
            单点的用户编号
            </summary>
            <value>The sso uid.</value>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirPageHelper.GetHrefHtml(System.String,System.String,System.String,System.String)">
            <summary>
            取得地址
            </summary>
            <param name="url">The URL.</param>
            <param name="name">The name.</param>
            <param name="actionString">The action string.</param>
            <param name="valueString">The value string.</param>
            <returns>System.String.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirPageHelper.SetDefaultCss(System.Web.UI.ControlCollection,System.Boolean)">
            <summary>
            设置默认CSS样式.(已经取消改为在Render中自动引用)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.VirPageHelper.VirPages">
            <summary>
            当前所有的虚拟页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirPageHelper.WriteVirPage">
            <summary>
            写入一个虚拟页面
            </summary>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="P:MangoMis.Frame.Helper.VirPageHelper.VirBaseAction">
            <summary>
            基础运行函数
            </summary>
            <value>The vir base action.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.VirPageHelper.VirAction">
            <summary>
            运行的函数信息
            </summary>
            <value>The vir action.</value>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirPageHelper.BuildPostSitePage(System.String)">
            <summary>
            建立默认的页面
            </summary>
            <param name="title">The title.</param>
            <returns>Page.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirPageHelper.New_DNZxf_Page(System.String,MangoMis.Frame.Helper.TT_H_Generic@,System.String)">
            <summary>
            虚拟建立一个新页面(2015-10-20制作.为了替换其它的新建页面,方便统一管理)
            </summary>
            <param name="name">页面名</param>
            <param name="base_div">基础Div</param>
            <param name="formID">Form的ID.这个参数没什么用.只是为了兼容</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirPageHelper.BuildDefaultPage(System.String,System.Web.UI.HtmlControls.HtmlForm@,MangoMis.Frame.Helper.TT_H_Generic@)">
            <summary>
            建立默认的页面
            </summary>
            <param name="title">The title.</param>
            <param name="form">The form.</param>
            <param name="div"></param>
            <returns>Page.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirPageHelper.GetDefalutPage">
            <summary>
            取得默认的页面地址
            </summary>
            <returns>Page.</returns>
        </member>
        <member name="P:MangoMis.Frame.Helper.VirPageHelper.PowerUserIds">
            <summary>
            系统超级管理员
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirPageHelper.GetSettingSitePower">
            <summary>
            有配置权限的人的设置页面
            </summary>
            <returns>Page.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirPageHelper.GetLogPage">
            <summary>
            建立日志列表
            </summary>
            <returns>Page.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirPageHelper.GetWCFAppNameMapping">
            <summary>
            取得WCF的所有接口映射
            </summary>
            <returns>Page.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirPageHelper.GetRequestRecordPage">
            <summary>
            建立日志列表
            </summary>
            <returns>Page.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirPageHelper.GetIPRecordPage">
            <summary>
            建立日志列表
            </summary>
            <returns>Page.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirPageHelper.GetSettingPage">
            <summary>
            取得默认的页面地址
            </summary>
            <returns>Page.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirPageHelper.GetCustomSettingPage">
            <summary>
            取得默认的页面地址
            </summary>
            <returns>Page.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirPageHelper.GetFilePages">
            <summary>
            取得默认的页面地址
            </summary>
            <returns>Page.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirPageHelper.Temp_Manager">
            <summary>
            取得默认的页面地址
            </summary>
            <returns>Page.</returns>
        </member>
        <member name="F:MangoMis.Frame.Helper.VirPageHelper.IsInitVirPage">
            <summary>
            是否已经初始化虚拟页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirPageHelper.InitVirPage">
            <summary>
            初始化虚拟页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirPageHelper.GetIcon">
            <summary>
            取得网站图标
            </summary>
            <returns>Icon.</returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.VirPageModel">
            <summary>
            虚拟页面模型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirPageModel.#ctor(System.String,System.String,System.Func{System.Web.UI.Page})">
            <summary>
            初始化虚拟页面模型
            </summary>
            <param name="pageName">页面的地址栏</param>
            <param name="buttonName">页面的按钮名</param>
            <param name="action">建立页面的函数</param>
        </member>
        <member name="F:MangoMis.Frame.Helper.VirPageModel.Action">
            <summary>
            页面的地址栏
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.VirPageModel.Disorder">
            <summary>
            当前页面的排序
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.VirPageModel.ButtonName">
            <summary>
            页面的按钮名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.VirPageModel.PageName">
            <summary>
            建立页面的函数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.VirPageModel.Compare(System.String)">
            <summary>
            查看当前地址是否是本地址
            </summary>
            <param name="url">The URL.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.ClientHelper`2">
            <summary>
            WCF客户端接口调用
            </summary>
            <typeparam name="TMt">The type of the MT.</typeparam>
            <typeparam name="THandler">The type of the vistor.</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.#ctor(`1)">
            <summary>
            无参数的初始化.会取默认值
            </summary>
            <param name="handler">The _handler.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.#ctor(System.String,`1)">
            <summary>
            使用PageName初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.#ctor(System.String,System.Int32,`1)">
            <summary>
            使用PageName和ConnType初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.#ctor(System.Boolean,System.String,System.String,`1)">
            <summary>
            使用PageName和ConnString初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.#ctor(System.String,System.String,`1)">
            <summary>
            使用PageName和passKey初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.#ctor(System.String,System.Int32,System.String,`1)">
            <summary>
            使用PageName和ConnType和passKey初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.#ctor(System.String,System.String,System.Int32,`1)">
            <summary>
            使用PageName和passKey和Type初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.#ctor(System.String,System.String,System.String,System.String,`1)">
            <summary>
            初始化<see cref="T:MangoMis.Frame.Helper.ClientHelper`2" /> class.
            </summary>
            <param name="pageName">页面名</param>
            <param name="siteName">站点名</param>
            <param name="ConnString">连接类型new使用新库,old使用老库</param>
            <param name="passKey">The pass key.</param>
            <param name="_vistor">The _handler.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.#ctor(System.String,System.String,System.Int32,System.String,`1)">
            <summary>
            初始化<see cref="T:MangoMis.Frame.Helper.ClientHelper`2" /> class.
            </summary>
            <param name="pageName">页面名</param>
            <param name="siteName">站点名</param>
            <param name="Type">连接类型1使用新库,2使用老库</param>
            <param name="passKey">The pass key.</param>
            <param name="_vistor">The _handler.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.OnInit(System.String,System.String,System.String,System.Int32,`1)">
            <summary>
            用于构造函数调用的初始化函数
            </summary>
            <param name="pageName">页面名</param>
            <param name="siteName">站点名</param>
            <param name="passKey">加密密钥</param>
            <param name="type">连接类型(0old,1new)</param>
            <param name="_vistor">接口实体</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.OnInit(System.String,System.String,System.String,System.String,`1)">
            <summary>
            用于构造函数调用的初始化函数
            </summary>
            <param name="pageName">页面名</param>
            <param name="siteName">站点名</param>
            <param name="passKey">加密密钥</param>
            <param name="connKey">连接类型</param>
            <param name="_vistor">接口实体</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.TryToMatchWcfUrl(System.String)">
            <summary>
            测试自动匹配相关的WCF地址
            </summary>
            <param name="typename"></param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.Helper.ClientHelper`2.IsSetCity">
            <summary>
            是否提交CityId
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ClientHelper`2.IsCityId">
            <summary>
            是否使用CityId
            </summary>
            <value>The is city id.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.ClientHelper`2.vistor">
            <summary>
            接口实例.如果有单独调用的函数可以通过接口实例直接调用.注意传提OtherString
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ClientHelper`2._page">
            <summary>
            当前页面名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ClientHelper`2._site">
            <summary>
            当前站点名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ClientHelper`2.strConnString">
            <summary>
            字符类型的连接字符串
            </summary>
            <value>The string connection string.</value>
        </member>
        <member name="F:MangoMis.Frame.Helper.ClientHelper`2._type">
            <summary>
            指定调用的是哪个数据库(0 老库 1 新库 2 之后的其它库.要在WebConfig里配置对应的Conn2....)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.ClientHelper`2._connkey">
            <summary>
            指定调用的是哪个连接字符串
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ClientHelper`2.OtherParam">
            <summary>
            获取其它数据链接
            </summary>
            <value>The other param.</value>
        </member>
        <member name="F:MangoMis.Frame.Helper.ClientHelper`2.TableName">
            <summary>
            要查询的表名(用于同样结构的多张表)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.ClientHelper`2.otherString">
            <summary>
            使用的Otherstring.包括了相关的Connkey等信息
            </summary>
            <value>The other string.</value>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.Invoke``1(System.String,System.Object[])">
            <summary>
            调用非默认接口函数
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 14:00:33
            ************************************************************
            <typeparam name="T">返回的类型</typeparam>
            <param name="action">调用的函数名(与接口内要调用的函数名一致)</param>
            <param name="ps">传入参数</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.GetList">
            <summary>
            取得全部列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.GetTotalColumnByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="columns">需要查询的字段列表</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.GetTotalListByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.GetTotalIDByPageSize(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Int32)">
            <summary>
            分页取得条件下的所有数据
            </summary>
            <param name="filters">条件</param>
            <param name="pagesize">每页取多少条.默认是200条</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.GetList(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得分页列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.GetList(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            按条件取得所有列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <param name="filters">条件</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.GetIds(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得ID列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.GetVers(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.String)">
            <summary>
            取得版本列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="verString"></param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.GetValues(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String})">
            <summary>
            取得版本列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/5/11 15:49:21
            ************************************************************
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">The columns.</param>
            <returns>DefaultResult{List{``0}}.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.GetModelByFilter(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel})">
            <summary>
            取得一个对象的实体
            </summary>
            <param name="filters">The filters.</param>
            <param name="orders">The orders.</param>
            <returns>DefaultResult{List{``0}}.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:20150106
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.GetModel(System.Int32)">
            <summary>
            取得一个对象的实体
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <param name="id">The id.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.GetModelByIds(System.Collections.Generic.List{System.Int32})">
            <summary>
            通过ID列表取得实体列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <param name="ids">The id.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.GetCount(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            取得符合条件的记录总数
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-星期三-2013
            ************************************************************
            <param name="filters">条件</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.GetCount(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得当前条件下的统计数据
            </summary>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
            ************************************************************
            Create By  :Mr.zxfpub
            Create Date:03-星期三-2013
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.GetCount(System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            取得可分页的统计数据
            </summary>
            <param name="page">页数</param>
            <param name="pagesize">每页条目数</param>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="orders">The orders.</param>
            <param name="columns">格式说明:[SUM]:函数,求和[SUM(YMoney)]:统计YMoney的和,[AS YMoney]:统计结果将赋值到实体的YMoney属性里返回,[Hid]:指定返回的分组条件,一般做为索引项目;要统计的字段:格式格式--&gt;"sum(YMoney) AS YMoney","Hid"</param>
            <param name="groups">格式说明:[Hid]:分组的条件,以此条件分组进行统计,如果不需要分组,查的是总计,则此List可以是空的List(统计字段中也同样就不需要返回分组条件了);分组条件:格式"Hid"</param>
            <returns>DefaultResult{System.Int32}.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-星期三-2013
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.Update(`0)">
            <summary>
            更新条目
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <param name="entity">提交更新的实体</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.UpdateList(System.Collections.Generic.List{`0})">
            <summary>
            更新条目
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <param name="entitys">提交更新的实体</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.Add(`0)">
            <summary>
            新增条目
            </summary>
            <param name="entity">提交更新的实体</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:01-01-0001
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.AddList(System.Collections.Generic.List{`0})">
            <summary>
            添加列表项目
            </summary>
            <param name="entitys">The entitys.</param>
            <returns>DefaultResult{System.Int32}.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-17-2013
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.AddList_v2(System.Collections.Generic.List{`0})">
            <summary>
            添加列表项目
            </summary>
            <param name="entitys">The entitys.</param>
            <returns>DefaultResult{System.Int32}.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-17-2013
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.UpdateByFilter(`0,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            通过条件更新列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 10:57:16
            ************************************************************
            <param name="entity">更新的实体</param>
            <param name="filters">条件</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.DeleteByFilter(System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel})">
            <summary>
            通过条件删除列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 10:57:16
            ************************************************************
            <param name="filters">条件</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.Delete(`0)">
            <summary>
            删除一条记录
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 10:57:16
            ************************************************************
            <param name="entity">删除的实体(必须实例化主键)</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.Clear">
            <summary>
            清空系统缓存
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 11:06:53
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.Reload">
            <summary>
            清空系统缓存
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 11:06:53
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.ReloadById(System.Int32)">
            <summary>
            清空系统缓存
            </summary>
            <param name="id">The identifier.</param>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 11:06:53
            ************************************************************
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.ClientHelper`2.ReloadByIds(System.Collections.Generic.List{System.Int32})">
            <summary>
            清空系统缓存
            </summary>
            <param name="ids"></param>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 11:06:53
            ************************************************************
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Helper.WCFMethod">
            <summary>
            WCF部分方法
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WCFMethod.GetModelById">
            <summary>
            通过ID取实体
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WCFMethod.GetListByQuery">
            <summary>
            通过条件取列表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WCFMethod.GetListAll">
            <summary>
            取得所有列表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WCFMethod.GetVers">
            <summary>
            取得版本号
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WCFMethod.GetIds">
            <summary>
            取得ID列表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WCFMethod.GetCountByQuery">
            <summary>
            取得总数
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WCFMethod.GetQueryCount">
            <summary>
            取得统计数据
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WCFMethod.GetQueryCountPage">
            <summary>
            取得分页统计数据
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WCFMethod.GetModelByColName">
            <summary>
            通过名取实体(已放弃,使用GetList)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WCFMethod.GetModelByName">
            <summary>
            通过名取实体(已放弃,使用GetList)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WCFMethod.UpdateByFilter">
            <summary>
            通过条件更新
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WCFMethod.DeleteByFilter">
            <summary>
            通过条件删除
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WCFMethod.GetModelByIDS">
            <summary>
            通过ID列表取实体列表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WCFMethod.GetValues">
            <summary>
            取得指定字段
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WCFMethod.AddList">
            <summary>
            添加实体列表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WCFMethod.Add">
            <summary>
            添加
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WCFMethod.Update">
            <summary>
            更新
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WCFMethod.UpdateList">
            <summary>
            更新列表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WCFMethod.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WCFMethod.Clear">
            <summary>
            清空数据缓存
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WCFMethod.Reload">
            <summary>
            清空数据缓存
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WCFMethod.ReloadById">
            <summary>
            清空数据缓存
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WCFMethod.ReloadByIds">
            <summary>
            清空数据缓存
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.WCFMethod.Custom">
            <summary>
            自定义函数
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.ServiceHelper">
            <summary>
            WCF服务接口调用方
            </summary>
            CreateUser:Mr.Zxf
            CreateDate:2012/10/20
        </member>
        <member name="F:MangoMis.Frame.Helper.ServiceHelper.Helper">
            <summary>
            用于创建Wcf的InterFace
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.GetList``2(``1,System.String)">
            <summary>
            取得全部列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <typeparam name="T">The type of the model.</typeparam>
            <typeparam name="TVistor">The type of the vistor.</typeparam>
            <param name="vistor">接口实例</param>
            <param name="otherString">The other string.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.GetList``2(``1,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.String)">
            <summary>
            取得分页列表
            </summary>
            <typeparam name="T">The type of the model.</typeparam>
            <typeparam name="TVistor">The type of the vistor.</typeparam>
            <param name="vistor">接口实例</param>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="otherString">The other string.</param>
            <returns>DefaultResult{List{``0}}.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.GetList``1(ISecondBase.ISecondBaseInterface{``0},System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.String)">
            <summary>
            取得分页列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <typeparam name="TModel">The type of the model.</typeparam>
            <param name="vistor">接口实例</param>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="otherString">The other string.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.GetVers``1(``0,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.String,System.String)">
            <summary>
            取得版本号列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <typeparam name="TVistor">The type of the vistor.</typeparam>
            <param name="vistor">接口实例</param>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="verColumn"></param>
            <param name="otherString">The other string.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.GetValues``1(``0,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.Collections.Generic.List{System.String},System.String)">
            <summary>
            取得固定的值
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <typeparam name="TVistor">The type of the vistor.</typeparam>
            <param name="vistor">接口实例</param>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="columns">取得的字段列表</param>
            <param name="otherString">The other string.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.GetIds``1(``0,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.String)">
            <summary>
            取得ID列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <typeparam name="TVistor">The type of the vistor.</typeparam>
            <param name="vistor">接口实例</param>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="otherString">The other string.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.GetIds``1(ISecondBase.ISecondBaseInterface{``0},System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.String)">
            <summary>
            取得ID列表
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <param name="vistor">接口实例</param>
            <param name="page">当前页</param>
            <param name="size">页面数量</param>
            <param name="filters">条件</param>
            <param name="orders">排序</param>
            <param name="otherString">The other string.</param>
            <returns>DefaultResult{List{``0}}.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.GetModel``2(``1,System.Int32,System.String)">
            <summary>
            取得一个对象的实体
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVistor">The type of the vistor.</typeparam>
            <param name="vistor">接口实例</param>
            <param name="id">The id.</param>
            <param name="otherString">The other string.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.GetModel``1(ISecondBase.ISecondBaseInterface{``0},System.Int32,System.String)">
            <summary>
            取得一个对象的实体
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <typeparam name="TModel">The type of the model.</typeparam>
            <param name="vistor">接口实例</param>
            <param name="id">The id.</param>
            <param name="otherString">The other string.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.GetModelByIds``2(``1,System.Collections.Generic.List{System.Int32},System.String)">
            <summary>
            通过ID列表取得实体列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVistor">The type of the vistor.</typeparam>
            <param name="vistor">接口实例</param>
            <param name="ids">The id.</param>
            <param name="otherString">The other string.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.GetModelByIds``1(ISecondBase.ISecondBaseInterface{``0},System.Collections.Generic.List{System.Int32},System.String)">
            <summary>
            通过ID列表取得实体列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-06-2013
            ************************************************************
            <typeparam name="TModel">The type of the model.</typeparam>
            <param name="vistor">接口实例</param>
            <param name="ids">The id.</param>
            <param name="otherString">The other string.</param>
            <returns>DefaultResult{List{``0}}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.GetCount``1(``0,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.String)">
            <summary>
            取得条目数
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:01-01-0001
            ************************************************************
            <typeparam name="TVistor">The type of the vistor.</typeparam>
            <param name="vistor">接口实例</param>
            <param name="filters">条件</param>
            <param name="otherString">The other string.</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.GetCount``1(ISecondBase.ISecondBaseInterface{``0},System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.String)">
            <summary>
            取得条目数
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:01-01-0001
            ************************************************************
            <param name="vistor">接口实例</param>
            <param name="filters">条件</param>
            <param name="otherString">The other string.</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.GetCount``2(``1,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String)">
            <summary>
            取得统计结果
            </summary>
            <typeparam name="TVistor">The type of the vistor.</typeparam>
            <typeparam name="TModel"></typeparam>
            <param name="vistor">接口实例</param>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="columns">要统计的字段:格式格式--&gt;"sum(YMoney) as YMoney","Hid"</param>
            <param name="groups">分组条件:格式"Hid"</param>
            <param name="otherString">外部参数[(farmKey|参数名)($bc$|参数名/值分割符)(farmKey|参数值)($ac$|多参数间分割符)debug$bc$debug$ac$pageName$bc$pageName]</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:01-01-0001
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.GetCountPage``2(``1,System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},System.String)">
            <summary>
            取得统计结果
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVistor">The type of the vistor.</typeparam>
            <param name="vistor">接口实例</param>
            <param name="page">The page.</param>
            <param name="pagesize">The pagesize.</param>
            <param name="filters">格式----属性名$bc$比较参数$bc$属性值$ac$属性名$bc$比较参数$bc$属性值---eg---[flag$bc$=$bc$1$ac$username$bc$in$bc$张晓丰$cc$张宜新]---等价于---[ where flag = 1 and username in ('张晓丰','张宜新')]</param>
            <param name="orders">The orders.</param>
            <param name="columns">要统计的字段:格式格式--&gt;"sum(YMoney) as YMoney","Hid"</param>
            <param name="groups">分组条件:格式"Hid"</param>
            <param name="otherString">外部参数[(farmKey|参数名)($bc$|参数名/值分割符)(farmKey|参数值)($ac$|多参数间分割符)debug$bc$debug$ac$pageName$bc$pageName]</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:01-01-0001
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.Update``2(``1,``0,System.String)">
            <summary>
            更新条目
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:01-01-0001
            ************************************************************
            <typeparam name="TVistor">The type of the vistor.</typeparam>
            <typeparam name="TModel"></typeparam>
            <param name="vistor">接口实例</param>
            <param name="entity">提交更新的实体</param>
            <param name="otherString">The other string.</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.Add``2(``1,``0,System.String)">
            <summary>
            新增条目
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:01-01-0001
            ************************************************************
            <typeparam name="TVistor">The type of the vistor.</typeparam>
            <typeparam name="TModel"></typeparam>
            <param name="vistor">接口实例</param>
            <param name="entity">提交更新的实体</param>
            <param name="otherString">The other string.</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.AddList``2(``1,System.Collections.Generic.List{``0},System.String)">
            <summary>
            新增条目
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-17-2013
            ************************************************************
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVistor">The type of the vistor.</typeparam>
            <param name="vistor">接口实例</param>
            <param name="entitys">提交更新的实体</param>
            <param name="otherString">The other string.</param>
            <returns>TT.Common.Frame.Model.DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.UpdateByFilter``2(``1,``0,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.String)">
            <summary>
            通过条件更新列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 10:57:16
            ************************************************************
            <typeparam name="TModel">更新的实体</typeparam>
            <typeparam name="TVistor">更新的服务</typeparam>
            <param name="vistor">服务</param>
            <param name="entity">更新的实体</param>
            <param name="filters">条件</param>
            <param name="otherString">The other string.</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.UpdateByList``2(``1,System.Collections.Generic.List{``0},System.String)">
            <summary>
            通过条件更新列表
            </summary>
            <typeparam name="TModel">更新的实体</typeparam>
            <typeparam name="TVistor">更新的服务</typeparam>
            <param name="vistor">服务</param>
            <param name="entitys">The entitys.</param>
            <param name="otherString">The other string.</param>
            <returns>DefaultResult{System.Int32}.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 10:57:16
            ************************************************************
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.DeleteByFilter``1(``0,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.String)">
            <summary>
            通过条件删除列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 10:57:16
            ************************************************************
            <typeparam name="TVistor">更新的服务</typeparam>
            <param name="vistor">服务</param>
            <param name="filters">条件</param>
            <param name="otherString">The other string.</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.Delete``2(``1,``0,System.String)">
            <summary>
            通过条件删除列表
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 10:57:16
            ************************************************************
            <typeparam name="TModel">更新的实体</typeparam>
            <typeparam name="TVistor">更新的服务</typeparam>
            <param name="vistor">服务</param>
            <param name="entity">删除的实体(必须实例化主键)</param>
            <param name="otherString">The other string.</param>
            <returns>DefaultResult{System.Int32}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.Clear``1(``0,System.String)">
            <summary>
            清空系统缓存
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 11:06:53
            ************************************************************
            <typeparam name="TVistor">The type of the vistor.</typeparam>
            <param name="vistor">The vistor.</param>
            <param name="otherString">The other string.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.Reload``1(``0,System.String)">
            <summary>
            清空系统缓存
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 11:06:53
            ************************************************************
            <typeparam name="TVistor">The type of the vistor.</typeparam>
            <param name="vistor">The vistor.</param>
            <param name="otherString">The other string.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.ReloadById``1(``0,System.Int32,System.String)">
            <summary>
            清空系统缓存
            </summary>
            <typeparam name="TVistor">The type of the vistor.</typeparam>
            <param name="vistor">The vistor.</param>
            <param name="id">The identifier.</param>
            <param name="otherString">The other string.</param>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 11:06:53
            ************************************************************
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.Invoke``2(``1,MangoMis.Frame.Helper.WCFMethod,System.String,System.Object[])">
            <summary>
            有返回值的接口调用(本方法用于判断调用的方法)
            </summary>
            <typeparam name="TModel">返回值类型</typeparam>
            <typeparam name="TVistor">接口类型</typeparam>
            <param name="vistor">接口的实例(可以通过WcfFactroy.CreateService接口类型(接口服务地址)来创建)</param>
            <param name="action">调用的方法</param>
            <param name="otherStrng">OtherString</param>
            <param name="p">其它所有参数</param>
            <returns>DefaultResult{``0}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.EndWCFCall``1(MangoMis.Frame.Helper.WCFMethod,MangoMis.Frame.Model.LastChildActionDebugBuilder,TT.Common.Frame.Model.DefaultResult{``0},System.Type,System.String,System.Object[],System.Type)">
            <summary>
            Ends the WCF call.
            </summary>
            <typeparam name="T">The type of the re mt.</typeparam>
            <param name="action">The action.</param>
            <param name="debug">The debug.</param>
            <param name="ret">The ret.</param>
            <param name="WcfType">Type of the WCF.</param>
            <param name="otherStrng">The other STRNG.</param>
            <param name="p">The p.</param>
            <param name="modelType"></param>
            <returns>DefaultResult{``0}.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.AppendInvokeTime(System.String,System.String)">
            <summary>
            添加执行次数
            </summary>
            <param name="tableName">表名</param>
            <param name="action"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.AppendInvokeTime(System.String,MangoMis.Frame.Helper.WCFMethod)">
             <summary>
            添加执行次数
             </summary>
             <param name="tableName">表名</param>
             <param name="action"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.AppendInvokeTime``1(MangoMis.Frame.Helper.WCFMethod)">
             <summary>
            添加执行次数
             </summary>
             <typeparam name="TMt"></typeparam>
             <param name="action"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.AppendInvokeTime``1(System.String)">
             <summary>
            添加执行次数
             </summary>
             <typeparam name="TMt"></typeparam>
             <param name="action"></param>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.InvokeByBaseService``2(ISecondBase.ISecondBaseInterface{``1},MangoMis.Frame.Helper.WCFMethod,System.String,System.Object[])">
            <summary>
            通过ISecondBase接口调用WCF
            </summary>
            <typeparam name="TReMt">The type of the re mt.</typeparam>
            <typeparam name="TModel">The type of the model.</typeparam>
            <param name="vistor">The vistor.</param>
            <param name="action">The action.</param>
            <param name="otherString">The other STRNG.</param>
            <param name="p">The p.</param>
            <returns>DefaultResult{``0}.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.GetWcfUrl(System.Type,MangoMis.Frame.Helper.WCFMethod,System.Object[],System.Type)">
            <summary>
            取得WCF的地址
            </summary>
            <param name="WcfType">Type of the WCF.</param>
            <param name="action">The action.</param>
            <param name="paramInfos">The p into.</param>
            <param name="modelType">类型</param>
            <returns>System.String.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.GetWcfUrl(System.Type,System.String,System.Reflection.MethodInfo,System.Object[])">
            <summary>
            取得WCF的地址
            </summary>
            <param name="WcfType">Type of the WCF.</param>
            <param name="action">The action.</param>
            <param name="method">The method.</param>
            <param name="pInto">The p into.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.GetMothed(System.Type,System.String,System.Type[])">
            <summary>
            取得方法
            </summary>
            <param name="type">The type.</param>
            <param name="name">The name.</param>
            <param name="ParamTypes">The parameter types.</param>
            <returns>MethodInfo.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.GetParamTypes(System.String,System.Object[])">
            <summary>
            取得参数类型
            </summary>
            <param name="action">The action.</param>
            <param name="p">The p.</param>
            <returns>Type[][].</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.InvokeNoData``1(``0,System.String,System.String,System.Object[])">
            <summary>
            无返回值的接口调用(用于调用无返回值接口的主体方法)
            </summary>
            <typeparam name="TVistor">接口类型</typeparam>
            <param name="vistor">接口的实例(可以通过WcfFactroy.CreateService接口类型(接口服务地址)来创建)</param>
            <param name="action">调用的方法</param>
            <param name="otherStrng">OtherString</param>
            <param name="p">其它所有参数</param>
            <returns>DefaultResult{``0}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.Invoke``2(``1,System.String,System.String,System.Object[])">
            <summary>
            有返回值的接口调用(用于调用WCF的主体方法)
            </summary>
            <typeparam name="TModel">返回值类型</typeparam>
            <typeparam name="THandler">接口类型</typeparam>
            <param name="handler">接口的实例(可以通过WcfFactory.CreateService接口类型(接口服务地址)来创建)</param>
            <param name="action">调用的方法</param>
            <param name="otherString"> </param>
            <param name="p">其它所有参数</param>
            <returns>DefaultResult{``0}.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.ServiceHelper.GetDePassData``1(TT.Common.Frame.Model.DefaultResult{``0},System.String)">
            <summary>
            解密,otherString中的IsNoPass为1时不用解密
            </summary>
            <typeparam name="TMt"></typeparam>
            <param name="data"></param>
            <param name="otherString"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.V3Decrypt`1">
            <summary>
            为WCF类直接使用V3版的ApiCache单独写的解密方式
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="F:MangoMis.Frame.Helper.V3Decrypt`1._clientDecrypt">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.V3Decrypt`1.ClientDecrypt">
            <summary>
            当前解密程序
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.V3Decrypt`1._clientDecrypt_IsNoPass">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.V3Decrypt`1.ClientDecrypt_IsNoPass">
            <summary>
            当前解密程序
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.WebFileHelper">
            <summary>
            网络文件操作类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.Ping(System.String,System.Int32)">
            <summary>
            测试地址是否可以连接(每次连接默认等待1秒)
            </summary>
            <param name="ip_address">Ip或者地址</param>
            <param name="trytimes">重试次数(需要大于0).默认1次为不重试</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.PostFile(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.IO.Stream)">
            <summary>
            通过post发送指定文件的指定字段到指定的uri上
            </summary>
            <param name="url">上传的到的URi位置</param>
            <param name="param">上传的参数</param>
            <param name="fileStream">上传的文件</param>
            <returns>uri的response的内容以string的形式返回</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.PostHttpData(System.String,System.IO.Stream,System.Text.Encoding)">
            <summary>
            提交网络内容
            </summary>
            <param name="Url">The URL.</param>
            <param name="data">The data.</param>
            <param name="code">The code.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.Exception"></exception>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/3 18:22:30
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.GetText(System.String,System.Int32)">
            <summary>
            取得网络文本内容
            </summary>
            <param name="url">地址</param>
            <param name="timeoutSeconds">超时时间</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.GetText(System.String,System.Text.Encoding)">
            <summary>
            取得网络文本内容
            </summary>
            <param name="url">地址</param>
            <param name="code">编码</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.GetText(System.String,System.Text.Encoding,System.Int32,System.Object)">
            <summary>
            取得网络文本内容
            </summary>
            <param name="url">地址</param>
            <param name="code">编码</param>
            <param name="timeoutSeconds">超时时间</param>
            <param name="paramData">提交内容</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.GetHttpData(System.String,System.Text.Encoding)">
            <summary>
            取得网络内容
            </summary>
            <param name="Url">The URL.</param>
            <param name="code">The code.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.Exception"></exception>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/3 18:22:30
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.GetRequest(System.String)">
            <summary>
            取得一个公用的Request
            </summary>
            <param name="url">The URL.</param>
            <returns>WebRequest.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.GetHttpData(System.String)">
            <summary>
            取得网络内容
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/3 18:22:30
            ************************************************************
            <param name="Url">The URL.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.GetHttpUTF8Data(System.String,System.Int32@,System.Text.Encoding,System.Object)">
            <summary>
            取得网络内容
            </summary>
            <param name="url">The URL.</param>
            <param name="Status">The status.</param>
            <param name="coding">编码方式</param>
            <param name="data">The data.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.Exception"></exception>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/3 18:22:30
            ************************************************************
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.GetHttpData(System.String,System.Object)">
            <summary>
            取得HTTP数据
            </summary>
            <param name="url">The URL.</param>
            <param name="data">The status.</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.PostJsonWithUTF8(System.String,System.String,System.Int32@)">
            <summary>
            以Json方式请求一个API接口
            </summary>
            <param name="url">请求的URL地址</param>
            <param name="status">Api请求状态,9400=Post内容为空,9500=未知异常</param>
            <param name="jsonText">Post的Json内容</param>
            <returns>Api接口的返回值</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.GetHttpData(System.String,System.Text.Encoding,System.Int32@,System.Object)">
            <summary>
            取得网络内容
            </summary>
            <param name="url">The URL.</param>
            <param name="encode"></param>
            <param name="status">The status.</param>
            <param name="data">The data.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.Exception"></exception>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/3 18:22:30
            ************************************************************
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.GetHttpData(System.String,System.Int32@,System.Object)">
            <summary>
            取得网络内容
            </summary>
            <param name="Url">The URL.</param>
            <param name="Status">The status.</param>
            <param name="data">The data.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.Exception"></exception>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/3 18:22:30
            ************************************************************
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.FileExist(System.String)">
            <summary>
            判断一个网络文件是否存在
            </summary>
            <param name="path">文件地址(必须包含http://).</param>
            <returns></returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/12/6
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.CopyStream(System.IO.Stream,System.IO.Stream)">
            <summary>
            复制流
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/21 14:59:18
            ************************************************************
            <param name="input">The input.</param>
            <param name="output">The output.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.ReadFile(System.String,System.Action{System.IO.Stream},System.Int32)">
            <summary>
            读取一个网络文件
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/21 14:59:26
            ************************************************************
            <param name="path">文件路径</param>
            <param name="operateWithStream">使用网络文件流的操作</param>
            <param name="timeoutSeconds">读取Response时的超时时间</param>
            <returns>读取状态,string.Empty是正常读取,有值则为异常</returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/12/6
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.ReadFile(System.String,System.Action{System.IO.Stream})">
            <summary>
            读取一个网络文件
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/21 14:59:26
            ************************************************************
            <param name="path">文件路径</param>
            <param name="operateWithStream">使用网络文件流的操作</param>
            <returns>读取状态,string.Empty是正常读取,有值则为异常</returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/12/6
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.ReadFile(System.String,System.Action{System.IO.Stream},System.Int32,System.Int32)">
            <summary>
            读取一个网络文件
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/21 14:59:26
            ************************************************************
            <param name="path">文件路径</param>
            <param name="operateWithStream">使用网络文件流的操作</param>
            <param name="connectTimeoutSeconds">读取Response时的超时时间</param>
            <param name="maxLoadKb">最多读取的KB数</param>
            <returns>读取状态,string.Empty是正常读取,有值则为异常</returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/12/6
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.ReadFile(System.String,System.Int32)">
            <summary>
            读取一个网络文件(推荐使用带operateWithStream的读取函数)
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/21 14:59:26
            ************************************************************
            <param name="path">文件路径</param>
            <param name="connectTimeoutSeconds">读取Response时的超时时间</param>
            <returns>文件流</returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/12/6
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.ReadFile(System.String)">
            <summary>
            读取一个网络文件(推荐使用带operateWithStream的读取函数)
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/21 14:59:26
            ************************************************************
            <param name="path">文件路径</param>
            <returns>文件流</returns>
            CreateUser:Mr.Zxf
            CreateDate:2012/12/6
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.CreateFtpPath(System.String,System.Net.NetworkCredential,MangoMis.Frame.Helper.Ftp_Request_Data)">
            <summary>
            创建FTP目录
            </summary>
            <param name="ftp_path">The FTP path.</param>
            <param name="credent">The credent.</param>
            <param name="ftp_setting">The ftp_setting.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/21 14:59:48
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.CreateFtpPath(System.String,System.Net.NetworkCredential)">
            <summary>
            创建FTP目录
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/21 14:59:48
            ************************************************************
            <param name="ftp_path">The FTP path.</param>
            <param name="credent">The credent.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.CheckFTPPath(System.String,System.Net.NetworkCredential,MangoMis.Frame.Helper.Ftp_Request_Data)">
            <summary>
            检查FTP目录是否存在.不存在则创建
            </summary>
            <param name="tftpPath">The TFTP path.</param>
            <param name="credent">The credent.</param>
            <param name="ftp_setting">The ftp_setting.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/21 14:59:29
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.CheckHaveFtpPath(System.String,System.Net.NetworkCredential)">
            <summary>
            检查是否存在FTP目录
            </summary>
            <param name="ftp_path">The ftp_path.</param>
            <param name="credent">The credent.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/18 11:07:32
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.CheckHaveFtpPath(System.String,System.Net.NetworkCredential,MangoMis.Frame.Helper.Ftp_Request_Data)">
            <summary>
            检查是否存在FTP目录
            </summary>
            <param name="ftp_path">The ftp_path.</param>
            <param name="credent">The credent.</param>
            <param name="ftp_setting">The ftp_setting.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/18 11:07:32
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.FTPDownload(System.String)">
            <summary>
            通过FTP下载文件
            </summary>
            <param name="ftpPath">Ftp路径</param>
            <returns>如果成功返回1,否则返回错误位置</returns>
            <exception cref="T:System.Exception">FTP地址中无用户名!</exception>
            CreateUser:Mr.Zxf
            CreateDate:2012/12/6
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.FTPDownload(System.String,MangoMis.Frame.Helper.Ftp_Request_Data)">
            <summary>
            通过FTP下载文件
            </summary>
            <param name="ftpPath">Ftp路径</param>
            <param name="ftp_setting">FTP配置</param>
            <returns>如果成功返回1,否则返回错误位置</returns>
            <exception cref="T:System.Exception">FTP地址中无用户名!</exception>
            CreateUser:Mr.Zxf
            CreateDate:2012/12/6
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.FTPSave(System.String,System.IO.MemoryStream,MangoMis.Frame.Helper.Ftp_Request_Data)">
            <summary>
            通过FTP保存文件
            </summary>
            <param name="ftpPath">Ftp路径</param>
            <param name="ms">保存的文件流</param>
            <param name="ftp_setting">FTP连接的配置</param>
            <returns>如果成功返回1,否则返回错误位置</returns>
            <exception cref="T:System.Exception">FTP地址中无用户名!</exception>
            CreateUser:Mr.Zxf
            CreateDate:2012/12/6
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.FTPSave(System.String,System.IO.MemoryStream)">
            <summary>
            通过FTP保存文件
            </summary>
            <param name="ftpPath">Ftp路径</param>
            <param name="ms">保存的文件流</param>
            <returns>如果成功返回1,否则返回错误位置</returns>
            <exception cref="T:System.Exception">FTP地址中无用户名!</exception>
            CreateUser:Mr.Zxf
            CreateDate:2012/12/6
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.Get_Ftp_Credential_By_Url(System.String)">
            <summary>
            通过Ftp地址取得真实地址以及用户凭证
            </summary>
            <param name="ftp_path">The ftp_path.</param>
            <returns>Tuple{System.StringNetworkCredential}.</returns>
            <exception cref="T:System.Exception">FTP地址中无用户名!</exception>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebFileHelper.Create_Ftp_Request(System.String,System.Net.NetworkCredential,System.String,MangoMis.Frame.Helper.Ftp_Request_Data)">
            <summary>
            能过路径取得一个FTP请求
            </summary>
            <param name="ftp_path">The ftp_path.</param>
            <param name="credential">The credential.</param>
            <param name="ftp_setting">The ftp_setting.</param>
            <param name="method">The method.</param>
            <returns>FtpWebRequest.</returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.Ftp_Request_Data">
            <summary>
            Ftp的传入值
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Helper.Ftp_Request_Data.Proxy">
             <summary>
            设置用于与FTP服务器通信的代理(无默认值)
             </summary>
             <value>The proxy.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.Ftp_Request_Data.UseBinary">
            <summary>
             true ，指示服务器要传输的是二进制数据；false，指示数据为文本。 默认值为 true。 
            </summary>
            <value><c>null</c> if [use binary] contains no value, <c>true</c> if [use binary]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.Ftp_Request_Data.UsePassive">
            <summary>
            设置客户端应用程序的数据传输过程的行为。如果客户端应用程序的数据传输过程侦听数据端口上的连接，则为 false；如果客户端应在数据端口上启动连接，则为 true。 默认值为 true。 
            </summary>
            <value><c>null</c> if [use passive] contains no value, <c>true</c> if [use passive]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.Ftp_Request_Data.KeepAlive">
            <summary>
            该值指定在请求完成之后是否关闭到 FTP 服务器的控制连接。如果不应销毁到服务器的连接，则为 true；否则为 false。 默认值为 true。 
            </summary>
            <value><c>null</c> if [keep alive] contains no value, <c>true</c> if [keep alive]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.Ftp_Request_Data.ReadWriteTimeout">
            <summary>
            读取或写入超时之前的毫秒数。 默认值为 300,000 毫秒（5 分钟）。 
            </summary>
            <value>The read write timeout.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.Ftp_Request_Data.Timeout">
            <summary>
            一个 Int32 值，包含请求超时前等待的毫秒数。 默认值为 Infinite。若要指定无限值，请将 Timeout 属性设置为 Infinite (-1)。 这是默认值。  
            </summary>
            <value>The timeout.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.Ftp_Request_Data.Credentials">
            <summary>
            设置用于与 FTP 服务器通信的凭据。(默认加在了Ftp路径中)
            </summary>
            <value>The credentials.</value>
        </member>
        <member name="P:MangoMis.Frame.Helper.Ftp_Request_Data.Method">
            <summary>
             String 值，包含要发送到服务器的 FTP 命令。 
            </summary>
            <value>The method.</value>
        </member>
        <member name="T:MangoMis.Frame.Helper.TableTitleModel">
            <summary>
            虚拟页面建立列表的Title类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TableTitleModel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Helper.TableTitleModel"/> class.
            </summary>
            <param name="title">The title.</param>
        </member>
        <member name="P:MangoMis.Frame.Helper.TableTitleModel.Title">
            <summary>
            标题
            </summary>
            <value>The title.</value>
        </member>
        <member name="T:MangoMis.Frame.Helper.TableRowModel">
            <summary>
            虚拟页面建立列表的[行]类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TableRowModel.#ctor(System.Collections.Generic.List{MangoMis.Frame.Helper.TableColumnModel})">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Helper.TableRowModel"/> class.
            </summary>
            <param name="columns">The columns.</param>
        </member>
        <member name="P:MangoMis.Frame.Helper.TableRowModel.Columns">
            <summary>
            包含的列
            </summary>
            <value>The columns.</value>
        </member>
        <member name="T:MangoMis.Frame.Helper.TableColumnModel">
            <summary>
            虚拟页面建立列表的[列]类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.TableColumnModel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Helper.TableColumnModel"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:MangoMis.Frame.Helper.TableColumnModel.Value">
            <summary>
            列的值
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:MangoMis.Frame.Helper.TempPage">
            <summary>
            因为Session问题,导致无法创建页面.临时解决方案
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Helper.WebPageHelper">
            <summary>
            页面帮助
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebPageHelper.BuildPage2015(System.Action{System.Web.UI.Page})">
            <summary>
            建立一个虚拟页面(包含基础样式)
            </summary>
            <returns>Page.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebPageHelper.BuildPage">
            <summary>
            建立一个虚拟页面(包含基础样式)
            </summary>
            <returns>Page.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.WebPageHelper.GetTableString(System.String,System.Collections.Generic.List{MangoMis.Frame.Helper.TableTitleModel},System.Collections.Generic.List{MangoMis.Frame.Helper.TableRowModel})">
            <summary>
            取得表里的字符串
            </summary>
            <param name="TitleName">Name of the title.</param>
            <param name="titles">The titles.</param>
            <param name="rows">The rows.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.XMLNodeHelper">
            <summary>
            XML节点帮助
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.XMLNodeHelper.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Helper.XMLNodeHelper"/> class.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:MangoMis.Frame.Helper.XMLNodeHelper.GetAttr(System.String)">
            <summary>
            取得属性
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/5/31 17:59:00
            ************************************************************
            <param name="attrName">Name of the attr.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:MangoMis.Frame.Helper.XMLChangeHelper`1">
            <summary>
            XML帮助文件
            </summary>
            <typeparam name="MT">The type of the MT.</typeparam>
        </member>
        <member name="M:MangoMis.Frame.Helper.XMLChangeHelper`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Helper.XMLChangeHelper`1"/> class.
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.XMLChangeHelper`1.ErrorState">
            <summary>
            The error state
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Helper.XMLChangeHelper`1.ErrorMessage">
            <summary>
            The error message
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Helper.XMLChangeHelper`1.BuildError(System.String,System.Exception)">
            <summary>
            建立服务器错误信息
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/11 11:38:20
            ************************************************************
            <param name="ex">The ex.</param>
            <param name="funName">方法名</param>
            <returns>``0.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/11 10:22:32
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.XMLChangeHelper`1.BuildError(System.Int32,System.String,System.String)">
            <summary>
            建立错误信息
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/11 11:39:08
            ************************************************************
            <param name="errorType">Type of the error.</param>
            <param name="funName">调用方法名</param>
            <param name="errorMsg">The error MSG.</param>
            <returns>System.Object.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/11 10:21:08
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.XMLChangeHelper`1.Path(System.String)">
            <summary>
            读取地址
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/11 10:25:32
            ************************************************************
            <param name="path">The path.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.XMLChangeHelper`1.CheckPath(System.String)">
            <summary>
            验证地址路径
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/11 10:28:52
            ************************************************************
            <param name="path">The path.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.XMLChangeHelper`1.DeserializeFromPath(System.String)">
            <summary>
            通过路径反序列化
            </summary>
            <param name="path">The path.</param>
            <returns>``0.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/11 10:31:28
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.XMLChangeHelper`1.Deserialize(System.String)">
            <summary>
            反序列化
            </summary>
            <param name="xml">XML字符串</param>
            <returns>``0.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/11 10:09:55
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Helper.XMLChangeHelper`1.Deserialize(System.IO.Stream)">
            <summary> 
            反序列化 
            </summary> 
            <param name="stream"></param>
            <returns></returns> 
        </member>
        <member name="M:MangoMis.Frame.Helper.XMLChangeHelper`1.Serializer(`0,System.String)">
            <summary>
            序列化XML实体文件
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/11 11:50:30
            ************************************************************
            <param name="entity">The entity.</param>
            <param name="path">The path.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:MangoMis.Frame.Helper.XMLChangeHelper`1.Serializer(`0)">
            <summary> 
            序列化XML文件 
            </summary> 
            <param name="obj">对象</param> 
            <returns></returns> 
        </member>
        <member name="M:MangoMis.Frame.Helper.XMLChangeHelper`1.XmlAnalysisArray(System.String)">
            <summary> 
            将XML转换为DATATABLE 
            </summary> 
            <param name="FileURL"></param> 
            <returns></returns> 
        </member>
        <member name="M:MangoMis.Frame.Helper.XMLChangeHelper`1.XmlAnalysis(System.String,System.String)">
            <summary> 
            摘要:获取对应XML节点的值 
            </summary> 
            <param name="stringRoot">XML节点的标记</param>
            <param name="xml"></param>
            <returns>返回获取对应XML节点的值</returns> 
        </member>
        <member name="T:MangoMis.Frame.FrameConfigs.Center.CenterConfigBool">
            <summary>
            配置中心的配置项(默认值为否),暂时没有配置中心,可以从WebConfig中取得.WebConfig中的配置名需要在配置名的基础上加一个前缀[configcenter_](不包含中括号)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.CenterConfigBool.Value">
            <summary>
            配置的值
            </summary>
        </member>
        <member name="T:MangoMis.Frame.FrameConfigs.Center.CenterConfigInt">
            <summary>
            配置中心的配置项(默认值为0),暂时没有配置中心,可以从WebConfig中取得.WebConfig中的配置名需要在配置名的基础上加一个前缀[configcenter_](不包含中括号)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.CenterConfigInt.Value">
            <summary>
            配置的值
            </summary>
        </member>
        <member name="T:MangoMis.Frame.FrameConfigs.Center.BeforeCenterConfigReload">
            <summary>
            
            </summary>
            <param name="configKey"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.FrameConfigs.Center.AfterCenterConfigReload">
            <summary>
            
            </summary>
            <param name="configKey"></param>
            <param name="loadValue"></param>
        </member>
        <member name="T:MangoMis.Frame.FrameConfigs.Center.CenterConfigItem">
            <summary>
            配置中心的配置项,暂时没有配置中心,可以从WebConfig中取得.WebConfig中的配置名需要在配置名的基础上加一个前缀[configcenter_](不包含中括号)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.CenterConfigItem.LastReadType">
            <summary>
            上次读取类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.CenterConfigItem.LastReadTime">
            <summary>
            上次读取时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.CenterConfigItem.LastUseTime">
            <summary>
            上次调用时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.CenterConfigItem.ConfigKey">
            <summary>
            配置Key
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.CenterConfigItem.ConfigName">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.CenterConfigItem.DefaultValue">
            <summary>
            默认值
            </summary>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.Center.CenterConfigItem.ReciveCenterConfig(System.String,System.String)">
            <summary>
            TODO 接到配置变更事件(应该由CenterConfig事态调用.接收到Api提示后调用此函数)
            </summary>
            <param name="configName">配置名</param>
            <param name="configValue">配置值</param>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.Center.CenterConfigItem.ReloadConfig">
            <summary>
            重新加载配置值
            </summary>
        </member>
        <member name="E:MangoMis.Frame.FrameConfigs.Center.CenterConfigItem.BeforeReload">
            <summary>
            准备从ConfigCenter加载配置前事件(注意:只在ReloadConfig事件时会调用)
            </summary>
        </member>
        <member name="E:MangoMis.Frame.FrameConfigs.Center.CenterConfigItem.AfterReload">
            <summary>
            已经从ConfigCenter重新加载完事件(注意:初始化首次加载=>会调用,ReloadConfig事件=>会调用,ReciveCenterConfig=>会调用)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.CenterConfigItem.Value">
            <summary>
            配置的值
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.CenterConfigItem.IsInit">
            <summary>
            内部调用,判断是否初始化
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.Center.CenterConfigItem.GetValue">
            <summary>
            内部调用取值函数,不进行读取,也不进行刷新读取时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.Center.CenterConfigItem.OnAfterReload(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="configkey"></param>
            <param name="loadvalue"></param>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.Center.CenterConfigItem.OnBeforeReload(System.String)">
            <summary>
            
            </summary>
            <param name="configkey"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.FrameConfigs.Center.CenterConfigItemReadType">
            <summary>
            配置中心的配置,读取时的位置的类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.Center.CenterConfigItemReadType.None">
            <summary>
            未读取
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.Center.CenterConfigItemReadType.Empty">
            <summary>
            未读取到内容
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.Center.CenterConfigItemReadType.WebConfig">
            <summary>
            在WebConfig中读取(前缀[configcenter_](不包含中括号))
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.Center.CenterConfigItemReadType.SiteConfig">
            <summary>
            在站点配置中读取,位于[ConfigCenter预备配置]
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.Center.CenterConfigItemReadType.ConfigCenter">
            <summary>
            在配置中心中读取
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.Center.CenterConfigItemReadType.DefaultValue">
            <summary>
            用代码中写好的默认值读取
            </summary>
        </member>
        <member name="T:MangoMis.Frame.FrameConfigs.Center.ConfigCenterInitStatus">
            <summary>
            配置中心初始化状态
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.Center.ConfigCenterInitStatus.None">
            <summary>
            未初始化
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.Center.ConfigCenterInitStatus.Initing">
            <summary>
            初始化中
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.Center.ConfigCenterInitStatus.Failed">
            <summary>
            初始化失败
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.Center.ConfigCenterInitStatus.UnSet">
            <summary>
            未配置相关参数
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.Center.ConfigCenterInitStatus.Success">
            <summary>
            初始化成功
            </summary>
        </member>
        <member name="T:MangoMis.Frame.FrameConfigs.Center.CenterConfig">
            <summary>
            配置帮助中心
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.CenterConfig.ApiUrl">
            <summary>
            访问私钥
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.CenterConfig.AccessSecret">
            <summary>
            访问私钥
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.CenterConfig.AccessKey">
            <summary>
            访问公钥
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.CenterConfig.CompanyKey">
            <summary>
            当前项目所属公司.eg.zy
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.CenterConfig.IisPath">
            <summary>
            当前项目站点IP端口号.eg.192.168.111.7:8301
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.CenterConfig.ProjectKey">
            <summary>
            当前项目 项目名 .eg. mis2014
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.CenterConfig.CurrentSingleKey">
            <summary>
            当前的SingleKey
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.CenterConfig.InitStatus">
            <summary>
            当前配置中心是否已经初始化完成
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.Center.CenterConfig.CenterConfigsItems">
            <summary>
            当前所有中心配置的集合
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.Center.CenterConfig.CurrentSingleKeyLocker">
            <summary>
            用于取SingleKey的锁
            </summary>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.Center.CenterConfig.GetConfigKeys">
            <summary>
            取得当前所有项目的Key
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.Center.CenterConfig.RebuildItem(System.String)">
            <summary>
            重建一个配置项目(移除.再新建.等重新调用时重建)
            </summary>
            <param name="configKey"></param>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.Center.CenterConfig.GetReadTypeCount">
            <summary>
            取得读取类型数
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.Center.CenterConfig.GetConfigValueForItem(System.String)">
            <summary>
            取得配置
            </summary>
            <param name="configKey">配置Key</param>
            <returns>未取得配置返回null,如果有null请注册查看ConfigCenter日志</returns>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.Center.CenterConfig.GetApi(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Int32@)">
            <summary>
            调用ConfigCenter的API
            </summary>
            <param name="action">调用事件.示例:/Api/Config.aspx</param>
            <param name="paramDictionary">参数字典</param>
            <param name="status">返回状态</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.FrameConfigs.Center.CenterConfig.ConfigCenterResult">
            <summary>
            用于解析ConfigCenter返回值的内部类弄
            </summary>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.Center.CenterConfig.GetConfigCenterResult(System.String)">
            <summary>
            从字符串解析返回值
            </summary>
            <param name="configCenterResult">ConfigCenter返回的字符串</param>
            <returns>解析之后的结果</returns>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.Center.CenterConfig.Int(System.String)">
            <summary>
            取得一个Int的值(不存在则添加).此函数不需要事先定义Item.直接取值就可以会自动创建.默认值为0.可以在web.config中添加值.无法在创建时定义名与默认值
            </summary>
            <param name="configKey">配置Key</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.Center.CenterConfig.Bool(System.String)">
            <summary>
            取得一个bool的值(不存在则添加).此函数不需要事先定义Item.直接取值就可以会自动创建.默认值为false.可以在web.config中添加值.无法在创建时定义名与默认值
            </summary>
            <param name="configKey">配置Key</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.Center.CenterConfig.String(System.String)">
            <summary>
            取得一个string的值(不存在则添加).此函数不需要事先定义Item.直接取值就可以会自动创建.默认值为"".可以在web.config中添加值.无法在创建时定义名与默认值
            </summary>
            <param name="configKey">配置Key</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.Center.CenterConfig.GetItem(System.String)">
            <summary>
            取得一个配置项(不会进行添加)
            </summary>
            <param name="configKey">配置索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.Center.CenterConfig.GetItem(System.String,MangoMis.Frame.FrameConfigs.Center.BeforeCenterConfigReload,MangoMis.Frame.FrameConfigs.Center.AfterCenterConfigReload)">
            <summary>
            取得一个配置项(不存在则添加)
            </summary>
            <param name="configKey">配置索引</param>
            <param name="before">准备从配置中心读取配置前事件(注意:只在ReloadConfig事件时会调用)</param>
            <param name="after">配置中心配置变更后事件(注意:初始化首次加载=>会调用,ReloadConfig事件=>会调用,ReciveCenterConfig=>会调用)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.Center.CenterConfig.GetItem(System.String,MangoMis.Frame.FrameConfigs.Center.AfterCenterConfigReload)">
            <summary>
            取得一个配置项(不存在则添加)
            </summary>
            <param name="configKey">配置索引</param>
            <param name="after">配置中心配置变更后事件(注意:初始化首次加载=>会调用,ReloadConfig事件=>会调用,ReciveCenterConfig=>会调用)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.Center.CenterConfig.GetItem(System.String,System.String,System.String)">
            <summary>
            取得一个配置项(不存在则添加)
            </summary>
            <param name="configKey">配置索引</param>
            <param name="configName">配置名</param>
            <param name="defaltValue">默认值</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.FrameConfigs.Center.ConfigForMappingCenterConfig">
            <summary>
            为ConfigCenter预备的配置读取,有CC时切换为CC读取
            </summary>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.Center.ConfigForMappingCenterConfig.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.Center.ConfigForMappingCenterConfig.AfterSave(System.Collections.Generic.Dictionary{System.String,MangoMis.Frame.Model.OtherConfigParam_Item})">
            <summary>
            更新之后事件
            </summary>
        </member>
        <member name="T:MangoMis.Frame.FrameConfigs.Center.ConfigRootKey">
            <summary>
            站点基础配置(CC的配置)以后WebConfig关于项目内部的配置会只有这种不会再有更多
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.ConfigRootKey.IisPath">
            <summary>
            IIS站点路径 192.168.1.1:8311
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.ConfigRootKey.CompanyKey">
            <summary>
            站点所属公司 zy,jm
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.ConfigRootKey.ProjectKey">
            <summary>
            项目名 mis2014....
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.ConfigRootKey.AccessKey">
            <summary>
            访问CC的AccessKey
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.ConfigRootKey.AccessSecret">
            <summary>
            访问CC的AccessSecret
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.ConfigRootKey.ConfigCenterApiUrl">
            <summary>
            连接ConfigCenter的API地址
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.ConfigRootKey.ServiceLocalIp">
            <summary>
            当前站点的IP地址(局域网IP)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Center.ConfigRootKey.ServiceLocalPort">
            <summary>
            当前站点的端口号(一般在IIS池里面可以找到)
            </summary>
        </member>
        <member name="T:MangoMis.Frame.FrameConfigs.ConstConfigs">
            <summary>
            当前系统运行中的一些静态常量的配置
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.ConstConfigs.LogPageHeader">
            <summary>
            日志页面的头字符
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.ConstConfigs.LogNameErrorLog">
            <summary>
            普通错误日志
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.ConstConfigs.LogNameCacheLog">
            <summary>
            缓存日志(记录缓存加载等信息)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.ConstConfigs.LogNameCatchErrorLog">
            <summary>
            Catch取得日志一般用于在TryCatch中捕获的信息
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.ConstConfigs.LogNameDownloadLog">
            <summary>
            自动下载日志(曾用于自动更新站点DLL)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.ConstConfigs.LogNameAppErrorLog">
            <summary>
            站点错误日志(未捕获的异常)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.ConstConfigs.LogNameCommonLog">
            <summary>
            其它记录日志(通用日志)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.ConstConfigs.LogNameSysRunning">
            <summary>
            系统运行日志
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.ConstConfigs.LogNameAppStart">
            <summary>
            系统启动日志(站点启动)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.ConstConfigs.LogNameLogoutLog">
            <summary>
            登出日志(登陆登出)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.ConstConfigs.IsVirtualPageUseRoutePage">
            <summary>
            当前运行的虚拟页面是否使用路由机制构造(路由机制会创建实体页面,并且有可能有其它问题,非路由机制不支持Session)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.ConstConfigs.IsWebSessionUseCustomCache">
            <summary>
            当前系统中的Session是否使用自定义的内存变量(自定义的内存变量使用的是缓存.所以多站点的话不可能Session共享)[自定义Session记录在内存中.通过SessionId来取值]
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.ConstConfigs.WcfParamSplitForItem">
            <summary>
            WCF参数中的分割字符.用于分割两个不同的项.eg. connkey$bc$new[$ac$]listvalue$bc$1$cc$2
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.ConstConfigs.WcfParamSplitForKeyValue">
            <summary>
            WCF参数中的分割字符.用于分割键与值.eg. connkey[$bc$]new$ac$listvalue[$bc$]1$cc$2
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.ConstConfigs.WcfParamSplitForListValue">
            <summary>
            WCF参数中的分割字符.用于分割值为列表时的值.eg. connkey$bc$new$ac$listvalue$bc$1[$cc$]2
            </summary>
        </member>
        <member name="T:MangoMis.Frame.FrameConfigs.SiteType">
            <summary>
            站点类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.SiteType.NONE">
            <summary>
            暂无
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.SiteType.JM">
            <summary>
            加盟
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.SiteType.WWW">
            <summary>
            前台
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.SiteType.LOCAL">
            <summary>
            本机
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.SiteType.DEV">
            <summary>
            开发服务器
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.SiteType.MIS">
            <summary>
            Mango-mis
            </summary>
        </member>
        <member name="T:MangoMis.Frame.FrameConfigs.Site_Match">
            <summary>
            站点匹配类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.Site_Match.#ctor(MangoMis.Frame.FrameConfigs.SiteType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.FrameConfigs.Site_Match"/> class.
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Site_Match.site">
            <summary>
            当前站点
            </summary>
            <value>The site.</value>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Site_Match.match">
            <summary>
            匹配正则
            </summary>
            <value>The match.</value>
        </member>
        <member name="T:MangoMis.Frame.FrameConfigs.InitOfConfig">
            <summary>
            Class InitOfConfig.
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.InitOfConfig.Is_Base_Config_Inited">
            <summary>
            配置是否已经加载完成
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.InitOfConfig.Is_Base_Config_Initing">
            <summary>
            配置是否已经加载完成
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.InitOfConfig.MySite">
            <summary>
            当前站点(预估.测试)
            </summary>
            <value>My site.</value>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.InitOfConfig.DeclareInitConfig">
            <summary>
            Declares the initialize.
            </summary>
        </member>
        <member name="T:MangoMis.Frame.FrameConfigs.Model.OtherConfigParam_Denied">
            <summary>
            拒绝访问的配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.Model.OtherConfigParam_Denied.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Model.OtherConfigParam_Site"/> class.
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Model.OtherConfigParam_Denied.Denied_Is_Use_Denied">
            <summary>
            开启屏蔽访问功能
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Model.OtherConfigParam_Denied.Denied_IPs">
            <summary>
            屏蔽的IP名单
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Model.OtherConfigParam_Denied.Denied_User_Agent">
            <summary>
            屏蔽user-agent
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Model.OtherConfigParam_Denied.Denied_Return_String">
            <summary>
            屏蔽访问的返回值
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameConfigs.Model.OtherConfigParam_Denied.Denied_Allow_User_Agent_Ips">
            <summary>
            屏蔽user-agent的IP白名
            </summary>
        </member>
        <member name="T:MangoMis.Frame.FrameConfigs.TextResource">
            <summary>
            文本资源
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.TextResource.InputStringIsNullOrEmpty">
            <summary>
            输入的字符串为空或是为NULL,"{0}试图通过[{2}][{1}],但是输入的[{2}]为空或者是NULL{3}"
            </summary>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.TextResource.BuildInputStringIsNullOrEmpty(System.String,System.String,System.String,System.String)">
            <summary>
            建立[输入的字符串为空或是为NULL]的文本,基础文本内容为[InputStringIsNullOrEmpty]:"{0}试图通过[{2}][{1}],但是输入的[{2}]为空或者是NULL{3}"
            </summary>
            <param name="textBefore">最前置的字符串</param>
            <param name="operateName">用字符串做的操作</param>
            <param name="emptyStringName">为空的字符串的涵意</param>
            <param name="textAfter">最后置字符</param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.TextResource.ObjectIndexNotFind">
            <summary>
            通过索引查找不到对象,"[{0}]试图查找[{1}],但系统中查找不到索引为[{2}]的[{1}]对象{3}"
            </summary>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.TextResource.BuildObjectIndexNotFind(System.String,System.Object,System.String,System.String)">
            <summary>
            建立[通过索引查找不到对象]的文本,基础文本内容为[ObjectIndexNotFind]:"[{0}]试图查找[{1}],但系统中查找不到索引为[{2}]的[{1}]对象{3}"
            </summary>
            <param name="textBefore">最前置的字符串</param>
            <param name="objectIndex">对象的索引</param>
            <param name="nullObjectName">为NULL的对象名</param>
            <param name="textAfter">最后置字符</param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.TextResource.ObjectIsNull">
            <summary>
            通过索引查找不到对象,"[{0}]试图查找[{1}],但系统中查找不到索引为[{2}]的[{1}]对象{3}"
            </summary>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.TextResource.BuildObjectIsNull(System.String,System.Object,System.String,System.String)">
            <summary>
            建立[通过索引查找不到对象]的文本,基础文本内容为[ObjectIndexNotFind]:"[{0}]试图查找[{1}],但系统中查找不到索引为[{2}]的[{1}]对象{3}"
            </summary>
            <param name="textBefore">最前置的字符串</param>
            <param name="objectIndex">对象的索引</param>
            <param name="nullObjectName">为NULL的对象名</param>
            <param name="textAfter">最后置字符</param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.TextResource.InitAutoInterfaceFailed">
            <summary>
            初始化动态接口失败,"初始化动态接口失败[{0}][{1}]实例[{2}]"
            </summary>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.TextResource.BuildInitAutoInterfaceFailed(System.String,System.String,System.Object)">
            <summary>
            建立[初始化动态接口失败]的文本,基础文本内容为[InitAutoInterfaceFailed]:"初始化动态接口失败[{0}][{1}]实例[{2}]"
            </summary>
            <param name="errorKey">错误索引</param>
            <param name="interfaceKey">接口名</param>
            <param name="classKey">类型索引</param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.TextResource.ObjectActionError">
            <summary>
            操作失败,"试图运行[{0}]的[{1}]操作,但是[{1}]失败.请检查对应的错误源"
            </summary>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.TextResource.BuildObjectActionError(System.String,System.String)">
            <summary>
            建立[操作失败]的文本,基础文本内容为[ActionError]:"试图运行[{0}]的[{1}]操作,但是[{1}]失败.请检查对应的错误源"
            </summary>
            <param name="actionName">操作名</param>
            <param name="actionKey">操作对象的索引</param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.FrameConfigs.TextResource.SiteSystemNikeName">
            <summary>
            站点系统的昵称
            </summary>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.TextResource.GetUnLoginMessage">
            <summary>
            取得未登陆后台的提示消息 
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.FrameConfigs.TextResource.GetNoPermissionsMessage">
            <summary>
            取得未登陆后台的提示消息 
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.CreatorRes">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.Culture">
            <summary>
              重写当前线程的 CurrentUICulture 属性
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.Ashx_defalut">
            <summary>
              查找类似 &lt;%@ WebHandler Language=&quot;C#&quot; CodeBehind=&quot;{1}.ashx.cs&quot; Class=&quot;{0}.Code.{1}&quot; %&gt; 的本地化字符串。
            </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.Aspx_Ashx_Js_List__ashx_cs">
             <summary>
               查找类似 using System;
            using System.Collections.Generic;
            using IMangoLogServicce;
            using MangoLogModel;
            using MangoMis.Frame.Helper;
            using MangoMis.MisFrame.BLL;
            using MangoMis.Frame.ThirdFrame;
            using MangoMis.MisFrame.Frame;
            using MangoMis.MisFrame.Helper;
            
            namespace {0}.Code
            {{
                /// &lt;summary&gt;
                ///  {1} 的摘要说明
                /// &lt;/summary&gt;
                public class {1} : HandlerFrame
                {{
            
                    #region WCF的对象实例
                    /// &lt;summary&gt;
                    /// 这里是WCF的实例.可以直接调用.
                    /// 如果调用的是老库请在GetPageName加一个[,0]
              [字符串的其余部分被截断]&quot;; 的本地化字符串。
             </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.Aspx_Ashx_Js_List__js">
             <summary>
               查找类似 var url = &quot;Code/{0}.ashx&quot;, pagename = &quot;{0}&quot;
            , get = function (action, data, callback) {{ return MG.get.wcf(url, pagename, action, data, callback); }}
            , post = function (action, data, callback) {{ return MG.post.wcf(url, pagename, action, data, callback); }}
            ;
            $(document).ready(function () {{
                $(&quot;#addBtn&quot;).hide();
                var powers = {{}}, dataView,dialogSubmit,filterTag = new MG.FilterManager($(&quot;#filterTag&quot;), function (d) {{
                    dataView.filters = d.f;
                    dataView.params = d.p;
                    dat [字符串的其余部分被截断]&quot;; 的本地化字符串。
             </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.Aspx_Ashx_Js_List_aspx">
             <summary>
               查找类似 &lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;true&quot; CodeBehind=&quot;{1}.aspx.cs&quot; Inherits=&quot;{0}.{1}&quot; %&gt;
            
            &lt;!DOCTYPE html&gt;
            
            &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
            &lt;head runat=&quot;server&quot;&gt;
                &lt;title&gt;芒果团队后台管理-{1}&lt;/title&gt;
                &lt;script type=&quot;text/javascript&quot;&gt;
                    //这里是引用Mango-js.517.cn里面的公用JS,JS列表可以在MisNet2014.Js项目的.urlbase.js里面找到
                    mgurl.include([
                        &quot;jquery&quot;	//jquery基础包
                        , &quot;jquidialog&quot;	//基于Jquery的弹出层插件
                        , &quot;mango&quot;	//整理了一些基本的MisNet会用到的操作,如权限管理 弹出一个网页,基本的Mis式Post,Get
               [字符串的其余部分被截断]&quot;; 的本地化字符串。
             </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.aspx_defalut_cs">
             <summary>
               查找类似 using MangoMis.MisFrame.Frame;
            namespace {0}
            {{
                public partial class {1} : PageFrame
                {{
                    protected override void HaveUser()
                    {{
                    }}
                }}
            }} 的本地化字符串。
             </summary>
        </member>
        <!-- 对于成员“P:MangoMis.Frame.CreatorRes.aspx_designer”忽略有格式错误的 XML 注释 -->
        <member name="P:MangoMis.Frame.CreatorRes.creator_ashx_default_GetDict">
            <summary>
              查找类似 var Dict{0} = entity.{0}.Int().Dict($classid$);
            的本地化字符串。
            </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.creator_ashx_default_GetOrg">
            <summary>
              查找类似                 var org{0} = entity.{0}.Org();
            的本地化字符串。
            </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.creator_ashx_default_GetUser">
            <summary>
              查找类似                var user{0} = entity.{0}.User();
            的本地化字符串。
            </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.creator_ashx_ListItem_CommonColumn">
            <summary>
              查找类似                     entity.{0},
            的本地化字符串。
            </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.creator_ashx_ListItem_DateTimeColumn">
            <summary>
              查找类似                     {0}=string.Format(&quot;{{0:yyyy-MM-dd HH:mm:ss}}&quot;,entity.{0}),
            的本地化字符串。
            </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.creator_ashx_ListItem_DictColumn">
             <summary>
               查找类似 entity.{0}
            ,{0}name = Dict{0} == null ? &quot;&quot; : Dict{0}.DicName,
             的本地化字符串。
             </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.creator_ashx_ListItem_OrgColumn">
             <summary>
               查找类似                     entity.{0}
            ,{0}name = org{0} == null ? &quot;&quot; : org{0}.OrgName,
             的本地化字符串。
             </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.creator_ashx_ListItem_UserColumn">
             <summary>
               查找类似                     entity.{0}
            ,{0}name = user{0} == null ? &quot;&quot; : user{0}.UserName2,
             的本地化字符串。
             </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.creator_aspx_Editor_ColumnItem">
            <summary>
              查找类似                                     &lt;td&gt;{0}&lt;/td&gt;
                                               &lt;td&gt;
                                                   &lt;input name=&quot;form_{0}&quot; type=&quot;text&quot; value=&quot;&quot; class=&quot;inputT01 {1}&quot; /&gt;&lt;/td&gt; 的本地化字符串。
            </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.creator_aspx_Editor_ColumnItem_Data">
            <summary>
              查找类似 &lt;td&gt;{1}&lt;/td&gt;
                                               &lt;td&gt;
                                                   &lt;input name=&quot;form_{0}&quot; type=&quot;text&quot; value=&quot;&quot; class=&quot;inputT01 {2}&quot; /&gt;&lt;/td&gt; 的本地化字符串。
            </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.creator_js_default_searchColumn_Common">
            <summary>
              查找类似             &quot;{0}&quot;: {{ name: &quot;{0}&quot; }},
            的本地化字符串。
            </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.creator_js_default_searchColumn_DateTime">
            <summary>
              查找类似             &quot;{0}&quot;: {{ name: &quot;{0}&quot;, type: &quot;qdate&quot; }},
            的本地化字符串。
            </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.creator_js_default_searchColumn_Org">
            <summary>
              查找类似             &quot;{0}&quot;: {{ name: &quot;{0}&quot;, type: &quot;org&quot;, isduoxuan: true, filter: &quot;in&quot; }},
            的本地化字符串。
            </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.creator_js_default_searchColumn_User">
            <summary>
              查找类似             &quot;{0}&quot;: {{ name: &quot;{0}&quot;, type: &quot;user&quot;, isduoxuan: false }},
            的本地化字符串。
            </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.Data_Interface_aspx">
             <summary>
               查找类似 &lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;true&quot; CodeBehind=&quot;{1}.aspx.cs&quot; Inherits=&quot;{0}.{1}&quot; %&gt;
            
            &lt;!DOCTYPE html&gt;
            
            &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
            &lt;head runat=&quot;server&quot;&gt;
                &lt;title&gt;芒果团队后台管理-{1}&lt;/title&gt;
                &lt;script type=&quot;text/javascript&quot;&gt;
                    //这里是引用Mango-js.517.cn里面的公用JS,JS列表可以在MisNet2014.Js项目的.urlbase.js里面找到
                    mgurl.include([
                        &quot;jquery&quot;	//jquery基础包
                        , &quot;jquidialog&quot;	//基于Jquery的弹出层插件
                        , &quot;mango&quot;	//整理了一些基本的MisNet会用到的操作,如权限管理 弹出一个网页,基本的Mis式Post,Get
            		 [字符串的其余部分被截断]&quot;; 的本地化字符串。
             </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.Data_Interface_aspx_v2">
             <summary>
               查找类似 &lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;true&quot; CodeBehind=&quot;{1}.aspx.cs&quot; Inherits=&quot;{0}.{1}&quot; %&gt;
            
            &lt;!DOCTYPE html&gt;
            
            &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
            &lt;head runat=&quot;server&quot;&gt;
                &lt;title&gt;芒果团队后台管理-{1}&lt;/title&gt;
                &lt;script type=&quot;text/javascript&quot;&gt;
                    //这里是引用Mango-js.517.cn里面的公用JS,JS列表可以在MisNet2014.Js项目的.urlbase.js里面找到
                    mgurl.include([
                        &quot;jquery_v2&quot;	//jquery基础包
                        , &quot;mango&quot;	//整理了一些基本的MisNet会用到的操作,如权限管理 弹出一个网页,基本的Mis式Post,Get
            			, &quot;mangovali&quot;//整理了一些MisNet的校验
                       [字符串的其余部分被截断]&quot;; 的本地化字符串。
             </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.Data_Interface_aspx_v2_1">
             <summary>
               查找类似 &lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;true&quot; CodeBehind=&quot;{1}.aspx.cs&quot; Inherits=&quot;{0}.{1}&quot; %&gt;
            
            &lt;!DOCTYPE html&gt;
            
            &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
            &lt;head runat=&quot;server&quot;&gt;
                &lt;title&gt;芒果团队后台管理-{1}&lt;/title&gt;
                &lt;script type=&quot;text/javascript&quot;&gt;
                    //这里是引用Mango-js.517.cn里面的公用JS,JS列表可以在MisNet2014.Js项目的.urlbase.js里面找到
                    mgurl.include([
                        &quot;jquery_v2&quot;	//jquery基础包
                        , &quot;mango&quot;	//整理了一些基本的MisNet会用到的操作,如权限管理 弹出一个网页,基本的Mis式Post,Get
            			, &quot;mangovali&quot;//整理了一些MisNet的校验
                       [字符串的其余部分被截断]&quot;; 的本地化字符串。
             </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.Data_Interface_aspx_v3">
             <summary>
               查找类似 &lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;true&quot; CodeBehind=&quot;{1}.aspx.cs&quot; Inherits=&quot;{0}.{1}&quot; %&gt;
            
            &lt;!DOCTYPE html&gt;
            
            &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
            &lt;head runat=&quot;server&quot;&gt;
                &lt;title&gt;{4}-芒果团队后台管理&lt;/title&gt;
                &lt;script type=&quot;text/javascript&quot;&gt;
                    //这里是引用Mango-js.517.cn里面的公用JS,JS列表可以在MisNet2014.Js项目的.urlbase.js里面找到
                    mgurl.include([
                        &quot;jquery_v2&quot;	//jquery基础包
                        , &quot;mango&quot;	//整理了一些基本的MisNet会用到的操作,如权限管理 弹出一个网页,基本的Mis式Post,Get
            			, &quot;mangovali&quot;//整理了一些MisNet的校验
                       [字符串的其余部分被截断]&quot;; 的本地化字符串。
             </summary>
        </member>
        <!-- 对于成员“P:MangoMis.Frame.CreatorRes.Data_Interface_handler_cs”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:MangoMis.Frame.CreatorRes.Data_Interface_handler_cs_v3”忽略有格式错误的 XML 注释 -->
        <member name="P:MangoMis.Frame.CreatorRes.Data_Interface_Js">
             <summary>
               查找类似 var url = &quot;Code/{0}.ashx&quot;
                , pagename = &quot;{0}&quot;
                , get = function (action, data, callback) {{ return MG.get.wcf(url, pagename, action, data, callback); }}
                , post = function (action, data, callback) {{ return MG.post.wcf(url, pagename, action, data, callback); }};
            $(document).ready(function () {{
                var defalutFilter = [$defaultfilter$]
                    , powers = {{}}
                    , comboDataList = {{}}
                    , checkObj = {{
            		    $checkother$
            	    }};
                var dom_form_add = $(&quot;#entityAddForm&quot;)
                [字符串的其余部分被截断]&quot;; 的本地化字符串。
             </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.Data_Interface_Js_v2">
             <summary>
               查找类似 var url = &quot;Code/{0}.ashx&quot;
                , pagename = &quot;{0}&quot;
                , get = function (action, data, callback) {{ return MG.get.wcf(url, pagename, action, data, callback); }}
                , post = function (action, data, callback) {{ return MG.post.wcf(url, pagename, action, data, callback); }};
            $(document).ready(function () {{
                var defalutFilter = [$defaultfilter$]
                    , powers = {{}}
                    , comboDataList = {{}}
                    , checkObj = {{
            		    $checkother$
            	    }};
                var dom_form_add = $(&quot;#entityAddForm&quot;)
                [字符串的其余部分被截断]&quot;; 的本地化字符串。
             </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.Data_Interface_Js_v2_1">
            <summary>
              查找类似 var item_list = function () {{
               var s = this;
               MgTT.tp_listpageframe(s, function() {{
            	$combolist$
                   s.sets = $.extend(s.sets, {{
                       dom: $(&quot;[ttname=&apos;form_base&apos;]&quot;),
                       url: &quot;Code/{0}.ashx&quot;,
                       pagename: &quot;{0}&quot;,
                       formaname: &quot;某页面.改名哦&quot;,
                       can_edit: true,
                       name_pkcolumn:&quot;$prikey$&quot;,
                       can_add:true,
                       can_search:true,
                       dicts: [$taglist$],
                       pagefilter: [$defaultfilter$],
                       data_ [字符串的其余部分被截断]&quot;; 的本地化字符串。
            </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.JS_CreateDataInterface">
            <summary>
              查找类似 
               &lt;script&gt;
                       $(document).ready(function () {
                       var data = [$data$];
            		var havedata = $havedata$ ;
                       var ItemTypes = [$datatype$];
                           
                       var CheckTypes = [$checktype$];
                           var DefaultValues = [{ id: 1, text: &quot;无&quot;, isdefalut: true },
                               { id: 11, text: &quot;登陆人&quot;},
                               { id: 21, text: &quot;当前时间&quot; },
                               { id: 31, text: &quot;排序(100)&quot; },
                               { id: 41, text: &quot;选择(0)&quot; },
                        [字符串的其余部分被截断]&quot;; 的本地化字符串。
            </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.js_defalut_listShowColumn">
            <summary>
              查找类似 		{{
            		text: &quot;{0}&quot;, 
            		sortable: true, 
            		bind: &quot;{0}&quot;, 
            		formatter: function(v, d) {{ 
            			return v; 
            		}}
            	}}, 的本地化字符串。
            </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.js_defalut_listShowColumn_DateTime">
            <summary>
              查找类似 		{{
            		text: &quot;{0}&quot;, 
            		sortable: true, 
            		bind: &quot;{0}&quot;,
                       type:&quot;date&quot;
            	}}, 的本地化字符串。
            </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.js_defalut_listShowColumn_showSome">
            <summary>
              查找类似         {{
                    text: &quot;{0}&quot;, 
                    bind: &quot;{0}&quot;, 
                    type: &quot;{1}&quot;, 
                    show: &quot;{0}name&quot;, 
                    click: function(d) {{ 
            	        filterTag.simpleAdd(&quot;{0}&quot;, d.{0}, &quot;{0}name&quot;, d.{0}name); 
                    }} 
                   }}, 的本地化字符串。
            </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.js_default_listShowColumn_DI">
            <summary>
              查找类似 		{{
            		text: &quot;{1}&quot;, 
            		width: 120,
            		$type$$show$$sort$$format$$click$$filter$bind: &quot;{0}&quot;
            	}}, 的本地化字符串。
            </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.mangapi_detail">
            <summary>
              查找类似  的本地化字符串。
            </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.mangapi_index">
            <summary>
              查找类似  的本地化字符串。
            </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.mdb_bytes">
            <summary>
              查找类似 0,1,0,0,83,116,97,110,100,97,114,100,32,74,101,116,32,68,66,0,1,0,0,0,181,110,3,98,96,9,194,85,233,169,103,114,64,63,0,156,126,159,144,255,133,154,49,197,121,186,237,48,188,223,204,157,99,217,228,195,159,70,251,138,188,78,56,94,236,55,227,225,156,250,120,251,40,230,173,19,138,96,234,49,123,54,75,215,223,177,201,81,19,67,113,10,177,51,138,196,121,91,44,16,124,42,32,215,124,153,8,31,152,253,113,27,151,40,186,137,132,102,95,149,248,208,137,36,133,103,198,31,39,68,210,238,207,101,237,255,7,199,70,161,120,22,12, [字符串的其余部分被截断]&quot;; 的本地化字符串。
            </summary>
        </member>
        <member name="P:MangoMis.Frame.CreatorRes.PageCode_CreateDataInterface">
            <summary>
              查找类似 			&lt;script src=&quot;http://mango-js.517.cn/mis/misnet2014js/mango.include.js&quot;&gt;&lt;/script&gt;
            		&lt;script type=&quot;text/javascript&quot;&gt;
                       mgurl.include([
                           &quot;jquery&quot;
                           , &quot;mango&quot;
                           , &quot;mangoui&quot;
                           , &quot;jquidialog&quot;]);
            		&lt;/script&gt;
                       &lt;table class=&quot;tablem tableClass04&quot; id=&quot;entitylist&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;
            			&lt;thead&gt;
            				&lt;tr class=&quot;tr_blue&quot;&gt;
                               &lt;th style=&quot;width: 120px;&quot;&gt;字段名&lt;/th&gt;
                               &lt;th style=&quot;width:  [字符串的其余部分被截断]&quot;; 的本地化字符串。
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Frame.SysDebug">
            <summary>
            系统Debug信息[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.SysDebug.#ctor">
            <summary>
            初始化<see cref="T:MangoMis.Frame.Frame.SysDebug"/> class.将当前时间实例化成运行开始时间,初始化子级列表[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.SysDebug.parent">
            <summary>
            父级Debug[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.SysDebug.isBuilder">
            <summary>
            是否非页面Debug(运行类中的Debug)[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.SysDebug.#ctor(System.String,System.DateTime)">
            <summary>
            初始化 <see cref="T:MangoMis.Frame.Frame.SysDebug"/> class.(默认结束时间当前时间)[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            <param name="_Text">Debug文本</param>
            <param name="_Begin">开始运行时间</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.SysDebug.EndDebug(System.String)">
            <summary>
            结束Debug信息[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/1 10:46:17
            ************************************************************
            <param name="_Text">The _ text.</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.SysDebug.Add(MangoMis.Frame.Frame.SysDebug)">
            <summary>
            添加一个子级列表 [此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/1 10:46:28
            ************************************************************
            <param name="child">The child.</param>
        </member>
        <member name="P:MangoMis.Frame.Frame.SysDebug.Text">
            <summary>
            Debug文本[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SysDebug.Time">
            <summary>
            运行时间 (毫秒)[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            <value>The time.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SysDebug.Begin">
            <summary>
            开始时间[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            <value>The begin.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SysDebug.End">
            <summary>
            结束时间[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            <value>The end.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SysDebug.childs">
            <summary>
            运行时子级[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            <value>The childs.</value>
        </member>
        <member name="T:MangoMis.Frame.Frame.CallBackType">
            <summary>
            回调的方式
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.CallBackType.Redirect">
            <summary>
            页面跳转
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.CallBackType.Iframe">
            <summary>
            嵌入子页面
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Frame.CardParams">
            <summary>
            取得Card所用到的参数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.CardParams.site">
            <summary>
            站点编号
            </summary>
            <value>The site.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.CardParams.card">
            <summary>
            当前凭证
            </summary>
            <value>The card.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.CardParams.ip">
            <summary>
            当前IP
            </summary>
            <value>The ip.</value>
        </member>
        <member name="T:MangoMis.Frame.Frame.CardType">
             <summary>
            调用Card的几种方式
             </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.CardType.Login">
            <summary>
            登陆
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.CardType.Logout">
            <summary>
            登出
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.CardType.GetCard">
            <summary>
            取得凭证
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Frame.CommonFrameTextExtend">
            <summary>
            CommonFrame中的字符串处理相关内容
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrameTextExtend.GetTextOfStackNull(System.Int32)">
            <summary>
            "取得不到[", step.ToString(), "]步之前的堆栈信息!"
            </summary>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrameTextExtend.GetTextOfMethodNull(System.Int32)">
            <summary>
            "无法取得[", step.ToString(), "]步之前的运行函数!"
            </summary>
            <param name="step"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrameTextExtend.GetInitTextOfMethodNull(System.Reflection.MethodBase)">
            <summary>
            "无法取得[", step.ToString(), "]步之前的运行函数!"
            </summary>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrameTextExtend.GetPageNameWithExt">
            <summary>
            取得当前页面的地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrameTextExtend.GetPageName">
            <summary>
            取得当前页面的地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrameTextExtend.GetSiteUrl(System.String,System.String)">
            <summary>
            当前站点地址EG(http://locahost:8888/)
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrameTextExtend.ServerHostAndPort(System.String,System.Int32)">
            <summary>
            当前服务端访问的Host.带端口(locahost:8888)
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrameTextExtend.IfHaveStringRole(System.String)">
            <summary>
            当前服务端访问的Host.带端口(locahost:8888)
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Frame.CurrentAppDomain">
            <summary>
            当前应用程序域操作
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.CurrentAppDomain.CurrentModelAssemblies">
            <summary>
            当前系统中的Model程序集[改为使用:DomainAssembly.GetAssemblyBodies(TypeGroupKey.Model)]
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.CurrentAppDomain.CurrentAssemblies">
            <summary>
            当前系统中的程序集[改为使用:DomainAssembly.GetAssemblyBodies()]
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Frame.Event_Execute">
            <summary>
            事件运行
            </summary>
            <param name="sender"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Frame.Global_Events">
            <summary>
            Gobal使用的事件
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.Global_Events.on_Pre_First_Begin_Request">
            <summary>
            在第一次开始加载Request之前(因为不允许在AppStart里调用Request所以使用第一次BeginRequest)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.Global_Events.on_After_First_Begin_Request">
            <summary>
            在第一次加载了Request之后
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.Global_Events.on_Pre_Begin_Request">
            <summary>
            在开始加载Request之前(因为不允许在AppStart里调用Request所以使用第一次BeginRequest)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.Global_Events.on_After_Begin_Request">
            <summary>
            在加载了Request之后
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.Global_Events.on_Pre_AcquireRequestState">
            <summary>
            因为BeginRequest中无法取得Session等.所以正常的事件在此处运行
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.Global_Events.on_After_AcquireRequestState">
            <summary>
            在加载了AcquireRequestState之后
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.Global_Events.on_Pre_MapRequestHandler">
            <summary>
            TODO:绑定本次请求处理程序的事件.在此处可以更换处理程序.不过如果不从物理路径加载页面模版.VS不会认可Session加载.还需要研究.不过目前没空
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.Global_Events.on_After_MapRequestHandler">
            <summary>
            在绑定本次请求处理程序的事件之后
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Frame.Global_Events.OnBeforeNoUser">
            <summary>
            在NoUser真正运行之前的事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.Global_Events.OnBeforeNoUserInvoke(System.Object)">
            <summary>
            运行在NoUser真正运行之前的事件
            </summary>
            <param name="sender"></param>
            <returns></returns>
        </member>
        <member name="E:MangoMis.Frame.Frame.Global_Events.OnBeforePageLoadEnd">
            <summary>
            在NoUser真正运行之前的事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.Global_Events.OnOnBeforePageLoadEndInvoke(System.Object)">
            <summary>
            运行在NoUser真正运行之前的事件
            </summary>
            <param name="sender"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Frame.IFramePage">
            <summary>
            处理程序基础接口
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.IFramePage.DNControls">
            <summary>
            本地向页面添加控件时最好用这个,不会出%代码块的问题
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.IFramePage.IsAjaxRequest">
            <summary>
            当前请求是否是Ajax请求
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.IFramePage.IsLoadUrlBase">
            <summary>
            当前的请求页面是否设置引用了UrlBase
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Frame.IFrameHandler">
            <summary>
            处理程序基础接口
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.IFrameHandler.LoginUserId">
            <summary>
            当前页面访问人用户编号
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.IFrameHandler.CurrentInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.IFrameHandler.PageName">
            <summary>
            当前页面名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.IFrameHandler.CurrentDebugStatus">
            <summary>
            当前请求的Debug状态
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.IFrameHandler.CurrentDebugBuilder">
            <summary>
            当前的Debug建立的Builder
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.IFrameHandler.HaveDebugUserIdList">
            <summary>
            指定有Debug权限的员工编号
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.IFrameHandler.InitDebugBuilder">
            <summary>
            初始化当前请求的DebugBuilder
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.IFrameHandler.HaveDebug">
            <summary>
            是否有Debug.这个配置取得的值.就是当前请求是否有Debug
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.IFrameHandler.CurrentDebug">
            <summary>
            当前的Debug控件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.IFrameHandler.CurrentTag">
            <summary>
            当前处理程序标签
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.IFrameHandler.IsShowManagerPanel">
            <summary>
            是否显示管理面板
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.IFrameHandler.IsCanRedirectPage">
            <summary>
            当前是否是可以进行页面跳转的页面(登陆时的页面跳转)
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Frame.Login_Status">
             <summary>
            当前用户的登陆状态.(此枚举准备参与正式使用,用于替换UserState)
             </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.Login_Status.Not_Login">
            <summary>
            未登陆
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.Login_Status.Not_Login_SSO">
            <summary>
            本地已经登陆.但未登陆单点
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.Login_Status.Success">
            <summary>
            已经成功登陆
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.Login_Status.Change_login_User">
            <summary>
            切换登陆用户
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.Login_Status.SSO_Error">
            <summary>
            sso单点方未返回正确数据
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Frame.StepFrame">
            <summary>
            运行步骤管理器
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Frame.UserState">
             <summary>
            用户登陆状态(暂时无用.只是替换Nature中的UserState)
             </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.UserState.NotLoginApp">
            <summary>
            The not login app
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.UserState.LoginTimeout">
            <summary>
            The login timeout
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.UserState.Locked">
            <summary>
            The locked
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.UserState.SuspendAccess">
            <summary>
            The suspend access
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Frame.ApiStaticFrame">
            <summary>
            使用APIStatic
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Frame.ApiStaticFrame.CheckSiteCanUsed">
            <summary>
            检查站点是否可用
            </summary>
            <value><c>true</c> if [check site can used]; otherwise, <c>false</c>.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Frame.ApiStaticFrame.InitNameMapping">
            <summary>
            重新读取列表(当站点不可用时会重新从ApiStatic读取[本站API列表]列表)来初始化当前站点所使用的WCF连接
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.ApiStaticFrame.BuilApiStaticPage">
            <summary>
            Buils the API static page.
            </summary>
            <returns>Page.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Frame.ApiStaticFrame.NoUseApiStatic(MangoMis.Frame.Helper.TT_H_Generic,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            Noes the use API static.
            </summary>
            <param name="formDiv">The form div.</param>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Frame.ApiStaticFrame.BuildSitePage_10(MangoMis.Frame.Helper.TT_H_Generic,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            Builds the site page_10.
            </summary>
            <param name="formDiv">The form div.</param>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Frame.ApiStaticFrame.BuildPostSiteOver_20(MangoMis.Frame.Helper.TT_H_Generic,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            Builds the post site over_20.
            </summary>
            <param name="formDiv">The form div.</param>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Frame.ApiStaticFrame.BuildIHaveApiList_25(MangoMis.Frame.Helper.TT_H_Generic,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            Builds the i have API list_25.
            </summary>
            <param name="formDiv">The form div.</param>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Frame.ApiStaticFrame.BuildCreateMyApiList_30(MangoMis.Frame.Helper.TT_H_Generic,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            Builds the create my API list_30.
            </summary>
            <param name="formDiv">The form div.</param>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Frame.ApiStaticFrame.SaveMyTypeApiList_30(MangoMis.Frame.Helper.TT_H_Generic,System.Web.UI.HtmlControls.HtmlForm)">
            <summary>
            Saves my type API list_30.
            </summary>
            <param name="formDiv">The form div.</param>
            <param name="form">The form.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Frame.ApiStaticFrame.PostSiteData_40(MangoMis.Frame.Helper.TT_H_Generic,System.Web.UI.HtmlControls.HtmlForm,System.Boolean)">
            <summary>
            Posts the site data_40.
            </summary>
            <param name="formDiv">The form div.</param>
            <param name="form">The form.</param>
            <param name="ispostAllSite">if set to <c>true</c> [ispost all site].</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Frame.CardUrlGetter">
            <summary>
            单点登陆的地址取得
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.CardUrlGetter.ApiUrl">
            <summary>
            接口地址
            </summary>
            <value>The API URL.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.CardUrlGetter.LoginJumpPage">
            <summary>
            登陆跳转地址
            </summary>
            <value>The login jump page.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.CardUrlGetter.UrlType">
            <summary>
            当前单点地址类型.默认为1
            </summary>
            <value>The type of the URL.</value>
        </member>
        <member name="T:MangoMis.Frame.Frame.DefaultCardUrlGetter">
            <summary>
            默认单点登陆地址
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.DefaultCardUrlGetter.GetCardLocker">
            <summary>
            取得Card地址时的锁
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Frame.CommonFrame">
            <summary>
            通用函数 
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.ApiSetUserId(System.Int32)">
            <summary>
            Api站点设置用户编号
            </summary>
            <param name="userId">员工编号</param>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.AppPoolIdOnce">
            <summary>
            当前是否有Debug的配置 
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.InitAppPoolIdOnce">
            <summary>
            初始化本次请求是否有Debug
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.AppPoolName">
            <summary>
            取得当前应用程序池名
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.Guid_Id">
            <summary>
            得到一个新的临时ID
            </summary>
            <value>The guid_ identifier.</value>
        </member>
        <member name="F:MangoMis.Frame.Frame.CommonFrame.MaxLoadCacheNumbers">
            <summary>
            取缓存最大读取数据数量
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.CommonFrame.IsFileCacheFisrtLoad">
            <summary>
            文件缓存首次读取
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.VariableAppPoolConfig">
            <summary>
            Windows环境变量APP_POOL_CONFIG
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.VariableAppPoolId">
            <summary>
            Windows环境变量AppPoolId
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.VariableUserDomain">
            <summary>
            Windows环境变量USERDOMAIN
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.VariableComputerName">
            <summary>
            Windows环境变量COMPUTERNAME
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.CurrentFrameHandler">
            <summary>
            当前请求的FrameHandler(如果不是FrameHandler则返回Null)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.IsHaveDebug">
            <summary>
            当前请求的是否有Debug
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.GetVersionBuildTime(System.Version)">
            <summary>
            根据程序集版本号,获取当前的版本号的生成时间
            </summary>
            <param name="version">程序集版本号</param>
            <returns>生成时间</returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.GetCurrentPostPageName(System.String)">
            <summary>
            取得提交WCF时的页面名称
            </summary>
            <param name="currentPostName">调用WCF的时候内部写的名</param>
            <returns>返回带PageId的PageName,不会为null</returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.GetCodeSimpleStackInfo(System.Int32)">
            <summary>
            取得简易函数信息
            </summary>
            <param name="step">之前几级</param>
            <returns>SimpleStackInfo</returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.GetCodeSimplePosition(System.Int32)">
            <summary>
            取得代码简易位置
            </summary>
            <param name="step">之前几级</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.GetCodePosition(System.Int32)">
            <summary>
            取得代码位置
            </summary>
            <param name="step">之前几级</param>
            <returns>System.String.</returns>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.SelfDebug">
            <summary>
            [此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            <value>The self debug.</value>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.CreateLoginVistor">
            <summary>
            创建登陆的Vistor
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.MgLogin">
            <summary>
            站点登陆用的实体20170502
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.ClearDebug">
            <summary>
            清空Debug,此项已经无效.请不要再调用这个函数
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.AppPoolId">
            <summary>
            应用程序池名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.GetDebug(System.Boolean,System.String)">
            <summary>
            写入Debug.[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            <param name="isEveryRead">是否不判断其它</param>
            <param name="tilte">名称</param>
            <returns>System.String.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.ReadDebug(MangoMis.Frame.Frame.SysDebug,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            取得Debug信息[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            <param name="debug">The debug.</param>
            <param name="isEveryReaded">是否总是读取</param>
            <param name="isHidden">是否隐藏</param>
            <param name="step">最高步骤</param>
            <returns>System.String.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/6/19 11:59:01
            ************************************************************
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/5/28 10:05:53
            ************************************************************
        </member>
        <member name="F:MangoMis.Frame.Frame.CommonFrame._appStaticTimer">
            <summary>
            定时器
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.AppStaticTimer">
            <summary>
            定时器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.AddDelayTimer(System.String,System.Int32,MangoMis.Frame.Helper.TimeRunFunction)">
            <summary>
            添加一个延时运行方法(不用赋值ID)运行结束后会自动删除Timer
            </summary>
            <param name="name">配置名</param>
            <param name="span">运行时间(120)秒</param>
            <param name="fun">运行方法</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.AddTimerGetTimerId(System.String,System.Int32,MangoMis.Frame.Helper.TimeRunFunction)">
            <summary>
            添加一个定时运行方法(不用赋值ID))(返回Timer编号)
            </summary>
            <param name="name">配置名</param>
            <param name="span">延时时间(秒)</param>
            <param name="fun">运行方法</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.AutoAddTimer(System.String,System.Int32,MangoMis.Frame.Helper.TimeRunFunction)">
            <summary>
            添加一个定时运行方法(不用赋值ID)
            </summary>
            <param name="name">配置名</param>
            <param name="span">延时时间(秒)</param>
            <param name="fun">运行方法</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.AddTimer(MangoMis.Frame.Helper.TimerRunModel)">
            <summary>
            添加一个定时运行方法
            </summary>
            <param name="model">计时器实例</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.EndTimer(System.Int32)">
            <summary>
            结束指定编号的计时器
            </summary>
            <param name="id">计时器编号</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.GetTimeSpan(System.DateTime,System.DateTime)">
            <summary>
            取得时间间隔MS
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/27 16:29:04
            ************************************************************
            <param name="beginTime">The begin time.</param>
            <param name="endTime">The end time.</param>
            <returns>System.String.</returns>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.PageQuery">
            <summary>
            页面查询字符EG(?aa=1)
            </summary>
            <value>The page query.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.PageUrl">
            <summary>
            当前页面地址EG(/aaa/bbb.html)
            </summary>
            <value>The page URL.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.PageName_WithExt">
            <summary>
            当前页面地址.页面带扩展名EG(bbb.aspx)
            </summary>
            <value>The page URL.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.PageName">
            <summary>
            当前页面地址EG(bbb)
            </summary>
            <value>The page URL.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.PageName_WithOutExt">
            <summary>
            当前页面地址.页面有可能不带扩展名EG(bbb)
            </summary>
            <value>The page URL.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.SiteUrl">
            <summary>
            当前站点地址EG(http://locahost:8888/)
            </summary>
            <value>The site URL.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.LocalHostName">
            <summary>
            站点域名:[不一定是从当前请求取得.是第一次有调用的域名]
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.SiteHostName">
            <summary>
            当前站点地址EG(nginx.517.cc:3789)
            </summary>
            <value>The site URL.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.SiteServerName">
            <summary>
            当前站点页面地址EG(nginx.517.cc)
            </summary>
            <value>The site URL.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.ServerHostAndPort">
            <summary>
            当前服务端访问的Host.带端口(locahost:8888)
            </summary>
            <value>The site URL.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.Host">
            <summary>
            当前站点地址EG(http://locahost:8888/)
            </summary>
            <value>The site URL.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.cookietime">
            <summary>
            Cookie超时时间
            </summary>
            <value>The cookietime.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.cookie_Card">
            <summary>
            本地Card
            </summary>
            <value>The cookie_ card.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.userid">
            <summary>
            本地用户编号
            </summary>
            <value>The cookie_ uid.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.cookie_Uid">
            <summary>
            本地用户编号
            </summary>
            <value>The cookie_ uid.</value>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.SetGlobalFunction">
            <summary>
            Global读取用户信息
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/3 18:04:25
            ************************************************************
        </member>
        <member name="F:MangoMis.Frame.Frame.CommonFrame.IsFirstSetGlobal">
            <summary>
            是否首次运行
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.IsCommonPowerUser">
            <summary>
            是否是通用配置管理员(一般配置管理权限)
            </summary>
            <value><c>true</c> if this instance is common power user; otherwise, <c>false</c>.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.IsTempManager">
            <summary>
            因为处理Session暂时屏蔽掉这里
            </summary>
            <value><c>true</c> if this instance is temporary manager; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.IsPowerUser">
            <summary>
            是否是管理员(最高权限)
            </summary>
            <value><c>true</c> if this instance is common power user; otherwise, <c>false</c>.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="F:MangoMis.Frame.Frame.CommonFrame.Key">
            <summary>
            xxxx
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.CommonFrame.Iv">
            <summary>
            xxxx
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.Login(System.Int32)">
            <summary>
            登陆方法
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.Logout">
            <summary>
            登出操作
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.UpCityId(System.Int32)">
            <summary>
            更新CityID
            </summary>
            <param name="cityid">对的的城市编号</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.CheckUserHaveOrEndResponse(System.Action{System.Int32})">
            <summary>
            检查用户是否登陆.登陆返回用户编号.未登陆直接结束Response
            </summary>
            <param name="haveUser">The have user.</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.CheckUserHaveOrEndResponseBySSOSite(System.Action{System.Int32},System.Int32)">
            <summary>
            检查用户是否登陆.登陆返回用户编号.未登陆直接结束Response
            </summary>
            <param name="haveUser">The have user.</param>
            <param name="uid">The have user.</param>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.IsLoginByOtherInterfaceLogin">
            <summary>
            是否使用第三方登陆[改为使用Cookie不再使用Session]
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.LoginByOtherInterfaceLogin(System.Int32,System.Func{System.Int32,System.Boolean})">
            <summary>
            [已经不使用此版本.改为使用正常登陆.放弃]使用第三方API登陆后台
            </summary>
            <param name="loginUserid">员工编号</param>
            <param name="initLoginUser">初始化用户的方法</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.CheckUser(System.Action,System.Action{MangoMis.Frame.Frame.UserState},System.Action{System.String},System.Func{System.Int32,System.Boolean},System.Action,System.Int32,System.Boolean)">
            <summary>
            检查用户
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/3 18:14:49
            ************************************************************
            <param name="haveUser">已有用户登陆时的处理事件</param>
            <param name="noUser">没有用户登陆时的处理事件</param>
            <param name="loginError">登陆发生异常时的处理事件</param>
            <param name="initLoginUser">用户在其它站已经登陆,但在本首次登陆.用于初始化本站登陆用户的处理事件(PS:可以尝试调用MangoMis.MisFrame.Frame.CommonFrame.InitLoginUser(userid)进行初始化)</param>
            <param name="notAccess">登陆用户无权限时处理事件</param>
            <param name="nowUserId">当前登陆员工编号(用于判断是否切换用户,可以尝试使用,CommonFrame.userid)</param>
            <param name="isPage">是否页面(如果是Ajax调用的Handler,不可以进行跳转.需要转入false)</param>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.getpagename">
            <summary>
            页面传递过来的PageName
            </summary>
            <value>The uppagename.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.LowerAction">
            <summary>
            小字的执行函数
            </summary>
            <value>The lower action.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.CurrentPage">
            <summary>
             当前页
            </summary>
            <value>The current page.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.PageSize">
            <summary>
            显示条目数
            </summary>
            <value>The size of the page.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.Filters">
            <summary>
            查询条件
            </summary>
            <value>The filters.</value>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.GetEntityFilters``1">
            <summary>
            按TEntity(类型)取得查询条件,Filter的Name必须是这个类中的属性,注意:是属性属性属性,重要的事说三次.不是这个类的属性的Filter会被删除掉
            </summary>
            <typeparam name="TEntity">要取得条件所属的实体类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.BeforeLogin(System.String)">
            <summary>
            TODO无效方法
            </summary>
            <param name="paramuserid"></param>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.Orders">
            <summary>
            排序条件
            </summary>
            <value>The orders.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.PostParam">
            <summary>
            提交的其它参数
            </summary>
            <value>The post param.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.CommonFrame.PostDicts">
            <summary>
            提交的其它参数的字典
            </summary>
            <value>The post param.</value>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.GetPostModelByBuilder``1">
            <summary>
            取得提交的类(实体类.不能取得列表)
            </summary>
            <typeparam name="TEntity">取得的类的类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.GetPostModelByBuilder``1(``0)">
            <summary>
            取得提交的类(实体类.不能取得列表)
            </summary>
            <typeparam name="TEntity">取得的类的类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.GetObjectPostModel(System.Type,System.Object)">
            <summary>
            取得提交的类
            </summary>
            <returns>``0.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.Frame.CommonFrame.GetPostModel``1(``0)">
            <summary>
            取得提交的类
            </summary>
            <typeparam name="T">The type of the mt.</typeparam>
            <returns>``0.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Frame.Default_LoginVistor">
            <summary>
            放弃,登陆已经转移至Login.MgLoginV4
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.Default_LoginVistor.SSO_Vistor">
            <summary>
            单点登陆的使用实例
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.Default_LoginVistor.user">
            <summary>
            登陆用户
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.Default_LoginVistor.CookieNoLogin">
            <summary>
            是否未登陆
            </summary>
            <value>The cookie_ card.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.Default_LoginVistor.CheckTimes">
            <summary>
            检查次数
            </summary>
            <value>The check times.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.Default_LoginVistor.IsLoginByOtherInterfaceLogin">
            <summary>
            设置第三方登陆
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.Default_LoginVistor._login_userid">
            <summary>
            本地记录的COOKIE
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.Default_LoginVistor.userid">
            <summary>
            取得当前登陆人编号
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.Default_LoginVistor.card">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.Default_LoginVistor.read_card_url">
            <summary>
            读取CardCookie的地址
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.Default_LoginVistor.SetGetCard">
            <summary>
            取得Card
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/12 1:40:16
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Frame.Default_LoginVistor.ClearLoginCookie">
            <summary>
            清空登陆Cookie
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/3 21:07:50
            ************************************************************
        </member>
        <member name="P:MangoMis.Frame.Frame.Default_LoginVistor.IsRefreshing">
            <summary>
            是否未登陆
            </summary>
            <value>The cookie_ card.</value>
        </member>
        <member name="M:MangoMis.Frame.Frame.Default_LoginVistor.Check_Can_Login(System.Int32)">
            <summary>
            检查用户是否可以登陆
            </summary>
            <param name="userId"></param>
        </member>
        <member name="E:MangoMis.Frame.Frame.Default_LoginVistor.Check_Even_Have_Account">
            <summary>
            检查是否有单点账号
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.Default_LoginVistor.Current_Login_Status">
            <summary>
            当前登陆状态
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.Default_LoginVistor.GetCardUrl(MangoMis.Frame.Frame.CardType,MangoMis.Frame.Frame.CallBackType,System.String)">
            <summary>
            取得与服务器交互的地址
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/12 14:08:30
            ************************************************************
            <param name="type">The type.</param>
            <param name="calltype">The calltype.</param>
            <param name="redirectUrl">跳转地址</param>
            <returns>System.String.</returns>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/12 14:06:52
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Frame.Default_LoginVistor.User_Login_For_Site(System.Int32)">
            <summary>
            用户登陆本站
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.Default_LoginVistor.User_Login_For_SSO(System.Int32)">
            <summary>
            在已经确认用户已经登陆时登陆SSO
            </summary>
            <param name="userId"></param>
        </member>
        <member name="M:MangoMis.Frame.Frame.Default_LoginVistor.User_Logout_For_Site">
            <summary>
            用户登出本站
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.Default_LoginVistor.User_Logout_For_SSO(System.Int32)">
            <summary>
            用户登出SSO操作
            </summary>
            <param name="userId"></param>
        </member>
        <member name="M:MangoMis.Frame.Frame.Default_LoginVistor.AT_Begin_Request">
            <summary>
            响应请求前判断登陆状态
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.Default_LoginVistor.Change_Login_City(System.Int32)">
            <summary>
            变更登陆人所在城市
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.Default_LoginVistor.CheckUser(System.Int32,MangoMis.Frame.Frame.sso_check_action,MangoMis.Frame.Frame.sso_check_action,MangoMis.Frame.Frame.sso_check_msg_action,MangoMis.Frame.Frame.sso_check_init_user,MangoMis.Frame.Frame.sso_check_action,System.Boolean)">
            <summary>
            检查用户是否登陆并回调
            </summary>
            <param name="nowUserid">当前已经登陆的员工编号</param>
            <param name="haveUser">已经登陆的回调</param>
            <param name="initLoginUser">初始化登陆用户的回调</param>
            <param name="noUser">无用户登陆的回调</param>
            <param name="loginError">登陆错误的带错误消息回调</param>
            <param name="noPower">无权限的回调</param>
            <param name="isAspxPage">当前是否是ASPX页面</param>
        </member>
        <member name="T:MangoMis.Frame.Frame.GlobalPageFrame">
            <summary>
            Global继承的类.内置Global运行函数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.DNzxf_BeginRequest">
            <summary>
            开始处理请求的入口
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.GlobalPageFrame.AppStartTime">
            <summary>
            站点启动时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.GlobalPageFrame.AppStartOverTime">
            <summary>
            站点启动完成时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.GlobalPageFrame.RequestRecord">
            <summary>
            请求记录器
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.GlobalPageFrame.GlobalDefaultRequest">
            <summary>
            全局默认请求处理
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.GlobalPageFrame.BeginTime">
            <summary>
            进入页面开始时间
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.Application_Init(System.Object,System.EventArgs)">
            <summary>
            在应用程序被实例化或第一次被调用时，该事件被触发。对于所有的HttpApplication 对象实例，它都会被调用。
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.Application_Disposed(System.Object,System.EventArgs)">
            <summary>
            在应用程序被销毁之前触发。这是清除以前所用资源的理想位置。
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.Application_Error(System.Object,System.EventArgs)">
            <summary>
            当应用程序中遇到一个未处理的异常时，该事件被触发。
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.Application_Start(System.Object,System.EventArgs)">
            <summary>
            ：在HttpApplication 类的第一个实例被创建时，该事件被触发。它允许你创建可以由所有HttpApplication 实例访问的对象。
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.Application_End(System.Object,System.EventArgs)">
            <summary>
             ：在HttpApplication 类的最后一个实例被销毁时，该事件被触发。在一个应用程序的生命周期内它只被触发一次。
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.Session_Start(System.Object,System.EventArgs)">
            <summary>
             ：在一个新用户访问应用程序 Web 站点时，该事件被触发。
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.Session_End(System.Object,System.EventArgs)">
            <summary>
            Session结束
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.OnBeginAppStart">
            <summary>
            站点启动时运行(父类中无内容,子站点子类中重写后会在站点启动时运行)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.FirstRunBeginRequest">
            <summary>
            判断站点是否第一次运行,
            进行初始化虚拟页面
            通过本地的[Configuration/WcfApp.config]或者[WCF路径配置]初始化WCF的连接地址
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.IsRefreshCache">
            <summary>
            查看是否是更新缓存了(可重写)
            </summary>
            <returns>返回True中断运行.返回False继续运行.</returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.IsAutoPage">
            <summary>
            自动运行的页面,可以手动添加进[Auto_Run_Pages]中.不用添加页面,访问会自动调用
            </summary>
            <returns>返回True中断运行.返回False继续运行.</returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.IsSiteCantVisitCheckByApistatic">
            <summary>
            通过ApiStatic验证网站是否不可访问
            </summary>
            <returns>返回True中断运行.返回False继续运行.</returns>
        </member>
        <member name="P:MangoMis.Frame.Frame.GlobalPageFrame.CurrentRunOnceAtBeginRequest">
            <summary>
            用于判断只运行一次的初始化函数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.AppendRunOnceAtBeginRequest(System.String,MangoMis.Frame.Model.InitEventAction)">
            <summary>
            添加一个在BeginRequset时只运行一次的事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.RunOnceAtBeginRequest2017">
            <summary>
            运行注册事件.如果Global重写了BeginRequest需要手动调用此函数.来运行注册的事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.Application_BeginRequest(System.Object,System.EventArgs)">
            <summary>
            在接收到一个应用程序请求时触发。对于一个请求来说，它是第一个被触发的事件，请求一般是用户输入的一个页面请求（URL）。
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.Application_AuthenticateRequest(System.Object,System.EventArgs)">
            <summary>
            ：在 ASP.NET 页面框架得到与当前请求相关的当前状态（Session 状态）时，该事件被触发。
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.Application_AuthorizeRequest(System.Object,System.EventArgs)">
            <summary>
            ：在安全模块建立起当前用户的有效的身份时，该事件被触发。在这个时候，用户的凭据将会被验证。
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.Application_ResolveRequestCache(System.Object,System.EventArgs)">
            <summary>
            Application_ResolveRequestCache：在 ASP.NET 页面框架完成一个授权请求时，该事件被触发。它允许缓存模块从缓存中为请求提供服务，从而绕过事件处理程序的执行。
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.Application_PostResolveRequestCache(System.Object,System.EventArgs)">
            <summary>
            Application_PostResolveRequestCache：在 ASP.NET 页面框架完成一个授权请求时，该事件被触发。它允许缓存模块从缓存中为请求提供服务，从而绕过事件处理程序的执行。
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.Application_MapRequestHandler(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.Application_PostMapRequestHandler(System.Object,System.EventArgs)">
            <summary>
            此事件只用于加载虚拟页面.判断虚拟页面使用的是DNZxf_Page.Load_DNZxf_Page();
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.Application_AcquireRequestState(System.Object,System.EventArgs)">
            <summary>
            Application_AuthorizeRequest：当安全模块确认一个用户可以访问资源之后，该事件被触发。
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.Application_PreRequestHandlerExecute(System.Object,System.EventArgs)">
            <summary>
            Application_PreRequestHandlerExecute：在 ASP.NET 页面框架开始执行诸如页面或 Web 服务之类的事件处理程序之前，该事件被触发。
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.Application_PreSendRequestHeaders(System.Object,System.EventArgs)">
            <summary>
            Applcation_PreSendRequestHeaders：在 ASP.NET 页面框架发送 HTTP 头给请求客户（浏览器）时，该事件被触发。
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.Application_PreSendRequestContent(System.Object,System.EventArgs)">
            <summary>
            Application_PreSendContent：在 ASP.NET 页面框架发送内容给请求客户（浏览器）时，该事件被触发。
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.Application_PostRequestHandlerExecute(System.Object,System.EventArgs)">
            <summary>
             Application_PostRequestHandlerExecute：在 ASP.NET 页面框架结束执行一个事件处理程序时，该事件被触发。
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.Application_ReleaseRequestState(System.Object,System.EventArgs)">
            <summary>
            Application_ReleaseRequestState：在 ASP.NET 页面框架执行完所有的事件处理程序时，该事件被触发。这将导致所有的状态模块保存它们当前的状态数据。
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.Application_UpdateRequestCache(System.Object,System.EventArgs)">
            <summary>
            Application_UpdateRequestCache：在 ASP.NET 页面框架完成事件处理程序的执行时，该事件被触发，从而使缓存模块存储响应数据，以供响应后续的请求时使用。
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.GlobalPageFrame.Application_EndRequest(System.Object,System.EventArgs)">
            <summary>
            Application_EndRequest：针对应用程序请求的最后一个事件。
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Frame.sso_check_action">
            <summary>
            
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Frame.sso_check_msg_action">
            <summary>
            
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Frame.sso_check_init_user">
            <summary>
            
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Frame.sso_check_sso_account">
            <summary>
            
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Frame.ILoginInterface">
            <summary>
            [登陆已经转移至IMgLogin]用户登陆
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.ILoginInterface.SSO_Vistor">
            <summary>
            单点登陆的使用实例
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.ILoginInterface.user">
            <summary>
            登陆用户实体
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.ILoginInterface.IsLoginByOtherInterfaceLogin">
            <summary>
            是否已经使用其它第三方登陆
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.ILoginInterface.userid">
            <summary>
            当前登陆人编号
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.ILoginInterface.card">
            <summary>
            兼容原版本的CARD.用不上的可以不用写
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.ILoginInterface.read_card_url">
            <summary>
            读取CardCookie的地址
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.ILoginInterface.CheckUser(System.Int32,MangoMis.Frame.Frame.sso_check_action,MangoMis.Frame.Frame.sso_check_action,MangoMis.Frame.Frame.sso_check_msg_action,MangoMis.Frame.Frame.sso_check_init_user,MangoMis.Frame.Frame.sso_check_action,System.Boolean)">
            <summary>
            检查用户是否登陆并回调
            </summary>
            <param name="nowUserid">当前已经登陆的员工编号</param>
            <param name="haveUser">已经登陆的回调</param>
            <param name="initLoginUser">初始化登陆用户的回调</param>
            <param name="noUser">无用户登陆的回调</param>
            <param name="loginError">登陆错误的带错误消息回调</param>
            <param name="noPower">无权限的回调</param>
            <param name="isAspxPage">当前是否是ASPX页面</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.ILoginInterface.Check_Can_Login(System.Int32)">
            <summary>
            去单点检查用户是否可以在单点登陆
            </summary>
            <param name="userId"></param>
        </member>
        <member name="E:MangoMis.Frame.Frame.ILoginInterface.Check_Even_Have_Account">
            <summary>
            去单点检查用户是否拥有单点账号
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.ILoginInterface.User_Login_For_Site(System.Int32)">
            <summary>
            用户登陆本站
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.ILoginInterface.User_Logout_For_Site">
            <summary>
            用户登出本站
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Frame.ILoginInterface.Current_Login_Status">
            <summary>
            当前登陆状态
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.ILoginInterface.User_Logout_For_SSO(System.Int32)">
            <summary>
            用户登出SSO操作
            </summary>
            <param name="userId"></param>
        </member>
        <member name="M:MangoMis.Frame.Frame.ILoginInterface.User_Login_For_SSO(System.Int32)">
            <summary>
            在已经确认用户已经登陆时登陆SSO
            </summary>
            <param name="userId"></param>
        </member>
        <member name="M:MangoMis.Frame.Frame.ILoginInterface.AT_Begin_Request">
            <summary>
            响应请求前判断登陆状态
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.ILoginInterface.Change_Login_City(System.Int32)">
            <summary>
            变更登陆人所在城市
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Frame.PersonalFrame">
            <summary>
            站点个人信息控制
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.PersonalFrame.CityId">
            <summary>
            当前城市编号
            </summary>
            <value>The city id.</value>
        </member>
        <member name="T:MangoMis.Frame.Frame.setting_page_check_power_action">
            <summary>
            检查配置权限的代理
            </summary>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:MangoMis.Frame.Frame.setting_page_action">
            <summary>
            检查配置权限的代理
            </summary>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:MangoMis.Frame.Frame.Setting_Page_Action">
            <summary>
            配置页面的操作函数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.Setting_Page_Action.#ctor(System.String,System.Action{MangoMis.Frame.Model.VirtualPage,System.String},System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.Frame.Setting_Page_Action"/> class.
            </summary>
            <param name="showName">Name of the show.</param>
            <param name="runAction">The run action.</param>
            <param name="actionName">Name of the action.</param>
            <param name="isStartWith">if set to <c>true</c> [is start with].</param>
        </member>
        <member name="F:MangoMis.Frame.Frame.Setting_Page_Action.name">
            <summary>
            配置名(按钮中文本)
            </summary>
            <value>The name.</value>
        </member>
        <member name="F:MangoMis.Frame.Frame.Setting_Page_Action.action_Name">
            <summary>
            按钮操作(方法名(VirPageHelper.VirBaseAction取得))
            </summary>
            <value>The name of the action_.</value>
        </member>
        <member name="F:MangoMis.Frame.Frame.Setting_Page_Action.is_startWith_action">
            <summary>
            是否是前缀方法(如log_{0}中的log_就是前缀,后面的是参数)
            </summary>
            <value><c>true</c> if [is_start with_action]; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:MangoMis.Frame.Frame.Setting_Page_Action.action">
            <summary>
            运行操作(参数为虚页面)
            </summary>
            <value>The action.</value>
        </member>
        <member name="T:MangoMis.Frame.Frame.Setting_Page_Frame">
            <summary>
            创建一个虚拟配置页面
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.Setting_Page_Frame.setting_name">
            <summary>
            配置名(按钮名)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.Setting_Page_Frame.setting_action">
            <summary>
            配置Action(地址)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.Setting_Page_Frame.actions">
            <summary>
            操作方法
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Frame.Setting_Page_Frame.onCheckPower">
            <summary>
            检查是否有权限
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Frame.Setting_Page_Frame.beforeBuildMain">
            <summary>
            创建Main页面之前
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Frame.Setting_Page_Frame.afterBuildMain">
            <summary>
            创建Main页面之后
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Frame.Setting_Page_Frame.beforeBuild">
            <summary>
            创建页面之前
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Frame.Setting_Page_Frame.afterBuild">
            <summary>
            创建页面之后
            </summary>
        </member>
        <member name="E:MangoMis.Frame.Frame.Setting_Page_Frame.onInit">
            <summary>
            初始化后的操作
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.Setting_Page_Frame.#ctor(System.String)">
            <summary>
            形成一个配置的页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.Setting_Page_Frame.#ctor(System.String,System.String)">
            <summary>
            形成一个配置的页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.Setting_Page_Frame.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.Setting_Page_Frame.get_Page">
            <summary>
            取得返回页面(包含判断权限)
            </summary>
            <returns>Page.</returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.Setting_Page_Frame.build_Page(MangoMis.Frame.Model.VirtualPage)">
            <summary>
            创建页面
            </summary>
            <param name="current_page">The current_page.</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.Setting_Page_Frame.build_action_page(MangoMis.Frame.Model.VirtualPage)">
            <summary>
            创建虚拟页面-操作处理页面
            </summary>
            <param name="current_page">The current_page.</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.Setting_Page_Frame.build_main_page(MangoMis.Frame.Model.VirtualPage)">
            <summary>
            创建虚拟页面首页
            </summary>
            <param name="current_page">The current_page.</param>
        </member>
        <member name="T:MangoMis.Frame.Frame.DNZxf_Application_Init">
            <summary>
            站点启动时初始化
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.DNZxf_Application_Init.is_Application_Started">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.DNZxf_Application_Init.GetSettingPagePath(System.Int32,System.String)">
            <summary>
            通过登陆类型取得管理首页面的地址
            </summary>
            <param name="loginType">登陆类型</param>
            <param name="settingPage">配置页面地址</param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.Frame.DNZxf_Application_Init.PostConfigureInfoDir">
            <summary>
            提交Handler权限的虚拟路径
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.DNZxf_Application_Init.PostStoreConfigInfoDir">
            <summary>
            提交Store配置的路径
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.DNZxf_Application_Init.Load_Auto_Cache">
            <summary>
            读取自动加载的缓存
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.DNZxf_Application_Init.Regist_Page_Events">
            <summary>
            注册所有的默认页面加载事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.DNZxf_Application_Init.Config_Init">
            <summary>
            站点配置初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.DNZxf_Application_Init.Apistatic_Init">
            <summary>
            ApiStatic初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.DNZxf_Application_Init.VirtualPage_init">
            <summary>
            虚拟页面级别初始化
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Frame.SSOLoginHandlerFrame">
            <summary>
            Ashx基类
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.IsShowManagerPanel">
            <summary>
            是否显示管理面板
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginHandlerFrame.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.CurrentTag">
            <summary>
            当前处理程序标签
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.HaveDebugUserIdList">
            <summary>
            指定有Debug权限的员工编号
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.LtctraId">
            <summary>
            追踪Id,由初始调用方生成,在单次请求链路中唯一,一直携带,值来源于WebHelper.LtctraId
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginHandlerFrame.InitDebugBuilder">
            <summary>
            初始化当前请求的DebugBuilder
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.CurrentHaveDebug">
            <summary>
            当前是否有Debug的配置 
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.HaveDebug">
            <summary>
            是否有Debug.这个配置取得的值.就是当前请求是否有Debug
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.CurrentDebugStatus">
            <summary>
            当前请求的Debug状态
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.CurrentDebug">
            <summary>
            当前请求存储Debug内容的控件
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.SSOLoginHandlerFrame._currentDebugBuilder">
            <summary>
            内部赋值请不要动
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.current_debug_builder">
            <summary>
            当前请求的DebugBuilder(改为使用CurrentDebugBuilder)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.CurrentDebugBuilder">
            <summary>
            当前的Debug建立的Builder
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.LoginUserIdField">
            <summary>
            当前页面访问人用户编号 
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.LoginUserId">
            <summary>
            当前页面访问人用户编号
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.CurrentInfo">
            <summary>
            当前页面的系统信息
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.SSOLoginHandlerFrame.Debug">
            <summary>
            本地系统Debug信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginHandlerFrame.AddDebug(System.String)">
            <summary>
            添加一个运行Debug信息
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/1 10:53:20
            ************************************************************
            <param name="text">The text.</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginHandlerFrame.AddDebug(System.Func{System.String})">
            <summary>
            添加一个运行Debug信息
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.SSOLoginHandlerFrame.BeginTime">
            <summary>
            本次运行开始时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.Context">
            <summary>
            当前页面内容
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.Session">
            <summary>
            Gets the session.
            </summary>
            <value>The session.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.Server">
            <summary>
            Gets the server.
            </summary>
            <value>The server.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.Request">
            <summary>
            Gets the request.
            </summary>
            <value>The request.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.Response">
            <summary>
            Gets the response.
            </summary>
            <value>The response.</value>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginHandlerFrame.ProcessRequest(System.Web.HttpContext)">
            <summary>
            通过实现 <see cref="T:System.Web.IHttpHandler" /> 接口的自定义 HttpHandler 启用 HTTP Web 请求的处理。
            </summary>
            <param name="context"><see cref="T:System.Web.HttpContext" /> 对象，它提供对用于为 HTTP 请求提供服务的内部服务器对象（如 Request、Response、Session 和 Server）的引用。</param>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.IsOpenThis">
            <summary>
            Gets a value indicating whether this instance is open this.
            </summary>
            <value><c>true</c> if this instance is open this; otherwise, <c>false</c>.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.IsCanRedirectPage">
            <summary>
            当前是否是可以进行页面跳转的页面(登陆时的页面跳转)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.CloseText">
            <summary>
            Gets the close text.
            </summary>
            <value>The close text.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.UserId">
            <summary>
            [请使用本类中的LoginUserId]需要重写.返回当前登陆人ID
            </summary>
            <value>The user id.</value>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginHandlerFrame.InitLoginUser(System.Int32)">
            <summary>
            初始化登陆人.需要在继承的位置实例化.此函数运行成功后需要保证UserId已经可以取到值 UserId 为0 会判断为无用户登陆
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 13:09:14
            ************************************************************
            <param name="userid">The userid.</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginHandlerFrame.HaveUser">
            <summary>
            已有用户登陆调用的函数.需要重写
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginHandlerFrame.NoUser(MangoMis.Frame.Frame.UserState)">
            <summary>
            无用户登陆调用的函数.需要重写
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/27 9:21:06
            ************************************************************
            <param name="NoUserState">无用户时的状态</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginHandlerFrame.NotAccess">
            <summary>
            某些原图暂停登陆.AppManage.CanContinueAccess() 判断失败时运行.需要重写
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/27 9:17:31
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginHandlerFrame.LoginError(System.String)">
            <summary>
            无用户登陆调用的函数.需要重写
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.IsReusable">
            <summary>
            获取一个值，该值指示其他请求是否可以使用 <see cref="T:System.Web.IHttpHandler" /> 实例。
            </summary>
            <value><c>true</c> if this instance is reusable; otherwise, <c>false</c>.</value>
            <returns>如果 <see cref="T:System.Web.IHttpHandler" /> 实例可再次使用，则为 true；否则为 false。</returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginHandlerFrame.GetKey(System.String)">
            <summary>
            取得参数
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-16-2013
            ************************************************************
            <param name="key">The key.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginHandlerFrame.GetIntKey(System.String)">
            <summary>
            取得INT参数
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-16-2013
            ************************************************************
            <param name="key">The key.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginHandlerFrame.Json(System.Object)">
            <summary>
            输出JSON
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-17-2013
            ************************************************************
            <param name="Data">The data.</param>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.PageName">
            <summary>
            页面名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.GetPageName">
            <summary>
            页面名
            </summary>
            <value>The lower action.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.LowerAction">
            <summary>
            小字的执行函数
            </summary>
            <value>The lower action.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.CurrentPage">
            <summary>
             当前页
            </summary>
            <value>The current page.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.PageSize">
            <summary>
            显示条目数
            </summary>
            <value>The size of the page.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.Filters">
            <summary>
            查询条件
            </summary>
            <value>The filters.</value>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginHandlerFrame.GetEntityFilters``1">
            <summary>
            按TEntity(类型)取得查询条件,Filter的Name必须是这个类中的属性,注意:是属性属性属性,重要的事说三次.不是这个类的属性的Filter会被删除掉
            </summary>
            <typeparam name="TEntity">要取得条件所属的实体类型</typeparam>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.Orders">
            <summary>
            排序条件
            </summary>
            <value>The orders.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.PostParam">
            <summary>
            提交的其它参数
            </summary>
            <value>The post param.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginHandlerFrame.PostDicts">
            <summary>
            取得提交参数的字典
            </summary>
            <value>The post param.</value>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginHandlerFrame.GetPostModel``1(``0)">
            <summary>
            取得提交的类
            </summary>
            <typeparam name="MT">The type of the mt.</typeparam>
            <returns>``0.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.Frame.SSOLoginPageFrame">
            <summary>
            Aspx的基类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.IsShowManagerPanel">
            <summary>
            是否显示管理面板
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.CurrentTag">
            <summary>
            当前处理程序标签
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.HaveDebugUserIdList">
            <summary>
            指定有Debug权限的员工编号
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.LtctraId">
            <summary>
            追踪Id,由初始调用方生成,在单次请求链路中唯一,一直携带,值来源于WebHelper.LtctraId
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.InitDebugBuilder">
            <summary>
            初始化当前请求的DebugBuilder
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.CurrentHaveDebug">
            <summary>
            当前是否有Debug的配置 
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.InitIsHaveDebug">
            <summary>
            初始化本次请求是否有Debug
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.HaveDebug">
            <summary>
            是否有Debug.这个配置取得的值.就是当前请求是否有Debug
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.CurrentDebug">
            <summary>
            当前Debug控件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.CurrentDebugStatus">
            <summary>
            当前请求的Debug状态
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.SSOLoginPageFrame._currentDebugBuilder">
            <summary>
            内部赋值请不要动
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.current_debug_builder">
            <summary>
            当前请求的DebugBuilder(改为使用CurrentDebugBuilder)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.CurrentDebugBuilder">
            <summary>
            当前的Debug建立的Builder
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.DNControls">
            <summary>
            本地向页面添加控件时最好用这个,不会出%代码块的问题
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.LoginUserId">
            <summary>
            当前页面访问人用户编号
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.CurrentInfo">
            <summary>
            当前页面的系统信息
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.DNResource">
            <summary>
            页面自动加载资源的设置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.PageWriteDebug(System.Boolean)">
            <summary>
            写入Debug.(改为自动写入不用调用)
            </summary>
            <param name="isEveryRead">是否不判断其它</param>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.IsLoadCss">
            <summary>
            是否自动加载Css[请不要再重写此属性,改为使用:
            DNResource.SetUnLoad(MGResource.Cssmisv1style); ;
            DNResource.SetUnLoad(MGResource.Cssmisv2style);
            ]
            </summary>
            <value><c>true</c> if this instance is load CSS; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.IsCheckLogin">
            <summary>
            是否检查登陆
            </summary>
            <value>true:检查登陆(登录调用HaveUser未登录调用NoUser),false:不检查登陆直接调用调用UnCheckLoginRun</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.IsLoadGlobalCss">
            <summary>
            是否自动加载Css[请不要再重写此属性,请使用DNResource.SetUnLoad(MGResource.GobalStyle)]
            </summary>
            <value><c>true</c> if this instance is load CSS; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.IsAutoInculdeExtLib">
            <summary>
            mislib[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            <value><c>true</c> if this instance is load CSS; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.IsLoadUrlBase">
            <summary>
            是否自动引用UrlBase[默认是TRUE][请不要再重写此属性,改为使用UnLoadAPIUrlbase();]
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.IsCanRedirectPage">
            <summary>
            当前是否是可以进行页面跳转的页面(登陆时的页面跳转)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.IsAjaxRequest">
            <summary>
            当前是否是可以进行页面跳转的页面(登陆时的页面跳转)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.Page_Load(System.Object,System.EventArgs)">
            <summary>
            基础PageLoad方法.会检查是否登陆.登陆会调用HaveUser.未登陆调用NoUser
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 13:32:35
            ************************************************************
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.LoadUrlBaseScript">
            <summary>
            读取URLBase的脚本
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.IsOpenThis">
            <summary>
            页面是否开启
            </summary>
            <value><c>true</c> if this instance is open this; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.CloseText">
            <summary>
            Gets the close text.
            </summary>
            <value>The close text.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.UserId">
            <summary>
            [请使用本类中的LoginUserId]需要重写.返回当前登陆人ID
            </summary>
            <value>The user id.</value>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.RunEnd">
            <summary>
            PageLoad运行结束
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 13:09:14
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.RunBegin">
            <summary>
            PageLoad运行开始
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 13:09:14
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.InitLoginUser(System.Int32)">
            <summary>
            初始化登陆人.需要在继承的位置实例化.此函数运行成功后需要保证UserId已经可以取到值 UserId 为0 会判断为无用户登陆
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 13:09:14
            ************************************************************
            <param name="userid">The userid.</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.HaveUser">
            <summary>
            已有用户登陆调用的函数.需要重写
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.CheckUser">
            <summary>
            已有用户登陆调用的函数.需要重写
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.LocalNoUser(MangoMis.Frame.Frame.UserState)">
            <summary>
            无用户登陆
            </summary>
            <param name="noUserState"></param>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.UnCheckLoginRun">
            <summary>
            不登录时调用的函数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.NoUser(MangoMis.Frame.Frame.UserState)">
            <summary>
            无用户登陆调用的函数.需要重写
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/27 9:21:06
            ************************************************************
            <param name="noUserState">无用户时的状态</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.NotAccess">
            <summary>
            某些原图暂停登陆.AppManage.CanContinueAccess() 判断失败时运行.需要重写
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/27 9:17:31
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.OnPreLoad(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.LoginError(System.String)">
            <summary>
            无用户登陆调用的函数.需要重写
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.IsWriteDebug">
            <summary>
            是否已经写了Debug[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
            <value><c>true</c> if this instance is write debug; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.Page_Prerender(System.Object,System.EventArgs)">
            <summary>
            页面结束之前事件.当前只定义写入Debug(此函数已经清空.可以重写)
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.GetKey(System.String)">
            <summary>
            取得参数
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-16-2013
            ************************************************************
            <param name="key">The key.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.GetIntKey(System.String)">
            <summary>
            取得INT参数
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-16-2013
            ************************************************************
            <param name="key">The key.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.Json(System.Object)">
            <summary>
            输出JSON
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:03-17-2013
            ************************************************************
            <param name="data">The data.</param>
        </member>
        <member name="F:MangoMis.Frame.Frame.SSOLoginPageFrame.Debug">
            <summary>
            本地系统Debug信息[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Frame.SSOLoginPageFrame.BeginTime">
            <summary>
            本次运行开始时间[此项已经于20160409删除,已经无效.请不要再调用此项目]
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.alert(System.String,System.String)">
            <summary>
            用JS弹出消息(使用AlertMessage)
            </summary>
            <param name="message">The message.</param>
            <param name="title">The title.</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.AddDebug(System.Func{System.String})">
            <summary>
            添加一个运行Debug信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.AddDebug(System.String)">
            <summary>
            添加一个运行Debug信息
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/4/1 10:53:20
            ************************************************************
            <param name="text">The text.</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.AlertMessage(System.String,System.String,System.Int32)">
            <summary>
            使用JS弹出消息
            </summary>
            <param name="message">提示消息 </param>
            <param name="title">提示消息的标题(默认:消息提示)</param>
            <param name="width">提示消息的宽度(默认:400)</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.alertMsg(System.String,System.String,System.Int32)">
            <summary>
            使用JS弹出消息(使用AlertMessage)
            </summary>
            <param name="message">The message.</param>
            <param name="title">The title.</param>
            <param name="width">The width.</param>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/22 14:12:51
            ************************************************************
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.RenderChildren(System.Web.UI.HtmlTextWriter)">
            <summary>
            将服务器控件子级的内容输出到提供的 <see cref="T:System.Web.UI.HtmlTextWriter"/> 对象，此对象编写将在客户端呈现的内容。
            </summary>
            <param name="writer">接收呈现内容的 <see cref="T:System.Web.UI.HtmlTextWriter"/> 对象。</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.AddControl(System.Web.UI.Control,MangoMis.Frame.WebPage.PageRender.RenderPosition)">
            <summary>
            添加一个控件
            </summary>
            <param name="control">要添加的控件</param>
            <param name="position">控件添加的位置</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.RunJs(System.String,System.String)">
            <summary>
            运行JS 等价于[AddScriptText]因为觉得这个函数名不爽.所以新建一个方法AddScriptText,然后[RunJs]内部调用[AddScriptText]
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/22 14:10:30
            ************************************************************
            <param name="jstext">The jstext.</param>
            <param name="jsname">The jsname.</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.AddScriptText(System.String)">
            <summary>
            添加Script文本[等价于RunJS]
            </summary>
            <param name="scriptText"></param>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.AddStyleText(System.String)">
            <summary>
            添加样式文本
            </summary>
            <param name="styletext"></param>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.AddStyleFile(System.String)">
            <summary>
            添加一个样式文件
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.LoadResource(MangoMis.Frame.WebPage.PageRender.MGResource)">
            <summary>
            加载默认加载的资源
            </summary>
            <param name="resourceItem"></param>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.UnLoadResource(MangoMis.Frame.WebPage.PageRender.MGResource)">
            <summary>
            卸载默认加载的资源(包括基本样式.但不包括API)
            </summary>
            <param name="resourceItem"></param>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.UnLoadAllResource">
            <summary>
            卸载默认加载的资源(包括基本样式.但不包括API)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.UnLoadAPIUrlbase">
            <summary>
            卸载默认加载的APIUrlbase(但不一定会强制生效.如果页面加载了Include也就是MG.Include的资源会强制加载APIUrlbase)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.AddScript(System.String)">
            <summary>
            注册JS路径
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/22 14:10:37
            ************************************************************
            <param name="jspath">The jspath.</param>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.AddInclude(System.String[])">
            <summary>
            添加引入的脚本
            </summary>
            <param name="includeNameParams"></param>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.PageName">
            <summary>
            页面名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.GetPageName">
            <summary>
            页面名
            </summary>
            <value>The lower action.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.LowerAction">
            <summary>
            小字的执行函数
            </summary>
            <value>The lower action.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.CurrentPage">
            <summary>
             当前页
            </summary>
            <value>The current page.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.PageSize">
            <summary>
            显示条目数
            </summary>
            <value>The size of the page.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.Filters">
            <summary>
            查询条件
            </summary>
            <value>The filters.</value>
        </member>
        <member name="M:MangoMis.Frame.Frame.SSOLoginPageFrame.GetEntityFilters``1">
            <summary>
            按TEntity(类型)取得查询条件,Filter的Name必须是这个类中的属性,注意:是属性属性属性,重要的事说三次.不是这个类的属性的Filter会被删除掉
            </summary>
            <typeparam name="TEntity">要取得条件所属的实体类型</typeparam>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.Orders">
            <summary>
            排序条件
            </summary>
            <value>The orders.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.PostParam">
            <summary>
            提交的其它参数
            </summary>
            <value>The post param.</value>
        </member>
        <member name="P:MangoMis.Frame.Frame.SSOLoginPageFrame.PostDicts">
            <summary>
            取得提交参数的字典
            </summary>
            <value>The post param.</value>
        </member>
        <member name="T:MangoMis.Frame.Frame.Web_Site_Request_Call">
            <summary>
            站点访问流程
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Frame.Web_Site_Request_Call.Check_IsDeniedVisit">
            <summary>
            是否是被拒绝的访问
            </summary>
            <returns>返回True中断运行.返回False继续运行.</returns>
        </member>
        <member name="M:MangoMis.Frame.Frame.Web_Site_Request_Call.Check_IsRefreshCache">
            <summary>
            查看是否是更新缓存了(可重写)
            </summary>
            <returns>返回True中断运行.返回False继续运行.</returns>
        </member>
        <member name="T:MangoMis.Frame.FrameWeb.DNZxf_Session">
            <summary>
            自定义Session重写
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameWeb.DNZxf_Session.String">
            <summary>
            String类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameWeb.DNZxf_Session.Object">
            <summary>
            Object类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameWeb.DNZxf_Session.Int">
            <summary>
            Int类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameWeb.DNZxf_Session.DTime">
            <summary>
            DateTim类型
            </summary>
        </member>
        <member name="T:MangoMis.Frame.FrameWeb.DNZxf_ViewState">
            <summary>
            自定义Session重写
            </summary>
        </member>
        <member name="F:MangoMis.Frame.FrameWeb.DNZxf_ViewState.String">
            <summary>
            String类型
            </summary>
        </member>
        <member name="T:MangoMis.Frame.FrameWeb.StringViewState">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameWeb.StringViewState.Item(System.String)">
            <summary>
            取得一个String的ViewState
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.FrameWeb.StringSession">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameWeb.StringSession.Item(System.String)">
            <summary>
            取得一个String的Session
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.FrameWeb.ObjectSession">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameWeb.ObjectSession.Item(System.String)">
            <summary>
            取得一个object的Session
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.FrameWeb.DateTimeSession">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameWeb.DateTimeSession.Item(System.String)">
            <summary>
            取得一个DateTime的Session
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.FrameWeb.IntSession">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.FrameWeb.IntSession.Item(System.String)">
            <summary>
            取得一个int的Session
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.FrameWeb.WebLocalSiteHelperMessageExtend">
            <summary>
            WebLocalSite 的扩展字符信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.FrameWeb.WebLocalSiteHelperMessageExtend.GetTextOfSetCookieCurrentError(System.String,System.Int32)">
            <summary>
            "当前HTTP状态[Status:{Response.Status},StatusCode,{Response.StatusCode}]"
            </summary>
            <param name="responseStatus"></param>
            <param name="responseStatusCode"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.FrameWeb.WebLocalSiteHelperMessageExtend.GetTextOfCookeDotKey(System.String)">
            <summary>
            ", "+ Key
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.FrameWeb.WebLocalSiteHelperMessageExtend.GetTextOfSiteCoderHtml(System.String)">
            <summary>
            
            </summary>
            <param name="siteCoder"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.FrameWeb.WebLocalSiteHelperMessageExtend.GetTextOfVirualPageError(System.Int32)">
            <summary>
            虚拟页面出错
            </summary>>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.AssemblyLoader.AssemblyBody">
            <summary>
            当前应用程序中的程序集
            </summary>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyBody.VistorFrameType">
            <summary>
            V1版本Data映射的接口基类
            </summary>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyBody.EntityBaseType">
            <summary>
            Model里类型的基类
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyBody.AnonymousTypeStartString">
            <summary>
            匿名类前缀(在加载类型时排除掉匿名类.不进行加载)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyBody.DataTypeEndString">
            <summary>
            Data的程序集后缀
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyBody.CustomLogNameLoadError">
            <summary>
            加载DLL中的类型出错时记录的自定义的错误文件
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyBody.TypeNameIHttpHandler">
            <summary>
            一般处理程序的接口
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyBody.TypeNameISecondBaseInterface">
            <summary>
            WCF接口的基类接口
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyBody.TypeNameInterfaceFrame">
            <summary>
            DataInterfaceV1版本接口的基类接口
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyBody.TypeNameIAutoInterface">
            <summary>
            自动匹配接口的基类接口
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyBody.TypeNameIApiController">
            <summary>
            MangoApi的接口
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyBody.TypeNameAutoLoadPage">
            <summary>
            自动匹配接口的基类接口
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyBody.TypeNameVirLoadPage">
            <summary>
            使用的虚拟页面.本类继承于DNZxf_Default_Page
            </summary>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBody.CreateFormDomainAssembly(System.Reflection.Assembly)">
            <summary>
            通过程序集.加载内部的类型
            </summary>
            <param name="item">要加载的程序集</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBody.CreateFromFile(System.String,System.String)">
            <summary>
            通过文件加载程序集
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBody.LoadAssemblyFromPath">
            <summary>
            通过文件路径加载程序集
            </summary>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBody.LoadAssemblyByStream(System.IO.MemoryStream,System.IO.MemoryStream)">
            <summary>
            通过DLL和PDB的流加载程序集
            </summary>
            <param name="dllStream">DLL的流</param>
            <param name="pdbStream">PDB的流</param>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyBody.AtPath">
            <summary>
            DLL所在目录
            </summary>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyBody.XmlPath">
            <summary>
            当前XML文档的路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyBody.XmlDocument">
            <summary>
            当前说明文档
            </summary>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBody.ReloadXml">
            <summary>
            重新加载XML
            </summary>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyBody.Name">
            <summary>
            程序集名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyBody.IsHavePdb">
            <summary>
            是否包含调试文件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBody.AddTypeInClassGroup(MangoMis.Frame.AssemblyLoader.TypeGroupKey,System.String)">
            <summary>
            添加类型的分组
            </summary>
            <param name="groupKeyKey">分组Key</param>
            <param name="typeFullName">类型全名</param>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBody.MakeTypGroup(MangoMis.Frame.AssemblyLoader.TypeGroupKey,System.String@,MangoMis.Frame.AssemblyLoader.TypeGroupKey@)">
            <summary>
            整理类型的分组并添加进程序集分组
            </summary>
            <param name="typeGroupKey">类型应该的分组</param>
            <param name="typeFullName">类型合全名</param>
            <param name="refTypeGroupKey">需要返回的原始类型分组</param>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBody.CheckGroup(System.Type,System.String@)">
            <summary>
            检查类型所在的分组
            </summary>
            <param name="type">检查的类型</param>
            <param name="typeFullName">类型全名(因为不希望新实例化一个字串,所以传的是一个引用)</param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyBody._isAssemblyFileEndWithData">
            <summary>
            程序集文件是否以Data结尾 
            </summary>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyBody.Copyright">
            <summary>
            版权信息(生成人)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBody.BuildAssemblyAction">
            <summary>
            加载程序集的函数.因为需要独立出Lock所以把事件内容单独写一个函数
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBody.BuildAssemblyItem">
            <summary>
            初始化一个本地程序集
            </summary>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBody.WriteTypeLoadError(System.Reflection.ReflectionTypeLoadException)">
            <summary>
            写入加载类型错误的日志
            </summary>
            <param name="ex">错误Exception</param>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyBody.DllFullPath">
            <summary>
            dll完整路径(动态加载时才用.Bin目录中的没有这个属性)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyBody.PdbFullPath">
            <summary>
            pdb完整路径(动态加载时才用.Bin目录中的没有这个属性)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyBody.LoadMode">
            <summary>
            是否是Bin目录直接加载的DLL(添加本地设置Unload)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyBody.AssemblyBuildTime">
            <summary>
            程序集生成时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyBody.LoadTime">
            <summary>
            首次读取时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyBody.LastReloadTime">
            <summary>
            最后一次读取时间
            </summary>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyBody.LoadUserId">
            <summary>
            首次读取人
            </summary>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyBody.LastReloadUserId">
            <summary>
            最后一次重读人
            </summary>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyBody.Version">
            <summary>
            加载的程序集的版本
            </summary>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyBody.LoadTimes">
            <summary>
            加载次数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyBody.Inited">
            <summary>
            是否初始化过
            </summary>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyBody.TypeGroupKey">
            <summary>
            程序集中类型包括的分组
            </summary>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyBody.Key">
            <summary>
            程序集名(非全名,eg.Pub.Data)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyBody.LoadItem">
            <summary>
            已经读取的程序集
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyBody._types">
            <summary>
            当前程序集中的类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyBody._namespaceList">
            <summary>
            当前程序集中的名称空间
            </summary>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBody.GetKeys">
            <summary>
            取得当前程序集中的所有类型索引
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBody.GetNamespaces">
            <summary>
            取得当前程序集中的所有名称空间
            </summary>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyBody._typeInGroup">
            <summary>
            存放分组中的类型名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyBody._groupKeys">
            <summary>
            存放所有分组名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBody.CheckInited">
            <summary>
            检查是否已经读取完成
            </summary>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyBody.Item(System.String)">
            <summary>
            取得对应的类型实例(允许返回Null值)
            </summary>
            <param name="typeFullName"></param>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBody.ReloadAssembly">
            <summary>
            重新加载程序集内容
            </summary>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBody.GetTypes">
            <summary>
            取得当前程序集中指定分组的类
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBody.GetTypes(MangoMis.Frame.AssemblyLoader.TypeGroupKey)">
            <summary>
            取得当前程序集中指定分组的类
            </summary>
            <param name="groupKey">要查询的分组</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBody.HaveGroupKey(MangoMis.Frame.AssemblyLoader.TypeGroupKey)">
            <summary>
            判断程序集中是否有对应分组
            </summary>
            <param name="groupKey">要检查的分组</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBody.ContainsKey(System.String)">
            <summary>
            是否包含类型索引
            </summary>
            <param name="typeKey">要查询的类型索引</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.AssemblyLoader.AssemblyBodyCollection">
            <summary>
            当前系统中的程序集信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBodyCollection.ShowLog">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyBodyCollection.Item(System.String)">
            <summary>
            取得程序集内容(会返回Null值)
            </summary>
            <param name="assemblyKey">程序集索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBodyCollection.GetAssemblyBodies">
            <summary>
            取得所有的程序集
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBodyCollection.GetAssemblyBodies(MangoMis.Frame.AssemblyLoader.TypeGroupKey)">
            <summary>
            取得程序集
            </summary>
            <param name="groupKey">要取得的程序集类型[如果传TypeGroupKey.None就是所有]</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBodyCollection.ContainsKey(System.String)">
            <summary>
            查看当前是否有此程序集(程序集名称,非全名)
            </summary>
            <param name="assemblyKey">程序集索引</param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyBodyCollection._isLoadedDomainAssemblies">
            <summary>
            [用于锁对象]是否已经加载应用程序域内部程序集
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyBodyCollection._isLoadedDataAssemblies">
            <summary>
            [用于锁对象]是否已经加载DataDLL的程序集
            </summary>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBodyCollection.LoadDomainAssemblies">
            <summary>
            加载应用程序域内部的程序集
            </summary>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBodyCollection.ReloadAssemblies">
            <summary>
            重新加载所有程序集
            </summary>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBodyCollection.LoadDataAssemblies">
            <summary>
            加载应用程序域内部的程序集
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyBodyCollection._groupKeyAssemblyKeyMapping">
            <summary>
            分组对应映射的应用程序Key
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyBodyCollection._filePathLockerKey">
            <summary>
            按文件路径创建加载锁
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyBodyCollection._filePathAssemblyKeyMapping">
            <summary>
            按文件名映射对应的应用程序Key
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyBodyCollection._assemblyKeys">
            <summary>
            记录当前所有的程序集索引
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyBodyCollection._groupKeys">
            <summary>
            记录当前所有的GroupKey
            </summary>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyBodyCollection.GroupKeys">
            <summary>
            当前系统中所有的类型分组
            </summary>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBodyCollection.CheckGroupKey(MangoMis.Frame.AssemblyLoader.TypeGroupKey,System.String)">
            <summary>
            添加一个程序集时.检查此程序集所在的分组
            </summary>
            <param name="groupKey">程序集分组</param>
            <param name="assemblyKey">程序集索引</param>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBodyCollection.GetAssemblyKeys">
            <summary>
            取得当前系统中所有的程序集的分组
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBodyCollection.ReloadAssembly(System.String)">
            <summary>
            重新加载程序集
            </summary>
            <param name="assemblyKey"></param>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBodyCollection.GetAssemblyKeyByPath(System.String)">
            <summary>
            通过路径路径程序集索引
            </summary>
            <param name="dllPath">路径</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.AssemblyBodyCollection.LoadAssemblyByFile(System.String,System.String)">
            <summary>
            根据Dll文件路径读取DLL(读没读取过都需要重新读取)
            </summary>
            <param name="dllPath">DLL路径(不一定用完整路径,相对路径也可以)</param>
            <param name="pdbPath">PDB路径.如果和DLL文件在同一目录下.并且名称一样.不需要特意指定</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.AssemblyLoader.AssemblyLoadMode">
            <summary>
            程序集读取方式
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyLoadMode.Domain">
            <summary>
            当前项目中(Bin文件)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyLoadMode.Sql">
            <summary>
            通过SqlServer读取
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyLoadMode.File">
            <summary>
            通过文件方式读取
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyLoadMode.Unload">
            <summary>
            不加载的程序集
            </summary>
        </member>
        <member name="T:MangoMis.Frame.AssemblyLoader.AssemblyResult`1">
            <summary>
            程序集查找的返回值
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyResult`1.FindItem">
            <summary>
            查找的项目
            </summary>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.AssemblyResult`1.ResultType">
            <summary>
            返回结果类型
            </summary>
        </member>
        <member name="T:MangoMis.Frame.AssemblyLoader.AssemblyResultType">
            <summary>
            程序集查找的返回值
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyResultType.Success">
            <summary>
            无
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyResultType.NoAssemblyKey">
            <summary>
            不存在的程序集索引
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyResultType.AssemblyIsNull">
            <summary>
            程序集为NULL
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyResultType.NoTypeKey">
            <summary>
            不存在的Type索引
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyResultType.TypeIsNull">
            <summary>
            Type为NULL
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyResultType.NoMemberKey">
            <summary>
            没有你要查找的对象
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.AssemblyResultType.MemberIsNull">
            <summary>
            查找的对象为NULL
            </summary>
        </member>
        <member name="T:MangoMis.Frame.AssemblyLoader.DomainAssembly">
            <summary>
            当前系统中的程序集操作
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.DomainAssembly.UnloadAssemblyKeysConfig">
            <summary>
            不加载的程序集的中心配置项
            </summary>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.DomainAssembly.OnUnloadAssemblyKeysConfigChange(System.String,System.String)">
            <summary>
            不加载的程序集变更后重建不加载程序集列表
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.DomainAssembly.UnloadAssemblyKeyList">
            <summary>
            不进行Frame加载的程序集Key列表(项目设置中的项目名);逗号分割
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.DomainAssembly.EvenLoadErrorAssemblyKeyList">
            <summary>
            记录当前程序中加载类型出过错的程序集Key
            </summary>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.DomainAssembly.GetLoadErrorAssemblyInfo">
            <summary>
            取得加载错误的程序集信息
            </summary>
            <returns>返回字符串</returns>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.DomainAssembly.AssemblyBodyCollection">
            <summary>
            程序集集合
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.DomainAssembly.TypePropertyInfoses">
            <summary>
            类型的属性集合
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.DomainAssembly.CurrentPropertyInfoDictionary">
            <summary>
            类型的属性集合
            </summary>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.DomainAssembly.ReloadAllAssemblies">
            <summary>
            重新加载所有程序集.临时方案
            </summary>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.DomainAssembly.Get(System.String)">
            <summary>
            取得对应索引的程序集(会返回Null值)
            </summary>
            <param name="assemblyKey">程序集索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.DomainAssembly.GetAssemblyLoadStatusLog">
            <summary>
            取得Frame加载程序集的日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.AssemblyLoader.DomainAssembly.IsReady">
            <summary>
            当前的DomainAssembly是否已经准备好
            </summary>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.DomainAssembly.GetKeyByAssembly(System.Reflection.Assembly)">
            <summary>
            根据程序集取得Key
            </summary>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.DomainAssembly.GetAssemblyBodies">
            <summary>
            取得所有的程序集
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.DomainAssembly.GetAssemblyBodies(MangoMis.Frame.AssemblyLoader.TypeGroupKey)">
            <summary>
            取得程序集
            </summary>
            <param name="groupKey">要取得的程序集类型[如果传TypeGroupKey.None就是所有]</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.DomainAssembly.ReloadAssembly(System.String)">
            <summary>
            重新加载程序集
            </summary>
            <param name="assemblyKey">程序集索引</param>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.DomainAssembly.RefreshDataAssembly(System.String@)">
            <summary>
            刷新DataDll里的程序集
            </summary>
            <param name="message">返回消息 内容</param>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.DomainAssembly.ContainsAssemlby(System.String)">
            <summary>
            判断是否包括对应的程序集
            </summary>
            <param name="assemblyKey">程序集索引(索引值为:Assembly.GetName().Name)</param>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.DomainAssembly.AllGroupKeys">
            <summary>
            取得所有的分组的索引
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.DomainAssembly.GetStaticProperty``1(System.String,System.String,System.String)">
            <summary>
            取得指定的静态属性(注意是属性(Property),不是字段(Field))
            </summary>
            <typeparam name="T">返回值类型</typeparam>
            <param name="assemblyKey">所在程序集名:eg.Bid_Cache.Data</param>
            <param name="typeKey">类型全名(包含名称空间):.eg.Bid_Cache.Data.Cache.BidCache</param>
            <param name="propertyName">要查找的属性名(注意是属性):eg.BidCache_Store</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.DomainAssembly.GetProperty``1(System.String,System.String,System.String,System.Object)">
            <summary>
            取得指定的属性(注意是属性(Property),不是字段(Field))
            </summary>
            <typeparam name="T">返回值类型</typeparam>
            <param name="assemblyKey">所在程序集名:eg.Bid_Cache.Data</param>
            <param name="typeKey">类型全名:.eg.Bid_Cache.Data.Cache.BidCache</param>
            <param name="propertyName">要查找的属性名(注意是属性):eg.BidCache_Store</param>
            <param name="propertyAtObject">属性所在类的实例</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.DomainAssembly.GetType(System.String,System.String)">
            <summary>
            查找一个类型
            </summary>
            <param name="assemblyKey">查找的程序集索引(程序名.非FullName)</param>
            <param name="typeKey">查找的类型索引(类型命名,FullName,非Name)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.DomainAssembly.GetTypeItem(System.String,System.String)">
            <summary>
            查找一个类型
            </summary>
            <param name="assemblyKey">查找的程序集索引(程序名.非FullName)</param>
            <param name="typeKey">查找的类型索引(类型命名,FullName,非Name)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.DomainAssembly.TryGetAssemblyKeyByPathOrLoad(System.String,System.String)">
            <summary>
            尝试通过路径取得程序集索引,如果不存在则尝试加载DLL,加载失败返回NULL
            </summary>
            <param name="dllPath">DLL路径</param>
            <param name="pdbPath">PDB路径</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.DomainAssembly.GetAssemblyKeyByPath(System.String)">
            <summary>
            通过路径路径程序集索引[已经加载过为Key,未加载过不会尝试加载,如果想未加载过尝试加载.请调用TryGetAssemblyKeyByPathOrLoad]
            </summary>
            <param name="dllPath">路径</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.DomainAssembly.GetProperties(System.Type)">
            <summary>
            通过类型取得内部全部的属性
            </summary>
            <param name="getType">要取得的类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.DomainAssembly.GetProperty(System.Type,System.String)">
            <summary>
            通过类型取得内部全部的属性
            </summary>
            <param name="getType">要取得的类型</param>
            <param name="propertyName">属性名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.DomainAssembly.LoadAssemblyByPath(System.String,System.String)">
            <summary>
            根据Dll文件路径读取DLL,[如果已经会尝试重新加载]
            </summary>
            <param name="dllFilePath">DLL路径(不一定用完整路径,相对路径也可以)</param>
            <param name="pdbFilePath">PDB路径.如果和DLL文件在同一目录下.并且名称一样.不需要特意指定</param>
        </member>
        <member name="M:MangoMis.Frame.AssemblyLoader.DomainAssembly.GetAssemblyKeys">
            <summary>
            取得当前系统中所有的程序集的分组
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.AssemblyLoader.TypeGroupKey">
            <summary>
            当前应用程序中的类型的分组(如可能是InterfaceV1接口,Model等)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.TypeGroupKey.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.TypeGroupKey.Model">
            <summary>
            实体
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.TypeGroupKey.DiInterfaceV1">
            <summary>
            接口映射V1版本的接口
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.TypeGroupKey.DiDataV1">
            <summary>
            接口映射V1版本的处理程序
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.TypeGroupKey.DiDataV2">
            <summary>
            接口映射V2版本的处理程序
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.TypeGroupKey.WcfInterface">
            <summary>
            WCF的接口
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.TypeGroupKey.AutoInterface">
            <summary>
            自动加载接口
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.TypeGroupKey.AutoInterfaceRealize">
            <summary>
            自动加载接口的实现
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.TypeGroupKey.AutoLoadPage">
            <summary>
            自动加载的虚拟页面
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.TypeGroupKey.EventModuleRoot">
            <summary>
            基础事件模块的基础类
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.TypeGroupKey.EventModuleItem">
            <summary>
            基础事件模块
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.TypeGroupKey.VirLoadPage">
            <summary>
            使用的虚拟页面.本类继承于DNZxf_Default_Page
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.TypeGroupKey.ApiController">
            <summary>
            MangoApi
            </summary>
        </member>
        <member name="T:MangoMis.Frame.AssemblyLoader.TypeItem">
            <summary>
            当前应用程序中的类
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.TypeItem.Key">
            <summary>
            类型索引[类型FullName]
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.TypeItem.Item">
            <summary>
            已经读取的程序集
            </summary>
        </member>
        <member name="F:MangoMis.Frame.AssemblyLoader.TypeItem.TypeGroupKey">
            <summary>
            类型
            </summary>
        </member>
        <member name="T:MangoMis.Frame.InitSite.FrameUseCacheInitiator">
            <summary>
            Frame使用的缓存的初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.All">
            <summary>
            如果内部使用的缓存全有使用.可以使用此函数.否则可以单独调对的初始化函数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.PropertyPageHandlerMapping">
            <summary>
            DataInterfaceMappingV2_InitPageHandler
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.VirtualPageConfigStore">
            <summary>
            虚拟页面会使用的一些配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.InitCardApiUrl">
            <summary>
            初始化登陆的API地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.SimpleClientStore">
            <summary>
            简易WCF连接配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.ClientV2ConnectionStore">
            <summary>
            WCFService版本2连接参数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.DataInterfaceV1ItemStore">
            <summary>
            Data映射V1版本
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.PageConfigStore">
            <summary>
            页面的基础配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.ModuleStore">
            <summary>
            [权限->模块]
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.TimeRangeStore">
            <summary>
            [限时权限]此项目可用的开始时间与结束时间
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.TimeRangeItemStore">
            <summary>
            限时权限详情
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.RoleModuleStore">
            <summary>
            [权限->角色模块]
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.UserRoleStore">
            <summary>
            [权限->用户角色]
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.SeeTypeStore">
            <summary>
            [权限->可视类型]
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.PageUseHandlerStore">
            <summary>
            页面使用Handler映射
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.HandlerVistorStore">
            <summary>
            Handler映射
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.ScriptItemStore">
            <summary>
            当前所有的Javascript脚本
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.ScriptUseStore">
            <summary>
            当前使用的JavaScript脚本
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.ScriptPageUseStore">
            <summary>
            当前使用的JavaScript脚本
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.CityStore">
            <summary>
            [城市信息]
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.AreaStore">
            <summary>
            [行政区信息]
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.HandlerManagerParamInfoStore">
            <summary>
            Handler参数管理配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.SitePageParamStore">
            <summary>
            页面参数配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.ActionPowerStore">
            <summary>
            Handler权限配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.UseUrlCache">
            <summary>
            系统参数缓存
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.MobileModuleCacge">
            <summary>
            Mobile_模块
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.SystemParamCache">
            <summary>
            系统参数缓存信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.InterfaceUsedStore">
            <summary>
            接口在当前站点是否可用[本地StoreXML]
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.RealizeUsedStore">
            <summary>
            接口的实现在当前站点是否可用[本地StoreXML]
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.RealizeStore">
            <summary>
            添加的实现[RedisStore]
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.InitCache(System.String,System.String,System.String)">
            <summary>
            初始化一个已经定义好的IStoreCache
            </summary>
            <param name="atAssemblyName">程序集名.示例:MangoMis.Power</param>
            <param name="atClassName">类全名.示例:MangoMis.Power.Helper.PowerCommonStore</param>
            <param name="cacheProperyName">缓存的属性名.示例:UserRoleStore</param>
        </member>
        <member name="M:MangoMis.Frame.InitSite.FrameUseCacheInitiator.InitProperty(System.String,System.String,System.String)">
            <summary>
            初始化一个已经定义好的IStoreCache
            </summary>
            <param name="atAssemblyName">程序集名.示例:MangoMis.Power</param>
            <param name="atClassName">类全名.示例:MangoMis.Power.Helper.PowerCommonStore</param>
            <param name="properyName">缓存的属性名.示例:UserRoleStore</param>
        </member>
        <member name="T:MangoMis.Frame.InitSite.SystemLog.ISystemLog">
            <summary>
            系统日志基础接口,只定义接口没有相关内容
            </summary>
        </member>
        <member name="T:MangoMis.Frame.InitSite.SystemLog.SystemLogHelper">
            <summary>
            系统运行日志
            </summary>
        </member>
        <member name="F:MangoMis.Frame.InitSite.SystemLog.SystemLogHelper.SystemLogCollection">
            <summary>
            当前系统中已经存在的系统日志
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.SystemLog.SystemLogHelper.New(MangoMis.Frame.InitSite.SystemLog.SystemLogType,System.String)">
            <summary>
            建立添加新的运行日志
            </summary>
            <param name="title">日志标题</param>
            <param name="logType">日志类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.InitSite.SystemLog.SystemLogHelper.New(System.String,MangoMis.Frame.InitSite.SystemLog.SystemLogType)">
            <summary>
            建立添加新的运行日志
            </summary>
            <param name="title">日志标题</param>
            <param name="logType">日志类型</param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.InitSite.SystemLog.SystemLogHelper.SystemLogBuildedIndex">
            <summary>
            单项日志已经建立的索引
            </summary>
        </member>
        <member name="F:MangoMis.Frame.InitSite.SystemLog.SystemLogHelper.SystemLogBuildedString">
            <summary>
            单项日志已经建立的字符串
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.SystemLog.SystemLogHelper.BuildHtmlSystemLog(MangoMis.Frame.InitSite.SystemLog.SystemLogType)">
            <summary>
            建立添加新的运行日志
            </summary>
            <param name="logType">日志类型</param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.InitSite.SystemLog.SystemLogHelper._systemLogBuildedIndexForTotal">
            <summary>
            当前所有日志的已经建立索引
            </summary>
        </member>
        <member name="F:MangoMis.Frame.InitSite.SystemLog.SystemLogHelper._totalSystemLog">
            <summary>
            当前的所有的日志
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.SystemLog.SystemLogHelper.BuildHtmlSystemLog">
            <summary>
            建立添加新的运行日志
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.InitSite.SystemLog.SystemLogItem">
            <summary>
            系统日志项
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.SystemLog.SystemLogItem.#ctor(System.String,MangoMis.Frame.InitSite.SystemLog.SystemLogType)">
            <summary>
            初始化一个系统运行日志
            </summary>
            <param name="title">运行内容标题</param>
            <param name="logType">日志类型</param>
        </member>
        <member name="P:MangoMis.Frame.InitSite.SystemLog.SystemLogItem.LogTextForHtml">
            <summary>
            日志的HTML格式内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.InitSite.SystemLog.SystemLogItem.BuildLogTextForHtml">
            <summary>
            建立日志的HTML格式内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.InitSite.SystemLog.SystemLogItem.Finish">
            <summary>
            此项运行结束
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.SystemLog.SystemLogItem.Finish(System.String)">
            <summary>
            此项运行结束
            </summary>
            <param name="text">运行内容</param>
        </member>
        <member name="F:MangoMis.Frame.InitSite.SystemLog.SystemLogItem.LogType">
            <summary>
            日志类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.InitSite.SystemLog.SystemLogItem.LogText">
            <summary>
            日志内容
            </summary>
        </member>
        <member name="F:MangoMis.Frame.InitSite.SystemLog.SystemLogItem.Title">
            <summary>
            日志标题
            </summary>
        </member>
        <member name="F:MangoMis.Frame.InitSite.SystemLog.SystemLogItem.MethodInfo">
            <summary>
            调用函数
            </summary>
        </member>
        <member name="F:MangoMis.Frame.InitSite.SystemLog.SystemLogItem.BeginTime">
            <summary>
            开始运行时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.InitSite.SystemLog.SystemLogItem.EndTime">
            <summary>
            结束运行时间
            </summary>
        </member>
        <member name="T:MangoMis.Frame.InitSite.SystemLog.SystemLogType">
            <summary>
            系统日志类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.InitSite.SystemLog.SystemLogType.Locker">
            <summary>
            锁定操作
            </summary>
        </member>
        <member name="T:MangoMis.Frame.InitSite.ApiStatic.FromGetApiData">
            <summary>
            从"GetApiData.aspx"中取得的数据
            </summary>
        </member>
        <member name="P:MangoMis.Frame.InitSite.ApiStatic.FromGetApiData.Url">
            <summary>
            Zxf自己私自在ApiStatic写的一个取数据的网址.目前用于取得ApiCard地址等
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.ApiStatic.FromGetApiData.GetCardApiUrl">
            <summary>
            取得Card地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.InitSite.ApiStatic.FromGetApiData.GetServiceDefaultConnectionConfig">
            <summary>
            取得Wcf的默认连接配置 
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.InitSite.ApiStatic.FromGetApiData.GetApiData``1(System.Object)">
            <summary>
            从Api中取得字符串然后拼成实体
            </summary>
            <typeparam name="TReturn">返回类型</typeparam>
            <param name="paramData">提交到Api的参数</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.InitSite.InitStep">
            <summary>
            初始化步骤
            </summary>
        </member>
        <member name="F:MangoMis.Frame.InitSite.InitStep.SystemInitPath">
            <summary>
            系统初始化的文件目录
            </summary>
        </member>
        <member name="P:MangoMis.Frame.InitSite.InitStep.SystemStep">
            <summary>
            系统步骤记录
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.InitStep.NextStepUrl(System.String)">
            <summary>
            进入下一个初始化步骤
            </summary>
        </member>
        <member name="T:MangoMis.Frame.InitSite.StepPageBase">
            <summary>
            系统帮助业绩
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.StepPageBase.#ctor(System.String,System.String)">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.InitSite.StepPageBase.CurrentIsPageShowButton">
            <summary>
            页面类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.StepPageBase.IsCanShowNext">
            <summary>
            是否可以显示下一步的按钮
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.InitSite.StepPageBase.AppendMessage(System.String)">
            <summary>
            向默认的Block中添加一条信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.InitSite.StepPageBase.AppendMessage(MangoMis.Frame.Helper.TT_H_Block,System.String)">
            <summary>
            向Block中添加一条信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.InitSite.StepPageBase.BuildCurrentPanel(MangoMis.Frame.Helper.TT_H_Block)">
            <summary>
            建立本步骤的节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.InitSite.StepPageBase.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="M:MangoMis.Frame.InitSite.StepPageBase.build_button">
            <summary>
            建立按钮
            </summary>
        </member>
        <member name="T:MangoMis.Frame.InitSite.StepCheckDirectoryCanUse">
            <summary>
            系统帮助业绩
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.StepCheckDirectoryCanUse.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.InitSite.StepCheckDirectoryCanUse.IsCanShowNext">
            <summary>
            是否可以显示下一步的按钮
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.InitSite.StepCheckDirectoryCanUse.BuildCurrentPanel(MangoMis.Frame.Helper.TT_H_Block)">
            <summary>
            建立本步骤的节点
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.ApiAttribute">
            <summary>
            提供接口路径等相关信息(只能存在一个此属性)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiAttribute.Name">
            <summary>
            Api名称.只用于显示使用
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiAttribute.Path">
            <summary>
            接口路径可以用于指定ApiController及内部Method
            基础的路径格式为/mangoapi/{ApiController.Path}/{Method.Path}/{Param1}/{Param2}/{Param3}......
            指定ApiController时通常是指ApiController.Path部分
            指定内部函数时通常是指Method.Pathh部分
            参数不需要指定,自动添加
            如果指定的路径带/的话是不继承父级的路径.直接以此路径为准
            如果没有指定,则默认路径是ApiController/Method的名字,(PS:ApiController的话名字中会把ApiController这个字符串去掉)
            如果指定的路径不带/的话.是正常继承父级路径并使用指定的路径
            当然如果有兴趣也可以把Path指定为:/myapi/abc.aspx这种
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiAttribute.HandlerType">
            <summary>
            Api句柄类型,如果是HaveHandle则API地址不可以有扩展名,不然会无法处理
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiAttribute.ClassType">
            <summary>
            Api类的类型(基类,非基类)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiAttribute.FixUrlPathType">
            <summary>
            验证此接口是否是固定地址
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiAttribute.ParamGetType">
            <summary>
            参数传递方式(默认为UrlPath),当然也可以指定为UrlQueryString,这就是正常地址栏传参,eg.?name=李三&amp;age=18
            也就是说这个接口写了两个参数,分别是name,age(地址栏的参数名与函数的参数名必须一致)
            PostParam还没做特殊实现
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiAttribute.HasVerifyStruct">
            <summary>
            此接口拥有验证的结构(登陆验证/无结构/其它结构还未进行开发处理)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiAttribute.SecretParamCheck">
            <summary>
            进行签名验证时的参数规则
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiAttribute.SecretGroupKey">
            <summary>
            接口是否需要密钥验证,默认=不需要验证,none=不需要验证.其它值则为需要验证,如果需要验证密钥,生成Token验证码时的参数名需要和接口参数名一致
            default或空白字符串为默认分组(与有分组的不共享)
            写入GroupKey则为正常GroupKey,会验证此GroupKey下的对应AccessKey
            比如,写入TokenServer.则会验证此分组下的所有对应AccessKey的密钥
            生效是就近原则.离函数越近生效级别越高
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiAttribute.AllowSecondRange">
            <summary>
            允许的上下差距秒,使用这个不可以使用UrlPath模式,参数用于自动效验.不需要读取此参数(无此属性调用时不需要传默认的timetick,有此属性调用方需要传一个timetick参数)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiAttribute.WikiUrl">
            <summary>
            维基url
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiAttribute.FileChargePerson">
            <summary>
            文件负责人(创建人)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiAttribute.CodeReviewPerson">
            <summary>
            代码审阅人
            </summary>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.ApiAttributeCheckType">
            <summary>
            验证是否
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiAttributeCheckType.Default">
            <summary>
            默认
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiAttributeCheckType.Yes">
            <summary>
            是
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiAttributeCheckType.No">
            <summary>
            否
            </summary>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.ApiAttributeParamGetType">
            <summary>
            提交参数类型,注意访问密钥的取值方式不可设置.只能和函数的访问级别一致
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiAttributeParamGetType.Default">
            <summary>
            Url路径参数(由/分割)地址,注意顺序必须与接口一致(默认值)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiAttributeParamGetType.UrlPath">
            <summary>
            Url路径参数(由/分割)地址,注意顺序必须与接口一致(默认值)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiAttributeParamGetType.UrlQueryString">
            <summary>
            地址栏参数(参数名对应)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiAttributeParamGetType.PostParam">
            <summary>
            Post参数
            </summary>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.ApiClassType">
            <summary>
            Api类的类型(基类,非基类)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiClassType.Default">
            <summary>
            默认,正常使用的API
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiClassType.UsedApi">
            <summary>
            默认,正常使用的API
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiClassType.ApiBase">
            <summary>
            Api的基类,不会实现此类的API,但是会对OnInit进行初始化
            </summary>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.ApiCommon">
            <summary>
            MangoApi的通用操作
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiCommon.DefaultApiPath">
            <summary>
            默认API地址
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiCommon.DefaultApiControllerSuffix">
            <summary>
            默认的Api后缀名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiCommon.GetPathFromAttribute(MangoMis.Frame.MangoApi.ApiAttribute,System.String,System.String)">
            <summary>
            从属性中取得调用API的路径
            </summary>
            <param name="pathAttribute">路径属性</param>
            <param name="name">当前节点名称</param>
            <param name="prefixPath">当前路径前缀</param>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiCommon.ApiControllerInfos">
            <summary>
            Api控制器列表
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiCommon.Count">
            <summary>
            当前系统中Api的数量
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiCommon.GetApiControllerInfo(System.String)">
            <summary>
            取得一个指定名称的ApiController信息
            </summary>
            <param name="apiControllerName">要取得的ApiControllerInfo的名称</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiCommon.ReloadApiControllerInfo(MangoMis.Frame.AssemblyLoader.AssemblyBody)">
            <summary>
            重新加载ApiControl
            </summary>
            <param name="assemblyBody">要重新加载的Body</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiCommon.UseApi(System.String)">
            <summary>
            判断是否使用此API.
            </summary>
            <param name="url">当前地址url</param>
            <param name="isByNoHandler">是否使用无handler模式</param>
            <returns>true 为已经使用此API,false 为未使用此API</returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiCommon.UseApi(System.String,System.Boolean)">
            <summary>
            判断是否使用此API.
            </summary>
            <param name="url">当前地址url</param>
            <param name="isByNoHandler">是否使用无handler模式</param>
            <returns>true 为已经使用此API,false 为未使用此API</returns>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.ApiControllerBase">
            <summary>
            此类默认会用Path模式.请手动添加特性改为QueryString模式
            用于实现自动API的控制器 继承于IApiController
            暂时只提供一个基类.没有提供其它的相关函数
            函数如果返回值是枚举类型,则会直接输出对应的Int值
            如果返回值是String类型,则会直接输出返回值
            其它则按Json格式输出
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiControllerBase.LtctraId">
            <summary>
            追踪Id,由初始调用方生成,在单次请求链路中唯一,一直携带,值来源于WebHelper.LtctraId
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiControllerBase.OnInit">
            <summary>
            初始化函数.可重写此函数,然后会在初始实例化API的时候调用(包括重新加载)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiControllerBase.Server">
            <summary>
            Gets the server.
            </summary>
            <value>The server.</value>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiControllerBase.Request">
            <summary>
            Gets the request.
            </summary>
            <value>The request.</value>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiControllerBase.Response">
            <summary>
            Gets the response.
            </summary>
            <value>The response.</value>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiControllerBase.AppendControllerDebug">
            <summary>
            添加此API的源Debug
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiControllerBase.AppendControllerDebug(System.Int32)">
            <summary>
            
            </summary>
            <param name="PageID"></param>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.ApiControllerInfo">
            <summary>
            Api控制器,一个类.就是一个Api控制器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiControllerInfo.#ctor(System.Type)">
            <summary>
            通过一个类型初始化一个API控制器
            </summary>
            <param name="controllerType"></param>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiControllerInfo.CurrentPath">
            <summary>
            当前控制器路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiControllerInfo.HandlerType">
            <summary>
            Api句柄类型,如果是HaveHandle则API地址不可以有扩展名,不然会无法处理
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiControllerInfo.SecretGroupKey">
            <summary>
            密钥组索引
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiControllerInfo.AllowSecondRange">
            <summary>
            允许的时间差距(如果有此参数.调用接口时必须传timeticks参数)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiControllerInfo.ParamGetType">
            <summary>
            提交参数类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiControllerInfo.SecretParamType">
            <summary>
            签名时使用的参数类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiControllerInfo.ClassType">
            <summary>
            Api类的类型(基类,非基类)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiControllerInfo.HasVerifyStruct">
            <summary>
            此接口拥有验证的结构(登陆验证/无结构/其它结构还未进行开发处理)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiControllerInfo.FixUrlPathType">
            <summary>
            验证此接口是否是固定地址
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiControllerInfo._apiList">
            <summary>
            api列表
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiControllerInfo.WikiUrl">
            <summary>
            维基url
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiControllerInfo.FileChargePerson">
            <summary>
            文负责人(创建人)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiControllerInfo.CodeReviewPerson">
            <summary>
            代码审阅人
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiControllerInfo.Item(System.String)">
            <summary>
            取得指定Key的API(Method)
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiControllerInfo.GetEnumerable">
            <summary>
            取得枚举类型
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiControllerInfo.Count">
            <summary>
            取得内部Api的数量
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiControllerInfo.UseApiByHandler(System.String)">
            <summary>
            判断是否使用此API.
            </summary>
            <param name="url">当前地址url</param>
            <returns>true 为已经使用此API,false 为未使用此API</returns>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.ApiCrossDataInvoke">
            <summary>
            跨不同data调用api
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiCrossDataInvoke.GetMethodValue(System.String,System.String,System.Object[])">
            <summary>
            通过控制器,接口名执行当前方法,返回函数的返回值以及返回类型
            </summary>
            <param name="controllername">控制器全称,包含命名空间,注意不是path</param>
            <param name="apiname"></param>
            <param name="pars"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiCrossDataInvoke.ConvertToObjectByType(System.Object,System.Type)">
            <summary>
            根据对象类型进行数据转换
            </summary>
            <param name="obj"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiCrossDataInvoke.Execute``1(System.String,System.String,System.Object[])">
            <summary>
            TODO:未来可能会添加一个加入程序集名称的Execute,回避NameSpace重复问题.(Api使用层也需要修改相关的Key),此工作待跟进,有必要的情况添加,正常情况不推荐使用重复的Namespace
            <para>  跨data调用api的实现方法</para>
            <para> 无法找到程序集或者无法找到方法,返回null</para>
            <para> 返回值是void,返回null</para>
            <para> post参数类型无法转换,返回null</para>
            <para> 如果对方接口没有权限,ActionResult类型正常返回没权限,其他类型返回null</para>
            </summary>
            <typeparam name="T">对方接口返回值类型,如果是void,请填写Object,并且返回值一定是null,其他类型请自己新建对应的Model</typeparam>
            <param name="controllername">控制器所在程序集全名,不是path属性</param>
            <param name="apiname">接口名称</param>
            <param name="pars">对方接口的参数</param>  
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiCrossDataInvoke.ExecuteList``1(System.String,System.String,System.Object[])">
            <summary>
            List类型调用
            </summary>
            <typeparam name="T"></typeparam>
            <param name="controllername"></param>
            <param name="apiname"></param>
            <param name="pars"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiCrossDataInvoke.ExecuteApiResult``1(System.String,System.String,System.Object[])">
            <summary>
            ApiResult 普通类型调用
            </summary>
            <typeparam name="T"></typeparam>
            <param name="controllername"></param>
            <param name="apiname"></param>
            <param name="pars"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiCrossDataInvoke.ExecuteApiResultList``1(System.String,System.String,System.Object[])">
            <summary>
            ApiResult List类型调用
            </summary>
            <typeparam name="T"></typeparam>
            <param name="controllername"></param>
            <param name="apiname"></param>
            <param name="pars"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.ApiDataInfo">
            <summary>
            接口当前的处理的内容
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiDataInfo.#ctor">
            <summary>
            初始化一个处理内容 
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiDataInfo.ErrorMessage">
            <summary>
            当前的错误消息内容
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiDataInfo.IsError">
            <summary>
            当前运行过程是否出现异常
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiDataInfo.SetErrorMessage(System.String)">
            <summary>
            设置异常消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiDataInfo.SetApiParam(System.Int32,System.String,System.String)">
            <summary>
            设置一个Api使用值
            </summary>
            <param name="index">索引</param>
            <param name="key">参数名</param>
            <param name="value">参数值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiDataInfo.GetSecretParams">
            <summary>
            取得所有用于签名验证的参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiDataInfo.GetApiParamDictionary">
            <summary>
            取得当前Api的参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiDataInfo.TryGetAndRemvoe(System.String,System.String@)">
            <summary>
            取得并删除当前Api的参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiDataInfo.GetSecretParam(System.String)">
            <summary>
            取得当前参数
            </summary>
            <param name="key">参数的Key</param>
            <returns>可能会返回Null</returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiDataInfo.SetSecretParam(System.String,System.String)">
            <summary>
            设置一个验证使用值
            </summary>
            <param name="key">参数的Key</param>
            <param name="value">参数值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiDataInfo.GetApiParams">
            <summary>
            取得调用函数的参数
            </summary>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiDataInfo._secretParamDictionary">
            <summary>
            当前的参数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiDataInfo.Body">
            <summary>
            报文内容
            </summary>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.ApiDescribeHelperApiController">
            <summary>
            为wiki功能提供api方法参数以及返回值的接口
            Create By zhaoyansong
            At 2019-11-29 10:27:10
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiDescribeHelperApiController.GetApiDescribe(System.String,System.String,System.String)">
            <summary>
            返回某个程序集中某个class里面所有接口的详细信息
            </summary>
            <param name="assName">程序集名</param>
            <param name="clsName">类名</param>
            <param name="MethodName">方法名,如果不填写,查询全部方法,否则查询固定方法</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.ApiHandlerType">
            <summary>
            Api句柄类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiHandlerType.Default">
            <summary>
            默认,可以加扩展名(.aspx,.svc.ashx)会在BeginRequest里运行,无Session,无Debug
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiHandlerType.NoHandle">
            <summary>
            默认,可以加扩展名(.aspx,.svc.ashx)会在BeginRequest里运行,无Session,无Debug
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiHandlerType.HaveHandle">
            <summary>
            有Handle,不可以带扩展名.只能以/或名称结尾,无Session
            </summary>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.ApiFixUrlPathType">
            <summary>
            Api地址是否固定(固定地址,强制默认为QueryString传参)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiFixUrlPathType.Default">
            <summary>
            默认非固定Url
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiFixUrlPathType.None">
            <summary>
            默认非固定Url
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiFixUrlPathType.FixByUrl">
            <summary>
            [只能与QueryString同用]Url固定网址,Api名称会作为地址的一部分(如果站点本身有额外路径,如website,card/v2.0等.则无效.或者需要在路径上指定额外路径)
            </summary>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.ApiHasStructType">
            <summary>
            Api继承的结构类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiHasStructType.Default">
            <summary>
            默认无验证
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiHasStructType.None">
            <summary>
            无验证
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiHasStructType.VerifyByLogin">
            <summary>
            需要登陆验证的结构
            </summary>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.ApiIsUsedType">
            <summary>
            Api句柄类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiIsUsedType.NotThisApi">
            <summary>
            不是这个API
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiIsUsedType.IsThisApiButNotThisHandlerType">
            <summary>
            是这个API但是不是这种调用模式
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiIsUsedType.IsThisApi">
            <summary>
            是这个API
            </summary>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.ApiItemInfoBase">
            <summary>
            Api中项目实例的基类.此基类不可以被初始化使用
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiItemInfoBase.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiItemInfoBase.CurrentType">
            <summary>
            使用的类型
            </summary>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.CheckApiSecret">
            <summary>
            检查签名验证的委托
            </summary>
            <param name="datainfo">函数运行的必要参数</param>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.IsUseApiFunction">
            <summary>
            判断是否执行当前函数的委托
            </summary>
            <param name="useString">需要进行检查的地址栏字符串</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.InitDataFuction">
            <summary>
            取得函数运行必要参数的委托
            </summary>
            <param name="useString">需要进行检查的地址栏字符串</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.ApiMethodInfo">
            <summary>
            Api的相关运行函数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiMethodInfo.#ctor(System.Reflection.MethodInfo,MangoMis.Frame.MangoApi.ApiControllerInfo)">
            <summary>
            初始化一个Api运行信息
            </summary>
            <param name="methodInfo">函数信息</param>
            <param name="parent">上级</param>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiMethodInfo.BasePath">
            <summary>
            基础访问路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiMethodInfo.Parent">
            <summary>
            API所属的控制器
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiMethodInfo.ParamGetType">
            <summary>
            是否支持由地址栏参数提交
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiMethodInfo.HasVerifyStruct">
            <summary>
            此接口拥有验证的结构(登陆验证/无结构/其它结构还未进行开发处理)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiMethodInfo.SecretGroupKey">
            <summary>
            密钥组索引(使用签名验证请使用Query传参的方式。。。)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiMethodInfo.HandlerType">
            <summary>
            Api句柄类型,如果是HaveHandle则API地址不可以有扩展名,不然会无法处理
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiMethodInfo.FixUrlPathType">
            <summary>
            验证此接口是否是固定地址
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiMethodInfo.SecretParamType">
            <summary>
            签名时使用的参数类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiMethodInfo.GetApiKey(System.Reflection.MethodInfo)">
            <summary>
            取得函数的ApiKey(和所在的Controller无关.需要先取得Controller,才可以按ApiKey查找)
            </summary>
            <param name="info">函数</param>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiMethodInfo.ApiKey">
            <summary>
            当前的函数索引(为了防止有重名的函数,只判断参数个数.不会判断参数类型)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiMethodInfo.WikiUrl">
            <summary>
            维基url
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiMethodInfo.FileChargePerson">
            <summary>
            方法负责人
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiMethodInfo.CodeReviewPerson">
            <summary>
            方法审阅人
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiMethodInfo.SimpleTestUrl">
            <summary>
            测试的地址
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiMethodInfo.PathRegex">
            <summary>
            验证地址的正则
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiMethodInfo.MethodInfo">
            <summary>
            当前运行函数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiMethodInfo.ParamInfos">
            <summary>
            参数内容
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiMethodInfo.Count">
            <summary>
            参数个数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiMethodInfo.AllowSecondRange">
            <summary>
            允许的时间差距(如果有此参数.调用接口时必须传timeticks参数)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiMethodInfo.GetEnumerable">
            <summary>
            取得参数的枚举
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiMethodInfo.ResultTypeInfo">
            <summary>
            返回值信息
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiMethodInfo.ResultType">
            <summary>
            返回值类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiMethodInfo.IsUsed(System.String)">
            <summary>
            判断是否使用此API
            </summary>
            <param name="useString">当前地址url</param>
            <returns>返回True是使用,False是不使用</returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiMethodInfo.InitData(System.String)">
            <summary>
            初始化使用参数信息
            </summary>
            <param name="useString">当前地址url</param>
            <returns>返回值参数</returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiMethodInfo.Execute(System.Object,System.Object[])">
            <summary>
            判断是否使用此API.
            </summary>
            <param name="runObj">运行实例的主体</param>
            <param name="paramObjects">参数内容</param>
            <returns>true 为已经使用此API,false 为未使用此API</returns>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.ApiMethodResultType">
            <summary>
            Api返回值类型.会影响到输出返回值时.输出的内容
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiMethodResultType.Enum">
            <summary>
            作为Enum输出,输出为枚举类型的Int.ToString()
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiMethodResultType.String">
            <summary>
            直接作为String输出
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiMethodResultType.Object">
            <summary>
            作为一个对象.转换成Json输出
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiMethodResultType.Void">
            <summary>
            函数.不输出其它内容
            </summary>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.ApiParamAttribute">
            <summary>
            Api参数的属性相关信息,可以存在多个此属性用于描述每一个参数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiParamAttribute.Name">
            <summary>
            参数名称.只用于显示使用
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiParamAttribute.DefaultTestValue">
            <summary>
            测试时的默认值
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiParamAttribute.ParamGetType">
            <summary>
            此参数是否由Post提供.不是由Post提供的参数则是地址栏参数(默认为UrlPath)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiParamAttribute.IsNullAble">
            <summary>
            是否允许不传此参数,默认是不允许
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiParamAttribute.UnDecode">
            <summary>
            此参数是否不进行解码,默认进行解码
            </summary>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.ApiParamInfo">
            <summary>
            Api参数信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiParamInfo.#ctor(System.String,MangoMis.Frame.MangoApi.ApiMethodInfo,System.Type)">
            <summary>
            通过参数信息初始化一个Api的参数信息
            </summary>
            <param name="paramName">参数名</param>
            <param name="methodInfo"></param>
            <param name="paramType">参数类型</param>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiParamInfo.#ctor(System.Reflection.ParameterInfo,MangoMis.Frame.MangoApi.ApiMethodInfo)">
            <summary>
            通过参数信息初始化一个Api的参数信息
            </summary>
            <param name="parameterInfo"></param>
            <param name="methodInfo"></param>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiParamInfo.DefaultTestValue">
            <summary>
            测试时的默认值
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiParamInfo.ParamGetType">
            <summary>
            此参数是否由Post提供.不是由Post提供的参数则是地址栏参数(默认为UrlPath)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiParamInfo.IsNullAble">
            <summary>
            是否允许不传此参数,默认是不允许
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiParamInfo.UnDecode">
            <summary>
            此参数是否不进行解码,默认进行解码
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiParamInfo.ParameterInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.ApiTypeInfo">
            <summary>
            Api参数信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiTypeInfo.#ctor(System.String,System.Type)">
            <summary>
            通过参数信息初始化一个Api的参数信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiTypeInfo.GetName">
            <summary>
            取得用于显示的名
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.ApiVirtualHandler">
            <summary>
            API使用中用于接管HttpApplication.Handler的处理类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiVirtualHandler.#ctor(MangoMis.Frame.MangoApi.ApiMethodInfo,System.String)">
            <summary>
            通过路径以及API信息才能实例化
            </summary>
            <param name="apiInfo">API函数信息</param>
            <param name="apiUrl">当前请求路径</param>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiVirtualHandler.LoginUserId">
            <summary>
            当前页面访问人用户编号
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiVirtualHandler.LoginUserIdField">
            <summary>
            当前页面访问人用户编号 
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiVirtualHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>通过实现 <see cref="T:System.Web.IHttpHandler" /> 接口的自定义 HttpHandler 启用 HTTP Web 请求的处理。</summary>
            <param name="context">
            <see cref="T:System.Web.HttpContext" /> 对象，它提供对用于为 HTTP 请求提供服务的内部服务器对象（如 Request、Response、Session 和 Server）的引用。</param>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiVirtualHandler.OnLoginVerify(MangoMis.Frame.MangoApi.IApiController,MangoMis.Frame.MangoApi.ApiMethodInfo,MangoMis.Frame.MangoApi.ApiDataInfo)">
            <summary>
            需要登录验证的验证函数
            </summary>
            <param name="runObj">运行所在的API的实例</param>
            <param name="apiInfo">API的信息</param>
            <param name="dataInfo">运行的数据信息</param>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiVirtualHandler.GetNoLoginObj(System.Boolean,System.String)">
            <summary>
            如果是在接口层次的输出,那么根据接口的返回值类型输出对应的Nologin.
            否则按照新版的接口规范输出Nologin
            </summary>
            <param name="UseNewReturnType"></param>
            <param name="ResultMsg"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiVirtualHandler.OnAfterMangoApiAfterLoginSuccess(MangoMis.Frame.MangoApi.IApiController,MangoMis.Frame.MangoApi.ApiMethodInfo,MangoMis.Frame.MangoApi.ApiDataInfo)">
            <summary>
            使用Mango权限等系统的API登录成功后的处理事件
            </summary>
            <param name="runObj">运行所在的API的实例</param>
            <param name="apiInfo">API的信息</param>
            <param name="dataInfo">运行的数据信息</param>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiVirtualHandler.BulidPostBody(MangoMis.Frame.MangoApi.ApiDataInfo,MangoMis.Frame.MangoApi.ApiMethodInfo)">
            <summary>
            根据参数以及类型重构入参数据
            </summary>
            <param name="dataInfo"></param>
            <param name="apiInfo"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiVirtualHandler.ResponseResult(System.Object,MangoMis.Frame.MangoApi.ApiMethodResultType)">
            <summary>
            使用Response输出返回值
            </summary>
            <param name="invokeResult">运行函数之后的返回值</param>
            <param name="resultType"></param>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiVirtualHandler.IsReusable">
            <summary>获取一个值，该值指示其他请求是否可以使用 <see cref="T:System.Web.IHttpHandler" /> 实例。</summary>
            <returns>如果 <see cref="T:System.Web.IHttpHandler" /> 实例可再次使用，则为 true；否则为 false。</returns>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiVirtualHandler.CurrentInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiVirtualHandler.PageName">
            <summary>
            当前页面名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiVirtualHandler.CurrentDebugStatus">
            <summary>
            当前请求的Debug状态
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.ApiVirtualHandler._currentDebugBuilder">
            <summary>
            内部赋值请不要动
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiVirtualHandler.CurrentDebugBuilder">
            <summary>
            当前的Debug建立的Builder
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiVirtualHandler.HaveDebugUserIdList">
            <summary>
            指定有Debug权限的员工编号
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.ApiVirtualHandler.InitDebugBuilder">
            <summary>
            初始化当前请求的DebugBuilder
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiVirtualHandler.CurrentHaveDebug">
            <summary>
            当前是否有Debug的配置 
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiVirtualHandler.HaveDebug">
            <summary>
            是否有Debug.这个配置取得的值.就是当前请求是否有Debug
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiVirtualHandler.CurrentDebug">
            <summary>
            当前的Debug控件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiVirtualHandler.CurrentTag">
            <summary>
            当前处理程序标签
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiVirtualHandler.IsShowManagerPanel">
            <summary>
            是否显示管理面板
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.ApiVirtualHandler.IsCanRedirectPage">
            <summary>
            当前是否是可以进行页面跳转的页面(登陆时的页面跳转)
            </summary>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.DingDingAuthUserVistor">
            <summary>
            钉钉E应用当前登录状态的Redis读取器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.DingDingAuthUserVistor.#ctor">
            <summary>
            初始化一个Redis服务
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.DingDingAuthUserVistor.GetEntityRedisKey(System.String)">
            <summary>
            通过Entity的Key取出对应的Redis的Key(子类必须实现)
            </summary>
            <param name="entityKey"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.DingDingAuthUserVistor.EntityToJson(System.Int32)">
            <summary>
            把实例转换成Json字符串,(值类型和String需要重写,其它不需要)
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.DingDingAuthUserVistor.JsonToEntity(System.String)">
            <summary>
            把Json字符串转换成实例,(值类型和String需要重写,其它不需要)
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.DingDingHelper">
            <summary>
            API运行中,关于钉钉的帮助类
            </summary>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.DingDingHelper.DingDingUserMappingModel">
            <summary>
            通过钉钉用户ID取得映射的MisUserId的映射类
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.DingDingHelper.EprogramLog.UserId">
            <summary>
            Mis员工编号
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.DingDingHelper.EprogramLog.Address">
            <summary>
            登录时当前所在地址
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.DingDingHelper.EprogramLog.AuthCode">
            <summary>
            钉钉的免登授权码
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.DingDingHelper.EprogramLog.PointLng">
            <summary>
            登录坐标
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.DingDingHelper.EprogramLog.PointLat">
            <summary>
            登录坐标
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.DingDingHelper.EprogramLog.PointAccuracy">
            <summary>
            登录坐标
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.DingDingHelper.EprogramLog.MobileModel">
            <summary>
            手机型号
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.DingDingHelper.EprogramLog.NetworkType">
            <summary>
            登录时网络
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.DingDingHelper.EprogramLog.deviceId">
            <summary>
            deviceId
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.DingDingHelper.EprogramLog.LoginTypeId">
            <summary>
            登录类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.DingDingHelper.EprogramLog.LoginSiteId">
            <summary>
            登录站点
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.DingDingHelper.EprogramLog.LoginTime">
            <summary>
            登录时间
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.DingDingHelper.GetAccessToken">
             <summary>
            取得访问AccessToken
             </summary>
             <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.DingDingHelper.GetUserIdByAuth(System.String)">
            <summary>
            通过AuthCode取得员工编号
            </summary>
            <param name="authCode">钉钉的免登授权码</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.DingDingHelper.PostEProgramLoginLog(System.Int32,System.String,System.String,System.Decimal,System.Decimal,System.Int32,System.String,System.String,System.String)">
            <summary>
            提交E应用登录日志
            </summary>
            <param name="userId">员工编号</param>
            <param name="authCode"></param>
            <param name="address"></param>
            <param name="lng"></param>
            <param name="lat"></param>
            <param name="accuracy"></param>
            <param name="model"></param>
            <param name="network"></param>
            <param name="deviceId"></param>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.DingDingHelper.AuthCodeMapUserId">
            <summary>
            Mis站点用户集合
            </summary>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.JWTHelper">
            <summary>
            网站的token
            </summary>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.TokenInfo">
            <summary>
            token的信息
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.TokenInfo.UserId">
            <summary>
            当前登录的用户的Id
            </summary>
            <value>
            
            </value>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.TokenInfo.IsBS">
            <summary>
            当前用户是否是变身后的用户
            </summary>
            <value>
            
            </value>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.TokenInfo.BSFromUserId">
            <summary>
            当前用户是否是变身后的用户
            </summary>
            <value>
            
            </value>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.TokenInfo.LastDeviceID">
             <summary>
            最后一次登录的设备Id
             </summary>
             <value>
             The name of the user.
             </value>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.TokenInfo.JWTTokentExpire">
            <summary>
            Token的有效期 修改为10天
            </summary>
            <value>
            The JWT token expire.
            </value>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.TokenInfo.FaceExpire">
            <summary>
            FaceExpire  人脸识别的有效期 修改为10天
            </summary>
            <value>
            The JWT token expire.
            </value>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.JWTCheckLogin">
            <summary>
            使用JWT验证的登录
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.JWTCheckLogin._tokenConfig">
            <summary>
            Token使用的配置中心
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.JWTCheckLogin.OnAfterTonkenConfigChange(System.String,System.String)">
            <summary>
            配置中心值变更后回调事件
            </summary>
            <param name="configKey">配置Key</param>
            <param name="loadValue">变更后的配置值</param>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.JWTCheckLogin.BuildTokenKeyAndSecret(System.String)">
            <summary>
            通过配置的值建立本地的配置项目
            </summary>
            <param name="loadValue">配置值</param>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.JWTCheckLogin._tokenKeyAndSecret">
            <summary>
            本地存储的Token字典字段(此字段不使用)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.JWTCheckLogin.TokenKeyAndSecret">
            <summary>
            本地使用的Token字典
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.JWTCheckLogin.GetToken">
            <summary>
            主要使用函数.获取Token使用默认的HeaderKey:AppID取得的值来进行取得使用的TokenKey
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.JWTCheckLogin.GetToken(System.String)">
            <summary>
            主要使用函数.获取Token,自定义Key
            </summary>
            <param name="tokenKey">使用TokenKey</param>
            <returns>返回得到的Token如果不存在则返回null</returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.JWTCheckLogin.validatetoken(System.String,System.Int32@)">
            <summary>
            验证用户的token 是否正确,使用头信息中的AppID字段
            </summary>
            <param name="token">要验证的token信息</param>
            <param name="UserId">用户的id</param>
            <returns></returns>
            <remarks>
            ------+++++++++-------
            --姓名:yangxiaodong  时间:2018/10/9 11:01
            --操作简单描述:
            --本次操作需求来源URL:
            --设备信息:YANGXIAODONG
            ------+++++++++-------
            </remarks>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.JWTCheckLogin.validatetoken(System.String,System.String,System.Int32@)">
            <summary>
            验证用户的token 是否正确
            </summary>
            <param name="token">要验证的token信息</param>
            <param name="appId">当前请求的App信息,不同App使用不同的私钥,不传则使用头信息中的AppID字段</param>
            <param name="UserId">用户的id</param>
            <returns></returns>
            <remarks>
            ------+++++++++-------
            --姓名:yangxiaodong  时间:2018/10/9 11:01
            --操作简单描述:
            --本次操作需求来源URL:
            --设备信息:YANGXIAODONG
            ------+++++++++-------
            </remarks>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.JWTCheckLogin.ValidateTokenLength(System.String,System.String[]@)">
            <summary>
            验证token的长度信息
            </summary>
            <param name="token">Token信息</param>
            <param name="Token">返回的token</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.JWTCheckLogin.ValidateTokensecret(System.String[],System.String)">
            <summary>
            验证token 是否合法
            </summary>
            <param name="Token">token 信息</param>
            <param name="appId">当前请求的App信息,不同App使用不同的私钥,不传则使用头信息中的AppID字段</param>
            <returns></returns>
            <remarks>
            ------+++++++++-------
            --姓名:yangxiaodong  时间:2018/10/10 15:18
            --操作简单描述:
            --本次操作需求来源URL:
            --设备信息:YANGXIAODONG
            ------+++++++++-------
            </remarks>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.JWTCheckLogin.ValidateJWTTokentExpire(MangoMis.Frame.MangoApi.TokenInfo,System.Int64)">
            <summary>
            验证 JWTTokentExpire 是否过期 
            </summary>
            <param name="tokeninfo">token信息</param>
            <param name="DateTimeUtcNow">当前时间戳</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.JWTCheckLogin.GenToken(MangoMis.Frame.MangoApi.TokenInfo,System.String)">
            <summary>
            获取token
            </summary>
            <param name="M">token实体类信息</param>
            <param name="appId">当前请求的App信息,不同App使用不同的私钥,不传则使用头信息中的AppID字段</param>
            <returns></returns>
            <remarks>
            ------+++++++++-------
            --姓名:yangxiaodong  时间:2018/10/9 11:04
            --操作简单描述:
            --本次操作需求来源URL:
            --设备信息:YANGXIAODONG
            ------+++++++++-------
            </remarks>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.JWTCheckLogin.GetHead">
            <summary>
            头
            </summary>
            <returns></returns>
            <remarks>
            ------+++++++++-------
            --姓名:yangxiaodong  时间:2018/2/23 9:00
            --操作简单描述:
            --本次操作需求来源URL:
            --设备信息:YANGXIAODONG
            ------+++++++++-------
            </remarks>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.JWTCheckLogin.getPayload(MangoMis.Frame.MangoApi.TokenInfo)">
            <summary>
            用户信息
            </summary>
            <param name="M">token的信息</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.JWTCheckLogin.CreateToken(System.String,System.String)">
            <summary>
            HMACSHA256
            </summary>
            <param name="message">要加密的数据</param>
            <param name="secret">密钥信息</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.JWTCheckLogin.EncodeBase64(System.Text.Encoding,System.String)">
            <summary>
            Base64加密
            </summary>
            <param name="encoding">加密采用的编码方式</param>
            <param name="source">待加密的明文</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.JWTCheckLogin.EncodeBase64(System.String)">
            <summary>
            Base64加密，采用utf8编码方式加密
            </summary>
            <param name="source">待加密的明文</param>
            <returns>加密后的字符串</returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.JWTCheckLogin.DecodeBase64(System.Text.Encoding,System.String)">
            <summary>
            Base64解密
            </summary>
            <param name="encoding">解密采用的编码方式，注意和加密时采用的方式一致</param>
            <param name="result">待解密的密文</param>
            <returns>解密后的字符串</returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.JWTCheckLogin.DecodeBase64(System.String)">
            <summary>
            Base64解密，采用utf8编码方式解密
            </summary>
            <param name="result">待解密的密文</param>
            <returns>解密后的字符串</returns>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.ParamFromBody">
            <summary>
            <para>用于标识前台来自body的参数的特性,该特性只能用于参数并且一个方法的参数只能设置一次ParamFromBody特性</para> 
            <example>参数是对象,系统会自动把inputstream接收到的字符串反序列化成userinfo对象</example>
            <code>public void test([ParamFromBody]userinfo u) </code> 
            <example>参数是数组</example>
            <code>public void test([ParamFromBody]List&lt;string&gt; list) </code> 
            <example>参数是字符串,用于第三方回调不确定数据格式的情况下,自行解析</example>
            <code>public void test([ParamFromBody]string str) </code>
            <para>注意:</para>
            <para>注意:</para>
            <para>注意:</para>
            <para>某个POST方法只能设置一次ParamFromBody</para>
            </summary>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.ParamFromFormData">
            <summary>
            <para>用于标识前台来自FormData的参数的特性</para> 
            <code>var data=new FormData();</code>
            <code>data.append("a","123");</code>
            <code>data.append("b","456");</code>
            <code>data.append("c",$('#file1').get(0).files[0]);此处为上传文件的前台代码</code>
            <para>如果data中的Key发生了重复,那么后台会使用,自动合并相同的Key</para>
            <code>w2.PostMangoApi("AAA.Data.Api/Class11ApiController","TestPost2",data,function(result){});</code>
            <para>如果你参数定义成class类型(model_dto),那么会自动将Form中所有的匹配的参数赋值给model</para>
            <example>比如:</example>
            <code>public void test([ParamFromFormData]userinfo u)</code>
            <para>如果你参数定义成基本类型(string),那么会识别前台提交过来的Form['参数']</para>
            <example>比如:</example>
            <code>public void test([ParamFromFormData]string a,[ParamFromFormData]string b)</code>
            <example>后台可以使用下面代码来获取上传的文件:</example>
            <code>var Allfile = WebHelper.Request.Files;</code>
            <para>注意:</para>
            <para>注意:</para>
            <para>注意:</para>
            <para>非上传文件方式不建议使用此特性</para>
            <para>如果遇到4MB以上的文件出现报错的问题,请联系项目管理员更新webconfig的配置</para>
            <para>使用方式请参考 https://wiki.517cdn.com/index.php/MangoApi#Q:.E5.A6.82.E4.BD.95.E9.80.9A.E8.BF.87api.E6.8E.A5.E5.8F.A3.E5.AE.9E.E7.8E.B0.E6.96.87.E4.BB.B6.E4.B8.8A.E4.BC.A0</para>
            </summary>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.IMangoApiPower">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.IMangoApiPower.CheckApiPower(System.String,MangoMis.Frame.MangoApi.MangoApiHavePowerInfo,System.Object)">
            <summary>
            在mangoapi入口处判断当前用户是否具有访问当前模块的权限
            </summary>
            <param name="PowerKey">权限key.(程序集.函数)</param>
            <param name="mangoApiHavePowerInfo"></param>
            <param name="runObj"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.MangoApiHavePowerInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.MangoApiHavePowerInfo.HavePower">
            <summary>
            
            </summary>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.MgDemoV1ApiController">
            <summary>
            带签名验证的示例使用的签名组为demotestgroup.正常接口不允许使用此分组
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.MgDemoV1ApiController.OnInit">
            <summary>
            初始化函数.可重写此函数,然后会在初始实例化API的时候调用(包括重新加载)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.MgDemoV1ApiController.TimeTick(System.String)">
            <summary>
            注意,测试失败请刷新页面再测试,因为Time变了.60S有效,带Timetick的验证函数,因为Timetick的变更.所以签名会一直不同
            </summary>
            <param name="title">输入内容</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.MgDemoV1ApiController.NoTimeTick(System.String)">
            <summary>
            不带timetick的验证内容,因为没有timetick验证,所以就算有签名验证也会导致每次参数一样,签名就相同
            </summary>
            <param name="title">输入内容</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.MgDemoV1ApiController.RewritePath(System.String)">
            <summary>
            重定向页面的接口
            </summary>
            <param name="title">输入内容</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.MgDemoV2ApiController">
            <summary>
            不带签名验证的路径示例
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.MgDemoV2ApiController.Common(System.String)">
            <summary>
            正常的接口
            </summary>
            <param name="title">输入内容</param>
            <returns>返回字符串</returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.MgDemoV2ApiController.CommonV2(System.String,System.String)">
            <summary>
            正常的接口
            </summary>
            <param name="title">输入内容</param>
            <param name="title2">输入内容2</param>
            <returns>返回字符串</returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.MgDemoV2ApiController.RewritePath(System.String)">
            <summary>
            重定向页面的接口
            </summary>
            <param name="title">输入内容</param>
            <returns>返回字符串</returns>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.SecretCheckType">
            <summary>
            签名时使用的参数类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.SecretCheckType.Default">
            <summary>
            使用函数中的参数当签名，不是函数的参数的参数不会当作签名验证的参数(默认值)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.SecretCheckType.MethodParam">
            <summary>
            使用函数中的参数当签名，不是函数的参数的参数不会当作签名验证的参数(默认值)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.MangoApi.SecretCheckType.FullParam">
            <summary>
            使用所有的（Form/QueryString）参数做为签名的参数
            </summary>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.TypeDescription">
            <summary>
            类的描述信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.TypeDescription.#ctor(System.Type)">
            <summary>
            初始化一个类的描述信息
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.TypeDescription.GetMethod(System.String)">
            <summary>
            按函数的文档索引取得一个函数
            </summary>
            <param name="methodDocKey">函数的文档索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.TypeDescription.GetMethod(System.Reflection.MethodInfo)">
            <summary>
            按函数的文档索引取得一个函数
            </summary>
            <param name="methodInfo">函数内容</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.TypeDescription.GetProperyDescription(System.String)">
            <summary>
            取得一个属性的文档
            </summary>
            <param name="propertyName">属性名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.TypeDescription.GetFieldDescription(System.String)">
            <summary>
            取得一个字段的文档
            </summary>
            <param name="fieldName">字段名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.TypeDescription.GetMemberDocKey(System.String)">
            <summary>
            取得子集查找时使用的索引名
            </summary>
            <param name="memberName">当前节点的子索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.TypeDescription.GetDocKey(System.Type)">
            <summary>
            取得一个类弄的Key
            </summary>
            <param name="type">要取得Key的类型</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.DescriptionBase`1">
            <summary>
            描述的基类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.DescriptionBase`1.#ctor(System.String,System.String,System.String,`0)">
            <summary>
            初始化一个取得描述的基类.必须被继承才可以使用
            </summary>
            <param name="assemblyKey">当前内容所在的程序集Key,eg.Assembly.GetName().Name</param>
            <param name="currentMemberType">类型.分为P/F/T/M等</param>
            <param name="memberDocKey">当前项目的索引,需要通过对应被继承类的GetKey函数取得</param>
            <param name="item">当前内容</param>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.DescriptionBase`1.AssemblyKey">
            <summary>
            程序集的Key
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.DescriptionBase`1.CurrentItem">
            <summary>
            当前文档的原实例
            </summary>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.DescriptionBase`1.CurrentDocKey">
            <summary>
            当前的文档Key
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.DescriptionBase`1.GetSummary">
            <summary>
            取得Summary信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.DescriptionBase`1.GetChildSummary(System.String,System.String)">
            <summary>
            取得子集的Summary信息
            </summary>
            <param name="memberName">子集名称</param>
            <param name="memberDocType">子集文档类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.DescriptionBase`1.GetReturn">
            <summary>
            取得Return信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.DescriptionBase`1.GetParam(System.String)">
            <summary>
            取得参数信息
            </summary>
            <param name="paramDocKey">参数索引(需要在对应的MethodDescritipin中取得GetParamKey)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.DescriptionBase`1.GetDescription_Base(System.String,System.String,System.String)">
            <summary>
            取得基础描述
            </summary>
            <param name="memberDocType">一般是M或者是其它</param>
            <param name="memberDocKey">Member名</param>
            <param name="docExtendString">后面的字符串,因为用的比较少.不再继续拼接.传入时手动拼接</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.DescriptionBase`1.GetDescriptionDocument(System.String)">
            <summary>
            取得程序集的Xml文档
            </summary>
            <param name="assemblyKey">程序集Key,eg.assembly.GetName().Name</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.DescriptionBase`1.GetDescription(System.Xml.XmlDocument,System.String)">
            <summary>
            取得一个描述节点
            </summary>
            <param name="descriptionDocument">描述文档Xml</param>
            <param name="nodePath">子节点位置eg.[@name='']/path</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.DescriptionHelper">
            <summary>
            程序描述获取
            </summary>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.IApiController">
            <summary>
            [重点]不要继承此接口
            用于实现自动API的控制器.继承此接口的类,在加载的时候会被初始化成Api然后通过[http://mis.517.cn/mangoapi/userlist/detail/12256]这种地址实现自动调用
            此接口目前没有内容.只提供用于加载的基础类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.IApiController.OnInit">
            <summary>
            初始化函数.可重写此函数,然后会在初始实例化API的时候调用(包括重新加载)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.IApiController.AppendControllerDebug">
            <summary>
            添加此API的源Debug
            </summary>
        </member>
        <member name="T:MangoMis.Frame.MangoApi.MethodDescription">
            <summary>
            函数描述
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.MethodDescription.#ctor(MangoMis.Frame.MangoApi.TypeDescription,System.Reflection.MethodInfo)">
            <summary>
            函数描述
            </summary>
            <param name="parent">父级类的文档</param>
            <param name="method">当前函数</param>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.MethodDescription.GetParamDescription(System.String)">
            <summary>
            取得一个函数参数文档
            </summary>
            <param name="paramName">参数名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.MethodDescription.GetShowName">
            <summary>
            取得显示名(因为DocKey带类型.不太好看.所以显示名只取名)
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.MethodDescription.GetReturnDescription">
            <summary>
            取得Return文档
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.MangoApi.MethodDescription.Parent">
            <summary>
            父级文档
            </summary>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.MethodDescription.GetDocKey(MangoMis.Frame.MangoApi.TypeDescription,System.Reflection.MethodInfo)">
            <summary>
            取得一个函数的文档的Key
            </summary>
            <param name="parent"></param>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.MethodDescription.GetParamDocKey(System.Reflection.ParameterInfo)">
            <summary>
            取得一个参数的Key
            </summary>
            <param name="param">参数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.MangoApi.MethodDescription.GetParamDocKey(System.Type)">
            <summary>
            取得一个参数的Key
            </summary>
            <param name="paramType">参数的类型</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Login.IMgLogin">
            <summary>
            20170502登陆使用接口
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.IMgLogin.UserId">
            <summary>
            当前登陆人员工编号
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.IMgLogin.Card">
            <summary>
            当前登陆Card
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Login.IMgLogin.Check(System.Action,System.Action,System.Func{System.Int32,System.Boolean},System.Boolean)">
            <summary>
            检查当前是否登陆
            </summary>
            <param name="haveUser">已经登陆的回调函数</param>
            <param name="noUser">无用户登陆的回调函数</param>
            <param name="changeUser">登陆用户变更初始化新用户的回调函数</param>
            <param name="isCanRedirect">当前调用页面是否可以进行页面跳转</param>
        </member>
        <member name="M:MangoMis.Frame.Login.IMgLogin.Login(System.Int32,System.String)">
            <summary>
            登陆单点服务器 
            </summary>
            <param name="userid">登陆人员工编号</param>
            <param name="callbackPage">登陆后跳回页面.不写默认当前页面</param>
            <returns>是否登陆成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Login.IMgLogin.ChangeLoginUser(System.Int32,System.Int32,System.String)">
            <summary>
            进行变身登录
            </summary>
            <param name="toUserId">变身为</param>
            <param name="fromUserid">谁变的身</param>
            <param name="reason">变身理由</param>
            <returns>100为成功,其它为失败</returns>
        </member>
        <member name="M:MangoMis.Frame.Login.IMgLogin.GetStatusLogin(System.Int32,System.String)">
            <summary>
            登陆单点服务器 (并取得登陆状态) 
            </summary>
            <param name="userid">登陆人员工编号</param>
            <param name="callbackPage">登陆后跳回页面.不写默认当前页面</param>
            <returns>是否登陆成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Login.IMgLogin.CheckCurrentSiteLogin">
            <summary>
            不进行单点跳转.只检查站点自身是否登陆
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Login.IMgLogin.ChangeCityId(System.Int32)">
            <summary>
            变更当前登陆人的登陆城市
            </summary>
            <param name="cityId">登陆的城市ID</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Login.IMgLogin.GetCityId(System.Int32)">
            <summary>
            取得当前登陆人登陆的城市
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Login.IMgLogin.EventBeforeBeginRequest">
            <summary>
            在具体页面处理请求之前的事件(一般用于检验当前是否是单点登陆的回调之类)
            </summary>
            <returns>是否应该处理单点登陆</returns>
        </member>
        <member name="M:MangoMis.Frame.Login.IMgLogin.GetPostTokenUserId(System.String)">
            <summary>
            取得提交Token的员工编号
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Login.IMgLogin.Logout">
            <summary>
            退出单点登陆
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Login.IMgLogin.SiteLogin(System.Int32)">
            <summary>
            只登陆当前站点不登陆SSO
            </summary>
            <param name="userId"></param>
        </member>
        <member name="M:MangoMis.Frame.Login.IMgLogin.PostTokenUserId(System.String,System.Int32)">
            <summary>
            提交Token的员工编号(用于第三方站点登陆Mis的单点)
            </summary>
            <param name="token">Token(相当于验证码)</param>
            <param name="userid">登陆的员工编号</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Login.MgLoginV4">
            <summary>
            20170502版本登陆
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.MgLoginV4.UserId">
            <summary>
            当前登陆人员工编号
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.MgLoginV4.Card">
            <summary>
            当前登陆Card
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Login.MgLoginV4.GetPostTokenUserId(System.String)">
            <summary>
            取得提交Token的员工编号
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Login.MgLoginV4.PostTokenUserId(System.String,System.Int32)">
            <summary>
            提交Token的员工编号(用于第三方站点登陆Mis的单点)
            </summary>
            <param name="token">Token(相当于验证码)</param>
            <param name="userid">登陆的员工编号</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Login.MgLoginV4.CheckCurrentSiteLogin">
            <summary>
            不进行单点跳转.只检查站点自身是否登陆
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Login.MgLoginV4.Check(System.Action,System.Action,System.Func{System.Int32,System.Boolean},System.Boolean)">
            <summary>
            检查当前是否登陆
            </summary>
            <param name="haveUser">已经登陆的回调函数</param>
            <param name="noUser">无用户登陆的回调函数</param>
            <param name="changeUser">登陆用户变更初始化新用户的回调函数</param>
            <param name="isCanRedirect">当前调用页面是否可以进行页面跳转</param>
        </member>
        <member name="M:MangoMis.Frame.Login.MgLoginV4.ChangeLoginUser(System.Int32,System.Int32,System.String)">
            <summary>
            进行变身登录
            </summary>
            <param name="toUserId">变身为</param>
            <param name="fromUserid">谁变的身</param>
            <param name="reason">变身理由</param>
            <returns>100为成功,其它为失败</returns>
        </member>
        <member name="M:MangoMis.Frame.Login.MgLoginV4.GetStatusLogin(System.Int32,System.String)">
            <summary>
            登陆单点服务器 (并取得登陆状态)
            </summary>
            <param name="userid">登陆人员工编号</param>
            <param name="callbackPage">登陆后跳回页面.不写默认当前页面</param>
            <returns>是否登陆成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Login.MgLoginV4.Login(System.Int32,System.String)">
            <summary>
            登陆单点服务器 
            </summary>
            <param name="userid">登陆人员工编号</param>
            <param name="callbackPage">登陆后跳回页面.不写默认当前页面</param>
            <returns>是否登陆成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Login.MgLoginV4.ChangeCityId(System.Int32)">
            <summary>
            变更当前登陆人的登陆城市
            </summary>
            <param name="cityId">登陆的城市ID</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Login.MgLoginV4.GetCityId(System.Int32)">
            <summary>
            取得当前登陆人登陆的城市
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Login.MgLoginV4.EventBeforeBeginRequest">
            <summary>
            在具体页面处理请求之前的事件(一般用于检验当前是否是单点登陆的回调之类)
            </summary>
            <returns>是否应该处理单点登陆</returns>
        </member>
        <member name="M:MangoMis.Frame.Login.MgLoginV4.Logout">
            <summary>
            退出单点登陆
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Login.MgLoginV4.SiteLogin(System.Int32)">
            <summary>
            只登陆当前站点不登陆SSO
            </summary>
            <param name="userId"></param>
        </member>
        <member name="T:MangoMis.Frame.Login.LoginCardConfig">
            <summary>
            20160701登陆的配置
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Login.LoginCardConfig.config">
            <summary>
            配置
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.Token">
            <summary>
            取得一个新的Token
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Login.LoginCardConfig.IsUsedApiStaticCardApiUrl">
            <summary>
            是否使用ApiStatic取得的Card地址
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.IsCanLoginByFrame">
            <summary>
            是否开启可以通过Frame登陆
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.RedirectUrlWhenUnLogin">
            <summary>
            未登陆情况下跳转的页面(完整URL).(配置名:tokenserver_redirecturl_when_unlogin)(如果没有则未登陆不跳转)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.CallbackUrlWhenLoginByRedirectUrl">
            <summary>
            未登陆跳转登陆成功后的回调页面(完整URL).(配置名:tokenserver_callbackurl_when_login_by_redirecturl)(如果没有.则回到原始页面)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.LoginVistorMapping2">
            <summary>
            [card][key=login_vistor_mapping](示例.MangoMis.Frame;MangoMis.Frame.Login.MgLoginV4)登陆访问接口实例,需要继承MangoMis.Frame.Login.IMgLogin
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.LoginVistorMapping">
            <summary>
            [card][key=configcenter_login_vistor_mapping](示例.MangoMis.Frame;MangoMis.Frame.Login.MgLoginV4)登陆访问接口实例,需要继承MangoMis.Frame.Login.IMgLogin
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.CardAPIUrl">
            <summary>
            当前APICard的API地址
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.CurrentSiteId">
            <summary>
            当前站点ID
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.CheckPathKey">
            <summary>
            使用上次路径检查路径的关键字
            </summary>
            <value><c>true</c> if this instance is login SSO by I frame; otherwise, <c>false</c>.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.MessageForAfterLogout">
            <summary>
            登出后提示消息(有跳转页时不生效)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.PageUrlForAfterLogout">
            <summary>
            登陆后跳转页面(没有则不跳转)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginCardConfig.CheckLogTypePath(System.String@,System.String)">
            <summary>
            当调用Ashx或者虚拟Ashx时.采用上一次的路径检查
            </summary>
            <param name="urlPath"></param>
            <param name="logTypePath"></param>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.CurrentLoginTypeId">
            <summary>
            当前站点登陆类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.CurrentLoginTypePath">
            <summary>
            当前站点登陆类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.APICardCheckTokenPageName">
            <summary>
            APICard回调的页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.IsWriteLoseUserLog">
            <summary>
            是否写入丢失用户日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.TokenTimeOutSecond">
            <summary>
            临时提交的Token失效(秒)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.CardTimeOutSecond">
            <summary>
            临时记录的Card失效(秒)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.CardCookieTimeOutMinute">
            <summary>
            Card不访问失效(分)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.UserIdCookieTimeOutMinute">
            <summary>
            UserId不访问失效(分)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.SitePath2">
            <summary>
            第二种登陆路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.LogTypeForPath2">
            <summary>
            第二种登陆类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.SitePath3">
            <summary>
            第三种登陆路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.LogTypeForPath3">
            <summary>
            第三种登陆类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.SitePath4">
            <summary>
            第四种登陆路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.LogTypeForPath4">
            <summary>
            第四种登陆类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.CardCookieName">
            <summary>
            CardCookie名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.UserIdCookieName">
            <summary>
            UserIdCookie名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.CurrentLoginFromTypeId">
            <summary>
            当前登陆类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.LoginStatusCookieName">
            <summary>
            当前登陆状态Cookie名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.RetryLoginTimes">
            <summary>
            重试次数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.LoginStatusCookie">
            <summary>
            当前状态[505]APICard验证NoUser
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.CurrentIsBeginLogin">
            <summary>
            当前登陆类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.CurrentLoginFromType">
            <summary>
            当前登陆类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.CurrentCard">
            <summary>
            当前系统中记录的Card[]
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginCardConfig.SetCard(System.String)">
            <summary>
            改为使用这个,然后禁用CurrentCard赋值
            </summary>
            <param name="card"></param>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginCardConfig.SetLoginUserId(System.Int32)">
            <summary>
            改为使用这个,然后禁用CurrentUserId赋值
            </summary>
            <param name="userId"></param>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.LocalSiteUserId">
            <summary>
            当前非直接从Card中取得的记录的UserId(正常不用.只用于Frame中判断员工是否有变化)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginCardConfig.SetUserId(System.Int32)">
            <summary>
            设置登陆员工编号
            </summary>
            <param name="userid">编号编号</param>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig.CurrentUserId">
            <summary>
            当前系统中记录的UserId
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Login.LoginAPI">
            <summary>
            登陆使用的API
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginAPI.IsWriteScriptByHeadControl">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginAPI.LoginAndRegisForAPICard(System.Int32)">
            <summary>
            提交登陆并直接注册APICard(PS:就相当于同时调用Login与RegisForAPICard)[自己指定跳转回非当前登陆页的页面]
            </summary>
            <param name="userId">员工编号</param>
            <returns>返回100是登陆成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginAPI.LoginAndRegisForAPICard(System.Int32,System.String)">
            <summary>
            提交登陆并直接注册APICard(PS:就相当于同时调用Login与RegisForAPICard)[自己指定跳转回非当前登陆页的页面]
            </summary>
            <param name="userId">员工编号</param>
            <param name="returnPage">最终跳转页面</param>
            <returns>返回100是登陆成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginAPI.Logout">
            <summary>
            单点登出
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginAPI.RegisForAPICard">
            <summary>
            向APICard写入Card[一般需要使用单点的时候需要调用此方法,用以向APICard注册CardCookie]
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginAPI.CheckTokenIsTrueByCard">
            <summary>
            写在Global里,在APICard验证Token时使用
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginAPI.Login(System.Int32)">
            <summary>
            提交登陆
            </summary>
            <param name="userId">员工编号</param>
            <returns>返回100是登陆成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginAPI.AppendLoginToken">
            <summary>
            登陆前添加登陆时使用的Token
            </summary>
            <returns>返回值.错误时返回Null正确返回Token</returns>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginAPI.VirtualLoginSite(System.Int32)">
            <summary>
            虚拟登陆本站点
            </summary>
            <param name="userId"></param>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginAPI.PostLoginInfoToLoginAPI(System.Int32,System.String,System.String)">
            <summary>
            向LoginAPI提交登陆信息(此时虽然已经登陆成功但是单点并未实现.因为LoginAPI并未记录登陆方的Cookie[PS:因为此时是服务器对服务器.所以客户端的Cookie无法获取])
            所以需要单点的时候,还需要使用RegisForAPICard向API注册Cookie注册Cookie时会跳转页面
            </summary>
            <param name="userId">提交登陆的员工编号</param>
            <param name="token">使用的Token[AppendLoginToken取得的Token]</param>
            <param name="returnPage">跳转返回的页面</param>
            <returns>返回值.100是返回正常.其它是失败</returns>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginAPI.Login(System.Int32,System.String)">
            <summary>
            提交登陆[自己指定跳转回非当前登陆页的页面](如果不调用RegisForAPICard,跳转页面不会生效)
            </summary>
            <param name="userId">员工编号</param>
            <param name="returnPage">最终跳转页面</param>
            <returns>返回100是登陆成功</returns>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginAPI.ChangeCity(System.Int32)">
            <summary>
            变更当前登陆人登陆的城市
            </summary>
            <param name="cityId">城市编号</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginAPI.GetCityId">
            <summary>
            取得当前登陆人登陆的城市
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginAPI.GetPostTokenUserId(System.String)">
            <summary>
            取得提交Token的员工编号
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginAPI.PostTokenUserId(System.String,System.Int32)">
            <summary>
            提交Token的员工编号(用于第三方站点登陆Mis的单点)
            </summary>
            <param name="token">Token(相当于验证码)</param>
            <param name="userid">登陆的员工编号</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginAPI.OnlyCheckSiteLogin">
            <summary>
            只检查当前站点是否登陆.不再去Card进行验证
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginAPI.TokenServerHost">
            <summary>
            当前TokenServer(Card)的域名,因为不想重新定义参数,所以直接使用原API地址做转换
            </summary>
        </member>
        <member name="F:MangoMis.Frame.Login.LoginAPI.TokenServerSecret">
            <summary>
            从配置中心读取的配置
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginAPI.TokenSecret">
            <summary>
            当前签名密钥
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginAPI.GetSiteUserId(System.String)">
            <summary>
            通过Card验证登录状态并取得当前的员工编号
            </summary>
            <param name="cardToken"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginAPI.RebuildSecret(System.String,System.String)">
            <summary>
            重建当前的签名密钥
            </summary>
            <param name="configKey"></param>
            <param name="loadValue"></param>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginAPI.ChangeLoginUser(System.Int32,System.Int32,System.String)">
            <summary>
            进行变身登录
            </summary>
            <param name="toUserId">变身为</param>
            <param name="fromUserid">谁变的身</param>
            <param name="reason">变身理由</param>
            <returns>100为成功,其它为失败</returns>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginAPI.CheckLogin(System.Action,System.Action,System.Boolean)">
            <summary>
            验证当前是否已经登陆[每个页面进入前需要调用此]
            </summary>
            <param name="haveUser">有用户的函数</param>
            <param name="noUser">无用户的函数</param>
            <param name="isPage">是否是否是页面[因为Ashx只能验证登陆成功,无法取得登陆信息,所以如果不是Page请写False]</param>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginAPI.LogoutCardScriptUrl">
            <summary>
            登出用的脚本文件src=LogoutCardScriptUrl
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginAPI.LoginCardScriptUrl">
            <summary>
            登陆用的脚本文件script src=LoginCardScriptUrl
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginAPI.GetCardScriptUrl">
            <summary>
            取得Card用的脚本文件 script src=GetCardScriptUrl
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginAPI.CheckLoginSuccess">
            <summary>
            检查当前登陆是否正常
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Login.LoginCardConfig20160701">
            <summary>
            20160701Card的配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Login.LoginCardConfig20160701.#ctor">
            <summary>
            20160701Card的配置
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig20160701.PageUrlForAfterLogout">
            <summary>
            登陆后跳转页面(没有则不跳转)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig20160701.MessageForAfterLogout">
            <summary>
            登出后提示消息(有跳转页时不生效)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig20160701.IsCanLoginByFrame">
            <summary>
            是否开启可以通过Frame登陆
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig20160701.IsWriteLoseUserLog">
            <summary>
            是否写入丢失用户日志
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig20160701.CheckPathKey">
            <summary>
            检查路径的关键字
            </summary>
            <value><c>true</c> if this instance is login SSO by I frame; otherwise, <c>false</c>.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig20160701.CardAPIUrl">
            <summary>
            当前APICard的API地址
            </summary>
            <value><c>true</c> if this instance is login SSO by I frame; otherwise, <c>false</c>.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig20160701.APICardCheckTokenPageName">
            <summary>
            APICard回调的页面
            </summary>
            <value><c>true</c> if this instance is login SSO by I frame; otherwise, <c>false</c>.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig20160701.CardCookieTimeOutMinute">
            <summary>
            "Card不访问失效(分)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig20160701.UserIdCookieTimeOutMinute">
            <summary>
            UserId不访问失效(分)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig20160701.TokenTimeOutSecond">
            <summary>
            临时提交的Token失效(秒)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig20160701.CardTimeOutSecond">
            <summary>
            临时记录的Card失效(秒)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig20160701.CurrentSiteId">
            <summary>
            当前站点ID
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig20160701.CurrentLoginTypeId">
            <summary>
            当前站点登陆类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig20160701.SitePath2">
            <summary>
            第二种登陆路径
            </summary>
            <value><c>true</c> if this instance is login SSO by I frame; otherwise, <c>false</c>.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig20160701.LogTypeForPath2">
            <summary>
            第二种登陆类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig20160701.SitePath3">
            <summary>
            第三种登陆路径
            </summary>
            <value><c>true</c> if this instance is login SSO by I frame; otherwise, <c>false</c>.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig20160701.LogTypeForPath3">
            <summary>
            第三种登陆类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig20160701.SitePath4">
            <summary>
            第四种登陆路径
            </summary>
            <value><c>true</c> if this instance is login SSO by I frame; otherwise, <c>false</c>.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.Login.LoginCardConfig20160701.LogTypeForPath4">
            <summary>
            第四种登陆类型
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Login.Retry">
            <summary>
            异常时重试[因为静态变量总会不知道为什么就变成NULL等原因]
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Login.Retry.DO(System.Action,System.Action,System.Int32)">
            <summary>
            运行
            </summary>
            <param name="EditAction">要运行的内容</param>
            <param name="ResetAction">异常时重置的内容</param>
            <param name="maxRetry">可以重试次数</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.Login.TokenCard">
            <summary>
            
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.TokenCard.token">
            <summary>
            临时凭证
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.TokenCard.loginCard">
            <summary>
            登陆Card
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.TokenCard.InvalidTime">
            <summary>
            失效时间
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Login.VAppendTime">
            <summary>
            为了移除失效的Token
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.VAppendTime.TokenAppendTime">
            <summary>
            当前的临时凭证
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Login.VAppendTime.Reset">
            <summary>
            重置集合
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Login.VAppendTime.Append(System.String)">
            <summary>
            添加
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Login.VAppendTime.Remove(System.String)">
            <summary>
            移除一个token
            </summary>
            <param name="token">要移除的token</param>
        </member>
        <member name="M:MangoMis.Frame.Login.VAppendTime.Get(System.String)">
            <summary>
            获取时间
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Login.VAppendTime.RemoveTimeoutItem">
            <summary>
            移除所有失效的Token
            </summary>
        </member>
        <member name="T:MangoMis.Frame.Login.VTokenCard">
            <summary>
            记录当前登陆的临时凭证与Card
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.VTokenCard.MgRedisClient">
            <summary>
            TokenServer使用的Redis
            </summary>
        </member>
        <member name="P:MangoMis.Frame.Login.VTokenCard.TokenCard">
            <summary>
            当前的临时凭证
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Login.VTokenCard.Reset">
            <summary>
            重置集合
            </summary>
        </member>
        <member name="M:MangoMis.Frame.Login.VTokenCard.Append(System.String,System.String)">
            <summary>
            添加
            </summary>
            <param name="token"></param>
            <param name="card"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Login.VTokenCard.Remove(System.String)">
            <summary>
            移除
            </summary>
            <param name="token">要移除的Card</param>
        </member>
        <member name="M:MangoMis.Frame.Login.VTokenCard.Get(System.String)">
            <summary>
            取得Card
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.Login.VTokenCard.RemoveTimeoutItem">
            <summary>
            移除所有失效的内容
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.AutoLoadPage">
            <summary>
            虚拟页面实例
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.AutoLoadPage.#ctor(System.String,System.String,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            虚拟页面实例
            </summary>
            <param name="url">此页面的页面名(地址栏地址.例如:mycurrenttestpage)</param>
            <param name="title">页面标题</param>
            <param name="checkPower">此页面需要的权限</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.AutoLoadPage.LoadVoid">
            <summary>
            加载时的运行函数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.AutoLoadPage.UnLoadVoid">
            <summary>
            卸载时的函数
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.CommonHandlerExecute">
            <summary>
            放弃.不知道哪里用到了.通用正常Hanler处理程序
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.CommonHandlerExecute.ProcessRequest(System.Web.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:MangoMis.Frame.VirPages.CommonHandlerExecute.LoginVistor">
            <summary>
            单点实例
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.CommonHandlerExecute.UseLogin">
            <summary>
            是否开启登陆
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.CommonHandlerExecute.Execute">
            <summary>
            主要运行程序
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.CommonHandlerExecute.IsReusable">
            <summary>
            
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.CommonPageExcute">
            <summary>
            基础通用页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.CommonPageExcute.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.CommonPageExcute.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="P:MangoMis.Frame.VirPages.CommonPageExcute.CurrentIsPageShowButton">
            <summary>
            当前类型
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.Control_ConfigureInfo">
            <summary>
            相关配置使用的控件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Control_ConfigureInfo.Detail(System.String,System.String)">
            <summary>
            取得配置详情
            </summary>
            <param name="configStoreKey">缓存配置所在Store索引</param>
            <param name="configKey">缓存配置索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Control_ConfigureInfo.EditBlock(System.String,System.String)">
            <summary>
            取得配置详情
            </summary>
            <param name="configStoreKey">缓存配置所在Store索引</param>
            <param name="configKey">缓存配置索引</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Control_ConfigureInfo.Edit">
            <summary>
            提交编辑
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Control_TableEditor.MoveRedis(System.String,System.String,System.String,System.String)">
            <summary>
            提交编辑实体类型
            </summary>
            <param name="key">实体唯一主键索引</param>
            <param name="title">实体标题信息</param>
            <param name="dbinfoKey">实体使用数据源</param>
            <param name="memo">备注</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Control_TableEditor.PostConfig(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            提交编辑实体类型
            </summary>
            <param name="key">实体唯一主键索引</param>
            <param name="title">实体标题信息</param>
            <param name="dbinfoKey">实体使用数据源</param>
            <param name="memo">备注</param>
            <param name="isMove">是否移动数据源</param>
        </member>
        <member name="T:MangoMis.Frame.VirPages.DnZxfPageRoute">
            <summary>
            已经放弃
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DnZxfPageRoute.RouteHandler">
            <summary>
            已经放弃
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DnZxfPageRoute.PageName">
            <summary>
            已经放弃
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DnZxfPageRoute.PageKey">
            <summary>
            已经放弃
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DnZxfPageRoute.#ctor(System.Type,System.String)">
            <summary>
            已经放弃
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DnZxfPageRoute.GetRouteData(System.Web.HttpContextBase)">
            <summary>
            当在派生类中重写时，会返回有关请求的路由信息。
            </summary>
            <returns>
            一个对象，包含路由定义的值（如果该路由与当前请求匹配）或 null（如果该路由与请求不匹配）。
            </returns>
            <param name="httpContext">一个对象，封装有关 HTTP 请求的信息。</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DnZxfPageRoute.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)">
            <summary>
            当在派生类中重写时，会检查路由是否与指定值匹配，如果匹配，则生成一个 URL，然后检索有关该路由的信息。
            </summary>
            <returns>
            一个对象（包含生成的 URL 和有关路由的信息）或 null（如果路由与 <paramref name="values"/> 不匹配）。
            </returns>
            <param name="requestContext">一个对象，封装有关所请求的路由的信息。</param><param name="values">一个包含路由参数的对象。</param>
        </member>
        <member name="T:MangoMis.Frame.VirPages.ManagerPanelControlCollection">
            <summary>
            管理员控件集合
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.ManagerPanelControlCollection.Add(System.String,System.Func{System.Web.UI.Control})">
            <summary>
            添加一个管理员控件(可以是按钮等控件)
            </summary>
            <param name="key">索引,需要保持唯一,如果添加了重复的则添加失败</param>
            <param name="controlGetter">取得控件的函数</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.ManagerPanelControlCollection.Delete(System.String)">
            <summary>
            移除一个管理员控件
            </summary>
            <param name="key">索引,需要保持唯一,如果添加了重复的则添加失败</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.ManagerPanelControlCollection.Contains(System.String)">
            <summary>
            是否包含某个索引
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.ManagerPanelControlCollection.GetEnumerator">
            <summary>
            返回一个循环访问集合的枚举器。
            </summary>
            <returns>
            可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator"/> 对象。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:MangoMis.Frame.VirPages.DNZxf_Page">
            <summary>
            默认页面的基类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Page.ManagerPanelToPage">
            <summary>
            添加管理员控件.(管理员指是的CommonPowerUser)CommonFrame.IsCommonPowerUser
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Page.AddManagerControl(System.String,System.Func{System.Web.UI.Control})">
            <summary>
            添加一个管理员控件(可以是按钮等控件)
            </summary>
            <param name="key">索引,需要保持唯一,如果添加了重复的则添加失败</param>
            <param name="controlGetter">取得控件的函数</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Page.DeleteManagerControl(System.String)">
            <summary>
            移除一个管理员控件
            </summary>
            <param name="key">索引,需要保持唯一,如果添加了重复的则添加失败</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Page.Load_DNZxf_Page">
            <summary>
            加载虚拟页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DNZxf_Page.IsVirtualPageUseRoutePage">
            <summary>
            是否使用路由
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Page.ReAppendPage(System.Type)">
            <summary>
            重新添加虚拟页面
            </summary>
            <param name="pageType">虚拟页面类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Page.Append_Page(System.Type)">
            <summary>
            添加虚拟页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Page.RemovePage(System.Type)">
            <summary>
            移除一个虚拟页面
            </summary>
            <param name="pageType"></param>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DNZxf_Page.IsDnZxfPage">
            <summary>
            是否是虚拟页面
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.DNZxf_Page.Pages">
            <summary>
            当前所有的页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Page.#ctor">
            <summary>
            加载虚拟页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Page.#ctor(System.String,System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Page.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Page.JsonRetrun(System.Object)">
            <summary>
            使用Json格式返回数据
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DNZxf_Page.CurrentIsPageShowButton">
            <summary>
            页面类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DNZxf_Page.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DNZxf_Page.Disorder">
            <summary>
            显示顺序.没啥用
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DNZxf_Page.CurrentUrl">
            <summary>
            当前页面地址
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DNZxf_Page.CurrentTitle">
            <summary>
            当前标题
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DNZxf_Page.div">
            <summary>
            
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.PageApiClientV3ConnectionString">
            <summary>
            V3版本WCF连接查看
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageApiClientV3ConnectionString.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageApiClientV3ConnectionString.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageApiClientV3ConnectionString.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="T:MangoMis.Frame.VirPages.PageApiClientV2ConnectionConfig">
            <summary>
            日志内容分配
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageApiClientV2ConnectionConfig.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageApiClientV2ConnectionConfig.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageApiClientV2ConnectionConfig.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageApiClientV2ConnectionConfig.Ajax(System.String,System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            AJAX运行事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageApiClientV2ConnectionConfig.BuildEditAllot">
            <summary>
            开始编辑
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageApiClientV2ConnectionConfig.EditPanelForDetail">
            <summary>
            用于编辑详情的面板(Ajax提交时可能使用,所以预先定义)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageApiClientV2ConnectionConfig.DetailPost(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            提交详情的回调
            </summary>
            <param name="valueDictionary"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.VirPages.PageApiClientConnectionConfig">
            <summary>
            日志内容分配
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageApiClientConnectionConfig.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageApiClientConnectionConfig.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageApiClientConnectionConfig.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageApiClientConnectionConfig.Ajax(System.String,System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            AJAX运行事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageApiClientConnectionConfig.BuildEditAllot">
            <summary>
            开始编辑
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageApiClientConnectionConfig.EditPanelForDetail">
            <summary>
            用于编辑详情的面板(Ajax提交时可能使用,所以预先定义)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageApiClientConnectionConfig.DetailPost(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            提交详情的回调
            </summary>
            <param name="valueDictionary"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLogout.#ctor">
            <summary>
            登出
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageLogout.IsCheckLogin">
            <summary>
            是否检查登陆
            </summary>
            <value>true:检查登陆,false:不检查登陆直接调用HaveUser</value>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageLogout.CurrentIsPageShowButton">
            <summary>
            页面类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLogout.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="T:MangoMis.Frame.VirPages.PageLookDescription">
            <summary>
            系统帮助页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageLookDescription.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLookDescription.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageLookDescription.CurrentIsPageShowButton">
            <summary>
            页面类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLookDescription.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLookDescription.InitUseObject">
            <summary>
            显示内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLookDescription.ShowAssemblyDetailPanel(MangoMis.Frame.AssemblyLoader.AssemblyBody)">
            <summary>
            显示和程序集详情
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLookDescription.ShowNamespaceListPanel(System.String)">
            <summary>
            显示名称空间列表
            </summary>
            <param name="showNamespace"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLookDescription.ShowMethodDetailPanel(MangoMis.Frame.MangoApi.TypeDescription,System.String)">
            <summary>
            显示函数详情
            </summary>
            <param name="typeDescription"></param>
            <param name="showMethodDocKey"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLookDescription.GetPropertyTable(System.String,MangoMis.Frame.MangoApi.TypeDescription)">
            <summary>
            取得属性列表
            </summary>
            <param name="id">列表控件的ID</param>
            <param name="typeDescription">所在的类</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLookDescription.ShowTypeDetailPanel(System.Type)">
            <summary>
            显示类型详情
            </summary>
            <param name="showType"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLookDescription.ShowTypeListPanel(System.String)">
            <summary>
            显示类型列表面板
            </summary>
            <param name="showNamespace">要显示的名称空间</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLookDescription.ShowPropertyListPanel(MangoMis.Frame.MangoApi.TypeDescription)">
            <summary>
            显示属性列表面板
            </summary>
            <param name="typeDescription"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLookDescription.ShowMethodListPanel(MangoMis.Frame.MangoApi.TypeDescription)">
            <summary>
            显示函数列表面板
            </summary>
            <param name="typeDescription"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLookDescription.AppendTypeInfoToContainer(MangoMis.Frame.WebPage.MgSimpleControl.ISimpleHtmlContainer,System.Type)">
            <summary>
            向一个容器中添加类型的描述链接
            </summary>
            <param name="container">容器</param>
            <param name="type">类型</param>
        </member>
        <member name="T:MangoMis.Frame.VirPages.PageAutoApi">
            <summary>
            MangoAPI管理端接口
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.PageAutoApi.LocalDebug">
            <summary>
            是否使用本地调试状态,58175可用
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageAutoApi.GetAll">
            <summary>
            获取全部程序集,类
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageAutoApi.GetMenu">
            <summary>
            获取绑定菜单的项(程序集,类)
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageAutoApi.GetDetail">
            <summary>
            获取类详情(程序集信息,方法,字段)
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageAutoApi.RefreshData">
            <summary>
            刷新程序集.用于新增
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageAutoApi.ReBulid">
            <summary>
            重新加载
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageAutoApi.GetAssApi">
            <summary>
            获取程序集或者class中的所有接口
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageAutoApi.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageAutoApi.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageAutoApi.CurrentIsPageShowButton">
            <summary>
            页面类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageAutoApi.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageAutoApi.PostData">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageAutoApi.WriteBigList">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageAutoApi.Ajax(System.String,System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            AJAX运行事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageAutoApi.GetPanel_ApiController(MangoMis.Frame.MangoApi.ApiControllerInfo)">
            <summary>
            建立API控制器详情
            </summary>
            <param name="apiControllerInfo"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageAutoApi.List_ApiController">
            <summary>
            建立API控制器列表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageAutoApi.List_ApiMethod(System.String)">
            <summary>
            建立API控制器API列表
            </summary>
            <param name="apiControllerName"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageAutoApi.List_MethodParams(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="apiControllerName"></param>
            <param name="methodKey"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageAutoApi.GetPanel_ObjectInfo(MangoMis.Frame.MangoApi.ApiTypeInfo,MangoMis.Frame.MangoApi.MethodDescription)">
            <summary>
            
            </summary>
            <param name="typeInfo"></param>
            <param name="methodDescription"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageAutoApi.build_help">
            <summary>
            
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.Expand">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Expand.ToJson(System.Object)">
            <summary>
            扩展 object类型输出json
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.VirPages.PageLogAllot">
            <summary>
            日志内容分配
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLogAllot.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageLogAllot.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLogAllot.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLogAllot.Ajax(System.String,System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            AJAX运行事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLogAllot.BuildEditAllot">
            <summary>
            开始编辑
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageLogAllot.EditPanelForDetail">
            <summary>
            用于编辑详情的面板(Ajax提交时可能使用,所以预先定义)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageLogAllot.EditPanelForMessageKey">
            <summary>
            用于编辑自定义消息 的面板(Ajax提交时可能使用,所以预先定义)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageLogAllot.EditPanelForTotalKey">
            <summary>
            用于编辑完整消息 的面板(Ajax提交时可能使用,所以预先定义)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLogAllot.DetailPost(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            提交详情的回调
            </summary>
            <param name="valueDictionary"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLogAllot.MessageKeyPost(MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleOperate,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            提交自定义消息的回调
            </summary>
            <param name="operate"></param>
            <param name="valueDictionary"></param>
            <param name="recordKey"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLogAllot.TotalKeyPost(MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleOperate,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            提交全部消息的回调
            </summary>
            <param name="operate"></param>
            <param name="valueDictionary"></param>
            <param name="recordKey"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.VirPages.PageStoreErrorSetting">
            <summary>
            系统帮助业绩
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageStoreErrorSetting.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageStoreErrorSetting.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageStoreErrorSetting.CurrentIsPageShowButton">
            <summary>
            页面类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageStoreErrorSetting.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageStoreErrorSetting.Ajax(System.String,System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            AJAX运行事件
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.PageConfigLoadPath">
            <summary>
            查看应该从CC读取的配置读取位置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageConfigLoadPath.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageConfigLoadPath.IsNewAjax">
            <summary>
            是否使用新的Ajax(返回值为VirtualAjaxResult)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageConfigLoadPath.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageConfigLoadPath.AjaxNew(System.String,System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            与MgSimpleAjaxButton配合使用AJAX运行事件,如果要启用此事件而不是使用老的.需要重写IsNewAjax返回True
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageConfigLoadPath.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageConfigLoadPath.build_button">
            <summary>
            建立按钮
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageConfigLoadPath.ConfigItemList">
            <summary>
            显示缓存列表https://wiki.517cdn.com/index.php/WorkInfo~20190305144149~SqlServer%E6%9D%83%E9%99%90%E8%AF%B4%E6%98%8E
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.PageIndexData">
            <summary>
            页面缓存
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageIndexData.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageIndexData.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageIndexData.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="T:MangoMis.Frame.VirPages.VirtualPageGroup">
            <summary>
            Fram中的虚拟页面的分组
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.VirtualPageShowButtonType">
            <summary>
            页面类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.VirtualPageShowButtonType.SHOW_SETTING_BUTTON">
            <summary>
            显示配置按钮
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.VirtualPageShowButtonType.UNSHOW_SETTING_BUTTON">
            <summary>
            不显示配置按钮
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.IUnAutoInitVirtualPage">
            <summary>
            不进行自动加载的虚拟页面.所有不需要自动初始化的虚拟页面都继承于此接口
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.IVirtualPage">
            <summary>
            虚拟页面的配置(子类中一定要有一个Const的PageUrl)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.IVirtualPage.CurrentUrl">
            <summary>
            进入当前页面的网页路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.IVirtualPage.CurrentTitle">
            <summary>
            本页面标题
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.IVirtualPage.Disorder">
            <summary>
            页面显示排序.没什么用
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.IVirtualPage.CurrentVirtualPageGroup">
            <summary>
            当前页面的属于什么组
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.IVirtualPage.CurrentIsPageShowButton">
            <summary>
            当前页面是否显示按钮
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.IVirtualPage.div">
            <summary>
            基础DIV
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.IHandlerExecute">
            <summary>
            [放弃.貌似没有用到的地方]Hanler处理应用程序接口
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.IHandlerExecute.LoginVistor">
            <summary>
            单点实例
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.IHandlerExecute.UseLogin">
            <summary>
            是否开启登陆
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.IHandlerExecute.Execute">
            <summary>
            主要运行程序
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.PageCreateCodeFile">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageCreateCodeFile.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageCreateCodeFile.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageCreateCodeFile.CurrentIsPageShowButton">
            <summary>
            页面类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageCreateCodeFile.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageCreateCodeFile.build_button">
            <summary>
            建立按钮
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.PageAutoInterface">
            <summary>
            系统帮助业绩
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageAutoInterface.LoadVoid">
            <summary>
            加载时的运行函数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageAutoInterface.UnLoadVoid">
            <summary>
            卸载时的函数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageAutoInterface.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageAutoInterface.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageAutoInterface.CurrentIsPageShowButton">
            <summary>
            页面类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageAutoInterface.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageAutoInterface.Ajax(System.String,System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            AJAX运行事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageAutoInterface.build_button">
            <summary>
            建立按钮
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.VirtualPageGroupType">
            <summary>
            Fram中的虚拟页面的分组
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.VirtualPageGroupType.None">
            <summary>
            无分组
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.VirtualPageGroupType.SiteSetting">
            <summary>
            站点设置类
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.VirtualPageGroupType.CacheManager">
            <summary>
            缓存管理类
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.VirtualPageGroupType.LogInfo">
            <summary>
            日志类
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.VirtualPageGroupType.PageManager">
            <summary>
            页面管理
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.VirtualPageGroupType.OldButton">
            <summary>
            老版按键
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.VirtualPageGroupType.Special">
            <summary>
            特殊配置
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.VirtualPageGroupType.WcfUse">
            <summary>
            WCF相关
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.VirtualPageGroupType.Obsolete">
            <summary>
            已经过时
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.PageLookFile">
            <summary>
            查看当前所有文件的页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLookFile.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageLookFile.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageLookFile.CurrentIsPageShowButton">
            <summary>
            页面类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLookFile.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLookFile.CheckFileIsTrue(System.String)">
            <summary>
            检查是否是需要展示的文件
            </summary>
            <param name="filePath">文件名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLookFile.BuildCurrentDirectory(System.String,System.String,System.String)">
            <summary>
            用于建立当前目录结构的列表
            </summary>
            <param name="currentPhysicalDirectoryPath">当前目录物理地址</param>
            <param name="prefixPathUrl">当前目录的前置目录(以|结尾.作为分割符)</param>
            <param name="nextCheckedDirectoryName">当前目录中已经选中的目录名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLookFile.BasePanel">
            <summary>
            建立基础列表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLookFile.build_button">
            <summary>
            建立按钮
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.PageSettingPage">
            <summary>
            配置页面
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.PageSettingPage.SettingPageName">
            <summary>
            [03].网站配置页面名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageSettingPage.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageSettingPage.CurrentIsPageShowButton">
            <summary>
            页面类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageSettingPage.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageSettingPage.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageSettingPage.build_button">
            <summary>
            建立按钮
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.VirtualPageUse">
            <summary>
            当前使用的虚拟页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.VirtualPageUse.PageClassFullTypeName">
            <summary>
            虚拟页面完整类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.VirtualPageUse.PageClassName">
            <summary>
            虚拟页面名(显示用)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.VirtualPageUse.IsOpened">
            <summary>
            是否开启 0 默认(开启),1 开启 2 关闭
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.SysPageCurrentLoadedPage">
            <summary>
            当前系统中加载的对应页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.SysPageCurrentLoadedPage.VirtualPageUseCache">
            <summary>
            当前使用的虚拟页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.SysPageCurrentLoadedPage.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.SysPageCurrentLoadedPage.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.SysPageCurrentLoadedPage.CurrentPageClassName">
            <summary>
            当前使用的虚拟页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.SysPageCurrentLoadedPage.InitAutoVirtualPage">
            <summary>
            加载
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.SysPageCurrentLoadedPage.CurrentIsPageShowButton">
            <summary>
            页面类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.SysPageCurrentLoadedPage.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.SysPageCurrentLoadedPage.build_button">
            <summary>
            建立按钮
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.WriteScriptItem">
            <summary>
            向页面使用Document.Write写入的脚本
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.WriteScriptItem.ScriptName">
            <summary>
            脚本命名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.WriteScriptItem.Memo">
            <summary>
            脚本描述
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.WriteScriptItem.ScriptText">
            <summary>
            脚本文本
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.WriteScriptUse">
            <summary>
            当前站点关于脚本的引用
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.WriteScriptUse.ScriptName">
            <summary>
            脚本命名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.WriteScriptUse.IsOpened">
            <summary>
            是否开启 0 默认(开启),1 开启 2 关闭
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.WriteScriptPageUse">
            <summary>
            当前站点的页面关于脚本的引用
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.WriteScriptPageUse.ScriptAndPageName">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.WriteScriptPageUse.ScriptName">
            <summary>
            脚本命名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.WriteScriptPageUse.PageClassName">
            <summary>
            页面类型名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.WriteScriptPageUse.IsOpened">
            <summary>
            是否开启 0 默认(开启),1 开启 2 关闭
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.PageWriteScript">
            <summary>
            系统帮助业绩
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageWriteScript.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageWriteScript.ScriptItemStore">
            <summary>
            当前所有的Javascript脚本
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageWriteScript.ScriptUseStore">
            <summary>
            当前使用的JavaScript脚本
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageWriteScript.ScriptPageUseStore">
            <summary>
            当前使用的JavaScript脚本
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageWriteScript.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageWriteScript.CurrentIsPageShowButton">
            <summary>
            页面类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageWriteScript.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageWriteScript.LoadVoid">
            <summary>
            加载时的运行函数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageWriteScript.UnLoadVoid">
            <summary>
            卸载时的函数
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageWriteScript.Ajax(System.String,System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            AJAX运行事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageWriteScript.build_button">
            <summary>
            建立按钮
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.PageLookDllVersion">
            <summary>
            系统帮助业绩
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLookDllVersion.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageLookDllVersion.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageLookDllVersion.CurrentIsPageShowButton">
            <summary>
            页面类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageLookDllVersion.IsNewAjax">
            <summary>
            是否使用新的Ajax(返回值为VirtualAjaxResult)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLookDllVersion.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLookDllVersion.AjaxNew(System.String,System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            与MgSimpleAjaxButton配合使用AJAX运行事件,如果要启用此事件而不是使用老的.需要重写IsNewAjax返回True
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLookDllVersion.build_button">
            <summary>
            建立按钮
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.PageConfigHelper">
            <summary>
            系统帮助业绩
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageConfigHelper.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageConfigHelper.CurrentIsPageShowButton">
            <summary>
            页面类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageConfigHelper.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageConfigHelper.build_button">
            <summary>
            建立按钮
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.Page_ErrorMessage">
            <summary>
            显示错误信息的页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_ErrorMessage.WriteErrorMessagePage(System.String)">
            <summary>
            转换成简易的错误信息页面
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_ErrorMessage.WriteHtmlPage(System.String)">
            <summary>
            转换成简易的HTML信息页面
            </summary>
            <param name="html"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_ErrorMessage.#ctor">
            <summary>
            显示错误信息的页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_ErrorMessage.AppendMessage(System.String)">
            <summary>
            添加错误消息
            </summary>
            <param name="msg">显示的消息</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_ErrorMessage.AppendHtml(System.String)">
            <summary>
            添加HTML内容
            </summary>
            <param name="html">HTML代码</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_FoundationDbInfoStoreConfig.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.Page_FoundationDbInfoStoreConfig.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_FoundationDbInfoStoreConfig.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_FoundationDbInfoStoreConfig.Ajax(System.String,System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            AJAX运行事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_FoundationDbInfoStoreConfig.base_list">
            <summary>
            显示缓存列表
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.Page_FoundationTable">
            <summary>
            基础配置页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_FoundationTable.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.Page_FoundationTable.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_FoundationTable.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_FoundationTable.AjaxNew(System.String,System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            与MgSimpleAjaxButton配合使用AJAX运行事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_FoundationTable.base_list">
            <summary>
            显示缓存列表
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.PageFoundationInfo">
            <summary>
            基础配置页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageFoundationInfo.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageFoundationInfo.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageFoundationInfo.RedisBuilder">
            <summary>
            记录Redis访问记录
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageFoundationInfo.AppendLog(System.String,MangoMis.Frame.DB.Info.DBInfo,System.String)">
            <summary>
            添加一个日志记录
            </summary>
            <param name="keyNameBefore"></param>
            <param name="logText"></param>
            <param name="dbInfo"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageFoundationInfo.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageFoundationInfo.base_list">
            <summary>
            显示缓存列表
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.PageCustomLogConfig">
            <summary>
            页面缓存
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageCustomLogConfig.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageCustomLogConfig.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageCustomLogConfig.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageCustomLogConfig.Ajax(System.String,System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            AJAX运行事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageCustomLogConfig.Openclose">
            <summary>
            提交编辑
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageCustomLogConfig.base_list">
            <summary>
            显示缓存列表
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.Page_WCFConfig">
            <summary>
            页面缓存
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_WCFConfig.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_WCFConfig.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="P:MangoMis.Frame.VirPages.Page_WCFConfig.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_WCFConfig.base_list">
            <summary>
            显示缓存列表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_WCFConfig.P_NAME(System.String)">
            <summary>
            取得一个NAME参数
            </summary>
            <param name="value">VALUE</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_WCFConfig.P_BTNVALUE(System.String)">
            <summary>
            取得一个CVALUE参数
            </summary>
            <param name="value">VALUE</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_WCFConfig.P_BTNKEY(System.String)">
            <summary>
            取得一个CKEY参数
            </summary>
            <param name="value">VALUE</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_WCFConfig.P_ACT(System.String)">
            <summary>
            取得一个ACT参数
            </summary>
            <param name="value">VALUE</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.VirPages.Page_WCFConfig.WORD">
            <summary>
            网页提交的事件参数值与参数名等
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.PageStoreCache">
            <summary>
            页面缓存
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageStoreCache.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageStoreCache.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageStoreCache.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageStoreCache.BuildHelp">
            <summary>
            建立帮助信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageStoreCache.build_cache_button(System.String)">
            <summary>
            建立进入详情之后的按钮
            </summary>
            <param name="cacheName"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageStoreCache.Ajax(System.String,System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            AJAX运行事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageStoreCache.Edit">
            <summary>
            提交编辑
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.PageStoreCache.StoreShowModel">
            <summary>
            用于显示缓存列表的实体
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.PageStoreCache.StoreShowModel.CacheKey">
             <summary>
            缓存索引
             </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.PageStoreCache.StoreShowModel.Title">
            <summary>
            标题 
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.PageStoreCache.StoreShowModel.IsInitEnd">
            <summary>
            是否已经初始化结束
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.PageStoreCache.StoreShowModel.InitInfo">
            <summary>
            初化的状态信息
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.PageStoreCache.StoreShowModel.LoadInfo">
            <summary>
            加载信息
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.PageStoreCache.StoreShowModel.RecordNumber">
            <summary>
            记录数量
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.PageStoreCache.StoreShowModel.LastReadTime">
            <summary>
            上次读取时间
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageStoreCache.P_NAME(System.String)">
            <summary>
            取得一个NAME参数
            </summary>
            <param name="value">VALUE</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageStoreCache.P_BTNVALUE(System.String)">
            <summary>
            取得一个CVALUE参数
            </summary>
            <param name="value">VALUE</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageStoreCache.P_BTNKEY(System.String)">
            <summary>
            取得一个CKEY参数
            </summary>
            <param name="value">VALUE</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageStoreCache.P_ACT(System.String)">
            <summary>
            取得一个ACT参数
            </summary>
            <param name="value">VALUE</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.VirPages.PageStoreCache.Word">
            <summary>
            网页提交的事件参数值与参数名等
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.Page_fileCacheLoad">
            <summary>
            页面缓存
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.Page_fileCacheLoad.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_fileCacheLoad.AppendFileCache(System.String,MangoMis.Frame.Model.ICacheLoader)">
            <summary>
            添加一个新的文件缓存
            </summary>
            <param name="cacheName"></param>
            <param name="cacheLoader"></param>
        </member>
        <member name="P:MangoMis.Frame.VirPages.Page_fileCacheLoad.Caches">
            <summary>
            不应该放这.关于老缓存暂时不想弄.就随便放了
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_fileCacheLoad.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_fileCacheLoad.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_fileCacheLoad.get_container_value(MangoMis.Frame.Helper.TT_H_Generic,System.Object)">
            <summary>
            取得值
            </summary>
            <param name="container"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_fileCacheLoad.refresh_entity(System.String,System.String)">
            <summary>
            显示缓存列表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_fileCacheLoad.entity_log(System.String,System.String)">
            <summary>
            显示缓存列表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_fileCacheLoad.base_list">
            <summary>
            显示缓存列表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_fileCacheLoad.build_cache_button(System.String)">
            <summary>
            建立进入详情之后的按钮
            </summary>
            <param name="cache_name"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_fileCacheLoad.P_NAME(System.String)">
            <summary>
            取得一个NAME参数
            </summary>
            <param name="value">VALUE</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_fileCacheLoad.P_BTNVALUE(System.String)">
            <summary>
            取得一个CVALUE参数
            </summary>
            <param name="value">VALUE</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_fileCacheLoad.P_BTNKEY(System.String)">
            <summary>
            取得一个CKEY参数
            </summary>
            <param name="value">VALUE</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_fileCacheLoad.P_ACT(System.String)">
            <summary>
            取得一个ACT参数
            </summary>
            <param name="value">VALUE</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.VirPages.Page_fileCacheLoad.WORD">
            <summary>
            网页提交的事件参数值与参数名等
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.Page_Store">
            <summary>
            页面缓存
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_Store.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_Store.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="P:MangoMis.Frame.VirPages.Page_Store.IsNewAjax">
            <summary>
            是否使用新的Ajax(返回值为VirtualAjaxResult)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_Store.AjaxNew(System.String,System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            与MgSimpleAjaxButton配合使用AJAX运行事件,如果要启用此事件而不是使用老的.需要重写IsNewAjax返回True
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.Page_Store.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_Store.get_container_value(MangoMis.Frame.Helper.TT_H_Generic,System.Object)">
            <summary>
            取得值
            </summary>
            <param name="container"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_Store.base_list">
            <summary>
            显示缓存列表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_Store.build_cache_button(System.String)">
            <summary>
            建立进入详情之后的按钮
            </summary>
            <param name="cacheName"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_Store.P_NAME(System.String)">
            <summary>
            取得一个NAME参数
            </summary>
            <param name="value">VALUE</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_Store.P_BTNVALUE(System.String)">
            <summary>
            取得一个CVALUE参数
            </summary>
            <param name="value">VALUE</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_Store.P_BTNKEY(System.String)">
            <summary>
            取得一个CKEY参数
            </summary>
            <param name="value">VALUE</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_Store.P_ACT(System.String)">
            <summary>
            取得一个ACT参数
            </summary>
            <param name="value">VALUE</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.VirPages.Page_Store.WORD">
            <summary>
            网页提交的事件参数值与参数名等
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.Page_Cache">
            <summary>
            页面缓存
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_Cache.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.Page_Cache.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_Cache.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_Cache.build_cache_button(System.String)">
            <summary>
            建立进入详情之后的按钮
            </summary>
            <param name="cache_name"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_Cache.check_post_value(MangoMis.Frame.Cache.Site_Cache_Config)">
            <summary>
            检查相关的提交配置
            </summary>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_Cache.get_container_value(MangoMis.Frame.Helper.TT_H_Generic,System.Object)">
            <summary>
            取得值
            </summary>
            <param name="container"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_Cache.base_list">
            <summary>
            显示缓存列表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_Cache.bool_status(System.Boolean,System.String,System.String)">
            <summary>
            Bool值.显示颜色标签
            </summary>
            <param name="isOpen"></param>
            <param name="true_string"></param>
            <param name="false_string"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_Cache.P_NAME(System.String)">
            <summary>
            取得一个NAME参数
            </summary>
            <param name="value">VALUE</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_Cache.P_BTNVALUE(System.String)">
            <summary>
            取得一个CVALUE参数
            </summary>
            <param name="value">VALUE</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_Cache.P_BTNKEY(System.String)">
            <summary>
            取得一个CKEY参数
            </summary>
            <param name="value">VALUE</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_Cache.P_ACT(System.String)">
            <summary>
            取得一个ACT参数
            </summary>
            <param name="value">VALUE</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.VirPages.Page_Cache.WORD">
            <summary>
            网页提交的事件参数值与参数名等
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_Crosshtml.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.Page_Crosshtml.CurrentIsPageShowButton">
            <summary>
            页面类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_Crosshtml.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="T:MangoMis.Frame.VirPages.PageLookLog">
            <summary>
            查看日志
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLookLog.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageLookLog.CurrentVirtualPageGroup">
            <summary>
            当前页面的分组
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageLookLog.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid"></param>
            <param name="power"></param>
        </member>
        <member name="T:MangoMis.Frame.VirPages.PageMain">
            <summary>
            当前的WCF接口连接的映射
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageMain.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageMain.Ajax(System.String,System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            AJAX运行事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.PageMain.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            主要函数 
            </summary>
            <param name="userid">1111</param>
            <param name="power"></param>
        </member>
        <member name="P:MangoMis.Frame.VirPages.PageMain.CurrentIsPageShowButton">
            <summary>
            当前类型
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.Page_PageWebParamsAction">
            <summary>
            一些系统参数说明
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_PageWebParamsAction.#ctor">
            <summary>
            映射管理页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.Page_PageWebParamsAction.CurrentIsPageShowButton">
            <summary>
            页面类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.Page_PageWebParamsAction.ParamCollection">
            <summary>
            当前参数说明集合
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_PageWebParamsAction.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            运行事件
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.Page_SiteInit">
            <summary>
            初始化站点的页面
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_SiteInit.PageUrl">
            <summary>
            页面名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_SiteInit.PageTitle">
            <summary>
            页面名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_SiteInit.#ctor">
            <summary>
            初始化页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.Page_SiteInit.CurrentIsPageShowButton">
            <summary>
            不显示
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_SiteInit.Page_Load(System.Object,System.EventArgs)">
            <summary>
            PageLoad
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_SiteInit.Init_File_Path">
            <summary>
            初始化文件所在的路径
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_SiteInit.CheckPath(System.String)">
            <summary>
            检查并创建文件夹
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_SiteInit.read_text(System.String)">
            <summary>
            读取文件文本
            </summary>
            <param name="path">The path.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_SiteInit.write_text(System.String,System.String)">
            <summary>
            写入文本
            </summary>
            <param name="path">The path.</param>
            <param name="text">The text.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_SiteInit.read_config_file_path">
            <summary>
            判断文件是否存在.并且判断文件夹是否可写
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_SiteInit.Read_Config">
            <summary>
            加载配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_SiteInit.Write_Config">
            <summary>
            写入配置
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.Page_SiteInit.Init_Config_File_Path">
            <summary>
            站点初始化配置所在文件路径
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.Page_SiteInit.Is_Use_Apistatic">
            <summary>
            是否使用Apistatic取得参数(默认是true)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.Page_SiteInit.Url_Apistatic">
            <summary>
            ApiStatic的网址(默认是http://apistatic248.517.cn/v2.0/) 注意带"/"
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.Page_SiteInit.Is_Use_Login">
            <summary>
            是否使用登陆操作(默认true)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.Page_SiteInit.Path_Writedir">
            <summary>
            默认配置文件夹(默认是~/writedir/) 注意带"/"
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.Page_SiteInit.Dnzxf_Password">
            <summary>
            默认密码
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.Page_SiteInit.Page_Template">
            <summary>
            默认文件模版
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_SiteInit.append_Use_Apistatic_Cell(System.Web.UI.WebControls.Table)">
            <summary>
            添加是否使用APIStatic Radio
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_SiteInit.append_Url_Apistatic_Cell(System.Web.UI.WebControls.Table)">
            <summary>
            添加ApiStatic Url
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_SiteInit.append_Use_Login_Cell(System.Web.UI.WebControls.Table)">
            <summary>
            添加是否使用登陆
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_SiteInit.append_Path_Writedir_Cell(System.Web.UI.WebControls.Table)">
            <summary>
            添加WriteDir地址
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_SiteInit.append_PasswordEdit_Cell(System.Web.UI.WebControls.Table)">
            <summary>
            添加密码
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_SiteInit.append_Password_Cell(System.Web.UI.WebControls.Table)">
            <summary>
            密码输入
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_SiteInit.append_Message(System.Web.UI.WebControls.Table,System.String)">
            <summary>
            添加文本消息
            </summary>
            <param name="table"></param>
            <param name="msg"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_SiteInit.append_Submit_Button(System.Web.UI.WebControls.Table)">
            <summary>
            添加提交按钮
            </summary>
            <param name="table"></param>
        </member>
        <member name="T:MangoMis.Frame.VirPages.Virtual_Response_Builder">
            <summary>
            虚拟Response建立的委托
            </summary>
            <param name="sender"></param>
            <param name="call_param"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.VirPages.Auto_Response">
            <summary>
            自动返回数据的页面
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Auto_Response._auto_Responses">
            <summary>
            自动运行的相关页面
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.Auto_Response.Auto_Responses">
            <summary>
            自动运行的相关页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Auto_Response.Append_Page(System.String,MangoMis.Frame.VirPages.Virtual_Response_Builder)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.VirPages.Auto_Response_Page">
            <summary>
            自动调用页面的实体类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Auto_Response_Page.#ctor">
            <summary>
            创建一个自动调用的实例
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Auto_Response_Page.ProcessRequest(System.Web.HttpContext)">
            <summary>
            调用
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:MangoMis.Frame.VirPages.Auto_Response_Page.IsReusable">
            <summary>
            获取一个值，该值指示其他请求是否可以使用 <see cref="T:System.Web.IHttpHandler" /> 实例。
            </summary>
            <value><c>true</c> if this instance is reusable; otherwise, <c>false</c>.</value>
            <returns>如果 <see cref="T:System.Web.IHttpHandler" /> 实例可再次使用，则为 true；否则为 false。</returns>
        </member>
        <member name="T:MangoMis.Frame.VirPages.VirtualAjaxResult">
            <summary>
            虚拟页面调用Ajax时的返回值.(重写AjaxNew时的返回值)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.VirtualAjaxResult.#ctor">
            <summary>
            msg=运行成功.
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.VirtualAjaxResult.#ctor(System.Object)">
            <summary>
            data = returnData 无Message
            </summary>
            <param name="returnData">返回数据内容</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.VirtualAjaxResult.#ctor(System.String)">
            <summary>
            msg= message
            </summary>
            <param name="message">返回弹出消息内容</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.VirtualAjaxResult.#ctor(System.Object,System.String)">
            <summary>
            data = returnData msg= message
            </summary>
            <param name="returnData">返回数据内容</param>
            <param name="message">返回弹出消息内容</param>
        </member>
        <member name="P:MangoMis.Frame.VirPages.VirtualAjaxResult.data">
            <summary>
            返回数据内容
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.VirtualAjaxResult.nomsg">
            <summary>
            无弹出消息(默认弹出消息)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.VirtualAjaxResult.msg">
            <summary>
            弹出消息内容
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.DNZxf_Default_Page">
            <summary>
            虚拟页面实例
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.DNZxf_Default_Page.DNZxf_Page_MainPage">
            <summary>
            默认首页
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.DNZxf_Default_Page.Filter_Type_Start">
            <summary>
            属性查询条件的开始字符串
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.DNZxf_Default_Page.Filter_Value_Start">
            <summary>
            属性查询内容的开始字符串
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DNZxf_Default_Page.Disorder">
            <summary>
            当前页面的按钮排序
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DNZxf_Default_Page.Is_Check_Power">
            <summary>
            是否检查权限
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.#ctor(System.String,System.Boolean)">
            <summary>
            虚拟页面实例
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.#ctor(System.String,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            虚拟页面实例
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            虚拟页面实例
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.#ctor(System.String,System.String,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            虚拟页面实例
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.InitCurrent(System.Boolean)">
            <summary>
            检查权限
            </summary>
            <param name="isCheckPower"></param>
        </member>
        <member name="F:MangoMis.Frame.VirPages.DNZxf_Default_Page._lowerPower">
            <summary>
            可查看的Power
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DNZxf_Default_Page.CurrentIsPageShowButton">
            <summary>
            页面类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DNZxf_Default_Page.IsShowManagerPanel">
            <summary>
            是否显示管理面板
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.SystemInfoPanelToPage(System.String)">
            <summary>
            添加管理员控件.(管理员指是的CommonPowerUser)CommonFrame.IsCommonPowerUser
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.GetSystemInfoPanel">
            <summary>
            取得系统信息控件
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.MainAction(System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            运行事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.Ajax(System.String,System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            与MgSimpleAjaxButton配合使用AJAX运行事件(返回值将做为Json的Obj来输出,输出格式 new { obj = 返回值 , flag=100 , debug=debug信息 })
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.AjaxNew(System.String,System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            与MgSimpleAjaxButton配合使用AJAX运行事件,如果要启用此事件而不是使用老的.需要重写IsNewAjax返回True
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DNZxf_Default_Page.IsNewAjax">
            <summary>
            是否使用新的Ajax(返回值为VirtualAjaxResult)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.Error_Message(System.String)">
            <summary>
            显示错误消息
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.Success_Message(System.String)">
            <summary>
            显示成功消息
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.Tip_Message(System.String)">
            <summary>
            显示提示消息
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.Message(System.String)">
            <summary>
            显示错误消息
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.Show_No_Power">
            <summary>
            显示无权限
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.Append(System.Web.UI.Control)">
            <summary>
            添加控件
            </summary>
            <param name="ctrl"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.Filter_Control(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="F:MangoMis.Frame.VirPages.DNZxf_Default_Page.CurrentTable">
            <summary>
            当前编辑的Table
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.DNZxf_Default_Page.CurrentTablePanel">
            <summary>
            当前编辑的Table的所在Panel
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.Table_Begin(System.String,System.String)">
            <summary>
            开始建立一个Table
            </summary>
            <param name="title"></param>
            <param name="tableTheme"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.Table_Begin(System.Web.UI.Control,System.String)">
            <summary>
            开始建立一个Table
            </summary>
            <param name="titleControl">标题控件</param>
            <param name="tableTheme"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.Table_AddTitle(System.Object,System.Int32)">
            <summary>
            添加一个标题
            </summary>
            <param name="title"></param>
            <param name="width"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.Table_AddRow(System.Object[])">
            <summary>
            添加一行
            </summary>
            <param name="columns"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.Table_End">
            <summary>
            结束一个Table
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.AppendTable(System.String,System.Collections.Generic.List{MangoMis.Frame.Helper.TT_H_Table_Item},System.Collections.Generic.List{System.Collections.Generic.List{MangoMis.Frame.Helper.TT_H_Table_Item}},System.String)">
            <summary>
            添加一个列表
            </summary>
            <param name="title"></param>
            <param name="columns"></param>
            <param name="rows"></param>
            <param name="tableTheme"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.Append_HiddenAction(System.String,System.String)">
            <summary>
            添加提交函数控件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.Append_Submit">
            <summary>
            添加提交按钮
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.Value(System.String)">
            <summary>
            取得传参的值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.KParam``1(System.String,``0)">
            <summary>
            创建一个A标签的参数
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.A(System.String,System.Collections.Generic.KeyValuePair{System.String,System.String}[])">
            <summary>
            取得A标签控件
            </summary>
            <param name="text">显示内容</param>
            <param name="url_params">参数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.A(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.String}[])">
            <summary>
            取得A标签控件
            </summary>
            <param name="text">显示内容</param>
            <param name="url"></param>
            <param name="url_params">参数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.A_Big(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.String}[])">
            <summary>
            取得A标签控件
            </summary>
            <param name="text">显示内容</param>
            <param name="url"></param>
            <param name="url_params">参数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.Current_A_Big(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.String}[])">
            <summary>
            取得A标签控件
            </summary>
            <param name="text">显示内容</param>
            <param name="url"></param>
            <param name="url_params">参数</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.A_Big(System.String,System.Collections.Generic.KeyValuePair{System.String,System.String}[])">
            <summary>
            取得A标签控件
            </summary>
            <param name="text">显示内容</param>
            <param name="url_params">参数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.SimpleAjaxButton(System.String,System.String,System.String,System.Collections.Generic.List{MangoMis.Frame.Helper.KeyText})">
            <summary>
            取得Ajax提交按钮
            </summary>
            <param name="action">operate参数</param>
            <param name="text">显示内容</param>
            <param name="callback">JavaSctipt回调函数</param>
            <param name="postParams">参数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.AppendDetail(System.String,System.Int32)">
            <summary>
            添加一个详情
            </summary>
            <param name="title"></param>
            <param name="with"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.Seletion(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.String}[])">
            <summary>
            单选分组
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="radio_items"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.Radio_Item(System.String,System.String,System.String,System.Boolean)">
            <summary>
            单选的组件
            </summary>
            <param name="txt"></param>
            <param name="name"></param>
            <param name="value"></param>
            <param name="is_check"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.Radio_Group(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.String}[])">
            <summary>
            单选分组
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="radio_items"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.Radio_Group(System.String,System.Boolean,System.Collections.Generic.KeyValuePair{System.String,System.Boolean}[])">
            <summary>
            单选分组
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="radio_items"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.TextBox(System.String,System.Object)">
            <summary>
            得到一个页面输入控件
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.Include(System.String[])">
            <summary>
            添加include的JS[默认会加载三个Jquery,Mango,MangoV2]
            </summary>
            <param name="jsname_arr"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.DocumentReady(System.String)">
            <summary>
            添加Document.Ready事件
            </summary>
            <param name="js"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.Get(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Ajax取得数据
            </summary>
            <param name="url">地址</param>
            <param name="action">取得方法</param>
            <param name="postData">提交数据</param>
            <param name="callback">返回值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.CurrentGet(System.String,System.Collections.Generic.List{MangoMis.Frame.Helper.KeyText},System.String)">
            <summary>
            Ajax取得数据
            </summary>
            <param name="action">取得方法</param>
            <param name="datas">提交数据</param>
            <param name="callback">返回值</param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.VirPages.DNZxf_Default_Page.IsShowSystemPanel">
            <summary>
            是否显示系统表格.默认显示
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.DNZxf_Default_Page.CurrentIsCanRedirect">
            <summary>
            当前页面是否可跳转.是继承于父类的IsCanRedirectPage 的值.因为需要赋值.所以在本地做一个Field
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DNZxf_Default_Page.IsCanRedirectPage">
            <summary>
            当前是否是可以进行页面跳转的页面(登陆时的页面跳转)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.Page_Load(System.Object,System.EventArgs)">
            <summary>
            基础PageLoad方法.会检查是否登陆.登陆会调用HaveUser.未登陆调用NoUser
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/20 13:32:35
            ************************************************************
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:MangoMis.Frame.VirPages.DNZxf_Default_Page.VirtualPageConfigItem">
            <summary>
            虚拟页面的配置类
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DNZxf_Default_Page.VirtualPageConfigItemName">
            <summary>
            虚拟页面的配置名,如果有相关的配置请在此处添加对应名称进行初始化
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.DNZxf_Default_Page.VirtualPageConfig">
            <summary>
            
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.VirtualPageConfig.GetConfigItem(System.String)">
            <summary>
            取得配置项,允许返回Null
            </summary>
            <param name="itemKey">配置键</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.VirtualPageConfig.GetConfigValue(System.String)">
            <summary>
            取得配置值,允许返回Null
            </summary>
            <param name="configItemKey"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.VirtualPageConfig.SetConfigValue(System.String,System.String)">
            <summary>
            取得配置值,允许返回Null
            </summary>
            <param name="configItemKey"></param>
            <param name="configItemValue"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.GetConfigValue(System.String,System.String)">
            <summary>
            取得配置值,允许返回Null
            </summary>
            <param name="url"></param>
            <param name="configItemKey"></param>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DNZxf_Default_Page.CurretnVirtualPageConfig">
            <summary>
            当前虚拟页面的一些配置(目前包括Helpid),允许返回Null ;
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.IsCurrentOperate(System.String)">
            <summary>
            判断是否是本页面内部操作(用于判断是否是编辑面板的操作)
            </summary>
            <param name="operate"></param>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DNZxf_Default_Page.EditPanelForDetail">
            <summary>
            用于编辑详情的面板
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.DetailPost(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            提交详情的回调
            </summary>
            <param name="valueDictionary"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.RunAjax(System.String,System.Int32,MangoMis.Frame.VirPages.Page_Power_Type)">
            <summary>
            内部调用Ajax入口
            </summary>
            <param name="operate">操作名(取自参数operate)</param>
            <param name="accessUserId">当前登陆人</param>
            <param name="havePower">当前登陆人拥有的系统权限</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.HaveUser">
            <summary>
            已有用户登陆调用的函数.需要重写
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.NoUser(MangoMis.Frame.Frame.UserState)">
            <summary>
            无用户登陆调用的函数.需要重写
            </summary>
            ************************************************************
            Create By  :Mr.zxf
            Create Date:2013/3/27 9:21:06
            ************************************************************
            <param name="noUserState">无用户时的状态</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.DNZxf_Default_Page.MessageJson(System.String)">
            <summary>
            返回一个带Message的Json
            </summary>
            <param name="msg"></param>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Interface_Url_Mapping_Type.Local">
            <summary>
            本地文件映射
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Interface_Url_Mapping_Type.SettingXML">
            <summary>
            配置XML映射
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Interface_Url_Mapping_Type.APIStatic">
            <summary>
            APIStatic读取映射
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.Page_Power_Type">
            <summary>
            虚拟配置页面的权限配置
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_Power_Type.NONE">
            <summary>
            无用户
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_Power_Type.NoUser">
            <summary>
            无用户
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_Power_Type.CommonUser">
            <summary>
            普通用户
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_Power_Type.UnCheckUser">
            <summary>
            未检查权限
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_Power_Type.CommonPower">
            <summary>
            通用管理员
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_Power_Type.SiteManager">
            <summary>
            站点管理员
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_Power_Type.SuperManager">
            <summary>
            超级管理员
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_Power_Type.LocalMachine">
            <summary>
            本机局域网
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.DN_HttpModule">
            <summary>
            自定义的HttpModule类.用于配置时配置HttpModule.不作其它用途
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DN_HttpModule.Name">
            <summary>
            类型名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DN_HttpModule.Type_Name">
            <summary>
            类型全名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DN_HttpModule.Dll_Name">
            <summary>
            DLL名(PS:DLL会分文件夹保存)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DN_HttpModule.MinVersion">
            <summary>
            最低版本号,此HTTPModule最低出现在什么版本的DLL中
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DN_HttpModule.Is_Using">
            <summary>
            是否使用
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DN_HttpModule.Using_Version">
            <summary>
            当前使用版本
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.DN_HttpModule_VersionDLL">
            <summary>
            自定义的HttpModule类.用于配置时配置HttpModule.不作其它用途
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DN_HttpModule_VersionDLL.Dll_Name">
            <summary>
            DLL名(PS:DLL会分文件夹保存)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DN_HttpModule_VersionDLL.Version">
            <summary>
            最低版本号,此HTTPModule最低出现在什么版本的DLL中
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.DN_HttpModule_VersionDLL.Is_Using">
            <summary>
            是否使用
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.Page_HttpModule">
            <summary>
            虚拟配置页面.配置HttpModule的加载
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.Page_HttpModule.Action_String">
            <summary>
            网页提交的事件参数值与参数名等
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_HttpModule.Action_String.ActionPage_Upload_DLL">
            <summary>
            页面:上传程序集
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_HttpModule.Action_String.ActionPage_Choose_DLL_Version">
            <summary>
            页面:选择程序集使用的版本
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_HttpModule.Action_String.ActionPage_Add_DLL_Http_Module">
            <summary>
            页面:添加程序集中的HttpModule
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_HttpModule.Action_String.Action_Upload_DLL">
            <summary>
            上传程序集
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_HttpModule.Action_String.Action_Choose_DLL_Version">
            <summary>
            选择程序集使用的版本
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_HttpModule.Action_String.Action_Add_DLL_Http_Module">
            <summary>
            添加程序集中的HttpModule
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_HttpModule.Action_String.Action_Load_Http_Module">
            <summary>
            加载HttpModule
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_HttpModule.Action_String.Action_UnLoad_Http_Module">
            <summary>
            卸载HttpModule
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_HttpModule.Action_String.Param_DLL_Version">
            <summary>
            参数名:程序集版本号
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_HttpModule.Action_String.Param_DLL_Name">
            <summary>
            参数名:DLL名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_HttpModule.Action_String.Param_Http_Module_Type_Name">
            <summary>
            参数名:HttpModule类型全名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_HttpModule.Action_String.Param_Http_Module_Name">
            <summary>
            参数名:HttpModule名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_HttpModule.Action_String.Param_Http_Module_LoadOrUnLoad_Type">
            <summary>
            参数名:加载或卸载HttpModule的类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_HttpModule.Action_String.Value_Only_Http_Module">
            <summary>
            参数值:单独的HttpModule
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_HttpModule.Action_String.Value_By_DLL_Name">
            <summary>
            参数值:通过程序集名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_HttpModule.Action_String.Value_ALL_DLL">
            <summary>
            参数值:所有的HttpModule
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_HttpModule.PageName">
            <summary>
            本操作对象实例名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_HttpModule.PageAction">
            <summary>
            本操作页面Action(地址栏参数.不可重复)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_HttpModule.onInit">
            <summary>
            配置初始化(只限运行一次)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_HttpModule._dirpath">
            <summary>
            HttpModule配置所在路径(相对于WriteDir)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.Page_HttpModule.HttpModuleConfigPath">
            <summary>
            HttpModule配置所在路径
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_HttpModule._dll_list_filename">
            <summary>
            内容是所有DLL列表的文件名(包括版本号)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_HttpModule._dll_httpmodule_filename">
            <summary>
            内容是所有DLL与HttpModule映射列表的文件名
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_HttpModule.action">
            <summary>
            内部使用的事件.通过GetKey取得后判断需要执行的事件,(通过Actions的内容来绑定执行内容)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.Page_HttpModule.DLL_Versions">
            <summary>
            程序集版本号列表
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.Page_HttpModule.MyHttpModules">
            <summary>
            HttpModule列表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_HttpModule._module_type">
            <summary>
            HttpModule的Type
            </summary>
        </member>
        <member name="F:MangoMis.Frame.VirPages.Page_HttpModule.setting_page">
            <summary>
            本地配置实例
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_HttpModule.ReadHttpModuleConfigs">
            <summary>
            从文件中读取模块配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_HttpModule.WriteHttpModuleConfigs">
            <summary>
            向文件中写入模块配置
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_HttpModule.WriteLog(System.String,System.String)">
            <summary>
            针对DLL写入操作日志
            </summary>
            <param name="dllname">DLL名</param>
            <param name="logtext">日志内容</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_HttpModule.UploadDLL(MangoMis.Frame.Model.VirtualPage)">
            <summary>
            上传DLL
            </summary>
            <param name="page">虚拟页面</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_HttpModule.UsingDLL(MangoMis.Frame.Model.VirtualPage,System.String,System.String)">
            <summary>
            使用DLL版本
            </summary>
            <param name="page">虚拟页面</param>
            <param name="dllname">DLL文件名</param>
            <param name="version">版本号</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_HttpModule.AppendHttpModule(MangoMis.Frame.Model.VirtualPage,System.String,System.String,System.String)">
            <summary>
            为程序集添加HttpModule
            </summary>
            <param name="page">虚拟页面</param>
            <param name="dllname">DLL文件名</param>
            <param name="moduletype">HttpModule完整类型名</param>
            <param name="modulename">HttpModule名称</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_HttpModule.UnLoadHttpModule(MangoMis.Frame.Model.VirtualPage,System.String,System.String)">
            <summary>
            卸载HttpModule
            </summary>
            <param name="page">虚拟页面</param>
            <param name="dllname">DLL文件名</param>
            <param name="moduletype">HttpModule完整类型名</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_HttpModule.UnloadAllLHttpModule_ByDll(MangoMis.Frame.Model.VirtualPage,System.String)">
            <summary>
            卸载程序集中所有的HttpModule
            </summary>
            <param name="page">虚拟页面</param>
            <param name="dllname">DLL文件名</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_HttpModule.UnloadAllLHttpModule(MangoMis.Frame.Model.VirtualPage)">
            <summary>
            卸载所有的HttpModule
            </summary>
            <param name="page">虚拟页面</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_HttpModule.LoadHttpModule(MangoMis.Frame.Model.VirtualPage,System.String,System.String)">
            <summary>
            加载HttpModule
            </summary>
            <param name="page">虚拟页面</param>
            <param name="dllname">DLL文件名</param>
            <param name="moduletype">HttpModule完整类型名</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_HttpModule.LoadAllLHttpModule_ByDll(MangoMis.Frame.Model.VirtualPage,System.String)">
            <summary>
            加载程序集中所有的HttpModule
            </summary>
            <param name="page">虚拟页面</param>
            <param name="dllname">DLL文件名</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_HttpModule.LoadAllLHttpModule(MangoMis.Frame.Model.VirtualPage)">
            <summary>
            加载所有的HttpModule
            </summary>
            <param name="page">虚拟页面</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_HttpModule.BuildUploadDLLPage(MangoMis.Frame.Model.VirtualPage)">
            <summary>
            建立DLL上传页面
            </summary>
            <param name="page">虚拟页面</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_HttpModule.BuildChooseDLLVersionPage(MangoMis.Frame.Model.VirtualPage,System.String)">
            <summary>
            建立选择DLL版本页面
            </summary>
            <param name="page">虚拟页面</param>
            <param name="dllname">DLL文件名</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_HttpModule.BuildAddHttpModulePage(MangoMis.Frame.Model.VirtualPage,System.String)">
            <summary>
            建立添加HttpModule页面
            </summary>
            <param name="page">虚拟页面</param>
            <param name="dllname">DLL文件名</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_HttpModule.BuildHttpModuleListPage(MangoMis.Frame.Model.VirtualPage)">
            <summary>
            创建展示列表
            </summary>
            <param name="page">虚拟页面</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_HttpModule.BuildActionPage(MangoMis.Frame.Model.VirtualPage)">
            <summary>
            创建其它事件页面
            </summary>
            <param name="page">虚拟页面</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.Page_HttpModule.Init_Setting">
            <summary>
            初始化配置页面
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.VirData.AutoRunDataItem">
            <summary>
            用于自动返回数据的项目
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.VirData.AutoRunDataItem.DataLowerName">
            <summary>
            小写的名称
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.VirData.AutoRunDataItem.DataPageName">
            <summary>
            数据在地址栏中的地址
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.VirData.AutoRunDataItem.DataShowName">
            <summary>
            用于显示的名称
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.VirData.AutoRunDataItem.DataAction">
            <summary>
            处理事件
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.VirData.AutoRunData">
            <summary>
            无实际页面.由后台自动返回的数据(一般是Json数据)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.VirData.AutoRunData.AutoRunPages">
            <summary>
            自动运行的相关页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.VirData.AutoRunData.AddAutoPage(System.String,System.Action,System.String)">
            <summary>
            添加一个自动返回Json的函数
            </summary>
            <param name="runPageName">页面名</param>
            <param name="runAction">运行事件</param>
            <param name="showName">用于显示的名.(默认和页面名一致)</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.VirData.AutoRunData.Run">
            <summary>
            开始运行虚拟Data并返回处理结果
            </summary>
            <returns>如果是虚拟Data则返回True,不是则返回False</returns>
        </member>
        <member name="T:MangoMis.Frame.VirPages.VirData.WebParamInfo">
            <summary>
            页面Web参数说明信息
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.VirData.WebParamInfo.#ctor(System.String,System.String)">
            <summary>
            页面参数实例
            </summary>
            <param name="actionKey"></param>
            <param name="memo"></param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.VirData.WebParamInfo.#ctor(System.String,System.String,System.Action{System.String})">
            <summary>
            页面参数实例
            </summary>
            <param name="actionKey"></param>
            <param name="memo"></param>
            <param name="paramAction"></param>
        </member>
        <member name="P:MangoMis.Frame.VirPages.VirData.WebParamInfo.ParamAction">
            <summary>
            网络参数运行事件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.VirData.WebParamInfo.ActionKey">
            <summary>
            此参说的参数名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.VirData.WebParamInfo.ActionMemo">
            <summary>
            此参数说明
            </summary>
        </member>
        <member name="T:MangoMis.Frame.VirPages.VirData.WebParamCollection">
            <summary>
            参数相关集合
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.VirData.WebParamCollection.Item(System.String)">
            <summary>
            查找指定的参数
            </summary>
            <param name="actionKey"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.VirData.WebParamCollection.Append(System.String,System.String,System.Action{System.String})">
            <summary>
            添加一个Web参数
            </summary>
            <param name="actionKey">参数名</param>
            <param name="actionMemo">参数备注</param>
            <param name="webParemAction">此参数运行事件(事件参数为参数值)</param>
        </member>
        <member name="M:MangoMis.Frame.VirPages.VirData.WebParamCollection.Contains(System.String)">
            <summary>
            查看是否包括指定的参数名
            </summary>
            <param name="actionKey"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.VirPages.VirData.WebParamCollection.GetEnumerator">
            <summary>
            返回一个循环访问集合的枚举器。
            </summary>
            <returns>
            可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator"/> 对象。
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:MangoMis.Frame.VirPages.VirtualPageInfo">
            <summary>
            虚拟页面信息(用于存储当前系统中所有的虚拟页面,当然一个实体只是一个信息)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.VirPages.VirtualPageInfo.#ctor(System.Type)">
            <summary>
            通过一个Page的类型初始化一个虚拟页面的信息
            </summary>
            <param name="virtualPageType"></param>
        </member>
        <member name="P:MangoMis.Frame.VirPages.VirtualPageInfo.Title">
            <summary>
            页面名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.VirtualPageInfo.PageUrl">
            <summary>
            页面访问地址
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.VirtualPageInfo.PageType">
            <summary>
            页面实体类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.VirtualPageInfo.Disorder">
            <summary>
            页面显示排序没啥用
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.VirtualPageInfo.IsShowButton">
            <summary>
            页面按钮是否显示
            </summary>
        </member>
        <member name="P:MangoMis.Frame.VirPages.VirtualPageInfo.GroupType">
            <summary>
            页面分组
            </summary>
        </member>
        <member name="T:MangoMis.Frame.FrameApi.AssemblyApiController">
            <summary>
            程序集相关API
            </summary>
        </member>
        <member name="M:MangoMis.Frame.FrameApi.AssemblyApiController.OnInit">
            <summary>
            初始化函数.可重写此函数,然后会在初始实例化API的时候调用(包括重新加载)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.FrameApi.AssemblyApiController.ConfigCenterCallback(System.String,System.String)">
            <summary>
            由CC端配置变更后进行回调的接口,需要签名+TimeTicks验证
            </summary>
            <param name="key">要变更的配置Key</param>
            <param name="value">变更为配置值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.FrameApi.AssemblyApiController.SetAuthCode(System.String)">
            <summary>
            TokenService进行回调登录的接口
            </summary>
            <param name="auth_code">登录凭据</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.FrameApi.AssemblyApiController.Verion(System.String)">
            <summary>
            取得程序集版本号
            </summary>
            <param name="assemblyName">程序集名</param>
            <returns>返回程序集版本号字符串</returns>
        </member>
        <member name="M:MangoMis.Frame.FrameApi.AssemblyApiController.StartTime">
            <summary>
            取得站点启动时间
            </summary>
            <returns>返回时间字符串.此时间是AppStart被调用的时间(含毫秒)</returns>
        </member>
        <member name="M:MangoMis.Frame.FrameApi.AssemblyApiController.WriteSysRunLog">
            <summary>
            写入V2版本系统日志
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.FrameApi.AssemblyApiController.Test(System.Int32,System.DateTime)">
            <summary>
            测试函数
            </summary>
            <param name="seconds">秒</param>
            <param name="time">时间</param>
            <returns>返回测试内容</returns>
        </member>
        <member name="T:MangoMis.Frame.ThirdFrame.ActionVisitType">
            <summary>
            可访问的类型
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="F:MangoMis.Frame.ThirdFrame.ActionVisitType.CanVisit">
            <summary>
            可以访问
            </summary>
        </member>
        <member name="F:MangoMis.Frame.ThirdFrame.ActionVisitType.NoPower">
            <summary>
            没有权限
            </summary>
        </member>
        <member name="F:MangoMis.Frame.ThirdFrame.ActionVisitType.NotOpen">
            <summary>
            未开启
            </summary>
        </member>
        <member name="F:MangoMis.Frame.ThirdFrame.ActionVisitType.NONE">
            <summary>
            没有方法
            </summary>
        </member>
        <member name="T:MangoMis.Frame.ThirdFrame.ActionMethod">
            <summary>
            页面内运行方法类
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.ThirdFrame.ActionMethod.#ctor(System.String,System.String,System.Action,System.Boolean,System.String,System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.ThirdFrame.ActionMethod" /> class.
            </summary>
            <param name="actionname">The actionname.</param>
            <param name="action">The action.</param>
            <param name="function">The function.</param>
            <param name="isOpen">if set to <c>true</c> [is open].</param>
            <param name="canroles">默认为所有角色</param>
            <param name="isWriteTime">if set to <c>true</c> [is write time].</param>
            <param name="maxWriteTime">The maximum write time.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.ThirdFrame.ActionMethod.IsOpen">
            <summary>
            是否开启
            </summary>
            <value><c>true</c> if this instance is open; otherwise, <c>false</c>.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.ThirdFrame.ActionMethod.IsWriteTime">
            <summary>
            是否日志记录访问时间
            </summary>
            <value><c>true</c> if this instance is open; otherwise, <c>false</c>.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.ThirdFrame.ActionMethod.MaxWriteTime">
            <summary>
            访问最长时间
            </summary>
            <value><c>true</c> if this instance is open; otherwise, <c>false</c>.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.ThirdFrame.ActionMethod.CanRoles">
            <summary>
            可以看到的角色编号
            </summary>
            <value>The can see roles.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.ThirdFrame.ActionMethod.ActionName">
            <summary>
            函数展示名
            </summary>
            <value>The name of the action.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.ThirdFrame.ActionMethod.Action">
            <summary>
            函数提交名(Post)
            </summary>
            <value>The action.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.ThirdFrame.ActionMethod.Function">
            <summary>
            Functions this instance.
            </summary>
            <returns>Action{System.ObjectSystem.Object}.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.ThirdFrame.TError">
            <summary>
            错误
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="F:MangoMis.Frame.ThirdFrame.TError.RunGood">
             <summary>
            正常运行
             </summary>
        </member>
        <member name="F:MangoMis.Frame.ThirdFrame.TError.WCF_ConnError">
            <summary>
            WCF连接失败
            </summary>
        </member>
        <member name="F:MangoMis.Frame.ThirdFrame.TError.WCF_RunError">
            <summary>
            WCF运行失败
            </summary>
        </member>
        <member name="F:MangoMis.Frame.ThirdFrame.TError.Ser_EvenHaveData">
            <summary>
            添加了已经存在的值
            </summary>
        </member>
        <member name="F:MangoMis.Frame.ThirdFrame.TError.Ser_ErrorPost">
            <summary>
            提交了错误的数据
            </summary>
        </member>
        <member name="F:MangoMis.Frame.ThirdFrame.TError.Pro_HaveNoData">
            <summary>
            程序未取到对应的值
            </summary>
        </member>
        <member name="F:MangoMis.Frame.ThirdFrame.TError.Pro_HaveNoDataParam3">
            <summary>
            程序未取到对应的值三个参数(没有什么,原因是什么,需要做什么.)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.ThirdFrame.TError.User_NoLogin">
            <summary>
            当前未登陆
            </summary>
        </member>
        <member name="F:MangoMis.Frame.ThirdFrame.TError.User_NoPower">
            <summary>
            <para>无权限</para>
            </summary>
        </member>
        <member name="F:MangoMis.Frame.ThirdFrame.TError.Post_NoChange">
             <summary>
            没有变更
             </summary>
        </member>
        <member name="F:MangoMis.Frame.ThirdFrame.TError.Post_ParamError">
             <summary>
            系统参数错误
             </summary>
        </member>
        <member name="F:MangoMis.Frame.ThirdFrame.TError.Post_ToLargSize">
             <summary>
            查询数目太多
             </summary>
        </member>
        <member name="F:MangoMis.Frame.ThirdFrame.TError.Post_NoParam">
             <summary>
            没有网络参数
             </summary>
        </member>
        <member name="T:MangoMis.Frame.ThirdFrame.TErrorMsg">
            <summary>
            Class ErrorCode.
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.ThirdFrame.TErrorMsg.Error(MangoMis.Frame.ThirdFrame.TError,System.Object[])">
            <summary>
            错误信息
            </summary>
            <param name="type">The type.</param>
            <param name="strings">The strings.</param>
            <returns>System.String.</returns>
        </member>
        <member name="F:MangoMis.Frame.ThirdFrame.TErrorMsg.Errors">
            <summary>
            -500 + 服务器内部错误
            -400 + 程序内部判断不成功
            -300 + 程序内取值错误
            -200 + 登陆出错
            -100 + 传入参数出错
            </summary>
        </member>
        <member name="T:MangoMis.Frame.ThirdFrame.InterfaceFrame">
            <summary>
            接口基类
            </summary>
        </member>
        <member name="P:MangoMis.Frame.ThirdFrame.InterfaceFrame.pagename">
            <summary>
            页面名
            </summary>
            <value>The pagename.</value>
        </member>
        <member name="T:MangoMis.Frame.ThirdFrame.ThirdResult`1">
            <summary>
            Class ThirdResult.
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.ThirdFrame.ThirdResult`1.CurrentHaveDebug">
            <summary>
            当前是否有Debug的配置 
            </summary>
        </member>
        <member name="M:MangoMis.Frame.ThirdFrame.ThirdResult`1.InitIsHaveDebug">
            <summary>
            初始化本次请求是否有Debug
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.ThirdFrame.ThirdResult`1.CanDebug">
            <summary>
            本次请求中是否可以使用Debug
            </summary>
        </member>
        <member name="M:MangoMis.Frame.ThirdFrame.ThirdResult`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MangoMis.Frame.ThirdFrame.ThirdResult`1"/> class.
            </summary>
            <param name="action">The text.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.ThirdFrame.ThirdResult`1.Append(System.Func{System.String})">
            <summary>
            添加一条Debug
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.ThirdFrame.ThirdResult`1.Append(System.String)">
            <summary>
            添加一条Debug
            </summary>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.ThirdFrame.ThirdResult`1.End(MangoMis.Frame.ThirdFrame.TError,System.String)">
            <summary>
            结束一次返回
            </summary>
            <param name="flag">The flag.</param>
            <param name="msg">The MSG.</param>
            <returns>DefaultResult{`0}.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="M:MangoMis.Frame.ThirdFrame.ThirdResult`1.End(`0,MangoMis.Frame.ThirdFrame.TError,System.String)">
            <summary>
            结束一次返回
            </summary>
            <param name="obj">The object.</param>
            <param name="flag">The flag.</param>
            <param name="msg">The MSG.</param>
            <returns>DefaultResult{`0}.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="T:MangoMis.Frame.ThirdFrame.VistorFrame">
            <summary>
            处理程序Frame
            </summary>
        </member>
        <member name="M:MangoMis.Frame.ThirdFrame.VistorFrame.#ctor(System.String,System.Int32)">
            <summary>
            初始化
            </summary>
            <param name="_pagename">The _pagename.</param>
            <param name="_pageId">The _page identifier.</param>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.ThirdFrame.VistorFrame.pageid">
            <summary>
            页面编号
            </summary>
            <value>The pageid.</value>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.ThirdFrame.VistorFrame.pagename">
            <summary>
            页面名
            </summary>
            <value>The pagename.</value>
        </member>
        <member name="P:MangoMis.Frame.ThirdFrame.VistorFrame.GetPageName">
            <summary>
            页面名
            </summary>
            <value>The lower action.</value>
        </member>
        <member name="P:MangoMis.Frame.ThirdFrame.VistorFrame.LowerAction">
            <summary>
            小字的执行函数
            </summary>
            <value>The lower action.</value>
        </member>
        <member name="P:MangoMis.Frame.ThirdFrame.VistorFrame.CurrentPage">
            <summary>
             当前页
            </summary>
            <value>The current page.</value>
        </member>
        <member name="P:MangoMis.Frame.ThirdFrame.VistorFrame.PageSize">
            <summary>
            显示条目数
            </summary>
            <value>The size of the page.</value>
        </member>
        <member name="P:MangoMis.Frame.ThirdFrame.VistorFrame.Filters">
            <summary>
            查询条件
            </summary>
            <value>The filters.</value>
        </member>
        <member name="M:MangoMis.Frame.ThirdFrame.VistorFrame.GetEntityFilters``1">
            <summary>
            按TEntity(类型)取得查询条件,Filter的Name必须是这个类中的属性,注意:是属性属性属性,重要的事说三次.不是这个类的属性的Filter会被删除掉
            </summary>
            <typeparam name="TEntity">要取得条件所属的实体类型</typeparam>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.ThirdFrame.VistorFrame.Orders">
            <summary>
            排序条件
            </summary>
            <value>The orders.</value>
        </member>
        <member name="P:MangoMis.Frame.ThirdFrame.VistorFrame.PostParam">
            <summary>
            提交的其它参数
            </summary>
            <value>The post param.</value>
        </member>
        <member name="M:MangoMis.Frame.ThirdFrame.VistorFrame.GetPostModel``1(``0)">
            <summary>
            取得提交的类
            </summary>
            <typeparam name="MT">The type of the mt.</typeparam>
            <returns>``0.</returns>
            <remarks>EditBy:Zxf</remarks>
        </member>
        <member name="P:MangoMis.Frame.ThirdFrame.VistorFrame.PostDicts">
            <summary>
            取得提交参数的字典
            </summary>
            <value>The post param.</value>
        </member>
        <member name="T:MangoMis.Frame.WebPage.DomType">
            <summary>
            
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.DomType.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.DomType.Button">
            <summary>
            按钮
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.DomType.Select">
            <summary>
            选择
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.DomType.TextBox">
            <summary>
            文本框
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.HtmlContent">
            <summary>
            HTML相前的自定义综合样式
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.BuildHrefParam(System.Collections.Generic.IEnumerable{MangoMis.Frame.Helper.KeyText})">
            <summary>
            创建地址栏参数(带问号,带And符)
            </summary>
            <param name="values">当前要传的地址栏参数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.BuildHrefParam(System.Collections.Generic.IEnumerable{MangoMis.Frame.Helper.KeyText},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            在给定的字典的基础上创建地址栏参数(带问号,带And符)
            </summary>
            <param name="values">当前要传的地址栏参数</param>
            <param name="queryStringDict">原地址栏参数(一般是Request.QueryString,不传就完全覆盖)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.BuildHrefParamByQueryString(System.Collections.Generic.IEnumerable{MangoMis.Frame.Helper.KeyText})">
            <summary>
            创建地址栏参数,在原地址栏参数的基础上创建地址栏参数(带问号,带And符)
            </summary>
            <param name="values">当前要传的地址栏参数</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.WebPage.HtmlContent.Font">
            <summary>
            Font控件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.Font.THIS(System.String)">
            <summary>
            
            </summary>
            <param name="txt"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.Font.Glay(System.String)">
            <summary>
            灰色font
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.Font.Green(System.String)">
            <summary>
            绿色font
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.HtmlContent.TextSpan">
            <summary>
            Span控件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.TextSpan.AddClass(System.String)">
            <summary>
            添加一个样式
            </summary>
            <param name="className">The CSS.</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.TextSpan.#ctor(System.String)">
            <summary>
            初始化一个文字Span
            </summary>
            <param name="txt"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.TextSpan.SetText(System.String)">
            <summary>
            设置文本
            </summary>
            <param name="txt"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.TextSpan.Brown">
            <summary>
            棕色
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.TextSpan.Gray">
            <summary>
            灰色
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.TextSpan.Strong">
            <summary>
            加粗
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.HtmlContent.Control">
            <summary>
            控件类型
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.Control.Message(System.String)">
            <summary>
            建立一个消息
            </summary>
            <param name="text">The text.</param>
            <returns>TT_H_Generic.</returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.Control.A(System.String,System.String,System.String,System.String)">
            <summary>
            A标签
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.Control.Script(System.String)">
            <summary>
            建立一个页面引用JS的控件
            </summary>
            <param name="js_url">JS地址</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.Control.JS(System.String)">
            <summary>
            建立一个JS脚本控件
            </summary>
            <param name="js_script"></param>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.WebPage.HtmlContent.Control.ClearFloat">
            <summary>
            建立一个ClearBoth清除浮动的DIV
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.WebPage.HtmlContent.Builder">
            <summary>
            HTML建立的Builder
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.Builder.#ctor">
            <summary>
            初始化一个默认的HTMLBuilder
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.Builder.Clear">
            <summary>
            清空内容
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.HtmlContent.Builder.Text">
            <summary>
            取得当前HTML的文本
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.HtmlContent.Builder.Text_With_Div">
            <summary>
            带默认外框DIV的返回值
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.Builder.Append_txt(System.String)">
            <summary>
            添加内容文本
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.Builder.Append_Space(System.Int32)">
            <summary>
            添加内容空格
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.Builder.Append_Line">
            <summary>
            添加一行
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.Builder.Append_Head_With_Default_Style">
            <summary>
            添加一个自带系统默认样式的Head
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.Builder.S_Table_Default_Class_1">
            <summary>
            添加默认样式一的Table
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.Builder.E_Table">
            <summary>
            添加一个Table的结束标记
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.Builder.Append_Table_Default_Two_Column(System.String,System.String)">
            <summary>
            添加默认样式一的Table
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.Builder.Append_White_A_NewWindow(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            添加一个A标签,在新窗口打开
            </summary>
            <param name="txt">显示文本</param>
            <param name="url">地址</param>
            <param name="url_params">地址栏参数</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.Builder.Get_Time_Span_Font(System.DateTime)">
            <summary>
            取得一个时间间隔的Font文本
            </summary>
            <param name="begin_time"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.Builder.Append_Font_Green(System.String)">
            <summary>
            添加一个绿Font
            </summary>
            <param name="txt"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.Builder.Append_Font_Glay(System.String)">
            <summary>
            添加一个灰Font
            </summary>
            <param name="txt"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.Builder.Get_Time_Span_Strong(System.DateTime)">
            <summary>
            取得一个时间间隔的特殊显示文本
            </summary>
            <param name="begin_time"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.Builder.Append_Strong_Brown(System.String)">
            <summary>
            添加一个棕Strong
            </summary>
            <param name="txt"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.Builder.S_Div_Default_Class_1">
            <summary>
            添加默认样式一的DIV
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.Builder.E_Div">
            <summary>
            添加一个DIV的结束标记
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.HtmlContent.MSG">
            <summary>
            显示的提示的特定消息类型
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.HtmlContent.MSG.BIG">
            <summary>
            大号标题
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.MSG.BIG.BROWN(System.String)">
            <summary>
            棕色TITLE 
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.MSG.BIG.BLUE(System.String)">
            <summary>
            蓝色TITLE 
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.MSG.BIG.ORGANGE(System.String)">
            <summary>
            橙色TITLE
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.MSG.DECLARE_TYPE(System.String)">
            <summary>
            定义的类型(蓝色) 
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.MSG.METHOD_LINE(System.String,System.String,System.Int32)">
            <summary>
            函数(分行显示)
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.HtmlContent.Attr_Value">
            <summary>
            HTML属性默认值
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.HtmlContent.Attr_Value.A">
            <summary>
            A标签
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.Attr_Value.A.SELF">
            <summary>
            本页面打开
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.Attr_Value.A.BLANK">
            <summary>
            新窗口打开
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.HtmlContent.HTML">
            <summary>
            页面基本HTML框架类
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.BR">
            <summary>
            换行
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.SPACE">
            <summary>
            空格
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.C_B_Z">
            <summary>
            蓝色按钮样式
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.C_B_WHITE">
            <summary>
            白色按钮样式
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.HtmlContent.HTML.C_B_WHITE_Z">
            <summary>
            白色按钮样式
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.C_B_BLUE">
            <summary>
            蓝色按钮样式
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.HtmlContent.HTML.C_B_BLUE_Z">
            <summary>
            蓝色按钮样式
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.C_B_GREEN">
            <summary>
            绿色按钮样式
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.HtmlContent.HTML.C_B_GREEN_Z">
            <summary>
            绿色按钮样式
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.C_B_RED">
            <summary>
            红色按钮样式
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.HtmlContent.HTML.C_B_RED_Z">
            <summary>
            红色按钮样式
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.C_T_COMMON">
            <summary>
            通常文本框样式
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.C_WIDTH800">
            <summary>
            width800
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.C_FIX">
            <summary>
            clearfix
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.C_RED">
            <summary>
            c-red
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.C_Color1">
            <summary>
            textColor1
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.C_Color14">
            <summary>
            textColor14
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.C_TextBold">
            <summary>
            textbold
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.S_FS_16">
            <summary>
            orange
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.S_ORANGE">
            <summary>
            orange
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.S_GLAY">
            <summary>
            #999
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.S_BROWN">
            <summary>
            brown
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.S_GREEN">
            <summary>
            green
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.S_BLUE">
            <summary>
            blue
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.S_CCC">
            <summary>
            #ccc
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.S_CENTER">
            <summary>
            居中显示
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.S_HIDDEN">
            <summary>
            隐藏
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.INCLUDE_CSS_FILE(System.String)">
            <summary>
            引用CSS
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.INCLUDE_JAVASCRIPT_FILE(System.String)">
            <summary>
            引用javascript
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.RUN_JAVASCRIPT_CODE(System.String,System.String,System.String)">
            <summary>
            javascript脚本
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.RUN_STYLE_CODE(System.String)">
            <summary>
            CSS代码
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.CONTENT_TYPE">
            <summary>
            Content-Type
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.S_HEAD">
            <summary>
            start head
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.E_HEAD">
            <summary>
            end head
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.INCLUDE_META(System.String,System.String)">
            <summary>
            Head的Meta
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.INCLUDE_CHARSET(System.String)">
            <summary>
            Head的CharSet
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.TAG_COMMON(System.String,System.String)">
            <summary>
            默认的标签
            </summary>
            <param name="txt">内容</param>
            <param name="tag">标签</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.TAG_WITH_STYLE(System.String,System.String,System.String)">
            <summary>
            带style的标签
            </summary>
            <param name="txt">内容</param>
            <param name="tag">标签</param>
            <param name="style">style样式</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.TAG_WITH_CLASS(System.String,System.String,System.String)">
            <summary>
            带Class的标签
            </summary>
            <param name="txt">内容</param>
            <param name="tag">标签</param>
            <param name="class_txt">样式类</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.EM_WITH_CLASS(System.String,System.String)">
            <summary>
            红色em
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.EM_RED(System.String)">
            <summary>
            红色em
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.SPAN_WITH_STYLE(System.String,System.String)">
            <summary>
            带style的Span
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.SPAN_GLAY(System.String)">
            <summary>
            灰色span
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.A_WITH_CLASS(System.String,System.String,System.String,System.String)">
            <summary>
            带Style的A
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.A_WHITE(System.String,System.String,System.String)">
            <summary>
            白色的A
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.STRONG_WITH_STYLE(System.String,System.String)">
            <summary>
            带style的strong
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.STRONG_BROWN(System.String)">
            <summary>
            红色strong
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.FONT_WITH_STYLE(System.String,System.String)">
            <summary>
            带style的font
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.FONT_GLAY(System.String)">
            <summary>
            灰色font
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.FONT_GREEN(System.String)">
            <summary>
            绿色font
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.FONT_BROWN(System.String)">
            <summary>
            绿色font
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.S_TABLE_WITH_CLASS(System.String)">
            <summary>
            带样式的table开始标记
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.HtmlContent.HTML.S_TABLE_WITH_CLASS_1">
            <summary>
            使用默认第一个样式的table开始标记
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.E_TABLE">
            <summary>
            end table
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.TD_COMMON(System.String)">
            <summary>
            无样式等的TD
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.TD_WITH_STYLE(System.String,System.String)">
            <summary>
            无样式等的TD
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.TR_COMMON(System.String)">
            <summary>
            无样式等的TR
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlContent.HTML.S_DIV_WITH_CLASS(System.String)">
            <summary>
            带样式的DIV开始标记
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.HtmlContent.HTML.S_DIV_WITH_CLASS_800">
            <summary>
            使用800宽样式的DIV开始标记
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlContent.HTML.E_DIV">
            <summary>
            end div
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.HtmlControlClassBuilder">
            <summary>
            样式建立器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlControlClassBuilder.#ctor(System.Web.UI.HtmlControls.HtmlControl,MangoMis.Frame.WebPage.DomType)">
            <summary>
            初始化样式建立器
            </summary>
            <param name="sender">控件</param>
            <param name="domType">此控件的节点类型</param>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlControlClassBuilder._sender">
            <summary>
            父级HTML控件
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlControlClassBuilder._domType">
            <summary>
            此控件节点类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlControlClassBuilder._styleInts">
            <summary>
            当前使用的所有的样式集合
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlControlClassBuilder._styleClasses">
            <summary>
            当前使用的所有指定的样式集合
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.HtmlControlClassBuilder._customClass">
            <summary>
            当前使用的所有自定义的样式集合
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlControlClassBuilder.CopyFrom(MangoMis.Frame.WebPage.HtmlControlClassBuilder)">
            <summary>
            复制从一个实例将数据复制到本实例,返回本实例
            </summary>
            <param name="fromEntity">复制源实例</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlControlClassBuilder.CopyTo(MangoMis.Frame.WebPage.HtmlControlClassBuilder)">
            <summary>
            复制本实例到一个新的实例
            </summary>
            <param name="toEntity">复制到的实例</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlControlClassBuilder.SetClass(System.String)">
            <summary>
            设置样式
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlControlClassBuilder.Clear">
            <summary>
            清空当前所有的样式
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlControlClassBuilder.SetColor(MangoMis.Frame.WebPage.StyleColor)">
            <summary>
            设置颜色样式
            </summary>
            <param name="color">颜色值</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlControlClassBuilder.GetSize">
            <summary>
            取得颜色样式
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlControlClassBuilder.SetSize(MangoMis.Frame.WebPage.StyleSize)">
            <summary>
            设置大小样式
            </summary>
            <param name="size">大小</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlControlClassBuilder.SetValue``1(``0)">
            <summary>
            设置样式的值
            </summary>
            <typeparam name="T">设置的类型</typeparam>
            <param name="colorType">设置的值</param>
        </member>
        <member name="T:MangoMis.Frame.WebPage.HtmlJavascript">
            <summary>
            前台页面脚本
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.HtmlJavascript.SCRIPT_API_URL">
            <summary>
            API基础地址
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlJavascript.Append(System.String)">
            <summary>
            添加一个相关的引用名
            </summary>
            <param name="Name"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlJavascript.AppendScript(System.String)">
            <summary>
            添加一段运行JS
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlJavascript.Render_API(System.Object)">
            <summary>
            加载基础APIJS
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlJavascript.Render(System.Object)">
            <summary>
            加载JS
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.HtmlJavascript.set_Control_Container(System.Object)">
            <summary>
            添加一个加载JS的HeaderControl
            </summary>
            <param name="page"></param>
        </member>
        <member name="T:MangoMis.Frame.WebPage.HtmlStyle">
            <summary>
            Html页面的样式
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.IMgSimpleCopyToAble`1">
            <summary>
            简易控件-可以进行拷贝
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.IMgSimpleCopyToAble`1.CopyTo(`0)">
            <summary>
            复制本实例到一个新的实例返回复制到的对象
            </summary>
            <param name="toEntity">复制到的实例</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.IMgSimpleCopyToAble`1.CopyFrom(`0)">
            <summary>
            复制从一个实例将数据复制到本实例,返回本实例
            </summary>
            <param name="fromEntity">复制源实例</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.IMgSimpleDataTableAutoCompleteCell">
            <summary>
            相关单元格初始化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.IMgSimpleDataTableAutoCompleteCell.InstanceUserCell(MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableEventArgs,System.Int32)">
            <summary>
            实现一个用户的单元格
            </summary>
            <param name="args">需要实例化的单元格等事件参数</param>
            <param name="userId">用户编号</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.IMgSimpleDataTableAutoCompleteCell.InstanceDictItemCell(MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableEventArgs,System.Int32,System.Int32)">
            <summary>
            实现一个字典项的单元格
            </summary>
            <param name="args">需要实例化的单元格等事件参数</param>
            <param name="dicClassId">字典类型</param>
            <param name="dicUseId">字典使用ID</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.IMgSimpleDataTableAutoCompleteCell.InstanceOrgCell(MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableEventArgs,System.Int32)">
            <summary>
            实现一个组织的单元格
            </summary>
            <param name="args">需要实例化的单元格等事件参数</param>
            <param name="orgId">组织编号</param>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAjaxInput">
            <summary>
            芒果Ajax通用按钮
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAjaxInput.#ctor(System.String,System.String)">
            <summary>
            初始化一个自定义的Ajax按钮
            </summary>
            <param name="text">按钮显示文本</param>
            <param name="action">Ajax的函数</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAjaxInput.#ctor(System.String,System.String,System.String)">
            <summary>
            初始化一个自定义的Ajax按钮
            </summary>
            <param name="text">按钮显示文本</param>
            <param name="action">Ajax的函数</param>
            <param name="postUrl">提交Url</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAjaxInput.CopyTo(MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAjaxInput)">
            <summary>
            复制本实例到一个新的实例返回复制到的对象
            </summary>
            <param name="toEntity">复制到的实例</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAjaxInput.CopyFrom(MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAjaxInput)">
            <summary>
            复制从一个实例将数据复制到本实例,返回本实例
            </summary>
            <param name="fromEntity">复制源实例</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAjaxInput.SetAutoRefresh(System.Int32)">
            <summary>
            设置此按钮运行得到返回值之后刷新页面
            </summary>
            <param name="ms">延时的毫秒数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAjaxInput.SetPost">
            <summary>
            设置为Post提交Ajax方式
            </summary>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAjaxInput._isGet">
            <summary>
            是否使用Get方式
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAjaxInput.SetCallback(System.String)">
            <summary>
            设置此按钮运行的回调函数
            </summary>
            <param name="callbackJavascriptString">回调的JS代码</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAjaxInput.SetNoAutoAlertMessage">
            <summary>
            设置此Ajax按钮回调时不自动弹出消息
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAjaxInput.AddParam(System.String,System.Object)">
            <summary>
            添加一个运行Ajax时的Post参数
            </summary>
            <param name="key">参数名</param>
            <param name="value">参数值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAjaxInput.AddParam(System.String,MangoMis.Frame.WebPage.ISimpleHtmlControl)">
            <summary>
            添加一个运行Ajax时的Post参数
            </summary>
            <param name="key">参数名</param>
            <param name="control">参数值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAjaxInput.RenderControl">
            <summary>
            子类需要重写此函数建立自身特定属性
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAjaxInput.Current">
            <summary>
            子类实例.PS.作者暂时不知道父类怎么取得子类
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAnchorLink">
            <summary>
            芒果跳转A标签链接
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAnchorLink.#ctor(System.String,System.Boolean)">
            <summary>
            初始化一个自定义的链接(默认为本页面地址)
            </summary>
            <param name="text">按钮显示文本</param>
            <param name="isCoverParam"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAnchorLink.#ctor(System.String)">
            <summary>
            初始化一个自定义的链接
            </summary>
            <param name="text">按钮显示文本</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAnchorLink.#ctor(System.String,System.String)">
            <summary>
            初始化一个跳转A标签
            </summary>
            <param name="text">按钮显示文本</param>
            <param name="url">Url</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAnchorLink.Current">
            <summary>
            子类实例.PS.作者暂时不知道父类怎么取得子类
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAnchorLinkBase`1">
            <summary>
            [通用][简易]超链接基础
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAnchorLinkBase`1.#ctor(System.String,System.Boolean)">
            <summary>
            初始化一个自定义的Ajax按钮(默认为本页面地址)
            </summary>
            <param name="text">按钮显示文本</param>
            <param name="isCoverParam"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAnchorLinkBase`1.#ctor(System.String)">
            <summary>
            初始化一个自定义的Ajax按钮(默认为本页面地址)
            </summary>
            <param name="text">按钮显示文本</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAnchorLinkBase`1.#ctor(System.String,System.String)">
            <summary>
            初始化一个跳转A标签
            </summary>
            <param name="text">按钮显示文本</param>
            <param name="url">Url</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAnchorLinkBase`1.RenderControl">
            <summary>
            子类需要重写此函数建立自身特定属性
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAnchorLinkBase`1.SetNoHref">
            <summary>
            设置为无href
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAnchorLinkBase`1.AddParam(System.String,System.Object)">
            <summary>
            添加一个运行Ajax时的Post参数
            </summary>
            <param name="key">参数名</param>
            <param name="value">参数值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAnchorLinkBase`1.SetNewWindow">
            <summary>
            设置按钮颜色
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAnchorLinkBase`1.SetCoverParam">
            <summary>
            设置为不使用原地址栏参数.完全覆盖
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.ISimpleHtmlContainer">
            <summary>
            简易Html容器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.ISimpleHtmlContainer.Append(System.Object)">
            <summary>
            添加内容
            </summary>
            <param name="content"></param>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleBase`1">
            <summary>
            实例化相关内容
            </summary>
            <typeparam name="T">子类类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleBase`1.#ctor(System.String,MangoMis.Frame.WebPage.DomType)">
            <summary>
            实例化
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleBase`1.ClassBuilder">
            <summary>
            样式建立器
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleBase`1.Id">
            <summary>
            当前的Id
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleBase`1.CurrentScriptManager">
            <summary>
            自定义的脚本编辑器
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleBase`1.ControlScriptText">
            <summary>
            脚本控制器
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleBase`1.IsBuilded">
            <summary>
            是否已经创建完成
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleBase`1.RenderControl">
            <summary>
            子类需要重写此函数建立自身特定属性
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleBase`1.Current">
            <summary>
            子类实例.PS.作者暂时不知道父类怎么取得子类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleBase`1.CopyTo(`0)">
            <summary>
            复制本实例到一个新的实例返回复制到的对象
            </summary>
            <param name="toEntity">复制到的实例</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleBase`1.CopyFrom(`0)">
            <summary>
            复制从一个实例将数据复制到本实例,返回本实例
            </summary>
            <param name="fromEntity">复制源实例</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleBase`1.AppendTo``1(MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase{``0})">
            <summary>
            把此实例添加至容器中.返回此实例
            </summary>
            <typeparam name="TParent">父级容器</typeparam>
            <param name="parent">父级容器</param>
            <returns>返回此实例</returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleBase`1.ClearId">
            <summary>
            清除ID
            </summary>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleBase`1.IsSetId">
            <summary>
            是否设置过ID
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleBase`1.SetId(System.String)">
            <summary>
            设置Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleBase`1.Build">
            <summary>
            实例化控件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleBase`1.SetAttribute(System.String,System.String)">
            <summary>
            设置属性值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleBase`1.DeleteAttributeValue(System.String)">
            <summary>
            清除属性值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleBase`1.SetStyle(System.String,System.String)">
            <summary>
            设置样式
            </summary>
            <param name="key">样式索引</param>
            <param name="value">样式值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleBase`1.SetClass(System.String)">
            <summary>
            设置样式表
            </summary>
            <param name="className">样式表名</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleBase`1.ClearClass">
            <summary>
            清空当前所有的样式表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleBase`1.ClearStyle">
            <summary>
            清空当前所有的样式
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleButtonAnchor">
            <summary>
            [通用][简易]芒果跳转按钮(使用InputButton实例跳转或弹出新窗口)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleButtonAnchor.#ctor(System.String,System.Boolean)">
            <summary>
            初始化一个自定义的Ajax按钮(默认为本页面地址)
            </summary>
            <param name="text">按钮显示文本</param>
            <param name="isCoverParam"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleButtonAnchor.#ctor(System.String)">
            <summary>
            初始化一个自定义的Ajax按钮(默认为本页面地址)
            </summary>
            <param name="text">按钮显示文本</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleButtonAnchor.#ctor(System.String,System.String)">
            <summary>
            初始化一个跳转A标签
            </summary>
            <param name="text">按钮显示文本</param>
            <param name="url">Url</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleButtonAnchor.CopyTo(MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleButtonAnchor)">
            <summary>
            复制本实例到一个新的实例返回复制到的对象
            </summary>
            <param name="toEntity">复制到的实例</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleButtonAnchor.CopyFrom(MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleButtonAnchor)">
            <summary>
            复制从一个实例将数据复制到本实例,返回本实例
            </summary>
            <param name="fromEntity">复制源实例</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleButtonAnchor.RenderControl">
            <summary>
            子类需要重写此函数建立自身特定属性
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleButtonAnchor.Current">
            <summary>
            子类实例.PS.作者暂时不知道父类怎么取得子类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleButtonAnchor.AddParam(System.String,System.Object)">
            <summary>
            添加一个运行Ajax时的Post参数
            </summary>
            <param name="key">参数名</param>
            <param name="value">参数值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleButtonAnchor.SetNewWindow">
            <summary>
            设置按钮颜色
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleButtonAnchor.SetCoverParam">
            <summary>
            设置为不使用原地址栏参数.完全覆盖
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleControlBase`1">
            <summary>
            [通用][简易]按钮基础
            </summary>
            <typeparam name="T">子类类型</typeparam>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleControlBase`1.#ctor(System.String,MangoMis.Frame.WebPage.DomType)">
            <summary>
            实例化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleControlBase`1.#ctor(System.String)">
            <summary>
            实例化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleControlBase`1.Build">
            <summary>
            实例化控件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleControlBase`1.SetColor(MangoMis.Frame.WebPage.StyleColor)">
            <summary>
            设置按钮颜色
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleControlBase`1.SetSize(MangoMis.Frame.WebPage.StyleSize)">
            <summary>
            设置按钮大小
            </summary>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAnchor">
            <summary>
            芒果跳转A标签通用按钮
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAnchor.#ctor(System.String,System.Boolean)">
            <summary>
            初始化一个自定义的Ajax按钮(默认为本页面地址)
            </summary>
            <param name="text">按钮显示文本</param>
            <param name="isCoverParam"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAnchor.#ctor(System.String)">
            <summary>
            初始化一个自定义的Ajax按钮(默认为本页面地址)
            </summary>
            <param name="text">按钮显示文本</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAnchor.#ctor(System.String,System.String)">
            <summary>
            初始化一个跳转A标签
            </summary>
            <param name="text">按钮显示文本</param>
            <param name="url">Url</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAnchor.RenderControl">
            <summary>
            子类需要重写此函数建立自身特定属性
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAnchor.SetNoHref">
            <summary>
            设置按钮颜色
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAnchor.Current">
            <summary>
            子类实例.PS.作者暂时不知道父类怎么取得子类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAnchor.AddParam(System.String,System.Object)">
            <summary>
            添加一个运行Ajax时的Post参数
            </summary>
            <param name="key">参数名</param>
            <param name="value">参数值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAnchor.SetNewWindow">
            <summary>
            设置按钮颜色
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleAnchor.SetCoverParam">
            <summary>
            设置为不使用原地址栏参数.完全覆盖
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleCell">
            <summary>
            [通用][简易]TD(本类无法直接实例.需要通过Tr->NewTd/NewTh进行实例)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleCell.Tr">
            <summary>
            返回所在行
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleCell.#ctor(System.String,MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTr)">
            <summary>
            实例化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleCell.RenderControl">
            <summary>
            子类需要重写此函数建立自身特定属性
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleCell.Colspan(System.Int32)">
            <summary>
            设置单元格合并
            </summary>
            <returns>当前单元格</returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleCell.Current">
            <summary>
            子类实例.PS.作者暂时不知道父类怎么取得子类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleCell.SetWidth(System.Int32)">
            <summary>
            设置单元格宽度
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainer">
            <summary>
            [通用][简易]容器(可能是Div,Span等)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainer.#ctor(System.String)">
            <summary>
            实例化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainer.Current">
            <summary>
            子类实例.PS.作者暂时不知道父类怎么取得子类
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase`1">
            <summary>
            [通用][简易]容器基础
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase`1.#ctor(System.String)">
            <summary>
            实例化
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase`1.ControlCount">
            <summary>
            已有内容控件数量
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase`1.ContainerControls">
            <summary>
            当前容器内容
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase`1.Clear">
            <summary>
            清空内容
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase`1.InsertFirst(System.String)">
            <summary>
            添加内容
            </summary>
            <param name="text">内容(支持HTML标记)</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase`1.InsertFirst(System.Web.UI.Control)">
            <summary>
            添加内容
            </summary>m>
            <param name="control">要添加的控件</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase`1.RenderControl">
            <summary>
            子类需要重写此函数建立自身特定属性
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase`1.NewAnchor(System.String)">
            <summary>
            添加一个超链接
            </summary>
            <param name="text">显示文本</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase`1.NewAnchor(System.String,System.String)">
            <summary>
            添加一个超链接
            </summary>
            <param name="text">显示文本</param>
            <param name="url">跳转的页面</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase`1.NewBtnAnchor(System.String)">
            <summary>
            添加一个由Input模拟的跳转按钮
            </summary>
            <param name="text">显示文本</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase`1.NewBtnAnchor(System.String,System.String)">
            <summary>
            添加一个由Input模拟的跳转按钮
            </summary>
            <param name="text">显示文本</param>
            <param name="url">跳转的页面</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase`1.NewPanel(System.String)">
            <summary>
            添加一个新的Panel面板
            </summary>
            <param name="title">面板标题</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase`1.NewAjaxButton(System.String,System.String)">
            <summary>
            添加一个由Ajax提交的按钮
            </summary>
            <param name="text">显示文本</param>
            <param name="action">提交的事事件(GetKey('operate'))会默认提交一个aciont=ajax</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase`1.NewContainer(System.String)">
            <summary>
            新添加一个容器,并返回新的容器
            </summary>
            <param name="tag">容器标签类型</param>
            <returns>新的容器</returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase`1.NewDiv">
            <summary>
            新添加一个DIV,并返回新的DIV
            </summary>
            <returns>新的DIV</returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase`1.NewTextBox">
            <summary>
            新添加一个文本框,并返回文本框
            </summary>
            <returns>文本框</returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase`1.NewSelection">
            <summary>
            新添加一个Select,并返回Select
            </summary>
            <returns>Select</returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase`1.Insert(System.Int32,System.String)">
            <summary>
            添加内容
            </summary>
            <param name="index">插入位置</param>
            <param name="text">内容(支持HTML标记)</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase`1.Insert(System.Int32,System.Web.UI.Control)">
            <summary>
            添加内容
            </summary>
            <param name="index">插入位置</param>
            <param name="control">要添加的控件</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase`1.Append(System.Object)">
            <summary>
            添加内容
            </summary>
            <param name="canBeStringObj">内容(支持HTML标记)能转成String的.不要传类</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase`1.Append(System.String)">
            <summary>
            添加内容
            </summary>
            <param name="text">内容(支持HTML标记)</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase`1.Append(System.Web.UI.Control)">
            <summary>
            添加内容
            </summary>
            <param name="control">要添加的控件</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleContainerBase`1.Build">
            <summary>
            实例化控件
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTable`1">
            <summary>
            简易表格
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTable`1.FilterControlKey">
            <summary>
            属性查询内容的开始字符串
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTable`1.OrderControlKey">
            <summary>
            属性排序内容的开始字符串
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTable`1.#ctor(System.String)">
            <summary>
            实例化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTable`1.SetPageSize(System.Int32)">
            <summary>
            设置每页取得记录数量
            </summary>
            <param name="pageSize">页面取值数量</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTable`1.NewColumn(System.String)">
            <summary>
            新增加一列并取得新列
            </summary>
            <param name="propertyName">新列列绑定名(索引不是显示的标题)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTable`1.NewColumn(System.Reflection.PropertyInfo)">
            <summary>
            新增加一列并取得新列,同时设置此字段的默认取值函数
            </summary>
            <param name="property">新列的相关属性</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTable`1.SetPagingButtonNumber(System.Int32)">
            <summary>
            设置分页显示按钮数量
            </summary>
            <returns></returns>
            <param name="pagingButtonNumber">分页显示按钮数量(默认7个)</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTable`1.SetNoOrderPanel">
            <summary>
            设置为无排序列表模式
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTable`1.SetNoSearch">
            <summary>
            设置为无搜索模式
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTable`1.SetNoPaging">
            <summary>
            设置为无分页模式
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTable`1.SetDataGetter(MangoMis.Frame.WebPage.MgSimpleControl.DataTableDataGetter{`0})">
            <summary>
            设置数据读取函数
            </summary>
            <param name="dataGetter">读取数据</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTable`1.SetDefaultAfterFormatCell(MangoMis.Frame.WebPage.MgSimpleControl.DataTableAfterFormatCellByTable{`0})">
            <summary>
            设置默认的取值方式
            </summary>
            <param name="defaultAfterFormat">默认单元格初始化的后置事件</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTable`1.SetDefaultValueGetter(MangoMis.Frame.WebPage.MgSimpleControl.DataTableCellValueByTableGetter{`0})">
            <summary>
            设置默认的取值方式
            </summary>
            <param name="defaultValueGetter">默认取值方式(需要在添加对应字段之前设置.不然不生效)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTable`1.SetOrderInfoList(System.Collections.Generic.List{MangoMis.Frame.Model.CacheListShowProperty})">
            <summary>
            设置字段排序列表
            </summary>
            <param name="orderInfoList">字段排序列表</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTable`1.BuildPager(System.Int32,System.Int32)">
            <summary>
            构造分页的Panel
            </summary>
            <param name="currentPage">当前页</param>
            <param name="recordCount">记录总数</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTable`1.RenderControl">
            <summary>
            子类需要重写此函数建立自身特定属性
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTable`1.Current">
            <summary>
            子类实例.PS.作者暂时不知道父类怎么取得子类
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1">
            <summary>
            简易表格的列信息
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.ValueGetter">
            <summary>
            取值函数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.ColumnName">
            <summary>
            字段名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.NotHaveFilterControl">
            <summary>
            没有查询控件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.ColumnWidth">
            <summary>
            字段宽度
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.CellFormatter">
            <summary>
            单元格初始化函数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.AutoColumnType">
            <summary>
            自动填充字段的类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.TitleFormatter">
            <summary>
            标题初始化函数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.DictClassId">
            <summary>
            使用的字典类型Id
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.IsOrder">
            <summary>
            是否可排序
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.DefaultOrder">
            <summary>
            默认排序
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.DefaultOrderIndex">
            <summary>
            默认排序顺序
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.TitleName">
            <summary>
            显示标题
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.Table">
            <summary>
            此列所属的表
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.#ctor(System.Reflection.PropertyInfo,MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTable{`0},System.Int32)">
            <summary>
            初始化一个字段信息,同时根据属性设置默认取值事件
            </summary>
            <param name="propertyInfo">此字段绑定属性</param>
            <param name="table">此字段所属的表</param>
            <param name="currentIndex">当前的索引</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.#ctor(System.String,MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTable{`0},System.Int32)">
            <summary>
            初始化一个字段信息
            </summary>
            <param name="columnName">此字段绑定的名称</param>
            <param name="table">此字段所属的表</param>
            <param name="currentIndex">当前的索引</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.SetAfterFormatCell(MangoMis.Frame.WebPage.MgSimpleControl.DataTableAfterFormatCell{`0})">
            <summary>
            设置自动初始化完单元格后事件(与SetCellFormatter,SetCellFormatter之后此事件不会生效)
            </summary>
            <param name="afterFormat"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.SetIsAlwysShow">
            <summary>
            设置此列为总是显示(一般用于编辑列)
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.SetValueGetter(MangoMis.Frame.WebPage.MgSimpleControl.DataTableCellValueGetter{`0})">
            <summary>
            设置取值函数(与[单元格初始化函数:SetCellFormatter]意义相同,根据需求只其中设置一个)
            </summary>
            <param name="valueGetter"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.SetCellFormatter(MangoMis.Frame.WebPage.MgSimpleControl.DataTableCellFormatter{`0})">
            <summary>
            设置单元格初始化函数(与[取值函数:SetValueGetter]意义相同,根据需求只其中设置一个)
            </summary>
            <param name="cellFormatter"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.SetCellType(MangoMis.Frame.WebPage.MgSimpleDataTableColumnType)">
            <summary>
            设置字段类型,置为字典是无效的,如果想置为字典请直接用SetCellDictClassId(用于自动初始化字段需要有[取值函数:SetValueGetter]支持,与[单元格初始化函数:SetCellFormatter]意义相同,根据需求只其中设置一个)
            </summary>
            <param name="columnType">字段类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.SetCellDictClassId(System.Int32)">
            <summary>
            设置字段类型为字典,设置字典类型ID(用于自动初始化字段需要有[取值函数:SetValueGetter]支持,与[单元格初始化函数:SetCellFormatter]意义相同,根据需求只其中设置一个)
            </summary>
            <param name="dicClassId"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.SetTitle(System.String)">
            <summary>
            设置标题(与[设置标题初始化:SetTitleFormatter]意义相同,根据需求只其中设置一个)
            </summary>
            <param name="title">标题名称</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.SetNoFilter">
            <summary>
            设置无检索控件
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.SetTitleFormatter(MangoMis.Frame.WebPage.MgSimpleControl.DataTableTitleFormatter)">
            <summary>
            设置标题初始化(与[设置标题:SetTitle]意义相同,根据需求只其中设置一个)
            </summary>
            <param name="titleFormatter"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.SetWidth(System.Int32)">
            <summary>
            设置此字段列的宽度(默认为100%)
            </summary>
            <param name="width">宽度</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.SetTextLength(System.Int32)">
            <summary>
            设置此字段列显示文本长度.默认是13(超过13的会显示10并显示3个.)只在默认显示时生效.如果自定义实例化则不生效
            </summary>
            <param name="textLength">显示文本长度</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.InitFromColumnShowInfo(MangoMis.Frame.Model.CachePropertyShowInfo)">
            <summary>
            通过一个字段显示信息初始化一个字段
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.BuildTitle(MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTr)">
            <summary>
            建立标题单元格
            </summary>
            <param name="tr">标题行</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableColumnInfo`1.BuildCell(MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTr,`0,MangoMis.Frame.WebPage.MgSimpleControl.IMgSimpleDataTableAutoCompleteCell)">
            <summary>
            将数据绑定至单元格
            </summary>
            <param name="row">单元格所属行</param>
            <param name="itemData">本行数据</param>
            <param name="instanceInterface">自动初始化的接口(因为不想重复实例.所以这里设置了一个ref,初始值为Null就可以了)</param>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableEventArgs">
            <summary>
            简易表格初始化的事件参数
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableEventArgs.ScriptManager">
            <summary>
            脚本控制器
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDataTableEventArgs.EventCell">
            <summary>
            发生事件的单元格
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDiv">
            <summary>
            [通用][简易]Div
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDiv.#ctor">
            <summary>
            实例化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleDiv.Current">
            <summary>
            子类实例.PS.作者暂时不知道父类怎么取得子类
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelColumnInfo">
            <summary>
            [通用][简易]编辑面板的字段详情
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelColumnInfo.#ctor(System.String,System.String,MangoMis.Frame.WebPage.DomType)">
            <summary>
            [通用][简易]编辑面板的字段详情
            </summary>
            <param name="fromId">来源控件的ID</param>
            <param name="columnName">字段名</param>
            <param name="domType">字段控件类型</param>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelColumnInfo.CurrentId">
            <summary>
            当前控件的ID
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelColumnInfo.Width">
            <summary>
            宽度(暂时无用)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelColumnInfo.IdBefore">
            <summary>
            名称前缀
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelColumnInfo.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelColumnInfo.ColumnName">
            <summary>
            字段名
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelColumnInfo.ControlType">
            <summary>
            控件类型
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelColumnInfo.Value">
            <summary>
            字段值
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelColumnInfo.Records">
            <summary>
            当前控件的记录集(用于Selection)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelColumnInfo.SetRecords(System.Collections.Generic.List{MangoMis.Frame.Helper.KeyText})">
            <summary>
            设置Selection用的值列表
            </summary>
            <param name="records"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelColumnInfo.GetAjaxValue">
            <summary>
            得到页面Post的值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelColumnInfo.SetValue(System.String)">
            <summary>
            设置字段默认值
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelColumnInfo.SetTitle(System.String)">
            <summary>
            设置标题
            </summary>
            <param name="title"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelColumnInfo.SetWidth(System.Int32)">
            <summary>
            设置宽度(暂时没啥用)
            </summary>
            <param name="width"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelColumnInfo.GetControl(System.String)">
            <summary>
            得到编辑控件
            </summary>
            <param name="newId">不使用内部编号.自定义ID</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelColumnInfo.GetControl">
            <summary>
            取得默认控件
            </summary>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForDetail">
            <summary>
            [通用][简易]编辑面板(编辑详情)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForDetail.#ctor(System.String)">
            <summary>
            实例化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForDetail.SetTitle(System.String)">
            <summary>
            设置标题内容
            </summary>
            <param name="title">标题内容(支持HTML标记)</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForDetail.NewColumn(System.String,MangoMis.Frame.WebPage.DomType)">
            <summary>
            新增一个字段
            </summary>
            <param name="columnName">字段名</param>
            <param name="type">字段控件类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForDetail.SetColumnValue(System.String,System.String)">
            <summary>
            设置字段值
            </summary>
            <param name="columnName">字段名</param>
            <param name="value">字段值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForDetail.SetAjaxCallback(System.String)">
            <summary>
            设置Ajax提交之后的回调JS
            </summary>
            <param name="javascript">脚本</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForDetail.SetDefaultKey(System.String)">
            <summary>
            设置默认值的索引(一般用于Ajax提交时页面并没有实例化的情况,需要先知道都有什么Key.才可以取得提交的值)
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForDetail.SetDefaultValue(System.String,System.Object)">
            <summary>
            设置默认Ajax提交的值(不在字段列表中.一般为设置主键等不可编辑或者不显示的字段)
            </summary>
            <param name="key">Key(要取值也用此Key)</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForDetail.SetPostBack(MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelAfterDetailPost)">
            <summary>
            设置编辑时的回调函数
            </summary>
            <param name="postBack"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForDetail.CheckAjaxPost">
            <summary>
            检查是否是此控件的Ajax提交,如果不是.则返回Null
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForDetail.RenderControl">
            <summary>
            子类需要重写此函数建立自身特定属性
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForDetail.Current">
            <summary>
            子类实例.PS.作者暂时不知道父类怎么取得子类
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForList">
            <summary>
            [通用][简易]编辑面板(编辑列表)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForList.#ctor(System.String)">
            <summary>
            实例化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForList.SetTitle(System.String)">
            <summary>
            设置标题内容
            </summary>
            <param name="title">标题内容(支持HTML标记)</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForList.SetCanAddNew">
            <summary>
            设置可以新增记录
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForList.SetCanDelete">
            <summary>
            设置可以删除记录
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForList.AddRecord(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            添加一条列表记录
            </summary>
            <param name="key">记录主键</param>
            <param name="record">字段名与值的字典</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForList.NewColumn(System.String,MangoMis.Frame.WebPage.DomType)">
            <summary>
            新增一个字段
            </summary>
            <param name="columnName">字段名</param>
            <param name="type">字段控件类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForList.SetDefaultKey(System.String)">
            <summary>
            设置默认值的索引(一般用于Ajax提交时页面并没有实例化的情况,需要先知道都有什么Key.才可以取得提交的值)
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForList.SetDefaultValue(System.String,System.Object)">
            <summary>
            设置默认Ajax提交的值(不在字段列表中.一般为设置主键等不可编辑或者不显示的字段)
            </summary>
            <param name="key">Key(要取值也用此Key)</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForList.SetPostBack(MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelAfterListPost)">
            <summary>
            设置编辑时的回调函数
            </summary>
            <param name="postBack"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForList.CheckAjaxPost">
            <summary>
            检查是否是此控件的Ajax提交,如果不是.则返回Null
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForList.RenderControl">
            <summary>
            子类需要重写此函数建立自身特定属性
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelForList.Current">
            <summary>
            子类实例.PS.作者暂时不知道父类怎么取得子类
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleOperate">
            <summary>
            [通用][简易]页面操作类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleOperate.New">
            <summary>
            新增记录
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleOperate.Update">
            <summary>
            修改记录
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleOperate.Delete">
            <summary>
            删除记录
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimplePanel">
            <summary>
            [通用][简易]显示框(可以带标题,使用冰哥的ui-box)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimplePanel.#ctor">
            <summary>
            通用][简易]显示框
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimplePanel.RenderControl">
            <summary>
            子类需要重写此函数建立自身特定属性
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimplePanel.NewContent">
            <summary>
            新添加一个容器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimplePanel.SetTitle(System.String)">
            <summary>
            设置标题内容
            </summary>
            <param name="title">标题内容(支持HTML标记)</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimplePanel.AppendTitleControl(System.Web.UI.Control)">
            <summary>
            设置标题内容
            </summary>
            <param name="titleControl">标题控件</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimplePanel.Current">
            <summary>
            子类实例.PS.作者暂时不知道父类怎么取得子类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimplePanel.InsertFirst(System.String)">
            <summary>
            添加内容
            </summary>
            <param name="text">内容(支持HTML标记)</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimplePanel.InsertFirst(System.Web.UI.Control)">
            <summary>
            添加内容
            </summary>m>
            <param name="control">要添加的控件</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimplePanel.Insert(System.Int32,System.String)">
            <summary>
            添加内容
            </summary>
            <param name="index">插入位置</param>
            <param name="text">内容(支持HTML标记)</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimplePanel.Insert(System.Int32,System.Web.UI.Control)">
            <summary>
            添加内容
            </summary>
            <param name="index">插入位置</param>
            <param name="control">要添加的控件</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimplePanel.Append(System.String)">
            <summary>
            添加内容
            </summary>
            <param name="text">内容(支持HTML标记)</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimplePanel.Append(System.Web.UI.Control)">
            <summary>
            添加内容
            </summary>
            <param name="control">要添加的控件</param>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleSelection">
            <summary>
            [通用][简易]Selection
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleSelection.#ctor">
            <summary>
            实例化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleSelection.AddItem(System.String,System.String)">
            <summary>
            添加一个选项
            </summary>
            <param name="value">选项值</param>
            <param name="text">选项显示文本</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleSelection.SetValue(System.Object)">
            <summary>
            设置当前的值
            </summary>
            <param name="value">选项值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleSelection.SetNoNullItem">
            <summary>
            设置为没有最上面的请选择的东东
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleSelection.AddEnumType(System.Type)">
            <summary>
            添加一个枚举类型中的所有选项
            </summary>
            <param name="enumType">枚举类型</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleSelection.RenderControl">
            <summary>
            子类需要重写此函数建立自身特定属性
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleSelection.Current">
            <summary>
            子类实例.PS.作者暂时不知道父类怎么取得子类
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleSubmitButton">
            <summary>
            提交按钮
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleSubmitButton.RenderControl">
            <summary>
            子类需要重写此函数建立自身特定属性
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleSubmitButton.Current">
            <summary>
            子类实例.PS.作者暂时不知道父类怎么取得子类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleSubmitButton.#ctor(System.String)">
            <summary>
            初始化提交按钮
            </summary>
            <param name="text">按钮显示文本</param>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTable">
            <summary>
            [通用][简易]Table
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTable.#ctor">
            <summary>
            实例化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTable.Current">
            <summary>
            子类实例.PS.作者暂时不知道父类怎么取得子类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTable.RenderControl">
            <summary>
            子类需要重写此函数建立自身特定属性
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTable.SetCellPadding(System.Int32)">
            <summary>
            设为不隔行加Alt
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTable.SetCellSpacing(System.Int32)">
            <summary>
            设为不隔行加Alt
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTable.NoAlt">
            <summary>
            设为不隔行加Alt
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTable.NewTr">
            <summary>
            添加一个新行
            </summary>
            <returns>返回添加的新行</returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTable.NewTitle">
            <summary>
            添加一个新标题行
            </summary>
            <returns>返回添加的标题行</returns>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelAfterDetailPost">
            <summary>
            编辑详情页面,提交事件
            </summary>
            <param name="valuesDictionary">字段名与值的字典</param>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleEditPanelAfterListPost">
            <summary>
            编辑列表页面,提交事件
            </summary>
            <param name="operate">操作(添加修改删除)</param>
            <param name="valuesDictionary">字段名与值的字典</param>
            <param name="recordKey">操作记录的主键</param>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.DataTableCellFormatter`1">
            <summary>
            自定义初始化一个单元格
            </summary>
            <param name="tr">添加单元格的行</param>
            <param name="data">本行数据</param>
            <param name="width">单元格宽度</param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.DataTableAfterFormatCell`1">
            <summary>
            单元格初始化的后置事件
            </summary>
            <param name="cell">初始化的单元格</param>
            <param name="data">本行数据</param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.DataTableAfterFormatCellByTable`1">
            <summary>
            写在简易表中的默认单元格初始化的后置事件
            </summary>
            <param name="propertyName">初化的字段名</param>
            <param name="cell">初始化的单元格</param>
            <param name="data">本行数据</param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.DataTableCellValueGetter`1">
            <summary>
            单元格初始化时的取数据函数
            </summary>
            <param name="data">本行数据</param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.DataTableCellValueByTableGetter`1">
            <summary>
            写在简易表中的默认单元格初始化时的取数据函数
            </summary>
            <param name="propertyName">初化的字段名</param>
            <param name="data">本行数据</param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.DataTableDataGetter`1">
            <summary>
            简易表格的数据实例函数
            </summary>
            <typeparam name="T"></typeparam>
            <param name="page">页码</param>
            <param name="size">每页数据数量</param>
            <param name="filters">筛选条件</param>
            <param name="orders">排序条件(目前没用)</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.DataTableTitleFormatter">
            <summary>
            简易表格的标题初始化函数
            </summary>
            <param name="tr">添加标题的行</param>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTextBox">
            <summary>
            [通用][简易]文本框
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTextBox.#ctor">
            <summary>
            实例化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTextBox.SetPlace(System.String)">
            <summary>
            设置占位符
            </summary>
            <param name="value">占位符字符串</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTextBox.SetValue(System.Object)">
            <summary>
            设置文本框默认值
            </summary>
            <param name="value">字符串</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTextBox.RenderControl">
            <summary>
            子类需要重写此函数建立自身特定属性
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTextBox.Current">
            <summary>
            子类实例.PS.作者暂时不知道父类怎么取得子类
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleJsonData`1">
            <summary>
            简易的AjaxJson返回值
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleJsonData`1.#ctor(`0)">
            <summary>
            定义不弹出消息的返回消息
            </summary>
            <param name="retData">返回的数据</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleJsonData`1.#ctor(System.String)">
            <summary>
            定义返回消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleJsonData`1.#ctor(`0,System.String)">
            <summary>
            定义返回消息
            </summary>
            <param name="retData">返回的数据</param>
            <param name="message"></param>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleJsonData`1.data">
            <summary>
            返回内容
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleJsonData">
            <summary>
            简易的AjaxJson返回值
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleJsonData.#ctor(System.String)">
            <summary>
            定义返回消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleJsonData.#ctor">
            <summary>
            定义不弹出消息的返回消息
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleJsonData.nomsg">
            <summary>
            是否不弹出消息
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleJsonData.msg">
            <summary>
            弹出的消息内容
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleJsonData.flag">
            <summary>
            返回状态
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTr">
            <summary>
            [通用][简易]TR(本类无法直接实例.需要通过Table->NewTr进行实例)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTr.Table">
            <summary>
            返回所在表格
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTr.#ctor(MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTable)">
            <summary>
            实例化
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTr.NewTr(MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTable)">
            <summary>
            实例化一个新行
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTr.SetIsThRow">
            <summary>
            设置此行是Th的行
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTr.Current">
            <summary>
            子类实例.PS.作者暂时不知道父类怎么取得子类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTr.NewCell">
            <summary>
            添加一个单元格
            </summary>
            <returns>返回添加的单元格</returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTr.NewCell(System.Int32)">
            <summary>
            添加一个单元格
            </summary>
            <param name="width">单元格宽度</param>
            <returns>返回添加的单元格</returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTr.Append(System.String)">
            <summary>
            添加一个默认的文字单元格(无法对单元格修改.如果想修改请使用,NewCell)
            </summary>
            <param name="text">内容(支持HTML标记)</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTr.Append(System.Web.UI.Control)">
            <summary>
            添加内容控件单元格(无法对单元格修改.如果想修改请使用,NewCell)
            </summary>
            <param name="control">要添加的控件</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTr.Append(System.String,System.Int32)">
            <summary>
            添加一个默认的文字单元格(无法对单元格修改.如果想修改请使用,NewCell)
            </summary>
            <param name="text">内容(支持HTML标记)</param>
            <param name="width">单元格宽</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleTr.Append(System.Web.UI.Control,System.Int32)">
            <summary>
            添加内容控件单元格(无法对单元格修改.如果想修改请使用,NewCell)
            </summary>
            <param name="control">要添加的控件</param>
            <param name="width">单元格宽</param>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleRootDiv">
            <summary>
            [通用][简易]显示框(可以带标题,使用冰哥的ui-box)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleRootDiv.#ctor">
            <summary>
            通用][简易]显示框
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleRootDiv.RenderControl">
            <summary>
            子类需要重写此函数建立自身特定属性
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleRootDiv.SetTitle(System.String)">
            <summary>
            设置标题内容
            </summary>
            <param name="title">标题内容(支持HTML标记)</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleRootDiv.AppendTitleControl(System.Web.UI.Control)">
            <summary>
            设置标题内容
            </summary>
            <param name="titleControl">标题控件</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleRootDiv.Current">
            <summary>
            子类实例.PS.作者暂时不知道父类怎么取得子类
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleRootDiv.InsertFirst(System.String)">
            <summary>
            添加内容
            </summary>
            <param name="text">内容(支持HTML标记)</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleRootDiv.InsertFirst(System.Web.UI.Control)">
            <summary>
            添加内容
            </summary>m>
            <param name="control">要添加的控件</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleRootDiv.Insert(System.Int32,System.String)">
            <summary>
            添加内容
            </summary>
            <param name="index">插入位置</param>
            <param name="text">内容(支持HTML标记)</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleRootDiv.Insert(System.Int32,System.Web.UI.Control)">
            <summary>
            添加内容
            </summary>
            <param name="index">插入位置</param>
            <param name="control">要添加的控件</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleRootDiv.Append(System.String)">
            <summary>
            添加内容
            </summary>
            <param name="text">内容(支持HTML标记)</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleControl.MgSimpleRootDiv.Append(System.Web.UI.Control)">
            <summary>
            添加内容
            </summary>
            <param name="control">要添加的控件</param>
        </member>
        <member name="T:MangoMis.Frame.WebPage.ISimpleHtmlControl">
            <summary>
            定义Html控件的接口 (目前主要目的是为了ClassBuilder)
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.ISimpleHtmlControl.CurrentScriptManager">
            <summary>
            自定义的脚本编辑器
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.ISimpleHtmlControl.ControlScriptText">
            <summary>
            脚本控制器
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.ISimpleHtmlControl.ClassBuilder">
            <summary>
            样式建立器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.ISimpleHtmlControl.Build">
            <summary>
            实例化控件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.ISimpleHtmlControl.IsBuilded">
            <summary>
            是否已经创建完成
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.JQ_Javascript_Control">
            <summary>
            生成相关的Jq的操作
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.JQ_Javascript_Control.DocumentReady(System.String)">
            <summary>
            添加Document.Ready事件
            </summary>
            <param name="js"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.JQ_Javascript_Control.BindDomEvent(System.String,System.String)">
            <summary>
            绑定一个单个参数的DOM事件
            </summary>
            <param name="dom">DOM(使用Jq筛选或者变量.比如$(".myclass") 或者 actiondom 等)</param>
            <param name="callback">回调(内容JS代码)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.JQ_Javascript_Control.JoinHtmlString(System.String,System.String[])">
            <summary>
            拼接HTML字符串(用于多字符串变量连接时看着费劲的情况)
            </summary>
            <param name="formatstring">格式化的基础字符串,需要拼接的字符串的开始和结尾用\",其它需要有引号的地方请使用单引号</param>
            <param name="paramStrings">用于化时的参数</param>
            <returns>Result EG:$('.ssss').append(\"sss\"+valueit+\"\")</returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.JQ_Javascript_Control.Get(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Ajax取得数据
            </summary>
            <param name="url">地址</param>
            <param name="action">取得方法</param>
            <param name="postData">提交数据</param>
            <param name="callback">回调函数内容(参数名为jsondata)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.JQ_Javascript_Control.AjaxGet(System.String,System.String,System.Collections.Generic.List{MangoMis.Frame.Helper.KeyText},System.String)">
            <summary>
            Ajax取得数据
            </summary>
            <param name="url">地址</param>
            <param name="action">取得方法</param>
            <param name="data">提交数据</param>
            <param name="callback">回调函数内容(参数名为jsondata)</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.JQ_Javascript_Control.AjaxPost(System.String,System.String,System.Collections.Generic.List{MangoMis.Frame.Helper.KeyText},System.String)">
            <summary>
            Ajax取得数据
            </summary>
            <param name="url">地址</param>
            <param name="action">取得方法</param>
            <param name="data">提交数据</param>
            <param name="callback">回调函数内容(参数名为jsondata)</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MGAjaxButton">
            <summary>
            芒果通用Ajax按钮
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAjaxButton.#ctor(System.String,System.String)">
            <summary>
            初始化按钮
            </summary>
            <param name="id"></param>
            <param name="url">提交地址</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAjaxButton.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            初始化按钮
            </summary>
            <param name="id"></param>
            <param name="url">提交地址</param>
            <param name="action">提交action</param>
            <param name="callback">回调函数(jsondata)</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAjaxButton.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            初始化按钮
            </summary>
            <param name="id"></param>
            <param name="url">提交地址</param>
            <param name="action">提交action</param>
            <param name="callback">回调函数(jsondata)</param>
            <param name="postParams">提交参数</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAjaxButton.#ctor(System.String,System.Object,System.String)">
            <summary>
            初始化按钮
            </summary>
            <param name="url">提交地址</param>
            <param name="text">文本</param>
            <param name="id"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAjaxButton.#ctor(System.String,System.Object,System.String,System.String,System.String)">
            <summary>
            初始化按钮
            </summary>
            <param name="url">提交地址</param>
            <param name="text">文本</param>
            <param name="id"></param>
            <param name="action">提交action</param>
            <param name="callback">回调函数(jsondata)</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAjaxButton.#ctor(System.String,System.Object,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            初始化按钮
            </summary>
            <param name="url">提交地址</param>
            <param name="text">文本</param>
            <param name="id"></param>
            <param name="action">提交action</param>
            <param name="callback">回调函数(jsondata)</param>
            <param name="postParams">提交参数</param>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MGAutoGrid">
            <summary>
            通过数据源加载一个Grid
            使用方式:
            在页面添加UrlBase
            引用JS内容["jquery_v2","mango","mangoui_v2","ttpager","gobalstyle","cssmisv1style","cssmisv2style","autogridbycscode"]
            实例化MGAutoGrid
            AddColumn
            GetControl
            添加至页面
            将ScriptText添加至页面
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid.#ctor(System.Type)">
            <summary>
            初始化一个默认的表格
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid.#ctor(System.Boolean,System.Type)">
            <summary>
            初始化一个自动填充列的表格
            </summary>
            <param name="autoFill"></param>
            <param name="currentType"></param>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MGAutoGrid.ScriptText">
            <summary>
            [Step:3]需要添加至页面的脚本内容.只有脚本文本.需要手动添加.或者调用 ScriptControl得到脚本控件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MGAutoGrid.ScriptControl">
            <summary>
             [Step:3]得到控件,需要添加至页面,或者调用 ScriptText 得到脚本内容
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid.AddColumn(System.String)">
            <summary>
            [Step:1]添加一个字段
            </summary>
            <param name="columnBind">字段属性名</param>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MGAutoGrid.ColumnBinds">
            <summary>
            字段列名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid.RemoveColumn(System.String)">
            <summary>
            移除所有叫这个名的字段
            </summary>
            <param name="columnBind"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid.RemoveColumn(System.Int32)">
            <summary>
            移除指定字段
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid.GetControl(System.Collections.IEnumerable)">
            <summary>
            [Step:2]取得添加至页面的控件
            </summary>
            <param name="dataList"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MGAutoGrid`1">
            <summary>
            通过数据源加载一个Grid
            使用方式:
            在页面添加UrlBase
            引用JS内容["jquery_v2","mango","mangoui_v2","ttpager","gobalstyle","cssmisv1style","cssmisv2style","autogridbycscode"]
            实例化MGAutoGrid
            AddColumn
            GetControl
            添加至页面
            将ScriptText添加至页面
            </summary>
            <typeparam name="MT"></typeparam>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid`1.#ctor">
            <summary>
            初始化一个默认的表格
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid`1.#ctor(System.Boolean)">
            <summary>
            初始化一个自动填充列的表格
            </summary>
            <param name="autoFill"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid`1.#ctor(MangoMis.Frame.WebPage.PageRender.PageControlCollection)">
            <summary>
            初始化一个默认的表格
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid`1.#ctor(MangoMis.Frame.WebPage.PageRender.PageControlCollection,System.Boolean)">
            <summary>
            初始化一个默认的表格
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid`1.BuildByPageContorl(System.Collections.Generic.List{`0})">
            <summary>
            通过PageControl加载项目
            </summary>
            <param name="dataList"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid`1.SetAutoFill">
            <summary>
            设置为自动填充
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid`1.SetUnAutoFill">
            <summary>
            设置为不自动填充
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MGAutoGrid`1.GridColumn">
            <summary>
            Grid中的Column
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid`1.GridColumn.SetBind(System.String)">
            <summary>
            设置绑定字段
            </summary>
            <param name="columnBind"></param>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.WebPage.MGAutoGrid`1.GridColumn.IsControlFormat">
            <summary>
            当前的Format是否返回Control
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid`1.GridColumn.SetName(System.String)">
            <summary>
            设置显示名[默认为Bind值]
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid`1.GridColumn.SetFormat(System.Func{`0,System.String})">
            <summary>
            设置格式化[默认不格式化显示Bind]
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid`1.GridColumn.SetFormat(System.Func{`0,System.Web.UI.Control})">
            <summary>
            设置格式化[默认不格式化显示Bind]
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid`1.GridColumn.SetWidth(System.Int32)">
            <summary>
            设置显示宽度[默认为80]
            </summary>
            <param name="width"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid`1.GridColumn.SetSearch">
            <summary>
            使此列可以搜索[默认有Bind,无Format可搜索,有Format,无Bind不可搜索]
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid`1.GridColumn.SetUnSearch">
            <summary>
            使此列不可以搜索[默认有Bind,无Format可搜索,有Format,无Bind不可搜索]
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid`1.GridColumn.SetOrder">
            <summary>
            使此列可以排序[默认有Bind,无Format可排序,有Format,无Bind不可排序]
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid`1.GridColumn.SetUnOrder">
            <summary>
            使此列不可以排序[默认有Bind,无Format可排序,有Format,无Bind不可排序]
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MGAutoGrid`1.GridColumn.CanSearchOrOrder">
            <summary>
            是否可以排序或查询
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MGAutoGrid`1.GridColumn.FormatControl">
            <summary>
            格式化[默认不格式化显示Bind的值]
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MGAutoGrid`1.GridColumn.Format">
            <summary>
            格式化[默认不格式化显示Bind的值]
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MGAutoGrid`1.GridColumn.ColumnBind">
            <summary>
            绑定的实体字段.用于做为显示值.主要用于查询以及排序.如果没有此值.则不会进行排序和搜索
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MGAutoGrid`1.GridColumn.ColumnName">
            <summary>
            字段显示名称[默认值为Bind的名]
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MGAutoGrid`1.GridColumn.Width">
            <summary>
            字段的宽度[默认值为80]
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MGAutoGrid`1.GridColumn.IsSearch">
            <summary>
            是否可搜索[默认值.Bind有值时可搜索,Bind不存在时不可搜索]
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MGAutoGrid`1.GridColumn.IsOrder">
            <summary>
            是否可排序[默认值.Bind有值时可排序,Bind不存在时不可排序]
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.MGAutoGrid`1.DefaultPageSize">
            <summary>
            默认每页显示
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MGAutoGrid`1.ScriptText">
            <summary>
            [Step:3]需要添加至页面的脚本内容.只有脚本文本.需要手动添加.或者调用 ScriptControl得到脚本控件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MGAutoGrid`1.ScriptControl">
            <summary>
             [Step:3]得到控件,需要添加至页面,或者调用 ScriptText 得到脚本内容
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MGAutoGrid`1.Item(System.String)">
            <summary>
            返回第一个有指定列名的字段
            </summary>
            <param name="columnBind"></param>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MGAutoGrid`1.Item(System.Int32)">
            <summary>
            返回指定索引的字段
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid`1.AddColumn(System.String)">
            <summary>
            [Step:1]添加一个字段
            </summary>
            <param name="columnBind">字段属性名</param>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MGAutoGrid`1.ColumnBinds">
            <summary>
            字段列名
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid`1.RemoveColumn(System.String)">
            <summary>
            移除所有叫这个名的字段
            </summary>
            <param name="columnBind"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid`1.RemoveColumn(System.Int32)">
            <summary>
            移除指定字段
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid`1.AddColumn(System.String,System.String,System.Func{`0,System.String},System.Int32,System.Boolean,System.Boolean)">
            <summary>
            [Step:1]添加一个字段
            </summary>
            <param name="columnBind">字段属性名</param>
            <param name="columnName">字段标题[默认是属性]</param>
            <param name="format">格式化[默认是值]</param>
            <param name="width">列宽</param>
            <param name="isSearch">是否可以查询</param>
            <param name="isOrder">是否可以排序</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid`1.AddColumn(System.String,System.String,System.Func{`0,System.Web.UI.Control},System.Int32)">
            <summary>
            [Step:1]添加一个字段
            </summary>
            <param name="columnBind">字段属性名</param>
            <param name="columnName">字段标题[默认是属性]</param>
            <param name="format">格式化[默认是值]</param>
            <param name="width">列宽</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid`1.GetControl(System.Collections.Generic.List{`0})">
            <summary>
            [Step:2]取得添加至页面的控件,因为会Post需要添加到Form里面
            </summary>
            <param name="dataList"></param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid`1.GetControl(System.Func{System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},TT.Common.Frame.Model.DefaultResult{System.Collections.Generic.IEnumerable{`0}}})">
            <summary>
            [Step:2]取得添加至页面的控件,因为会Post需要添加到Form里面
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGAutoGrid`1.BuildByPageContorl(System.Func{System.Int32,System.Int32,System.Collections.Generic.List{TT.Common.Frame.Model.CommonFilterModel},System.Collections.Generic.List{TT.Common.Frame.Model.CommonOrderModel},TT.Common.Frame.Model.DefaultResult{System.Collections.Generic.IEnumerable{`0}}})">
            <summary>
            通过PageControl加载项目
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MGButton">
            <summary>
            芒果通用按钮
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MGButton.Script">
            <summary>
            脚本控制器
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MGButton.ClassBuilder">
            <summary>
            样式类建立器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGButton.#ctor(System.String)">
            <summary>
            初始化按钮
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGButton.#ctor(System.String,System.Object)">
            <summary>
            初始化按钮
            </summary>
            <param name="text">文本</param>
            <param name="id"></param>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgControlScriptInfo">
            <summary>
            芒果通用控件基础
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgControlScriptInfo.IdDom">
            <summary>
            JQuery查询控件的查询DOM,EG($("#ssss"))
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.MgControlScriptInfo.ID">
            <summary>
            主键
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.MgControlScriptInfo.NullValueText">
            <summary>
            空值项目的显示内容
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgControlScriptInfo.#ctor(System.String)">
            <summary>
            通过ID初始化控件
            </summary>
            <param name="id"></param>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgControlScriptInfo.GetValue">
            <summary>
            取值的JS代码$("id").val()
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgControlScriptInfo.SetValue(System.String)">
            <summary>
            取值
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgControlScriptInfo.SetValue(System.Object)">
            <summary>
            取值
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgControlScriptInfo.OnChange(System.String)">
            <summary>
            取得绑定Change事件的脚本
            </summary>
            <param name="script">Change事件运行脚本</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgControlScriptInfo.OnClick(System.String)">
            <summary>
            取得绑定Click事件的脚本
            </summary>
            <param name="script">Click事件运行脚本</param>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgControlScriptInfo.Empty">
            <summary>
            清空的脚本
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgControlScriptInfo.BindData(System.String,System.String,System.String)">
            <summary>
            取得
            </summary>
            <param name="dataValueName"></param>
            <param name="keyName"></param>
            <param name="valueName"></param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgLargeText">
            <summary>
            芒果通用输入框
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgLargeText.CurrentScriptManager">
            <summary>
            自定义的脚本编辑器
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgLargeText.ClassBuilder">
            <summary>
            样式建立器
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgLargeText.ControlScriptText">
            <summary>
            脚本控制器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgLargeText.#ctor(System.String)">
            <summary>
            初始化输入框
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgLargeText.#ctor(System.String,System.Object)">
            <summary>
            初始化输入框
            </summary>
            <param name="value">值</param>
            <param name="id"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgLargeText.#ctor(System.String,System.Object,System.String)">
            <summary>
            初始化带提示文字的输入框
            </summary>
            <param name="id"></param>
            <param name="value">值</param>
            <param name="tipText">背景文字</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgLargeText.Build">
            <summary>
            实例化控件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgLargeText.IsBuilded">
            <summary>
            是否已经创建完成
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MGLineForm">
            <summary>
            芒果通用Form表单
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGLineForm.#ctor(System.String)">
            <summary>
            初始化一个表单
            </summary>
            <param name="title">标题</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGLineForm.AppndInfoLine(System.String,System.String)">
            <summary>
            添加一行编辑
            </summary>
            <param name="lineTitle">行的标题</param>
            <param name="infoText">文本内容</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGLineForm.AppndEditLine(System.String,System.Web.UI.Control,System.String)">
            <summary>
            添加一行编辑
            </summary>
            <param name="lineTitle">行的标题</param>
            <param name="editControl">编辑控件</param>
            <param name="memo">说明文本</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGLineForm.AppndEditLine(System.String,System.Web.UI.Control,System.Boolean)">
            <summary>
            添加一行编辑
            </summary>
            <param name="lineTitle">行的标题</param>
            <param name="editControl">编辑控件</param>
            <param name="isMast">是否必填</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGLineForm.AppndSubmitButton(System.String)">
            <summary>
            添加一行编辑
            </summary>
            <param name="buttonText">按钮文本</param>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgPasswordText">
            <summary>
            芒果通用密码输入框
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MgPasswordText.Script">
            <summary>
            脚本控制器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgPasswordText.#ctor(System.String)">
            <summary>
            初始化输入框
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgPasswordText.#ctor(System.String,System.Object)">
            <summary>
            初始化输入框
            </summary>
            <param name="value">值</param>
            <param name="id"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgPasswordText.#ctor(System.String,System.Object,System.String)">
            <summary>
            初始化带提示文字的输入框
            </summary>
            <param name="id"></param>
            <param name="value">值</param>
            <param name="tipText">背景文字</param>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MGSelection">
            <summary>
            芒果通用Select
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MGSelection.Script">
            <summary>
            脚本控制器
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGSelection.#ctor(System.String)">
            <summary>
            初始化Select
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGSelection.#ctor(System.Collections.Generic.List{MangoMis.Frame.Helper.KeyText},System.String,System.String)">
            <summary>
            通过数据与更改函数初始化一个Selection
            </summary>
            <param name="data">Select数据</param>
            <param name="onChange">变更回调函数</param>
            <param name="defaultValue">默认值</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGSelection.#ctor(System.String,System.Collections.Generic.List{MangoMis.Frame.Helper.KeyText},System.String,System.String)">
            <summary>
            通过数据与更改函数初始化一个Selection
            </summary>
            <param name="id"></param>
            <param name="data">Select数据</param>
            <param name="onChange">变更回调函数</param>
            <param name="defaultValue">默认值</param>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MGSelection.GetValueScript">
            <summary>
            取得当前控件值的脚本
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGSelection.SetValueScript(System.String)">
            <summary>
            设置当前控件值的脚本
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGSelection.BindOnChange(System.String)">
            <summary>
            绑定OnChange事件
            </summary>
            <param name="script">JS脚本</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGSelection.#ctor(System.String,System.Collections.Generic.KeyValuePair{System.String,System.String}[])">
            <summary>
            初始化带内容的选择
            </summary>
            <param name="id">ID</param>
            <param name="items">内容Items</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGSelection.JsonBindScript(System.String)">
            <summary>
            通过Json返回的数据(jsondata)来绑定列表数据
            </summary>
            <param name="jsonDataKey">Json数据的JS名</param>
        </member>
        <member name="P:MangoMis.Frame.WebPage.MGSelection.Empty">
            <summary>
            清空的脚本
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MGSelection.#ctor(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.String}[])">
            <summary>
            初始化带内容带标题的选择器
            </summary>
            <param name="id">ID</param>
            <param name="nullText">无值显示的文本</param>
            <param name="items">内容Items Key 是 值  Value 是显示内容</param>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleAjaxButton">
            <summary>
            芒果Ajax通用按钮
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleAjaxButton.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.List{MangoMis.Frame.Helper.KeyText})">
            <summary>
            初始化按钮默认回调函数会Alert你返回的JsonReturn(new {msg="xxxx"});
            </summary>
            <param name="text">按钮文本</param>
            <param name="action">Ajax调用的Action(通过GetKey("action")取得)</param>
            <param name="callback">Javasctipt的回调函数默认为用调用alert(jsondata.msg)</param>
            <param name="url">Ajax调用页面的地址</param>
            <param name="postParams">Ajax提交的参数</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleAjaxButton.#ctor(System.String,System.String)">
            <summary>
            初始化一个自定义的Ajax按钮
            </summary>
            <param name="text">按钮显示文本</param>
            <param name="action">Ajax的函数</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleAjaxButton.#ctor(System.String,System.String,System.String)">
            <summary>
            初始化一个自定义的Ajax按钮
            </summary>
            <param name="text">按钮显示文本</param>
            <param name="action">Ajax的函数</param>
            <param name="postUrl">提交Url</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleAjaxButton.AutoRefresh(System.Int32)">
            <summary>
            设置此按钮运行得到返回值之后刷新页面
            </summary>
            <param name="ms">延时的毫秒数</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleAjaxButton.SetCallback(System.String)">
            <summary>
            设置此按钮运行的回调函数
            </summary>
            <param name="callbackJavascriptString">回调的JS代码</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleAjaxButton.SetNoAutoAlertMessage">
            <summary>
            设置此Ajax按钮回调时不自动弹出消息
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleAjaxButton.AddParam(System.String,System.Object)">
            <summary>
            添加一个运行Ajax时的Post参数
            </summary>
            <param name="key">参数名</param>
            <param name="value">参数值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleAjaxButton.AddParam(System.String,MangoMis.Frame.WebPage.ISimpleHtmlControl)">
            <summary>
            添加一个运行Ajax时的Post参数
            </summary>
            <param name="key">参数名</param>
            <param name="control">参数值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleAjaxButton.SetPost">
            <summary>
            设置为Post提交Ajax方式
            </summary>
            <returns></returns>
        </member>
        <member name="F:MangoMis.Frame.WebPage.MgSimpleAjaxButton._isGet">
            <summary>
            是否使用Get方式
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleAjaxButton.RenderControl">
            <summary>
            子类需要重写此函数建立自身特定属性
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleAjaxButton.Current">
            <summary>
            子类实例.PS.作者暂时不知道父类怎么取得子类
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleDataTableColumnType">
            <summary>
            简易表格的列类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.MgSimpleDataTableColumnType.字符">
            <summary>
            字符
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.MgSimpleDataTableColumnType.组织">
            <summary>
            组织
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.MgSimpleDataTableColumnType.用户">
            <summary>
            用户
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.MgSimpleDataTableColumnType.字典">
            <summary>
            字典
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.MgSimpleDataTableColumnType.城市">
            <summary>
            城市
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.MgSimpleDataTableColumnType.行政区">
            <summary>
            行政区
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.MgSimpleDataTableColumnType.日期时间">
            <summary>
            日期时间
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.MgSimpleDataTableColumnType.日期">
            <summary>
            日期
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.MgSimpleDataTableColumnType.时间">
            <summary>
            时间
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.MgSimpleScriptManager">
            <summary>
            芒果通用控件基础
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleScriptManager.CopyTo(MangoMis.Frame.WebPage.MgSimpleScriptManager)">
            <summary>
            复制本实例到一个新的实例返回复制到的对象
            </summary>
            <param name="toEntity">复制到的实例</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleScriptManager.CopyFrom(MangoMis.Frame.WebPage.MgSimpleScriptManager)">
            <summary>
            复制从一个实例将数据复制到本实例,返回本实例
            </summary>
            <param name="fromEntity">复制源实例</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleScriptManager.Append(System.String,System.String)">
            <summary>
            添加一段JsScript
            </summary>
            <param name="key">之所以要有Key是为了访问不同的地方添加了同样的脚本.如果加了两段一样的代码就会运行两次.所以指定一个Key不同的地方添加同样的Key会覆盖上一次添加</param>
            <param name="scriptText">要添加的脚本文本</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.MgSimpleScriptManager.Include(MangoMis.Frame.WebPage.PageRender.MGResource)">
            <summary>
            加载一个系统自带的脚本地址
            </summary>
            <param name="resource"></param>
        </member>
        <member name="T:MangoMis.Frame.WebPage.PageRender.PageControlCollection">
            <summary>
            用于向页面添加控件的控件集合
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.#ctor(MangoMis.Frame.Frame.IFrameHandler)">
            <summary>
            用于向页面添加控件的控件集合
            </summary>
            <param name="parent"></param>
        </member>
        <member name="P:MangoMis.Frame.WebPage.PageRender.PageControlCollection.Parent">
            <summary>
            此控件集的父级页面
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.PageRender.PageControlCollection.Controls">
            <summary>
            当前系统控件
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.PageRender.PageControlCollection.Item(MangoMis.Frame.WebPage.PageRender.RenderPosition)">
            <summary>
            查找当前的资源控件
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.WebPage.PageRender.PageControlCollection.IsBeRender">
            <summary>
            需要运行本类进行Render 需要取得Urlbase或者包含控件时会进行
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.Render(System.Web.UI.HtmlTextWriter)">
            ;<summary>
            实例化此控件
            </summary>
            <returns>控件代码</returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.LoadUrlbase">
            <summary>
            确认页面需要加载urlbase[http://mango-js153.517.cn/Api.aspx?action=urlbase]
            </summary>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.UnLoadUrlbase">
            <summary>
            不加载UrlBase
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.CurrentAdd(System.Web.UI.Control,MangoMis.Frame.WebPage.PageRender.RenderPosition)">
            <summary>
            添加控件
            </summary>
            <param name="control">控件</param>
            <param name="position">添加位置</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.Add(System.Web.UI.Control,MangoMis.Frame.WebPage.PageRender.RenderPosition)">
            <summary>
            添加控件
            </summary>
            <param name="control">控件</param>
            <param name="position">添加位置</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.AddAt(System.Int32,System.Web.UI.Control,MangoMis.Frame.WebPage.PageRender.RenderPosition)">
            <summary>
            向指定位置添加控件
            </summary>
            <param name="index">索引</param>
            <param name="control">控件</param>
            <param name="position">添加位置</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.CurrentAddAt(System.Int32,System.Web.UI.Control,MangoMis.Frame.WebPage.PageRender.RenderPosition)">
            <summary>
            向指定位置添加控件
            </summary>
            <param name="index">索引</param>
            <param name="control">控件</param>
            <param name="position">添加位置</param>
        </member>
        <member name="P:MangoMis.Frame.WebPage.PageRender.PageControlCollection.Current">
            <summary>
            用于调用静态方法时取得当前处理页面的控件集
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.PageRender.PageControlCollection.CurrentHaveDebug">
            <summary>
            当前是否有Debug的配置 
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.InitIsHaveDebug">
            <summary>
            初始化本次请求是否有Debug
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.WebPage.PageRender.PageControlCollection.Is_No_Debug">
            <summary>
            本此请求是否已经设置为无Debug模式
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.PageRender.PageControlCollection.IsDebugAdded">
            <summary>
            本此请求中是否添加过Debug
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.PageRender.PageControlCollection.IsRendered">
            <summary>
            当前Debug是否已经实例化过
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.NoDebug">
            <summary>
            本页面不需要Debug
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.NewDebug(System.String)">
            <summary>
            向当前Debug中添加一个新建的Debug控件,并将当前激活的Debug设置为新建的Debug
            </summary>
            <param name="title">标题</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.AppendText(System.String)">
            <summary>
            向当前的Debug中插入一条文本
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.End(System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            结束当前Debug并使当前Debug返回上一级(如果上一级存在的话)
            </summary>
            <param name="begin">开始时间</param>
            <param name="end">结束时间</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.CurrentAddResource(MangoMis.Frame.WebPage.PageRender.ResourceItem)">
            <summary>
            静态调用当前页面的添加资源
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.AddResource(MangoMis.Frame.WebPage.PageRender.ResourceItem)">
            <summary>
            添加页面加载的资源
            </summary>
            <param name="item">资源项</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.RemoveResource(MangoMis.Frame.WebPage.PageRender.ResourceItem)">
            <summary>
            移除一个资源
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.AddInclude(System.String,MangoMis.Frame.WebPage.PageRender.RenderPosition)">
            <summary>
            添加一个引用的索引
            </summary>
            <param name="name">索引名</param>
            <param name="position">添加位置</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.RemoveInclude(System.String,MangoMis.Frame.WebPage.PageRender.RenderPosition)">
            <summary>
            移除一个引用的索引
            </summary>
            <param name="name">索引名</param>
            <param name="position">添加位置</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.CurrentInclude(System.String,MangoMis.Frame.WebPage.PageRender.RenderPosition)">
            <summary>
            添加一个引用的索引
            </summary>
            <param name="name">索引名</param>
            <param name="position">添加位置</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.CurrentRemoveInclude(System.String,MangoMis.Frame.WebPage.PageRender.RenderPosition)">
            <summary>
            移除一个引用的索引
            </summary>
            <param name="name">索引名</param>
            <param name="position">添加位置</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.AddScriptFile(System.String,MangoMis.Frame.WebPage.PageRender.RenderPosition)">
            <summary>
            添加一个脚本文件
            </summary>
            <param name="url">脚本地址</param>
            <param name="position">添加位置</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.CurrentAddScriptFile(System.String,MangoMis.Frame.WebPage.PageRender.RenderPosition)">
            <summary>
            添加一个脚本文件
            </summary>
            <param name="url">脚本地址</param>
            <param name="position">添加位置</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.AddScriptText(System.String,MangoMis.Frame.WebPage.PageRender.RenderPosition)">
            <summary>
            添加一个运行脚本
            </summary>
            <param name="text">运行脚本</param>
            <param name="position">添加位置</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.CurrentAddScriptText(System.String,MangoMis.Frame.WebPage.PageRender.RenderPosition)">
            <summary>
            添加一个运行脚本
            </summary>
            <param name="text">运行脚本</param>
            <param name="position">添加位置</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.CurrentAddReadyScript(System.String,MangoMis.Frame.WebPage.PageRender.RenderPosition)">
            <summary>
            添加一个在DocumentReay时运行的运行脚本
            </summary>
            <param name="text">运行脚本</param>
            <param name="position">添加位置</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.AddStyleFile(System.String,MangoMis.Frame.WebPage.PageRender.RenderPosition)">
            <summary>
            添加一个样式文件
            </summary>
            <param name="url">样式地址</param>
            <param name="position">添加位置</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.CurrentAddStyleFile(System.String,MangoMis.Frame.WebPage.PageRender.RenderPosition)">
            <summary>
            添加一个样式文件
            </summary>
            <param name="url">样式地址</param>
            <param name="position">添加位置</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.AddStyleText(System.String,MangoMis.Frame.WebPage.PageRender.RenderPosition)">
            <summary>
            添加一个运行样式内容
            </summary>
            <param name="text">添加一个运行样式内容</param>
            <param name="position">添加位置</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageControlCollection.CurrentAddStyleText(System.String,MangoMis.Frame.WebPage.PageRender.RenderPosition)">
            <summary>
            添加一个运行样式内容
            </summary>
            <param name="text">添加一个运行样式内容</param>
            <param name="position">添加位置</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageRenderControl.Add(System.Web.UI.Control)">
            <summary>
            添加控件
            </summary>
            <param name="control">控件</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageRenderControl.AddAt(System.Int32,System.Web.UI.Control)">
            <summary>
            向指定位置添加控件
            </summary>
            <param name="index">索引</param>
            <param name="control">控件</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageRenderControl.RenderText(System.String)">
            <summary>
            实例化此控件
            </summary>
            <returns>控件代码</returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageRenderControl.AddInclude(System.String)">
            <summary>
            添加一个引用的索引
            </summary>
            <param name="name">索引名</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageRenderControl.AddScriptFile(System.String)">
            <summary>
            添加一个脚本文件
            </summary>
            <param name="url">脚本地址</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageRenderControl.AddScriptText(System.String)">
            <summary>
            添加一个运行脚本
            </summary>
            <param name="text">运行脚本</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageRenderControl.AddStyleFile(System.String)">
            <summary>
            添加一个样式文件
            </summary>
            <param name="url">样式地址</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.PageRenderControl.AddStyleText(System.String)">
            <summary>
            添加一个运行样式内容
            </summary>
            <param name="text">添加一个运行样式内容</param>
        </member>
        <member name="T:MangoMis.Frame.WebPage.PageRender.MGResource">
            <summary>
            页面自动加载资源的类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.PageRender.MGResource.GobalStyle">
            <summary>
            [gobalstyle:mangoglobal.css]
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.PageRender.MGResource.Cssmisv1style">
            <summary>
            [cssmisv1style:mis-style-p.css]已经放弃使用
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.PageRender.MGResource.Cssmisv2style">
            <summary>
            [cssmisv2style:MisStyle_v2.css]
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.PageRender.MGResource.Debug">
            <summary>
            [debugjs and style:debugjs.css]
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.PageRender.MGResource.JQuery">
            <summary>
            [jquery_v2]
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.PageRender.MGResource.JS_Mango">
            <summary>
            [mango]
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.PageRender.MGResource.JS_Mango_UI">
            <summary>
            [mangoui_v2]
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.PageRender.MGResource.JS_Mango_Form_Editor">
            <summary>
            [mangoformeditor]
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.PageRender.AutoIncludeResource">
            <summary>
            页面自动加载的CSS等资源
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.PageRender.AutoIncludeResource.ResourceItems">
            <summary>
            当前静态页面资源列表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.PageRender.AutoIncludeResource.loadSets">
            <summary>
            当前加载的资源
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.AutoIncludeResource.CurrentSetLoad(MangoMis.Frame.WebPage.PageRender.MGResource)">
            <summary>
            设置页面需要加载的资源
            </summary>
            <param name="loadtype">加载类型</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.AutoIncludeResource.SetLoad(MangoMis.Frame.WebPage.PageRender.MGResource)">
            <summary>
            设置页面需要加载的资源(已经卸载过的资源不会再次加载)
            </summary>
            <param name="loadtype">加载类型</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.AutoIncludeResource.CurrenSetUnLoad(MangoMis.Frame.WebPage.PageRender.MGResource)">
            <summary>
            设置出错重新设置为不加载
            </summary>
            <param name="loadtype">加载类型</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.AutoIncludeResource.SetUnLoad(MangoMis.Frame.WebPage.PageRender.MGResource)">
            <summary>
            设置出错重新设置为不加载
            </summary>
            <param name="loadtype">加载类型</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.AutoIncludeResource.CurrenUnLoadAllResource">
            <summary>
            设置出错重新设置为不加载
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.AutoIncludeResource.UnLoadAllResource">
            <summary>
            设置出错重新设置为不加载
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.PageRender.AutoIncludeResource.HasResource">
            <summary>
            是否有Resource
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.AutoIncludeResource.CurrentRegisterRender">
            <summary>
            向页面注册引用的资源
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.AutoIncludeResource.RegisterRender">
            <summary>
            向页面注册引用的资源
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.PageRender.DebugRenderControl">
            <summary>
            此类与DebugBuilder类的区别是.此类是添加到页面上的Debug控件.但是并不会建立Debug的相关时间.本类一般由DebugBuilder进行调用
            Debug控件的基础.非创建Debug类,请不要使用此类操作Debug.添加Debug请使用DebugBuilder或其它带Debug的类型创建
            </summary>
            <summary>
            用于页面添加的Debug的控件
            PS:无Debug模式权限最高,设置之后就不产生Debug,无论其它两项怎么设置
            CanDebug用于判断当前配置/当前用户是否有权限看Debug,
            Debug_With_NotCheckPower()是用于覆盖CanDebug.使无权限的情况也可以查看Debug,但是要在初始时就设置.不然之前的Debug不会保存
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.CanDebug">
            <summary>
            [想取值,请使用CommonFrame.IsHaveDebug][此配置已经改为使用HandlerDebugStatus.CanDebug]查看当前是否可以使用Debug[由当前配置,当前权限判断当前是否有查看Debug的权限]
            </summary>
            <value><c>true</c> if this instance is debug user; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.Current">
            <summary>
            用于调用静态方法时取得当前处理页面的控件集
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.CurrentDebugRenderText">
            <summary>
            Debug文本[带HTML标记]只能取得一次
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.CurrentIs_No_Debug">
            <summary>
            本此请求是否已经设置为无Debug模式
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.CurrentIsDebugAdded">
            <summary>
            本此请求中是否添加过Debug
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.CurrentIsRendered">
            <summary>
            当前Debug是否已经实例化过
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.CurrentNoDebug">
            <summary>
            本页面不需要Debug(此项优先级最高.设置此项之后就一定没有Debug)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.CurrentDebug_With_NotCheckPower">
            <summary>
            [PS:需要在进入第一步时就设置.不然在设置之前的Debug就无法查看]设置本次请求加载Debug时不判断是否有权限
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.CurrentNewDebug(System.String)">
            <summary>
            向当前Debug中添加一个新建的Debug控件,并将当前激活的Debug设置为新建的Debug
            </summary>
            <param name="title">标题</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.CurrentNewDebug(System.Func{System.String})">
            <summary>
            向当前Debug中添加一个新建的Debug控件,并将当前激活的Debug设置为新建的Debug
            </summary>
            <param name="titleGetter">标题</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.CurrentNewDebug(System.String,System.DateTime)">
            <summary>
            向当前Debug中添加一个新建的Debug控件,并将当前激活的Debug设置为新建的Debug
            </summary>
            <param name="title">标题</param>
            <param name="beginTime">开始时间</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.CurrentNewDebug(System.Func{System.String},System.DateTime)">
            <summary>
            向当前Debug中添加一个新建的Debug控件,并将当前激活的Debug设置为新建的Debug
            </summary>
            <param name="textGetterFunc">标题</param>
            <param name="beginTime">开始时间</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.CurrentAppendText(System.String)">
            <summary>
            向当前的Debug中插入一条文本
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.CurrentAppendLine(System.String)">
            <summary>
            向当前的Debug中插入一行文本
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.CurrentEnd(System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            结束当前Debug并使当前Debug返回上一级(如果上一级存在的话)
            </summary>
            <param name="begin">开始时间</param>
            <param name="end">结束时间</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.CurrentEnd">
            <summary>
            结束当前Debug并使当前Debug返回上一级(如果上一级存在的话)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.CurrentAppendToTheLastChildTitle(System.Func{System.String})">
            <summary>
            结束当前Debug并使当前Debug返回上一级(如果上一级存在的话)
            </summary>
            <param name="textGetter"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.CurrentGotoParent">
            <summary>
            使当前Debug返回上一级(如果上一级存在的话)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.CurrentGotoLastChild">
            <summary>
            使当前Debug进入当前Debug的最后一个子级
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.CurrentSetTitle(System.Func{System.String})">
            <summary>
            设置当前Debug的Title
            </summary>
            <param name="titleGetterFunc"></param>
        </member>
        <member name="P:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.CurrentHaveDebug">
            <summary>
            当前是否有Debug的配置 
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.InitIsHaveDebug">
            <summary>
            初始化本次请求是否有Debug
            </summary>
            <returns></returns>
        </member>
        <member name="P:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.Is_No_Debug">
            <summary>
            本此请求是否已经设置为无Debug模式
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.NoDebug">
            <summary>
            本页面不需要Debug(此项优先级最高.设置此项之后就一定没有Debug)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.Debug_With_NotCheckPower">
            <summary>
            设置本次请求加载Debug时不判断是否有权限
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.IsDebugAdded">
            <summary>
            本此请求中是否添加过Debug
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.IsRendered">
            <summary>
            当前Debug是否已经实例化过
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.RenderText">
            <summary>
            实例化之后的Debug文本.
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.NewDebug(System.String,System.DateTime)">
            <summary>
            向当前Debug中添加一个新建的Debug控件,并将当前激活的Debug设置为新建的Debug
            </summary>
            <param name="title">标题</param>
            <param name="beginTime">开始时间</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.NewDebug(System.Func{System.String},System.DateTime)">
            <summary>
            向当前Debug中添加一个新建的Debug控件,并将当前激活的Debug设置为新建的Debug
            </summary>
            <param name="textGetterFunc">标题</param>
            <param name="beginTime">开始时间</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.NewDebug(System.Func{System.String})">
            <summary>
            向当前Debug中添加一个新建的Debug控件,并将当前激活的Debug设置为新建的Debug
            </summary>
            <param name="titleGetter">标题</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.NewDebug(System.String)">
            <summary>
            向当前Debug中添加一个新建的Debug控件,并将当前激活的Debug设置为新建的Debug
            </summary>
            <param name="title">标题</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.SetTitle(System.String)">
            <summary>
            向当前的Debug中插入一条文本
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.SetTitle(System.Func{System.String})">
            <summary>
            向当前的Debug中插入一条文本
            </summary>
            <param name="titleGetterFunc"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.AppendText(System.String)">
            <summary>
            向当前的Debug中插入一条文本
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.AppendLine(System.String)">
            <summary>
            向当前的Debug中插入一行文本
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.AppendToTheLastChildTitle(System.Func{System.String})">
            <summary>
            结束当前Debug并使当前Debug返回上一级(如果上一级存在的话)
            </summary>
            <param name="textGetter">添加至Title的文本</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.End(System.DateTime,System.Nullable{System.DateTime})">
            <summary>
            结束当前Debug并使当前Debug返回上一级(如果上一级存在的话)
            </summary>
            <param name="begin">开始时间</param>
            <param name="end">结束时间</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.End">
            <summary>
            结束当前Debug并使当前Debug返回上一级(如果上一级存在的话)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.GotoRoot">
            <summary>
            使当前的Debug返回最基础的Debug
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.GotoParent">
            <summary>
            使当前的Debug返回最上层
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.GotoLastChild">
            <summary>
            使当前的Debug最后一个子级
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.DebugRenderControl.GetDebugRunTimeText(System.DateTime,System.DateTime)">
            <summary>
            取得Debug运行的时间的记录文本
            </summary>
            <param name="begin">开始时间</param>
            <param name="end">结束时间</param>
            <returns></returns>
        </member>
        <member name="T:MangoMis.Frame.WebPage.PageRender.RenderResourceType">
            <summary>
            加载的资源类型[是Include还是Js还是Style]
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.PageRender.RenderResourceType.Include">
            <summary>
            通过MG.Include引用
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.PageRender.RenderResourceType.StyleText">
            <summary>
            直接写入页面的样式内容
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.PageRender.RenderResourceType.ScriptText">
            <summary>
            直接写入页面的脚本内容
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.PageRender.RenderResourceType.StyleFile">
            <summary>
            在页面引用的样式文件
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.PageRender.RenderResourceType.ScriptFile">
            <summary>
            在页面引用的脚本文件
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.PageRender.ResourceItem">
            <summary>
            页面加载资源项目
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.PageRender.ResourceItem.#ctor(System.String,MangoMis.Frame.WebPage.PageRender.RenderResourceType,MangoMis.Frame.WebPage.PageRender.RenderPosition)">
            <summary>
            页面加载的资源的实例
            </summary>
            <param name="value">加载的资源(JS代码.CSS代码或者文件等)</param>
            <param name="resourceType">资源类型</param>
            <param name="position">资源所在位置</param>
        </member>
        <member name="T:MangoMis.Frame.WebPage.PageRender.RenderPosition">
            <summary>
            控件位置
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.PageRender.RenderPosition.AfterHeadBegin">
            <summary>
            在Head开始标记之后
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.PageRender.RenderPosition.BeforeHeadEnd">
            <summary>
            在Head结束标记之前
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.PageRender.RenderPosition.AfterBodyBegin">
            <summary>
            在Body开始标记之后
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.PageRender.RenderPosition.BeforeBodyEnd">
            <summary>
            在Body结束标记之前
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.PageRender.RenderPosition.AfterBodyEnd">
            <summary>
            在Body结束标记之后
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.PageRender.RenderPosition.AfterFormBegin">
            <summary>
            在Form开始标记之后
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.PageRender.RenderPosition.BeforeFormEnd">
            <summary>
            在Form结束标记之前
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.Default_Page_Event">
            <summary>
            注册默认的加载事件
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.Page_Event">
            <summary>
            注册页面加载事件(同事件只能注册一次)
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.Page_Event.onPre_VirPagePrepare">
            <summary>
            虚拟页面加载前事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.Page_Event.Append_OnPre_VirPagePrepare_Event(System.String,MangoMis.Frame.WebPage.OnPrePagePrepare)">
            <summary>
            添加虚拟页面加载前事件,运行顺序(All_PagePrepare,FramePagePrepare)
            </summary>
            <param name="event_Key">索引</param>
            <param name="pre_Event">事件</param>
        </member>
        <member name="F:MangoMis.Frame.WebPage.Page_Event.onPre_FramePagePrepare">
            <summary>
            实体页面(继承PageFrame)加载前事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.Page_Event.Append_OnPre_FramePagePrepare_Event(System.String,MangoMis.Frame.WebPage.OnPrePagePrepare)">
            <summary>
            添加实体页面(继承PageFrame)加载前事件,运行顺序(All_PagePrepare,FramePagePrepare)
            </summary>
            <param name="event_Key">索引</param>
            <param name="pre_Event">事件</param>
        </member>
        <member name="F:MangoMis.Frame.WebPage.Page_Event.onPre_All_FirstPagePrepare">
            <summary>
            所有页面加载前事件(包括虚拟页面以及实体页面)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.Page_Event.Append_OnPre_All_FirstPagePrepare_Event(System.String,MangoMis.Frame.WebPage.OnPrePagePrepare)">
            <summary>
            添加所有页面加载前事件(包括虚拟页面以及实体页面)
            </summary>
            <param name="event_Key">索引</param>
            <param name="pre_Event">事件</param>
        </member>
        <member name="F:MangoMis.Frame.WebPage.Page_Event.onPre_All_PagePrepare">
            <summary>
            所有页面加载前事件(包括虚拟页面以及实体页面)
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.Page_Event.Append_OnPre_All_PagePrepare_Event(System.String,MangoMis.Frame.WebPage.OnPrePagePrepare)">
            <summary>
            添加所有页面加载前事件(包括虚拟页面以及实体页面)
            </summary>
            <param name="event_Key">索引</param>
            <param name="pre_Event">事件</param>
        </member>
        <member name="F:MangoMis.Frame.WebPage.Page_Event.onPre_VirPageload">
            <summary>
            虚拟页面加载事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.Page_Event.Append_OnPre_VirPageload_Event(System.String,MangoMis.Frame.WebPage.OnPrePagePrepare)">
            <summary>
            添加虚拟页面加载事件
            </summary>
            <param name="event_Key">索引</param>
            <param name="pre_Event">事件</param>
        </member>
        <member name="F:MangoMis.Frame.WebPage.Page_Event.onPre_FramePageload">
            <summary>
            实体页面加载事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.Page_Event.Append_OnPre_FramePageload_Event(System.String,MangoMis.Frame.WebPage.OnPrePagePrepare)">
            <summary>
            添加实体页面加载事件
            </summary>
            <param name="event_Key">索引</param>
            <param name="pre_Event">事件</param>
        </member>
        <member name="F:MangoMis.Frame.WebPage.Page_Event.onPre_All_Pageload">
            <summary>
            所有页面加载事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.Page_Event.Append_OnPre_All_Pageload_Event(System.String,MangoMis.Frame.WebPage.OnPrePagePrepare)">
            <summary>
            添加所有页面加载事件
            </summary>
            <param name="event_Key">索引</param>
            <param name="pre_Event">事件</param>
        </member>
        <member name="T:MangoMis.Frame.WebPage.OnPrePagePrepare">
            <summary>
            页面加载前的准备事件
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:MangoMis.Frame.WebPage.Page_Prepare_Event">
            <summary>
            页面预加载前事件
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.Page_Prepare_Event.EventPrepare">
            <summary>
            页面预加载前事件
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.Page_Prepare_Event.Append(System.String,MangoMis.Frame.WebPage.OnPrePagePrepare)">
            <summary>
            添加页面预加载前事件
            </summary>
            <param name="event_Key">索引</param>
            <param name="pre_Event">事件</param>
        </member>
        <member name="T:MangoMis.Frame.WebPage.StyleClassEnum">
            <summary>
            样式类型的枚举
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleClassEnum.None">
            <summary>
            无类型
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleClassEnum.Control">
            <summary>
            控件基础样式
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleClassEnum.Color">
            <summary>
            颜色
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleClassEnum.Size">
            <summary>
            大小
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.StyleClassItem">
            <summary>
            样式类的项目
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.StyleClassItem.#ctor(System.String,MangoMis.Frame.WebPage.DomType,MangoMis.Frame.WebPage.StyleClassEnum)">
            <summary>
            初始化的时候需要传入的参数
            </summary>
            <param name="classText">样式文字</param>
            <param name="domType">节点的类型</param>
            <param name="styleClassEnum">样式种类</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.StyleClassItem.#ctor(System.String,MangoMis.Frame.WebPage.DomType,MangoMis.Frame.WebPage.StyleClassEnum,System.Int32)">
            <summary>
            初始化的时候需要传入的参数
            </summary>
            <param name="classText">样式文字</param>
            <param name="domType">节点的类型</param>
            <param name="styleClassEnum">样式种类</param>
            <param name="styleEnumValue">样式枚举类型值</param>
        </member>
        <member name="P:MangoMis.Frame.WebPage.StyleClassItem.StyleClassEnum">
            <summary>
            样式种类
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.StyleClassItem.ClassText">
            <summary>
            样式文本
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.StyleClassItem.StyleEnumValue">
            <summary>
            样式枚举类型值
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.StyleClassItem.Dom">
            <summary>
            节点类型
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.StyleClassManager">
            <summary>
            样式类型的管理
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleClassManager.DefaultButtonColor">
            <summary>
            默认按钮颜色
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleClassManager.DefaultButtonSize">
            <summary>
            默认按钮大小
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleClassManager.DefaultSizeSmallLineHeight">
            <summary>
            默认小尺寸的行高
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleClassManager.DefaultTableClass">
            <summary>
            默认表格样式
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleClassManager.DefaultPagingClass">
            <summary>
            [分页]主体样式
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleClassManager.DefaultPagingTextClass">
            <summary>
            [分页]文本样式
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleClassManager.DefaultPagingCurrentClass">
            <summary>
            [分页]当前选中样式
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleClassManager.DefaultPagingInputClass">
            <summary>
            [分页]输入框
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleClassManager.DefaultPagingPageSizeSelectClass">
            <summary>
            [分页]选择分页大小
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleClassManager.DefaultClearBothClass">
            <summary>
            [分页]选择分页大小
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleClassManager.DefaultTableAltRowClass">
            <summary>
            默认表格样式换行
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleClassManager.CurrentClassDictionary">
            <summary>
            当前样式分组的字典[用于层级查找]
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleClassManager.StyleEnumMapStyleType">
            <summary>
            样式类型与类型的枚举类型的映射
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleClassManager.CurrentClassList">
            <summary>
            当前类型列表
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleClassManager._domTypeEnumKeys">
            <summary>
            记录当前所有的GroupKey
            </summary>
        </member>
        <member name="P:MangoMis.Frame.WebPage.StyleClassManager.DomTypeEnumKeys">
            <summary>
            当前系统中所有的类型分组
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.StyleClassManager.AddClassItem(MangoMis.Frame.WebPage.StyleClassItem)">
            <summary>
            添加一个样式对象
            </summary>
            <param name="classItem">样式</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.StyleClassManager.InitClassItems">
            <summary>
            初始化类型项目
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleClassManager._isInited">
            <summary>
            是否初始化完成
            </summary>
        </member>
        <member name="M:MangoMis.Frame.WebPage.StyleClassManager.GetStyleText``1(MangoMis.Frame.WebPage.DomType,``0,MangoMis.Frame.WebPage.StyleClassEnum@)">
            <summary>
            取得一个样式的文本
            </summary>
            <typeparam name="T">样式各类的枚举的类型[eg.StyleColor/StyleSize]</typeparam>
            <param name="domType">HtmlDom类型</param>
            <param name="getValueType">取得值的类型</param>
            <param name="styleClassEnum">返回此样式类型对应的枚举的值</param>
            <returns></returns>
        </member>
        <member name="M:MangoMis.Frame.WebPage.StyleClassManager.SetColor(MangoMis.Frame.WebPage.ISimpleHtmlControl,MangoMis.Frame.WebPage.StyleColor)">
            <summary>
            设置颜色样式
            </summary>
            <param name="htmlControl">当前Html节点</param>
            <param name="color">颜色值</param>
        </member>
        <member name="M:MangoMis.Frame.WebPage.StyleClassManager.SetSize(MangoMis.Frame.WebPage.ISimpleHtmlControl,MangoMis.Frame.WebPage.StyleSize)">
            <summary>
            设置大小样式
            </summary>
            <param name="htmlControl">当前Html节点</param>
            <param name="size">大小</param>
        </member>
        <member name="T:MangoMis.Frame.WebPage.StyleColor">
            <summary>
            颜色枚举
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleColor.None">
            <summary>
            没有颜色
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleColor.White">
            <summary>
            白色
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleColor.Green">
            <summary>
            绿色
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleColor.Blue">
            <summary>
            绿色
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleColor.Red">
            <summary>
            红色
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleColor.Gray">
            <summary>
            灰色
            </summary>
        </member>
        <member name="T:MangoMis.Frame.WebPage.StyleSize">
            <summary>
            大小枚举
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleSize.None">
            <summary>
            没有大小控制
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleSize.Small">
            <summary>
            小号
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleSize.Normal">
            <summary>
            中号
            </summary>
        </member>
        <member name="F:MangoMis.Frame.WebPage.StyleSize.Large">
            <summary>
            大号
            </summary>
        </member>
    </members>
</doc>
